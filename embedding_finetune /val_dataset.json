{"queries": {"2bd3c459-9aef-4e49-9fdd-02771b6fb9d1": "What is the purpose of the reward baseline term  \u0304Rt in the action preference update equation?", "ed98ca41-375a-40ed-9e0e-3c98cae0cbb9": "How does shifting the mean of the reward distribution affect the performance of the gradient bandit algorithm with and without the reward baseline term?", "cf8ebbfa-0b65-4704-a325-6ecd6d9354ea": "What is the issue that arises when maximizing the log likelihood function for a Gaussian mixture model? Explain why this occurs.", "0c55c3f3-522c-4650-95c2-1eca82772a2d": "Consider a Gaussian mixture model where one component has its mean equal to a data point xn and its covariance is \u03c3j2I. Explain what happens to the log likelihood function in the limit as \u03c3j goes to 0. How does this demonstrate the issue that arises when maximizing the log likelihood?", "95614eec-e298-4ae9-a1e4-1deac7481261": "If \u03a3 is a real, symmetric matrix, what can we say about its eigenvalues and eigenvectors?", "4d6e24a5-c100-4997-ae7c-99c75a5772c0": "How can we interpret the vector y = (y1,...,yD)T where y1,..,yD are defined as in equation (2.51)?", "090206fe-646d-4f5c-abbc-888fab68b4ea": "According to the guidelines, in what domains is unsupervised learning known to provide tremendous benefit currently?", "fdcdba32-9e43-45c7-a41e-caa48452b724": "The guidelines state that after establishing an initial end-to-end system, what is often a better way to improve performance than trying different algorithms?", "a22b97a9-7d55-4cc6-854a-2aba031653b7": "According to the passage, why does the variational posterior distribution q*(Z) exhibit additional factorization beyond what was assumed in the variational distribution q(Z)?", "56e1934a-cb18-45ce-818a-9751b8d5ac87": "The passage states that the optimal solution for q*(\u03bc, \u039b) factorizes into independent distributions q*(\u03bck, \u039bk) for each component k. What property of the true distribution causes this additional factorization?", "b728d1ae-f099-46ce-a8a2-e48b7bf77630": "Which 2017 conference proceedings contains a paper titled \"Research on data augmentation for image classification based on convolutional neural networks\"?", "f00147d2-1389-4976-b250-051dac5db1eb": "Which 2018 workshop contains a paper titled \"Data augmentation for skin lesion analysis\"?", "5c61b774-62b8-4a70-96de-f7724ddaff26": "What are the three key operations needed to compute all the gradients required to train a feedforward convolutional neural network?", "a66ab460-ca42-438d-b64c-af8ae923e0a1": "Briefly explain how the equations for backpropagation work in a simple 2D, single example convolutional network where we want to minimize a loss function J(V,K) given input image V and kernel stack K.", "00a0f5a1-4a64-4c0b-a51d-27f14d8fc73a": "According to the passage, what are two key features of reinforcement learning methods that do not require a model?", "c658b156-20c0-4367-a185-38793feec6ef": "The passage mentions that dynamic programming was first connected to reinforcement learning by Minsky in commenting on which checkers player?", "01a5cae0-052e-4760-b2b1-0c417c9bb674": "What kind of model do we obtain if the latent variables in the graph are discrete and the observed variables may be discrete or continuous?", "14f503cd-b186-4158-b234-2a9375bde61b": "What properties do the observed variables not satisfy according to the given information?", "801395f5-09a0-4997-9062-8e56c17bc4cc": "According to the Ormoneit and Sen paper, what type of learning algorithm does kernel-based reinforcement learning utilize?", "0f206670-7a61-4109-83fe-2850a8df149b": "In the Oudeyer and Kaplan paper, what term do the authors use to refer to an agent's intrinsic tendency to explore its environment guided by its curiosity?", "15e840af-c70b-475a-96be-410d2cc7785b": "What problem were learning automata originally developed to help solve?", "4e079757-9537-4f97-ba7a-ef4baefcbddf": "Whose early research on the Alopex algorithm influenced some of the initial research on modern reinforcement learning?", "03fcfaa4-007c-48c7-b67c-6b86f46eab9f": "What paper proposed a new theory of sequential decision making in primal-dual spaces using proximal reinforcement learning?", "a8e2289f-e625-4a75-849e-4a0a14fd154b": "Which authors presented work on off-policy learning control with function approximation in machine learning conference proceedings?", "275b1aeb-8583-4dba-be5b-870e632c8882": "According to the passage, why does a recommendation system provide an incomplete view of user preferences?", "4b226415-da0b-4273-94b5-d99279921079": "The passage mentions that in some cases, no recommendation is made to a user. It provides an example of when this could happen. What is the example it provides?", "07262a96-cab4-4363-86a1-fe8ee9dc0dd8": "According to the passage, how can two individuals infect each other with a disease even if they do not directly interact?", "dcb7ed22-e601-430a-b2a4-9f3d8115a7cd": "The passage states that undirected graphical models define an unnormalized probability distribution by multiplying together factors for each clique. What is the main difference between this and the probability distributions defined by Bayesian networks?", "acfdb582-0f9e-4260-9243-834b3cc9d8bf": "True or False: The singular value decomposition (SVD) can be applied to any real matrix, while the eigenvalue decomposition is only defined for square matrices.", "dbcebd75-aa49-49e5-aae2-a61bdcfdf125": "Fill in the blank: The SVD enables us to discover some of the same kind of information as the _________ reveals.", "bc2bc685-39de-4acb-87e6-41fe289f51f3": "What are the two requirements that must be satisfied in order for the Gibbs sampling procedure to sample from the correct distribution?", "37ef36ec-f034-4228-a860-616786d6a7ea": "What must be specified in order to complete the Gibbs sampling algorithm, even though samples drawn after many iterations will become independent of this distribution?", "298e9e0b-baa9-41b3-bba6-d53e45cd3d48": "We are interested in approximating the function shown in Figure 5.2 and we have a choice between 2 models - one with high bias and one with high variance. According to the text, what is the most common way to choose between these two models?", "baee5ce0-fca6-4ead-a25f-c74c921f5383": "The text states that MSE = Bias^2 + Variance. What does MSE stand for and what does it measure according to the text?", "f580f344-ad41-4b7b-9b32-25b3a4dbff66": "Which paper introduced an approach for learning sentence representations using Siamese BERT networks?", "1d8d075f-9404-46dc-927b-07a9cb30c955": "Which paper proposed a method for improving sentence embeddings by maximizing mutual information?", "2a6fe341-cb81-48d5-8dcc-3bbabd217a82": "What are two benefits of using experience replay during Q-learning according to the passage?", "dfa20f8c-a3ee-485a-8933-172fd5538d98": "The passage states the Q network is cloned and kept frozen as the optimization target every C steps. What is C in this context?", "4fa08728-3279-450f-88f3-a5f2699eec14": "What are two common strategies for generating samples from a Markov chain for use in deep learning? What is a commonly used number of Markov chains?", "8c59b26a-1662-49cb-a122-7f2d7b9b4776": "What is the mixing time of a Markov chain? How can we test whether a Markov chain has reached equilibrium?", "b91fec5b-0746-4c9f-9288-7fa75dea9348": "According to the text, when optimizing the KL divergence, what form did we derive for q*(z1) even though we did not assume q(zi) to be Gaussian?", "d23a3024-64c5-4cdf-8bfe-8f8f54075b10": "The solutions for the mean and precision of the Gaussian q*(z1) are described as coupled. What does this mean? How do we address the coupling of the solutions?", "355488da-ca51-402f-9c9d-53b9cfccaf0a": "Consider an n-step TD learning algorithm. During the first n-1 steps of each episode, what happens to the value estimates V(s) for all states s \u2260 St?", "6cdbd3bf-cffa-4932-9a69-8f0055615b53": "Derive the equation that expresses the n-step TD error as a sum of TD errors, under the assumption that the value estimates V(s) do not change from step to step. Your equation should generalize the result from Chapter 6, equation (6.6).", "96d4f3f4-6e61-483a-bf27-00657a81913a": "What is the form of the conditional distribution p(xa|xb)?", "5cf86760-3de0-44da-9130-08ec277baf4c": "- Gaussian", "9265d3fd-8cb0-4b3b-917d-e6fb7e90a0df": "- Exponential", "36f59ef7-e3e6-4d0b-a967-2e2a19c74312": "- Uniform", "4c089c82-3c42-418a-8f99-501e41400f3f": "- Poisson", "d2deda83-4699-4cd2-b414-62af4908a0a9": "After obtaining the quadratic form in (2.70), what two quantities must be identified to fully characterize the Gaussian conditional distribution p(xa|xb)?", "7d51b24c-be46-4317-9f58-0411ed408ced": "- The mean and covariance", "799678fd-1de6-4fbf-9f1b-d2bf588b9f53": "- The mean and variance", "c079bf94-9e6c-4c94-8cd6-43f9eb6f3a1c": "- The mode and covariance", "32075fd6-5bea-407d-a804-14f7f292e6ad": "- The median and variance", "77c6cbb7-4a4e-4d6d-99ec-d379c24a82dd": "What are the two types of cliques described in the Markov random field model for images?", "35c07a3b-4652-4d00-831f-778d4332bea2": "What is the form of the energy function used for cliques of the form {xi, yi} and what is the intended effect of this energy function?", "d34d3535-f159-43f4-80e7-2af63067c591": "According to the passage, why is it possible for an error function to be perfectly satisfactory for use in learning settings even if the value function derived from it does not match the true value function?", "a726280f-2486-4c44-8d67-3b91b592179f": "The passage states that the probability distribution P(\u03be) provides a complete characterization of a source of data. What does this mean? Why does it not provide enough information to determine the value estimation (VE) and Bellman error (BE) objectives?", "f698ec3d-5678-4b82-affb-2ff1dd9a7d72": "What allows directed graphical models to use less runtime and memory compared to undirected models?", "23a44679-28a6-4908-81fc-4c775d012fe9": "According to the passage, what are two key benefits of using structured probabilistic models instead of end-to-end algorithms?", "bb4d8223-5c99-48ac-ac25-f4cd8ac5ea6a": "What is the purpose of the weight decay term with coefficient \u03bb in the total cost function J?", "92139d9b-1511-4ae1-8fe0-97062a0d0d3c": "If we define H = max{0, XW1}, what does the matrix W1 represent in the context of this neural network model?", "caf7c9f8-7daa-4132-b69c-e0439ebb3c97": "In the random walk example discussed, only the estimated value for one state was changed between the left and right graphs. Which state's estimated value changed and by how much was it changed?", "2797a071-4037-4160-9e73-ab9e2b62d1f0": "The random walk example compared two reinforcement learning algorithms - TD and Monte Carlo methods. Do you think using a wider range of step-size (alpha) values would affect the conclusion about which algorithm performed better? Why or why not?", "f26a0c09-fe7c-4d70-adee-a9364f65f929": "What is the key difference between the conjugate gradients algorithm and Newton's method that makes conjugate gradients more computationally efficient?", "6b074fc6-6cd3-4ae6-9e79-4e6faa411d81": "How does the BFGS algorithm approximate Newton's method while avoiding the computational burden of calculating the Hessian matrix?", "0c8f1fc6-e021-4d76-96d1-1792fe6b0849": "What does the green curve in the right-hand plot denote?", "e2079bab-7627-4b38-84ff-c114f5e8fd65": "What does the optimal decision boundary correspond to, as shown by the green curve in the left-hand plot?", "d688e371-4cbc-4461-90a7-d926a6d4eff7": "What type of features do many different learning algorithms learn when applied to natural images, as discussed by Olshausen and Field?", "d561e949-9c70-44f9-a422-ab316d848b4e": "According to the passage, why is it difficult to conclude that any specific learning algorithm is the \"right\" model of the brain just based on the features it learns from natural images?", "20461412-ab8f-4d80-89b9-2a5bf52329a4": "In the graph shown in Figure 8.15, are the variables a and b independent if none of the variables are observed? Explain your reasoning.", "d4c09909-8409-4e00-99cb-7c493affd27f": "Suppose we condition on the variable c in the graph shown in Figure 8.15. Does this induce a conditional independence between a and b? If so, provide a simple graphical interpretation of why conditioning on c leads to this conditional independence.", "48c46dfb-1d96-4b0a-9bbc-e5ad5e8fb337": "According to the passage, what causes gradient descent to waste time repeatedly descending the canyon walls in the elongated quadratic function?", "ccd801ee-4f35-4d3b-bcb1-7f6d0fdb7b7f": "The passage states that the issue of gradient descent wasting time in the elongated quadratic function can be resolved by using what information to guide the search?", "c31d190a-c1ae-483c-b946-fb61e01af978": "What are the Karush-Kuhn-Tucker (KKT) conditions?", "886130b3-fd75-4d0a-bf17-f2a7db2f9fce": "True or False: The KKT conditions are sufficient conditions for a point to be optimal for a constrained optimization problem.", "e0fe86f6-4895-48bd-8ff8-231c3adc5fc7": "According to Witten (Learning to Control), what is the apparent conflict between estimation and control sometimes referred to as?", "bc7f0c3d-1677-40f1-a28d-6f5fa28d45cc": "According to the abstract of Woodworth's Experimental Psychology, what are two key things he aimed to accomplish with the book?", "1f2ed329-7a88-48b6-9cd5-e11617cbc4fe": "What is represented by Dv in the context?", "16b54378-e180-40f8-a09b-2476e944a10c": "How does the algorithm use a validation set, according to the context?", "7f415bf1-4a70-4f57-bb41-320c6fcf4fc5": "According to the given information, what was the behavior policy used to generate the training data?", "67caf96b-42b6-449a-a254-66a834c43d11": "Approximately what was the true value of the example state under the target policy, as determined by generating episodes using just the target policy?", "2e402f7e-0951-4893-8d05-7a6661563a28": "According to Ludvig et al., what are the three main perspectives that can be used to understand reinforcement learning in the brain? Briefly describe each perspective.", "b8d43667-c80c-4bec-9284-73adfb242da3": "Maclin and Shavlik discuss incorporating advice into reinforcement learning agents. Choose one of the references (Mackintosh A theory of attention or Mackintosh Conditioning and Associative Learning) and explain how the concepts from that work could be used to provide useful advice to a reinforcement learning agent.", "468579a8-e08f-402f-bb17-a7182cc974ac": "How can Lagrange multipliers be used to enforce the constraints that the new vector UM+1 be orthogonal to the existing vectors U1,...,UM and normalized to unit length?", "f717b15e-e0e7-4b98-bbbb-7b8228eafb2f": "If the eigenvectors U1,...,UM of the data covariance matrix S are orthonormal, show that choosing UM+1 to be the eigenvector corresponding to the (M+1)th largest eigenvalue maximizes the variance captured by the first M+1 principal components.", "8c78199c-ca05-4c9b-ac5a-83a7d21e8853": "What theorem states that the sum of multiple random variables tends towards a Gaussian distribution as the number of terms in the sum increases?", "fc30822e-03f4-4b0b-a352-f06be2bb5ccb": "If x is a D-dimensional random vector that follows a multivariate Gaussian distribution, what is the form of its probability density function, in terms of the mean vector \u03bc, covariance matrix \u03a3, and determinant of \u03a3?", "6db3c4e8-c678-4cd1-8242-4d1593413fde": "What are the core building blocks of statistical language modeling that have been used for many decades?", "091da98a-ec35-4056-bf98-2f40ce649be6": "If we are training both an n-gram model and an n-1 gram model simultaneously, how can we easily compute Pn(w1, ..., wn)?", "85fa5eb8-99d6-4bcc-925a-329529fb6ddb": "What are two ways discussed in the text to resolve the issue of the mixture model assigning significant probability mass to regions where there is no data?", "cf2c187b-2827-47b8-a2fe-e4c1657f6c8a": "Referring to the figure, describe how the responsibilities (or posterior probabilities) for the two mixture components change from the initial configuration to after 50 iterations of EM.", "dcfeae05-c4df-4f57-a763-f71cf7096ae7": "What does figure 7.8 demonstrate?", "ed23c1e6-28dd-41c7-b347-a4d7e8db8c9e": "How can adding an imperceptibly small vector change a neural network's classification of an image, according to the passage?", "bbe41035-ff40-4c91-b598-08df05071dd3": "According to the passage, why can the agent-environment boundary be located at different places for different purposes?", "e4bb6986-f7e2-46cf-85fa-74a00a8d301e": "The passage mentions that in a complicated robot, many different agents may operate at once. Can you explain what is meant by different agents in this context and how their boundaries may differ?", "a2902626-c79f-45f4-8429-1fa8dd54605b": "According to the passage, what is the informal meaning of \"state\" that the authors encourage thinking about?", "d445b195-dbf9-4836-bb84-51fde57fc686": "The passage mentions that the book does not address issues related to constructing, changing, or learning the state signal. What aspect of states does the book focus on instead?", "2f54d263-0a84-4a95-82ba-2eb6d893f069": "According to the passage, what is the main reason why exploration may produce greater total reward in the long run compared to exploitation?", "e306bf0e-eda1-4844-a64c-5b2a13027649": "The passage mentions that deciding whether to explore or exploit depends in a complex way on several factors. What are the 3 factors mentioned that impact this decision?", "07ff01cd-6d37-4e21-83a6-31c59d03297d": "What are the two output values of the neural network fo(s)?", "21499b5e-edff-4ea7-b0ba-df9aeacc9dde": "How many stacked feature planes are there for each board position? What does each feature plane represent?", "0b877cd0-a755-4039-a34d-f4b1ec2e1fd7": "According to the bounds discussed in the passage, under what conditions can we safely skip modeling the labeling function accuracies and take an unweighted majority vote?", "cf6e25cd-883f-45fe-a3d9-72341614ccde": "What are the three labeling density regimes discussed in the passage? For each regime, briefly summarize the expected behavior of the generative model.", "ba8b62cd-7a54-49c6-9669-a1beb55fb343": "The Kullback-Leibler divergence can be interpreted as a measure of what between two probability distributions p(x) and q(x)?", "10878201-5fa3-4ef6-84e6-21bca13ab358": "True or False: If we use a distribution q(x) that is different from the true distribution p(x) to compress data, the additional information that must be transmitted on average will be less than the Kullback-Leibler divergence between p(x) and q(x).", "f0fad811-7d3b-49d8-bb4a-e9c32276546c": "According to the passage, why does State B have a higher value under the random policy compared to its immediate reward of 5?", "88c8d990-8182-4f76-8d64-260546c4f1e5": "The passage mentions that from State A the agent is likely to be taken to A', from which it may run into the edge of the grid. How does this relate to State A having a lower expected return under the random policy compared to its immediate reward of 10?", "184dff00-088c-407c-b7bc-b70764529b82": "What did Crow argue against regarding reverberating neural circuits playing a role in reward learning? He argued against the idea that reverberation could establish the specific synaptic connections involved in an adaptive motor output.", "475ebe78-d5f9-4fdc-bed9-32beee91a146": "What hypothesis did Miller propose regarding synaptic learning rules? Miller proposed a Law-of-Effect-like learning rule that includes locally contingent eligibility traces at the synaptic level.", "ed29313f-5f8d-4287-b32d-419c139bc688": "What is the overall computational cost for backpropagation when using the derivatives of the error function?", "a192fd0f-245f-498e-bdb8-4a0191b0dc63": "What is one advantage of using finite differences to compute the derivatives instead of backpropagation?", "18f6f680-fee5-46a8-9929-7d211a8f6118": "What is the form of the log likelihood function for a Gaussian process regression model?", "53376748-3708-48d8-8ef2-84c61178c1af": "What result is used to obtain the derivative of the log likelihood function with respect to the parameter vector \u03b8?", "21b47426-3286-4a12-a7c9-82a036a9a87d": "One of the key requirements for the sampling distribution q(z) in importance sampling is that it should not be small or zero in regions where the true distribution p(z) may be significant. Why is this important?", "413405c0-0ced-4176-97ca-46f19ee59353": "When using importance sampling, the weights {rl} can sometimes be dominated by a few large values, with most weights being relatively small. What problem does this lead to, in terms of the effectiveness of the sampling?", "1fd93294-5d20-4c2e-b074-77f4b559265b": "What two factors were studied regarding their impact on ImageNet accuracy according to the passage?", "fc43986c-8207-4f1e-a219-08f34fdb2ae1": "What method was used to test for statistical significance of differences between the models discussed in the passage?", "004574d7-be31-4032-af27-05d87c7afe69": "According to the passage, what provides the neuromodulatory factor that enables reward-modulated STDP to occur at the spines of medium spiny neurons in the dorsal striatum?", "6b42af74-3588-4a3d-a57b-ee82ad985ce3": "How long can the time window last between a presynaptic spike being closely followed by a postsynaptic spike and the arrival of a neuromodulatory pulse, for lasting changes to occur in the efficacies of corticostriatal synapses through reward-modulated STDP?", "1a5650c4-f2c7-4518-a5fa-74c7d32d4195": "What procedure does dropout use to effectively remove a unit from a network?", "e1d04874-057e-49aa-8c3a-f51d63411593": "How does the dropout algorithm train the ensemble of subnetworks formed from the base network?", "297652fa-7527-4655-a231-daab0ab7bce1": "The text mentions that rollout algorithms can produce good performance even with a completely random rollout policy. Why might this be the case? What properties of the problem might allow a rollout algorithm to work well even with a poor rollout policy?", "d986c135-edaf-41df-be62-28124c3ebfe5": "The passage discusses tradeoffs between the quality of the rollout policy and the accuracy of value estimates in rollout algorithms. What is the key tradeoff regarding rollout policy quality and why does this tradeoff exist?", "09ef3d11-5f93-47f6-a739-166756407172": "What is the purpose of the Metropolis criterion when using the leapfrog integration scheme for Hamiltonian Monte Carlo?", "3a438752-9107-468f-b000-74c7fc7c245f": "How can the leapfrog integration scheme be modified to satisfy detailed balance and ensure the resulting samples are drawn from the required distribution?", "91e5a29e-0a2c-4f06-afd5-e5c25141aaa3": "What is one way to prevent a softmax classifier from predicting probabilities of exactly 0 or 1, which can cause it to never converge?", "90171614-538e-43ff-ab98-b384c4061b64": "Label smoothing regularizes a model by replacing the hard 0 and 1 classification targets with targets of _______ and _______, respectively.", "62ace950-bee7-4e08-be57-fec1a625de6d": "What are two key components of the cytoskeleton that are discussed in relation to their role in metabolism in the passage?", "b60733ad-b839-45b6-b7dc-413411417cde": "According to the passage, why does understanding the molecular structure of nucleite and enzymes help explain the process of metabolism?", "ce78226e-6ac7-426c-9851-5cb2f2e3b8e7": "According to the passage, how does classical conditioning relate to the phenomenon of learned reflexive actions in animals?", "fb6fcebf-bfbf-42f8-a025-517a30d48e9d": "The passage mentions a self-driving car that learns to predict collisions. What built-in reflexive action is suggested that could be triggered when the prediction exceeds a threshold?", "acd74b88-721a-4440-bacf-9bc1e5d5bc37": "According to the model described, what is the form of the prior distribution over the parameter \u03b8?", "336daece-4f29-47df-b343-edb70fe9bd44": "Gaussian", "406b7b68-b02a-4d3c-84a4-d1a6235bb8ef": "Uniform", "d6dda07a-274d-4d5a-ba97-b56c8e91883d": "Exponential", "e7e70eea-5011-493b-b4fd-c0e873f1e42a": "Poisson", "9306ab80-cc5f-4eca-b13b-4d865e198442": "What is the computational cost of solving this problem exactly as the number of observations N grows large?", "862e1356-16b5-443d-b22e-4f0eabb4d130": "Linear in N", "4055c78f-7c52-40a9-95c3-47bf7f8ac0b3": "Quadratic in N", "ee18109a-e465-415f-bded-f6813b71a901": "Cubic in N", "293f04fa-1c2c-4ade-8e58-e9e6304c9a67": "Exponential in N", "31c519f7-8328-49d2-a80b-c77402f84932": "What allows hidden Markov models to exhibit some invariance to local warping of the time axis?", "369ad4e5-6852-4ac5-bc01-30579715b434": "How can variations in the relative sizes of the two sections of a handwritten digit '2' be accommodated by a hidden Markov model?", "378348a4-4849-4758-9c41-52dcebf923be": "What is the effect of adding an extra term h(x_i) for each pixel i in the noise-free image?", "0b3b688c-f872-4e98-8519-ccf7993bf3ff": "What algorithm is used to find the maximum probability image x given the noisy image y in this example?", "e9f81186-a417-432b-be4b-ff737f86d3dc": "What are the two arrays used in the two-array version of iterative policy evaluation?", "5dacfbda-3719-490c-9886-3cd92ade0464": "How does the in-place algorithm for iterative policy evaluation differ from the two-array version in terms of convergence rate and use of new values?", "674753d7-a05f-4758-9f18-f9075deeb2a7": "According to the equations in the passage, how is the joint distribution P(Y) of the observations y parametrized using the chain rule for conditional probabilities?", "75cea866-965f-4cbf-9b53-ab2930c5236f": "What is the formula provided in the passage for the negative log-likelihood L of a set of observations {y^(1),...,y^(T)} according to a recurrent neural network model?", "f26686b0-a725-4e21-946b-92b433b3749a": "What is the activation function for the output units in the two-layer network described in the passage?", "6cc31ba9-b16c-4e88-8a8d-b056c9b317ff": "What is a useful feature of the logistic sigmoid activation function for the hidden units that allows it to be easily differentiated?", "d9afd573-2595-4b59-aea1-0dac6a17a486": "What is the computational complexity of computing the full eigenvector decomposition for a matrix of size D x D? Explain your reasoning.", "295a3a2c-63a6-4ab6-8157-f23452089304": "Describe an alternative technique to finding all eigenvalues and eigenvectors that can provide better efficiency than the full eigenvector decomposition. In your explanation, state the technique, its computational complexity, and why it provides improved efficiency.", "cfc433fe-3aa8-4882-aa50-1b88d23a71f5": "What two key problems make learning difficult for deep artificial neural networks?", "3d2bf2b0-0232-484c-b889-dc3030b3b4bc": "Overfitting is less of a problem for which type of reinforcement learning system? Why?", "c4f9edcd-efd2-4b18-9f0d-7d36a03a12ad": "According to the passage, how does TD(\u03bb) differ from the offline \u03bb-return algorithm?", "9eeede61-208b-42b4-886b-b4d824cd6e00": "The passage states that with TD(\u03bb), \"we move on to the next and never have to work with the preceding state again.\" What does this statement refer to?", "8631b57e-d430-4e0e-bf2e-51a6b07647fb": "According to the passage, who proposed the theory of \"Restricted Bayes optimal classifiers\"?", "3b22dcd8-90e2-405c-8ae5-301b58d7772d": "Which author discussed scaling kernel-based systems to large data sets in the journal Data Mining and Knowledge Discovery?", "2718ddec-e8e2-420b-8851-346c1e1a98b4": "According to the passage, why are sample averages not a completely satisfactory solution for nonstationary problems?", "75902a47-2abe-43f5-b09d-10c279fab17f": "The passage mentions two ways to avoid the bias of constant step sizes while retaining their advantages on nonstationary problems. What are these two methods?", "6a26108c-1aa9-4243-aa52-7ce1fd23cd36": "According to the passage, what enables a learner to recognize an object class without having seen an image of that object before?", "5543ae05-7493-4ae4-a47f-1ef78944b577": "The passage discusses a zero-data learning scenario with 3 key random variables. What are those 3 random variables?", "1187f082-9ba5-468c-8467-e9adcff51267": "What is the definition of the average reward r(\u03c0) for a policy \u03c0 in the average-reward setting?", "a5494f56-2292-43d1-b294-2769ab1d91ad": "What assumption about the MDP is known as ergodicity and what does it guarantee regarding the existence of limits in the equations for average reward?", "fcb57983-e755-42f6-bc7b-0b1a5a1408f3": "According to the passage, why is it important that the policy \u03c0(a|s,\u03b8) is differentiable with respect to its parameters \u03b8?", "e314479d-4a7c-443a-a0da-bfdd8e448ed6": "The passage states that in practice, to ensure exploration, policy gradient methods generally require that the policy never becomes deterministic. Why is this exploration requirement important?", "14f1a1d4-9607-4361-a80e-d11d0c59c6b0": "What is the key insight behind training variational autoencoders?", "035c265b-b919-4071-8728-feb03fd8e72a": "Fill in the blank: In equation 20.76, the first term is the _______ log-likelihood of the visible and hidden variables under the _______ posterior over the latent variables.", "c0920626-cbfb-4006-a759-f47452dccfed": "According to the passage, what are the two main subdivisions of the striatum that are important for reinforcement learning?", "f626c193-274b-4409-b3f5-7f4fe00d787f": "The passage states that the axons of dopamine neurons make synaptic contact with the spine stems of medium spiny neurons. What other neural connections contact the tips of the spines of medium spiny neurons?", "bf8aebbe-8c24-4136-8119-92b16a94ae95": "What is the form of the error function Em(x) when separating off the contribution from the base classifier ym(x)?", "cff18546-7554-4cbe-bf0e-4866f051825e": "How can the error function Em(x) be rewritten in terms of two sums, one over the correctly classified points Tm and one over the misclassified points Mm?", "d445fc53-7c04-42e2-aee2-b3406e8a5f93": "According to the passage, if an image x_test and word y_test were never paired together during training, how can we still associate x_test with y_test?", "3677e834-2358-45d9-ae18-c1352b92a324": "The passage discusses learning representations for two different modalities (images and words) as well as the relationship between them. What is the benefit of learning all three of these components?", "b42df877-757b-499a-8526-8981678d4715": "What are the two key differences between RMSProp and Adam algorithms according to the passage?", "b016948c-16a8-4bbb-b4c9-797b1399dc43": "What are the two bias corrections incorporated in the Adam algorithm and what do they account for?", "4dfe936a-6a4c-45a6-8cdc-ef5daed5db7d": "According to the passage, what are we exploring in this chapter that relates to the convergence problems?", "dc5d65a6-db60-4d8f-a967-b3b9c7b149d1": "The passage mentions we will gain a deeper understanding of approximation in reinforcement learning for both on-policy and off-policy learning. What are the two policies mentioned that are involved in off-policy learning?", "993721c6-bb78-4582-b269-627e424df2a2": "The paper by Chen and Bansal in 2018 proposes an approach to fast abstractive summarization involving what technique for sentence rewriting?", "93c8b098-6c19-4cfb-8727-65dcba5e9842": "The paper by Choshen et al. in 2020 examines weaknesses of what learning approach for neural machine translation?", "13813e7e-2a6c-4dee-875a-376dcbef82a9": "What are the two kinds of probability discussed in the context?", "a66e6c1f-cdd1-4e15-a42c-f0bd2802a490": "According to the context, if we want to satisfy certain common sense properties of reasoning about uncertainty, how must Bayesian probabilities behave in relation to frequentist probabilities?", "f71d4ac4-fa0e-4843-8e36-11d0af608b7f": "What is the formal definition of an asymptotically unbiased estimator?", "44e0b686-3b64-4a14-99ef-0046031b9207": "Consider a set of samples {x(i)} that are IID according to a Bernoulli distribution. As the sample size n increases, what happens to the bias of the sample mean x\u0304 as an estimator of the true mean p?", "0059e09e-fefa-43d0-a6f2-882a9d302a71": "If two variables have a positive covariance, what does this indicate about the values they take on relative to each other?", "83a1ecd3-7721-41ff-a563-bb6c9173d637": "What is the main distinction between covariance and dependence?", "311061b8-6fd4-459a-ba32-00400ce7af5a": "In the binary image noise removal example, what are the two possible values for the binary pixel values xi and yi?", "8a279b2f-b370-4107-929f-4517ff299753": "What is the goal when given a noisy image, according to the context?", "55a3aa2b-8930-4ee2-8b92-626795f35d3e": "According to the passage, why can gradient descent still work reasonably well for training neural networks, even when some of the activation functions are not differentiable everywhere?", "6716d924-b21c-4bd5-a539-3d7e917277b2": "The passage mentions that training algorithms for neural networks do not usually arrive at a local minimum of the cost function. Instead, what do they accomplish with respect to the cost function during training?", "6ccd3b50-c388-4332-91e5-7fd8c6239887": "In an action-value actor-critic algorithm, how are the policy parameters \u03b8 updated each time step?", "358ac364-3885-4bd7-b818-9c0a14e097f8": "What is the TD error \u03b4 used to update the action-value function Q(s,a;w) in an actor-critic algorithm, and how is it computed?", "c852b121-ceb7-48d5-8cc2-8160ce094dd2": "What is the equation we obtain when differentiating the Lagrangian with respect to x?", "deb2fb94-2d48-474c-b3a8-4a611dfe60ed": "What process do we follow to find the value of \u03bb that satisfies the constraint? Describe the steps involved.", "23d67420-14d7-44ec-ba03-32579479b61e": "What is the dimensionality of the centred data matrix X defined in the context?", "86be2c3c-7043-4d93-881c-84030616e0fb": "If v is an eigenvector of the N x N matrix (N-1)XXT, what is the corresponding eigenvector of the original covariance matrix S?", "d60178c7-2e70-41f1-9483-b5494dfdd600": "What are two ways mentioned in the passage to address the issue of manipulating and inverting large covariance matrices becoming prohibitive?", "f7df055e-3094-475a-a0ad-3db0c00bb4c2": "How do the contours of constant density differ between a general covariance matrix, a diagonal covariance matrix, and an isotropic covariance matrix?", "5dabba78-cb95-4170-b4bf-210c53ac4e48": "According to the text, the predictive distribution p(x) depends on three parameters. What are these three parameters?", "7ff6e44e-888c-42b9-93a4-ba190a19d728": "The text mentions there is redundancy in the parameterization of p(x) corresponding to rotations of the latent space coordinates. How does it explain this redundancy?", "f6823291-3178-4f35-ac9d-03ed8a7430d9": "True or False: Regularization techniques like adding a small constant to the diagonal of X'X can help avoid singularities by making the matrix invertible.", "29ab88ec-674b-4cf4-bd3e-947f9c66dd00": "If a linear classification problem is linearly separable, what issue may arise when using logistic regression and stochastic gradient descent?", "5e1b1f30-c270-4bf6-8da0-cd9d07f504e3": "According to Bayes' theorem, if we observe that the fuel gauge reads empty (G=0), what happens to the probability that the fuel tank is actually empty (F=0)?", "931b4fab-6aaa-4d02-94dd-d12f02d03228": "If we observe that both the fuel gauge reads empty (G=0) and the battery is flat (B=0), how do we calculate the posterior probability that the fuel tank is empty (F=0) using Bayes' theorem, in terms of the prior probabilities p(F=0), p(G=0|F=0), and p(B=0)?", "35ff920d-4460-42da-8bd4-e21840db4ba2": "What is the relationship between the value of the blue curve and the slope of the red curve at a given point, as indicated by the vertical green line?", "4b8cfe3a-73a2-4816-8bb2-f0662451ee32": "True or False: Using a Gaussian distribution with non-zero mean to generate the cumulative distribution function for the activation function in the stochastic threshold model will change the model, since it is not equivalent to just re-scaling the linear coefficients w.", "8497ccc0-9961-45a1-a856-4b830cc53b6a": "What is the key difference between meta-learning and standard supervised learning in how the loss is computed and parameters are updated during training?", "972272f4-8d8e-445c-bb10-0f3061252179": "How is the support set S used during meta-learning training? What role does it play in optimizing the model parameters?", "0185af1c-7bf2-4c49-ae4b-f63262fe0959": "Which paper proposed a unified, real-time object detection algorithm called YOLO (You Only Look Once)?", "cb12c9e2-9d7d-4133-ac68-dec6a6f8473f": "Which CVPR 2014 paper presented Rich Feature Hierarchies for object detection and semantic segmentation?", "b2ffc88d-d41f-4fa4-9576-8c759fbf9036": "What technique do Sohn et al. propose in their 2016 NIPS paper to improve deep metric learning?", "6c45df31-9aad-49dd-b397-16fc4daf531e": "What is the key idea behind noise-contrastive estimation, proposed by Gutmann and Hyvarinen in their 2010 AISTATS paper?", "464989f6-a60a-4d40-bfd8-be55928706e1": "What was the key breakthrough result of Mnih et al.'s work with DQN on the 49 Atari games?", "a3a2512b-9633-4981-8503-afd475b4a0de": "What preprocessing steps did Mnih et al. take with the raw 210x160 pixel image frames before feeding them into the DQN algorithm, and why did they do this preprocessing?", "0cbd47eb-0947-4a07-b58a-1676fa962866": "What are the key properties of the linear regression model described in the context?", "1513de4f-dfd8-42ee-b8eb-0cf1ea7ca782": "How does the model with basis functions \u03c6j(x) differ from the standard linear regression model? What are the main benefits of using this more flexible model with basis functions?", "c550a946-4ce0-4ee5-a238-178e35bcf134": "What is required for the Gaussian distribution q(z) obtained from the Laplace approximation to be well-defined?", "e8adce33-3a5c-4eac-adc6-fa274cc4783b": "What must we do before we can apply the Laplace approximation to approximate a distribution p(z)?", "4125a314-4254-4b50-b1ef-01f8955908cc": "Which paper proposed a decision-theoretic generalization of online learning and applied it to boosting?", "1a65cb9c-372e-4773-adfa-1ab036a19e6f": "Which paper presented a model for clustering weighted data, with an application to audio-visual scene analysis?", "de4ffd5b-c6ff-4f2d-acb2-3568a0937ab6": "According to the passage, what did Fr\u00e9maux, Sprekeler, and Gerstner propose regarding learning by rules based on reward-modulated STDP?", "362baa86-dcc1-4231-a6f6-81f28a46ae3d": "The passage mentions that Crow proposed a form of synaptic plasticity that involves a contingent form of eligibility. What does the passage say this eligibility is associated with, according to Crow's hypothesis?", "a1fd9329-30f2-49b1-ba56-5b50dbefba30": "What are some of the key strategies used in machine learning to reduce test error, possibly at the expense of increased training error?", "626d176f-9aba-4f75-87cf-8db1ea419c0f": "According to the passage, what has been one of the major research efforts in the field of deep learning?", "66dbb200-eb13-40b5-80eb-35b00f1c22ed": "What was the primary goal of Reddy, Celani, Sejnowski, and Vergassola in using reinforcement learning to investigate thermal soaring policies?", "d47f4193-f368-49a5-a32f-2ecc5323cb6e": "Why did Reddy et al. devote significant effort towards making their atmospheric model generate realistic thermal soaring conditions?", "fc23cf8f-74f8-4dbb-9459-b40f6215555d": "What technique did Salakhutdinov and Larochelle use to achieve faster inference compared to iterating the mean field fixed-point equations in a DBM?", "b56a4992-28df-4a73-82c4-ccae7b3bd678": "According to the passage, what are two key differences between the predictive sparse decomposition (PSD) model and techniques like ISTA that use a deep encoder for learned approximate inference?", "f6a8766d-1bda-4b14-a663-57ecf0489d3f": "According to the passage, taking the logarithm of the likelihood function leads to a simpler solution to the maximum likelihood problem. How does taking the logarithm achieve this?", "17fb9ead-3d5e-4fb0-b6de-333ebdb7ca26": "The passage states that the complete-data log likelihood function is a sum of K independent contributions, one for each mixture component. Why does this make the maximization with respect to the means and covariances simpler?", "26600194-80a4-493f-beaf-34a692f9f458": "According to the passage, why does contrastive learning benefit more from stronger color augmentation than supervised learning?", "49b1cc45-8f42-4f85-b808-a3a9f13f8062": "The passage states that \"AutoAugment, a sophisticated augmentation policy found using supervised learning, does not work better than simple cropping + (stronger) color distortion.\" What does this suggest about the difference in how contrastive learning and supervised learning benefit from data augmentation?", "1979f54e-3e4c-40f5-9516-0ce4554a4fb8": "Consider a linear regression model with M basis functions \u03c6j(x). Let \u03c8j(x) be an orthonormal basis set spanning the same space. Show that the equivalent kernel k(x, x') can be written as k(x, x') = \u03c8(x)T\u03c8(x') where \u03c8 = (\u03c81, ..., \u03c8M)T.", "d06efc87-40b1-4e36-9a14-b6ad0aba3ae3": "Derive the result for the log evidence p(t|\u03b1, \u03b2) of a linear regression model by evaluating the integral in (3.77) using (2.115). Show that this satisfies the relation 2E(mN) = N where E(mN) is defined in (3.82).", "80d225ca-d574-4723-b819-331822633dd7": "What technique has shown promise for improving performance on adversarial examples, according to the passage?", "1e24bc21-b045-4393-be5a-6c1909dedaf9": "The passage mentions GANs as an example of what broader technique for data augmentation?", "4b338d08-c6cc-4572-802f-7f226106473f": "Why are one-hot vector representations of words not very informative?", "88fca4f8-2e3b-4890-b005-aef8433a00a2": "According to the passage, when can we expect unsupervised pretraining to be most helpful?", "ea54a14c-bf00-463e-8033-449ec797a779": "The text mentions two objective functions - Mean Squared Return Error (RE) and Value Estimation (VE). How are they related? What is the significance of the relationship between the optimal parameter values that minimize these two objectives?", "d81f2329-7c62-469d-8827-4880da3eccd5": "The text describes two Markov Reward Processes (MRPs) that have the same transition probabilities and rewards. It states that the same solution w = 1 is optimal for both MRPs. Why is this the case? Does this imply that all MDPs with the same data distribution have the same optimal parameter vector? Explain.", "ac133b78-a47b-41a7-b297-81b5929e60d9": "What property of the trace operator allows us to write the Frobenius norm of a matrix A as Tr(AA')?", "83a23c05-fb89-49e9-9326-e8f185462e20": "If A is an m x n matrix with m < n, it is possible that there is no solution x to the equation Ax = y. In this case, what does using the pseudoinverse of A provide?", "7a27ccc1-1d7e-4872-b815-839337131d43": "Given the matrix A and vector x, what is the expression for the derivative of x with respect to A?", "101c5048-6f52-4a91-9cc2-5da91d39abdd": "If A is a square matrix of size M x M, how can we express the condition for the matrix A to have an eigenvector ui with eigenvalue \u03bbi?", "aea3483e-a226-444d-b1ed-4ab86efbfcfd": "What are the two cases that make up the second term of the \u03bb-return equation, according to the degree of bootstrapping?", "86460514-7df4-423b-b617-596712ceff33": "How is importance sampling incorporated into non-truncated \u03bb-return methods, according to the passage?", "88ee2165-7537-4826-9a85-eb800dede956": "Let P(z|X,\u03b8n) be a probability measure where z are latent variables, X are observed variables, and \u03b8n are model parameters. Which of the following must be true about P(z|X,\u03b8n)?", "24989016-6ae4-4bb0-a13f-c49a3facb4d7": "P(z|X,\u03b8n) \u2265 0", "8fede5af-62d5-4424-89b2-d16027bc8c3a": "\u2211z P(z|X,\u03b8n) = 1", "58711dfc-3ac1-4799-932b-633a4459dfe3": "Both A and B", "d62ac701-2478-4ce7-95e5-e7328c050c34": "Neither A nor B", "16ec7263-6667-45cb-ac3f-afd8377f19bc": "Consider the equation l(\u03b8|\u03b8n) = \u2211z P(z|X,\u03b8n) log (L(X,z|\u03b8) / L(X,z|\u03b8n)) relating the lower bound l(\u03b8|\u03b8n) to the likelihood L(\u03b8). Under what condition will l(\u03b8|\u03b8n) = L(\u03b8)?", "2974be95-1522-477c-86a4-a98980f88071": "\u03b8 \u2260 \u03b8n", "2c6d2faa-5848-49d2-9cf5-432b7ad6f3a6": "\u03b8 = \u03b8n", "070c50e0-b9a0-41cf-ab2f-8b0205e0be3e": "z = 0", "14b3f49f-1e6f-4d99-8d9a-6bba10531b98": "X = \u2205", "093abad3-9077-4466-af29-eebce04580b0": "Who developed the idea of \"generalized reinforcement\", where every component views its inputs in reinforcement terms?", "3aeeda41-e2ed-4842-ae32-f2f60c6f9626": "What did Sutton and Barto develop after refining Klopf's ideas about temporal-difference learning?", "9d4dc6e6-9c5a-4ab8-ae18-5d2dfb8fc621": "What is the significance of the spike variables h in the generative model described? How do they induce sparsity in the marginal distribution over observations a?", "c9355ca1-e533-4c88-a57f-3e9438ae17c2": "What is the key difference between the generative model with spike variables and standard sparse coding models? How does this difference manifest in the sparsity of samples from each model?", "e8d79744-5b15-4b11-8a6e-e834018ce057": "What is a key advantage of using a mixture of probabilistic PCA models over a single nonlinear model?", "c12d6d78-1b5f-4c2d-bfae-fea8a99aec4f": "The context discusses using variational inference for a fully Bayesian treatment of the mixture of probabilistic PCA models. What does this allow to be inferred from the data?", "ad538f99-ca72-41af-bb7b-cbe97d244ddc": "What were the first victories of a Go program over a professional human Go player without handicap in full Go games?", "f32e7f7b-1200-463e-a83e-aebc809c43b2": "How did AlphaGo Zero differ in its approach compared to the original AlphaGo system?", "e34bb24e-a386-42dc-ac40-e0f919bef6fe": "What are the three key aspects of a Markov decision process that are intended to capture the core elements of the problem facing a reinforcement learning agent?", "906f8532-8ba0-4fec-b0e7-50c449f9a9ad": "How does reinforcement learning differ from supervised learning according to the given information?", "fa41069c-341a-407e-b63d-3c7016d1e29a": "Which of the following is typically considered an unsupervised learning task?", "e258d3ba-5570-4e18-9b9d-cfb68def468e": "Regression", "afd633a0-d26d-4560-8351-799a5849ec41": "Classification", "869d29eb-946d-4f4d-b41f-85482d4f6642": "Density estimation", "b26c30cb-672b-49eb-94d9-002816e0334a": "Structured output", "b0d9f5aa-c438-4c38-9e1b-fbc6b90dfc2c": "What term refers to a type of machine learning where the entire collection of examples is labeled as containing or not containing an example of a class, but individual members are not labeled?", "67d547e5-ddf4-443b-8427-4ab379c19e44": "Semi-supervised learning", "09401d50-3747-4b61-a25e-dbf86ae8711a": "Reinforcement learning", "2fa6c01f-c295-43db-a298-1e592ce865a2": "Multi-instance learning", "ce7a1c15-c7ba-4301-80a7-294846b581c8": "Supervised learning", "56a111f5-cf90-4005-bb80-b5103edc2822": "According to the passage, what are the two degrees of freedom corresponding to in the data configuration?", "faf399af-5206-43d1-ae28-5ad6456097c4": "The passage states that in the homogeneous phase configuration, the path lengths in oil and water are linearly related to what two variables?", "813de151-392f-411f-8fc9-3417a87f3014": "According to the passage, what are some useful statistics to monitor when training a deep neural network?", "4ddb8b86-0008-42da-b09e-19f08d766cbd": "The passage mentions that optimization can be hampered when gradients quickly grow or vanish during training. What are two ways this can happen, as mentioned in the passage?", "95c2755d-3dac-47da-86d0-cd8401d5dde4": "According to the provided information, as we collect more data points, the posterior distribution for the parameters becomes narrower. How does this affect the variance \u03c3^2_{N+1}(x) of the predictive distribution compared to \u03c3^2_{N}(x)?", "8be3af2a-6ae2-4d02-ab7b-7ce0ad121563": "The provided information discusses a result from Section 8.1.4 regarding the convolution of two Gaussian distributions. What does this tell us about the form of the predictive distribution for a Bayesian linear regression model?", "c8a39aea-f2a0-4b43-b28e-81674ffbc1bf": "The paper by Xie et al. proposed using data noising as a regularization technique when training neural network language models. What was the key idea behind their \"data noising as smoothing\" approach?", "f5cf3456-4323-43fe-af76-109676511109": "The paper by Xu, Ren, Lin and Sun introduced a generative adversarial network (GAN) based approach called DP-GAN for generating informative and diversified text. What was the key novelty of their proposed DP-GAN method compared to prior GAN approaches for text generation?", "63f679e0-76af-4f74-ba04-61d8d260adf6": "What is the typical branching factor for a tree with depth two that captures most of the computational benefits of a hierarchical word class strategy?", "c6fb4a4f-0dc0-428a-b9d6-d058435a6d17": "What are two approaches mentioned for defining the word classes or hierarchy for a language model?", "6881bfa5-fe45-4872-a62b-edd8ec14a149": "What two design features of DQN were found to significantly improve its performance when used individually, and even more so when used together?", "b3d05646-99cb-4853-9ed0-4b568696ed3c": "How did the performance of the deep convolutional version of DQN compare to the version with just a single linear layer on the test games? What does this suggest about the role of deep convolutional neural networks in DQN's learning ability?", "0fec8071-83cd-4b8f-acf5-0b707b95d08c": "According to the passage, what are some of the benefits of the authors' proposed approach compared to previous methods?", "81251b26-0da7-49dc-a081-e13b27b9c3b8": "The passage mentions results on several datasets like Food, CIFAR10, Birdsnap, etc. Which dataset does the passage say they are able to match the performance of a supervised pretrained ResNet-50 model on?", "6954fddf-318d-4159-9b1e-907c8cf71f23": "According to the Spence (1956) paper, what role does secondary reinforcement play in delayed reward learning?", "edb8800d-4006-4f7d-b950-182ffaf3f4a1": "What technique did Srivastava et al. (2014) propose to prevent neural networks from overfitting?", "0e42e085-9f77-4420-8766-3a7ef4a8ea00": "What is the generative process described in the context?", "06b521bb-981f-4c9b-b599-5403efbda2f1": "How does the framework described in the context differ from traditional PCA?", "f07aeeeb-2b03-4cb4-8e88-14ebed839494": "What are the Kalman filter equations analogous to in the hidden Markov model?", "17168248-e93f-490b-82a3-52055c5fc6b5": "Because the linear dynamical system is a linear-Gaussian model, what can we say about the joint distribution over all variables, as well as all marginals and conditionals?", "2032f28e-a6b0-4a55-bdc0-e584be853b05": "What are two common ways to fill the remaining space when translating an image as a data augmentation technique?", "dd4d6e17-916e-440b-aaaa-02f4fb19ab4f": "How can adding noise to images help convolutional neural networks (CNNs) learn more robust features?", "890e6369-b7d2-4567-8672-cf99b084d1b2": "What is the form of the conditional distribution for the target variable in a probabilistic mixture of K logistic regression models, according to the context?", "ae9eaf27-c26d-48fe-b894-dbd204890b05": "The context describes using an EM algorithm to maximize the likelihood function for a dataset {\u03c6n, tn}. What are the two key steps in each iteration of the EM algorithm?", "ece5492d-423c-40f2-970e-b7b0f5529e6e": "What was one of the greatest challenges highlighted in applying reinforcement learning to real-world problems?", "fbca4d6c-617a-448d-919e-55d041aa9acb": "What did Mukundan and Mart \u0301\u0131nez investigate in their work building on the earlier reinforcement learning research for memory controllers?", "24c75b5b-3e9a-444b-ad62-0175859c0777": "According to the passage, why is it important that the rewards we give an AI agent accurately reflect our true goals?", "c9e565c3-1f6e-4145-bae0-e16bc029a82e": "The passage mentions that a chess-playing agent should be rewarded for winning, not for achieving subgoals like taking pieces. Why does it make this distinction?", "0e7f0c05-1c87-4fdb-a1f6-34042688f86c": "According to the passage, how do we obtain the refined factor \u03c6fb(x2,x3)?", "60f446e7-2ee3-4561-8e6e-db7deffebf3e": "In the passage, it is stated that the messages \u03bcfb\u2192x2(x2) and \u03bcfb\u2192x3(x3) correspond to what factors derived from updating q(x)?", "ac29105a-2cef-4839-bfc5-9d940436ab97": "Consider a path from node A in set A to node B in set B that passes through node C. This path would be considered blocked if:", "544dc626-d128-4eb5-b174-111b5ccbbc1c": "The arrows on the path meet head-to-tail at node C, and C is in set C.", "25a12655-4051-42a4-a8a6-32fa53c211dd": "The arrows meet tail-to-tail at node C, and C is in set C.", "b2137766-c0d1-4c7c-b2b0-af72d246e241": "The arrows meet head-to-head at node C, and neither C nor any of its descendants are in set C.", "87d797ca-e4eb-41e5-99e2-04a48039b785": "All of the above.", "8c10d716-7bf2-4f7c-98e0-012b0d4a2934": "According to the concept of d-separation, the joint distribution over all variables in a directed acyclic graph will satisfy A \u22a5\u22a5 B | C if:", "491623e4-1e13-443b-bb3c-19150f84310c": "All paths between nodes in A and nodes in B are blocked.", "d936008d-4436-4ed1-994d-04d70c9544c2": "At least one path between nodes in A and B is blocked.", "0732d867-c353-4338-b2c4-89ce80059067": "No paths between nodes in A and nodes in B pass through nodes in C.", "2befcd72-4108-433d-8e25-942fd0dd4780": "Nodes in C block all paths between nodes in A and B.", "10a3701c-57f5-4dc0-a28f-ad86a192b0f6": "What journal was the paper \"A decision-theoretic generalization of on-line learning and an application to boosting\" published in?", "a7d9d92f-0e3e-4abd-a07a-9c0b522af390": "Which paper proposed using posterior regularization for structured latent variable models?", "1e14c7ec-c449-4d9f-b8cd-71ca5e777020": "What are two advantages of generalized pseudolikelihood over standard pseudolikelihood according to the passage?", "df5a64d1-1d1c-4b56-aaa6-ee2a8c3ef34e": "The passage states that pseudolikelihood can \"still be thought of as having something resembling a negative phase.\" What aspect of pseudolikelihood causes this effect?", "a9941e1c-ab25-400c-8d34-1658abe94f0e": "According to the passage, how are the inputs and outputs adapted for different tasks when fine-tuning BERT?", "2d7a74e8-76ec-4524-9cea-208857bfcceb": "The passage states that fine-tuning BERT for a new task is relatively inexpensive compared to pre-training. What evidence does it provide to support this?", "c1b0be94-5223-4149-98d8-12f979362500": "Given a univariate Gaussian distribution with a Gaussian-gamma prior and a dataset of i.i.d. observations, what is the form of the posterior distribution? Explain your reasoning.", "b1058b4e-8eb1-477b-9fe8-8ac1c19fbcc7": "Derive the multivariate Student's t-distribution in (2.162) by marginalizing over \u03b7 in (2.161). Then, show that the multivariate t-distribution integrates to 1, demonstrating that it is correctly normalized.", "d83ffd39-d4f5-4043-b99c-f660d68ae935": "According to the passage, how do autoencoders help with manifold learning compared to other approaches?", "7e4e470b-f185-4c4c-9ce1-d9ca0e5ca288": "The passage mentions that some algorithms learn embeddings for each training example while others learn a more general mapping or encoder. What are these two different types of algorithms called?", "d86749fa-df92-4d25-b5e4-1b6dcc05e361": "According to the description, what are the two steps involved in propagating messages across the Bayesian network once the initial messages from the leaf nodes have been calculated?", "e32f9bb4-acce-49dc-a815-3e84afcb3db0": "If we observe some of the variables in the Bayesian network and want to calculate the posterior distribution conditioned on these observations, how can we modify the sum-product algorithm to account for this?", "05966b2c-5710-4c1f-9580-952b68614390": "Consider a set of N observations {xn} that lie on the unit circle and can be described by 2D unit vectors. How can we find an invariant measure of the mean of these observations?", "d2ccd046-0e33-449d-a498-d4937e290197": "Derive the expression for the maximum likelihood estimator of the mean direction \u03b8 for observations {xn} that lie on the unit circle and are described by vectors xn = (cos\u03b8n, sin\u03b8n).", "99c2d475-f9b3-4095-8098-af3fbf8535a6": "What are two other common names for deep feedforward networks?", "7f3f26c0-47e8-4141-b59b-59720e91b978": "How do feedforward neural networks differ from recurrent neural networks?", "d3bda3d8-232c-4c35-91f3-44e4b20d424f": "According to the passage, why is it important to standardize the scale of input images for a computer vision model?", "d62be557-349c-47a3-8cf4-29f510008f3e": "The passage mentions two types of convolutional neural network models that can accept variable-sized image inputs. What are these two types of models?", "76725d6d-6eeb-4d92-81ad-a77ef89bd41a": "What is the form of the true posterior distribution p(h|v) in the simple probabilistic model described?", "2675ec4a-ce74-4458-a917-bc3f234b81e2": "If we have a latent variable h and an observed variable v, with p(h) = N(h;0,I) and p(v|h) = N(v;w'h,1), what is the marginal distribution p(v)?", "14145312-b180-4489-b90f-f75550381909": "What are some of the most suitable supervised learning methods for approximating the policy function in reinforcement learning?", "b805e223-fffe-48cd-9100-90857827e0a1": "What measure do we define to rank different value-function approximations in the on-policy case? Describe what this measure calculates.", "33bf4514-22fb-47ba-8f28-a7e27815c355": "What algorithm is used to efficiently find the most probable path through the hidden Markov model lattice diagram?", "4ce22e81-78d5-4ad2-8f90-dd343fa7ff49": "How do the messages passed in the max-sum algorithm relate to the results (8.93) and (8.94)?", "15423b09-4766-4d09-b54d-7a3869ce61bc": "In the given importance sampling setting, why can episodes ending with the right action be ignored in computing the expected return?", "4dacd45e-71bd-4f26-bd38-8edffd9e0d78": "When using weighted importance sampling, why might the error initially increase before decreasing during learning?", "169c39ae-0e1b-47d3-a8c0-9d8645c9d5f5": "What is the defining characteristic of a diagonal matrix D?", "b886af9b-d6b7-49e5-bc1b-0768a1a9dd7c": "If v is a vector, how can we construct a diagonal matrix diag(v) using the elements of v? What property does diag(v) satisfy with respect to matrix-vector multiplication?", "ab564f18-0020-490a-a2c3-a2eb10124108": "According to the passage, why does the Laplace approximation fail to provide good results compared to the evidence framework?", "0ee46078-1612-4455-9e29-4417682e3c42": "What are the two approaches discussed in the passage that can be used to maximize the log evidence?", "96463aa2-d299-4296-a8fe-2baf28c357ce": "According to the text, when are two variables a and b d-separated given an empty set?", "9ccc650b-7ec3-402b-b95e-27ca2e161f52": "The text states that some variables are no longer d-separated when we observe some variables. Give an example from the text of two variables that are not d-separated given a third observed variable.", "d3476975-f291-4dbb-8da4-612ef9755eda": "What is a key challenge when writing high-performance GPU code?", "a7b9fe60-b1c0-4cda-8a31-dc7bffa2ef07": "According to the context, why might researchers want to build a software library of operations like convolution and matrix multiplication rather than writing new GPU code to test each new model?", "d0374040-3307-4722-9d65-81e8fe102f3b": "What was the structure of AlphaGo's value network compared to its supervised learning policy network?", "45c0da30-e938-4d48-ab22-0250bd66f5b9": "What two-stage process did the DeepMind team use to train AlphaGo's value network?", "840a950c-b09e-4527-a025-3a8499e347d1": "According to the context, which author proposed using kernel functions for nonlinear discriminant analysis?", "0573e2fe-e0eb-48bd-b062-e1285c82eedf": "The context mentions Roweis' work on EM algorithms for PCA and SPCA. What book was this work published in?", "aaacbf9f-62fa-40cf-ab06-babd4e1cf38a": "What is the relationship between the regularization parameter \u03bb and the rejection threshold \u03b8 for the expected loss function in Section 1.5.3? Derive this relationship using the calculus of variations.", "87ed6fd5-3e57-40ac-aae4-7d827f9d2b0d": "Section 1.26 discusses minimizing the expected loss for a vector t of target variables. Using the result from Section 1.90 as a starting point, derive an expression for the function y(x) that minimizes the expected squared loss in the case of a vector t of targets.", "59953796-83db-4205-9d0b-25d88bb5a325": "True or False: The number of parameters needed to specify a joint distribution over M independent discrete variables grows exponentially with M.", "12677656-bd23-41f7-bed3-6279db7ff3b9": "Consider a chain of 3 variables x1, x2, x3, each with K possible states. How many parameters are needed to specify the joint distribution if x1 and x3 are independent but x2 depends on both x1 and x3?", "16db5df7-ada0-4212-98e0-885540df5f0d": "According to the passage, how would the problem formulation change under partial observability?", "32c28cf3-be22-4e6f-86b4-c82fe0aa64c4": "The passage mentions four steps for explicitly treating partial observability. What is the first step outlined?", "a3dffec7-e1c6-43d2-978a-2eae8dc388fc": "How does dataset augmentation relate to tangent propagation?", "410e61bf-b39a-430f-9452-e6bfceb1910b": "What does the manifold tangent classifier eliminate the need for compared to tangent propagation and dataset augmentation?", "f67bf8e9-f1b9-4809-ba9b-3e0a2c0066a2": "According to the passage, how does the number of parameters required for a graphical model compare between a fully connected graph versus one with no links?", "792e1d18-1b47-45a1-aa75-ccb049372936": "Consider a chain graph with M nodes, where each node has K states. How does the total number of parameters scale with M and K for this graph?", "ecbf167b-f961-4dc4-87ed-aa507ee10e82": "According to the passage, why does simply dividing by the true standard deviation usually fail to improve contrast for images with very low but nonzero contrast?", "e0390534-4749-48b2-9204-811fd98ecd95": "The passage states that GCN maps all nonzero examples perfectly onto a sphere when A=0. Based on the figure shown, what would be the effect on the mapping if A was increased from 0 to a small positive value?", "ac263d89-e3b2-4a81-8141-9ab204890848": "What are some of the different types of experience that can help humans acquire language skills?", "0409e1da-e2b0-4abe-a948-0719b8ef6ff6": "The passage mentions \"panoramic learning\" as the capability to integrate what types of experience in learning?", "5bcfc2dc-0599-425b-8a03-7d2ca364052b": "What are some differences between conventional state-value functions and afterstate value functions, as discussed in the example of learning tic-tac-toe?", "ff74e105-c8a9-459b-a892-bbd5af09fab7": "The text mentions there are double versions of Sarsa and Expected Sarsa. What does it mean for these algorithms to have \"double\" versions?", "decbebe4-582d-467c-9712-6a50c090b512": "What are the two idealized configurations used to model the flow of oil, water and gas in the pipeline in this data set?", "90af02fb-4d36-4355-9f32-0a63e5edcaa5": "How many dual-energy gamma densitometers were used to measure the fractions of oil and water along different paths through the pipeline?", "3f221b1a-d2d3-4494-b27e-524a9c13ea64": "According to the Dermatologist-level classification of skin cancer with deep neural networks paper, what model achieved dermatologist-level classification of skin cancer?", "e12958c3-c2d6-4999-9f5a-56e09b9a8c39": "The A survey on deep learning in medical image analysis paper provides a broad overview of deep learning applications in which medical imaging modalities?", "443d2602-a852-4815-b14a-3fc2bb732c98": "What is the form of the variational posterior distribution obtained in the derivation?", "7c34d2c1-5baf-4009-ac38-014c0f6720c3": "How does the variational Bayesian approach compare to the Laplace approximation in terms of accuracy?", "1f3e834b-3fa4-49aa-aec2-656ea852d03b": "Who first obtained the policy gradient theorem presented in this chapter?", "3855389d-fd99-47f3-a082-77852b7d0d9d": "What are some of the early results related to policy gradients that are mentioned in the context?", "c1488a2c-4000-41b1-ae9b-47392ccaa4e7": "What publication describes the \"Emphatic TD Bellman operator\" as a contraction?", "408a93b7-656d-4406-a3a9-e57629e97cff": "Which authors proposed the \"Generalized emphatic temporal difference\" algorithm in a paper presented at AAAI-16?", "687fa8dd-a74f-4094-b16f-bcbb3f2d2015": "According to the provided information, what is the relationship between model capacity and training error?", "77fd5df1-f637-46a6-a5c2-9f8ecbfa5095": "The provided information discusses underfitting, optimal capacity, and overfitting. Briefly explain what each of these terms refers to in the context of model capacity.", "ce686405-e30c-4bd1-b16a-c1c7cefbea1b": "What are two key differences between global contrast normalization and local contrast normalization in image processing?", "548f8302-4378-45c0-a2e7-81c2d1750475": "How can local contrast normalization be implemented efficiently?", "fb66661a-1e0a-4b9d-adc8-4be6a4112f23": "According to the passage, multi-task learning can achieve benefits because of what?", "7ea97071-218d-4a54-ab5b-b17d268fbc53": "The passage states that multi-task learning relies on what underlying prior belief about the relationship between different tasks?", "90a7e35e-90d3-4850-92ee-2d52ba7e91fb": "According to the passage, what are some of the goals of Chapter 14?", "78b7ca77-aa4b-49dc-ad50-7445a40fcdb4": "The passage states that actor-critic methods are sometimes referred to as advantage actor-critic (A2C) methods in the literature. What key idea do actor-critic methods build upon?", "1aa59e4f-8f2a-4b5b-b641-b6480304a67a": "According to the passage, what is the maximum number of nonzero eigenvalues that the between-class scatter matrix SB can have?", "a506b3ca-a853-4066-a86a-45a40bfa7786": "What is an example of a linear discriminant model mentioned in the passage, apart from the one based on the eigenvectors of the between-class scatter matrix SB?", "6b65ad17-b653-46ba-b0fc-ecc836bbef34": "What allows the output units in a bidirectional RNN to compute a representation that depends on both the past and the future without having to specify a fixed-size window?", "1288fc71-bbf5-4d11-80e4-cc7f5e3248dc": "How can the bidirectional RNN idea be naturally extended to two-dimensional input like images?", "2147c050-8f9e-49e5-a1b7-75c81ca2c1a8": "What are some of the key advantages of using latent variables and distributed representations in deep probabilistic models?", "ae346998-868e-4cf7-ae53-979e3abb8416": "Linear factor models involve adding noise to what transformation of the latent variable h in order to generate the observed variable x?", "76c58925-1b62-4427-9483-697ffa6873bf": "What is the max-margin constraint used for, according to the passage?", "3455c040-dd6d-48d3-9c7d-57f5d3531276": "The passage mentions two types of models that the max-margin constraints have been applied to. What are those two model types?", "4b90ea9e-4816-4280-8cac-c2bc89e209e2": "What kind of operation does iterative policy evaluation use to produce each successive approximation vk+1 from vk?", "89a25906-45ae-49fa-a81f-0377536d0ad6": "What are the two key components that contribute to the expected value computed in the expected update used by iterative policy evaluation?", "02697309-031e-4fd4-af74-fe49db989552": "According to the text, the gradient of the state-value function does not depend on the state s. What can we do with the right-hand side of the equation for the gradient without changing it?", "fbbbe6f1-1afb-4c5b-9be1-bbfcc21728f0": "The text discusses using a normal (Gaussian) distribution to produce a policy parameterization for a continuous action space. What are the two parameters of the normal distribution that are given by parametric function approximators that depend on the state in this policy?", "03e672d5-5663-40b3-ab28-cfba3408b31f": "What are the two main costs associated with implementing the MLP algorithm?", "b643623a-367e-441d-96c8-0220f038b466": "During backpropagation, what value needs to be stored from when it is computed until the backward pass returns to the same point?", "b9efeb3a-caa4-4de9-9245-512c23a4ccb6": "According to the passage, what is one of the most fundamental open theoretical questions in reinforcement learning?", "f26ad6d1-b9df-4072-9794-66926cc7ef9e": "The passage states that convergence to the optimal policy and value function seems inevitable as the changes to the action-value function decrease over time, but has not yet been formally proven. What important theoretical proof related to reinforcement learning is still lacking based on this statement?", "73d25d8f-6455-4ca1-8186-13ccacb09e06": "According to the passage, what happens to the TD error when the reward is suddenly omitted after learning is complete?", "dcd635ff-ea74-4c78-ac41-1b126c5764a7": "The passage mentions that fewer dopamine neurons generate a phasic response to a fully predicted reward than to an unpredicted reward. What experiment by Schultz et al. demonstrating this is described in the passage?", "38f82012-cb7b-46d3-964d-ff4091d5dd98": "How are the mean vectors \u03bck for each Gaussian component k determined in the EM algorithm for Gaussian mixture models?", "b3215a44-8136-4183-9909-a34759f09147": "What is the form of the update equation for the covariance matrices \u03a3k in the M-step of the EM algorithm for Gaussian mixture models? How does it relate to the maximum likelihood estimate for the covariance of a single Gaussian distribution?", "525c2c32-35c5-493f-8756-1696bfc4a6d4": "What are some ways we can test for convergence of a Markov chain Monte Carlo algorithm?", "f2ac640f-e536-43c7-ab23-8840d955d1e3": "If we have a source of uniformly distributed random numbers over the interval (0,1), explain how we could use it to generate random numbers from a nonuniform distribution.", "144dd180-d28b-4688-aab8-c6de371c2d20": "What are fast weights and how do they differ from slow weights? Explain the key differences in how fast and slow weights are learned and updated in neural networks.", "6fbc191d-bbd7-42c4-b3d0-79b3e021ba4d": "Briefly describe the model architecture of MetaNet. What roles do fast weights and slow weights play in the MetaNet model? How are loss gradients used to generate fast weights?", "ee2ec104-c15c-4a1e-b60c-e4281e088cdb": "According to the passage, how does the TD model view the conditioning process compared to the Rescorla-Wagner model?", "f1e721b9-e29e-4cad-a48a-689007703b5a": "The passage mentions that the Rescorla-Wagner model is a trial-level model. What does this mean in terms of how it deals with associative strengths and details within and between trials?", "35eb2d38-3cf4-42c2-8f3d-8a2dfcb0bea6": "True or False: The Kullback-Leibler (KL) divergence is a symmetric measure of distance between two distributions. Explain your answer.", "3b74803e-deb0-4028-87ec-06ee3b5fc4e5": "Consider the two distributions P and Q. If DKL(P||Q) = 0.2 and DKL(Q||P) = 0.5, which statement is true?", "4a4db1ec-0635-4ecd-8643-6de444a3b8dc": "P and Q are very similar distributions", "b95b21aa-d81f-4924-8462-246eff16988c": "Q provides more information than P", "1f5448ee-9264-4099-a316-25fbebf62084": "P provides more information than Q", "6a93c271-931a-456d-8e4b-85b4029caf75": "P and Q have the same amount of information", "51f9c40d-9da5-4dcc-aba7-0c237da70662": "What method did Tesauro use to train the Neurogammon network? How did this differ from the TD-Gammon 0.0 training approach?", "f9870d06-3370-447c-90cd-f7ba55a0a3a5": "Describe how backgammon positions were represented to the TD-Gammon 0.0 network. What advantages did this approach have over Neurogammon's representation?", "22763cd3-d641-46c4-9fde-3533914a882e": "What is the evidence lower bound (ELBO) a lower bound on?", "7da39974-3634-4f38-8110-c3771d9f353b": "True or False: The evidence lower bound L(v,\u03b8,q) is equal to the log probability log p(v;\u03b8) if and only if q(h|v) is the same distribution as p(h|v).", "b39e1466-4a93-4c7d-a665-eae423bfe854": "AutoAugment is a technique that automatically learns augmentation policies from data. Briefly explain how AutoAugment works by utilizing expectation-maximization.", "34b4ac74-dc7b-4f98-b24a-a53b966a1859": "The BERT model utilizes pre-training of deep bidirectional transformers for natural language understanding. What is one of the main benefits of using pre-trained models like BERT for NLP tasks?", "3652859f-c86f-4b71-9600-036dd7e36890": "Consider a constraint equation g(x)=0 that represents a (D-1)-dimensional surface in x-space. Why is the gradient \u2207g(x) orthogonal to this surface at any point x that lies on it?", "e6439c9a-63fb-4942-a430-0b872e74f21a": "Suppose we want to find a point x* on a constraint surface g(x)=0 such that a function f(x) is maximized. What property of the gradient \u2207g(x) can we utilize to help find this optimal point x*?", "e0ca692b-6ce1-4e91-aa3d-e6e303723484": "What strategy can be applied to essentially any supervised learning problem, according to the passage?", "0f451eb8-8c36-4ac0-b78f-9aa576b85201": "What is one of the key innovations associated with support vector machines that is mentioned in the passage?", "591ba659-dc68-473e-9de9-d8c47ee04e24": "What was a key innovation of TD-Gammon 1.0 compared to previous backgammon programs?", "279dcb08-993c-4bd5-a7f6-25ad411c62c0": "How did the later versions of TD-Gammon, such as 2.0 and 3.0, improve upon the original TD-Gammon 1.0 program?", "f2dc851c-7aa3-41d1-9e50-57da6139f158": "According to the context, what is the advantage of using orthogonal columns in the decoding matrix D for PCA?", "cc417350-eab5-4357-b955-3a0bcfc50288": "The context mentions that to make PCA have a unique solution, an additional constraint is placed on the columns of D. What is this additional constraint?", "0a304db7-0ff0-4e5d-9c59-91d3fda5ad49": "According to the passage, how does parameter sharing in convolutional networks improve efficiency compared to fully connected networks?", "93b9c702-7cb4-4172-9d70-d3eee049d566": "Refer to Figure 9.6. What does this figure demonstrate regarding using sparse connectivity and parameter sharing for edge detection?", "c8574f89-5901-4079-9709-d24671a5cf93": "The paper by Shen et al. (2020) proposes an approach for what two challenges in natural language processing?", "797f223f-f642-4e7d-a7fb-f023c7080d98": "What method did Shleifer (2019) use for low resource text classification?", "d5024378-ffe0-437e-acab-3e9d37443f55": "What is the key requirement on the randomly generated pairs (z1, z2) in order for the Box-Muller method to work?", "89a2e8c9-1e78-420b-a830-021e0ae02cb6": "If y1 and y2 are the quantities evaluated from z1 and z2 using the Box-Muller formulas, what are the mean and variance of their distributions?", "004e5107-e369-4a02-98c9-57afd682257c": "What are the two stages comprising each step of the particle filter algorithm according to the given information?", "c27dfb78-fee0-4903-8c3b-b26ec9812554": "Consider a particle filter with L particles. Walk through the process of obtaining the mixture representation for the next time step n+1 given the mixture representation at the current time step n.", "d6eb0c94-df62-4e80-9530-01792ac7186f": "What important contribution did William Rowan Hamilton make that played a significant role in the later development of quantum mechanics?", "36e48f6b-0b0d-4daf-8274-a9ec67623a77": "What mathematical entities did Hamilton develop that generalize the concept of complex numbers by introducing three distinct square roots of minus one?", "e01d2219-16b9-491b-8296-70723278427c": "What are the two key steps of the EM algorithm?", "a8dfaafd-2ba2-472e-a8c4-3d219b341649": "True or False: The EM algorithm provides a framework for estimating unobserved or missing data variables.", "e014f9d8-6d64-4d11-a42b-f3b1753220ea": "What is the appeal of stochastic gradient descent (SGD) for reinforcement learning according to the passage?", "11924394-afaa-458c-a275-5a2099753f3a": "The passage states that great effort has gone into finding a practical way of harnessing SGD for reinforcement learning. What does the passage say is the \"starting place\" for all such efforts?", "00f80181-c5aa-48d9-8694-e34ce7c9aa69": "According to the Hammersley-Clifford theorem, the sets UI and UF are identical. What do the sets UI and UF represent?", "143bdb23-9de3-49b9-8cb7-04ba50634fbc": "The context states that we can express the potential functions as exponentials, yielding a representation called the Boltzmann distribution. What is the motivation for choosing a particular potential function for a given application?", "486ccf00-fa9a-4439-9198-b8407e068591": "What is the equation for the entropy H(x) of a random variable x?", "49b542ec-75cb-4ed5-ab24-f7c6ed510f0d": "If p(x) is the probability distribution function of a random variable x, and h(x) = -ln p(x), what is the interpretation of h(x)?", "82bc3732-59f0-4dd6-b407-b71fe5d5942f": "According to the hypothesis described, what are the respective locations of the actor and the critic in the brain?", "37bb976e-6800-4b96-8ba6-57690d9960f9": "What modulates the changes in efficacies of the synapses of the medium spiny neurons in the dorsal and ventral striatum, according to the hypothesis?", "4f48fce2-7ef7-45f1-982b-c9d9f06b2eb7": "According to the passage, why is contingent eligibility merely a preliminary step in the credit assignment process for a team learning task?", "c66e5a44-de6d-4afa-82bf-a59ae239fd77": "The passage states that learning with non-contingent eligibility traces does not work at all in a team setting. Why is this the case?", "e86adc25-8059-44a8-adf2-c8f93d12639c": "What are the two stochastic steps described in the passage? Explain the role of injected noise in generative stochastic networks.", "1d96594a-3080-423a-a81a-86407e8dd667": "Describe the 4 steps involved in generating the next state x from the encoded representation h. What role does the decoder play in this process?", "b6537140-852c-4da1-9098-c2df180f80cf": "What is conditioning in the context of deep learning, and how can poorly conditioned matrices cause problems?", "fdd9d7cf-e99d-4dfe-805f-c4416b4aa35a": "Describe the condition number of a matrix A. How does this number relate to the sensitivity of matrix inversion to errors in the input matrix?", "4ae049a5-fcb7-4bd8-a0ff-34a79d24b4cd": "According to the passage, why must word-based language models operate on a high-dimensional and sparse discrete space?", "5559a4dc-dd79-4a9b-ab9c-0be93d40a4bd": "What are some techniques that have been developed to make models of natural language efficient, both computationally and statistically?", "ec68fc6a-6437-4e0f-8032-8147e62bd156": "What technique did Erhan et al. use to project the high-dimensional representation to 2-D?", "29224fdd-191d-4410-b261-2cff6479de09": "The text states that pretraining results in a model with reduced variance compared to no pretraining. What visualization technique supports this claim?", "9c095cd5-6124-4d93-993e-c59c8c354c11": "What are two key innovations of Deep Q-Networks that aim to improve and stabilize the training procedure compared to regular Q-learning?", "3de00416-bcad-4d2a-bb82-c53865a689c1": "Q-learning can suffer from instability and divergence issues when combined with which two elements?", "fa822ee1-10a2-4083-9132-f79aafd0a445": "According to the passage, if we have M basis functions and N data points, with M < N, what is the dimensionality of the linear subspace S spanned by the M vectors \u03c6j(xn)?", "341d1949-c47f-454e-a95c-848f08923b07": "The passage states that the sum-of-squares error is equal to the squared Euclidean distance between which two vectors, up to a factor of 1/2?", "e640a46d-94b6-4025-bb95-a0a349456e5b": "According to the text, what are some of the advantages of microstimulus (MS) representations over presence or complete serial compound (CSC) representations of stimuli?", "4ac3dbe9-6b95-4bf2-8c14-79f150493eb9": "The text mentions that by studying interactions between microstimuli, eligibility traces, and discounting, the TD model helps frame hypotheses about what two things regarding classical conditioning?", "b6362ca9-b168-43e4-9cb1-a243601a51f9": "What is meant by the statement \"We therefore usually settle for finding a value of f that is very low but not necessarily minimal in any formal sense\"?", "9e6af423-095c-428c-a3b7-c08c7ab53628": "Explain the concept of a partial derivative and how it relates to the gradient when dealing with a function with multiple inputs.", "dc809c94-c61e-451d-87bd-3340b6363364": "According to the passage, how were the action values q*(a) selected for each bandit problem in the 10-armed testbed?", "19525766-a78f-4c51-b457-b50bd0b69b89": "What two key metrics were measured over 2000 independent runs for each learning algorithm applied to the bandit problems in the 10-armed testbed?", "896581e4-ee7b-4615-a802-0191c4e31acb": "Compare the standard errors of the mean gradient estimates calculated using 100 examples versus 10,000 examples. Explain why the improvement is less than linear as the number of examples increases.", "f5ae8cb8-0559-4b5f-9f2e-a81c01567400": "What is an efficient way to estimate the expectation that computes the gradient of the loss function with respect to the model parameters? Explain why this method requires fewer examples than computing the true expectation over the entire dataset.", "14458c74-7dcc-4918-894e-649bb17d66ff": "What journal published the \"Natural actor-critic\" paper by Peters and Schaal?", "3814f3ba-114a-4c7a-8454-98f26ace3cfc": "According to the abstracts provided, which paper discusses the role of the hippocampus in imagining future paths?", "7bcb5377-d8d3-4698-9dcd-8c6da5023720": "According to the passage, what is the default value we regularize model parameters towards when we do not know if the correct value should be positive or negative?", "24bff4b3-6d18-4181-bf67-b3d727d2ddd7": "The passage states that if the objective function is truly quadratic, as in linear regression with mean squared error, then what about the approximation?", "d384032d-1c1f-4b0f-9ce9-9f16fcb7e07f": "Fill in the blank: The truncated version of the general off-policy return is denoted _____.", "cc051403-a363-47f1-a38d-9f986061b5e5": "True or False: The eligibility trace for action values, combined with the expectation-based TD error and the usual semi-gradient parameter-update rule forms an elegant, efficient Expected Sarsa(\u03bb) algorithm that can be applied to either on-policy or off-policy data.", "8183cf97-3a66-4c21-8877-7c15409e8f7a": "How does L2 regularization modify the normal equations for the linear regression solution?", "0b4c1fad-d03c-40f4-8052-cb7702c1e9d1": "What does adding a scalar value \u03b1I to the matrix XTX correspond to, in terms of the covariance matrix?", "9a56dca0-a4c0-49bf-8fec-1f3aa82c1266": "What is the relationship between the forward-view update summed over time and the backward-view update summed over time?", "7d561499-bc45-4884-94a4-91a071c6d7f9": "How can the expression from the second sum on the left be written and updated incrementally as an eligibility trace?", "087ebbc4-c920-4389-869b-a3fe28f7f3b1": "According to the chapter by Kehoe, Schreurs, and Graham, what term refers to the phenomenon where more recently presented information has a stronger effect on learning compared to information presented earlier?", "180a1a9f-b589-4738-a156-d9e849c21cf4": "According to the chapter by Keiflin and Janak, dopamine prediction errors are important for which two key processes related to rewards?", "bbc5bf8a-3b98-48bb-9de3-529962e901a8": "What allows the Stochastic Maximum Likelihood (SML) algorithm to be more resistant to forming models with spurious modes compared to Contrastive Divergence (CD)?", "91125487-3c2b-4f9f-b766-c58456c02d08": "In the SML algorithm, what is the benefit of storing the state of all the sampled variables, both visible and latent, at each step? How does this differ from CD?", "26676e9c-62e1-48d6-a2a1-9020734203f3": "What function is used to normalize the vector z of unnormalized log probabilities predicted by the linear layer?", "a6071fce-b4e7-4527-b996-93e5eef9add8": "How does the approach for generalizing to multiple discrete outcomes compare to the approach used for binary outcomes? What stays the same and what changes?", "9301f28f-e809-4ea4-9b14-141646aa19f9": "What happens to the de-noised image if we set the parameter \u03b2 to 0 in the probabilistic model defined by equation (8.42)?", "73cc9db6-8386-4871-814c-98a7e7c704b6": "What algorithm discussed in the passage is guaranteed to find the global maximum posterior probability solution for the image de-noising probabilistic model?", "555937e2-170e-4db5-a127-061e459a091e": "What are some of the key advantages of slow feature analysis (SFA) as a biologically plausible model?", "65fe2bdf-a72e-41e1-8e3a-d86cf1435bba": "How is it possible to theoretically predict which features SFA will learn, even in the deep nonlinear setting?", "c8b7b095-7679-42eb-af00-1a9b946c3e8f": "How does the complexity penalty arise in a mixture model, according to Section 10.4.1?", "f9b72397-0cee-4d07-8663-88fa45f3d687": "Consider a mixture model component for which Nk \u2243 0 and \u03b1k \u2243 \u03b10. What happens to the expected value E[\u03c0k] of the mixing coefficient \u03c0k for this component in the limit of a very broad prior over the mixing coefficients (as \u03b10 \u2192 0)? What happens in the limit of a very tight prior (as \u03b10 \u2192 \u221e)?", "03403be4-ba3d-4cf7-a161-fb6becddb7a0": "According to Selfridge, what are some examples of \"primitives\" in ill-defined systems?", "b3a698aa-b985-4810-9cdd-fd24bc2b04be": "In the technical report by Selfridge on \"Tracking and trailing\", what company was the report made for?", "bca1e5ac-b355-4c04-b3ef-d0e038f71e54": "If an agent discovers a change in its environment that impacts the value of one state, which other state values should be updated?", "da1af6e5-c4f7-4a2e-b3ca-feaab6649a34": "Describe the process of working backwards from a state whose value has changed to update value estimates. What gets updated first, and how does the update propagate?", "c67b5892-7fb8-4042-8225-5d6a403d760f": "What is the n-step TD error defined as in the given information?", "4e55b924-8550-4207-a124-82fa38b149d3": "If t + n >= T, what do we define Gt:t+n as according to the context?", "9746a2ff-c9ab-4c2b-a858-3f8c76ad1bfe": "Consider a hidden Markov model with 3 states. The transition probability matrix A is given by:", "b5ab5c27-4e88-4c39-a5f7-5f519dc19883": "= [[0.7, 0.2, 0.1],", "b1302285-922c-470c-b31b-42214c2b5974": "[0.3, 0.4, 0.3],", "8a723210-e0b5-4b47-bcf6-9bcbfa3f974b": "[0.1, 0.4, 0.5]]", "5670f714-6d52-4cbf-bc3d-6d386de4e566": "is the expected number of transitions from state 1 to state 2 after 10 time steps, if the initial state distribution is \u03c0 = [0.2, 0.4, 0.4]?", "a5c59c59-9598-4ef7-9029-343901551628": "In a hidden Markov model, if an element of the initial state probability vector \u03c0 is initialized to 0, what can we say about that state's probability after running the EM algorithm?", "ad6262e8-c5bb-4495-96f6-4b79c1c4a212": "It will remain at 0", "0e4deab5-213c-47e3-a6cc-c3f36c4045f7": "It may increase above 0", "73182cf6-711a-463a-abb7-5f1303808ae3": "It will be set to 1/N where N is the number of states", "4ea8d0d9-3914-4dca-97b3-1471ce4c3a94": "The EM algorithm cannot be run if any \u03c0 values are 0", "b666eeb5-339f-43eb-ab2a-f50cabfc81ce": "What is a major issue with contrastive methods according to the passage?", "59a546f0-56c3-43b6-84bb-a25985029da0": "According to the passage, what is possibly the hottest topic in SSL for vision at the moment?", "3c87a94b-e5fb-4c20-8e12-152f909180cb": "What are two benefits of using a probabilistic formulation for cluster assignment instead of hard assignments to the nearest cluster?", "a3a38c55-0eaf-4ddb-afc0-4f906fbef46c": "Image segmentation involves partitioning an image into regions. What 3 values are used to represent each pixel in the image according to the passage?", "4b910cc8-59a4-4bd6-af61-93011bd4e348": "What are two reasons machine learning makes heavy use of probability theory, according to the passage?", "e374e075-c812-43fb-8d97-82d8b7593e8b": "The passage mentions that some computer scientists work in a relatively clean and certain environment. What does this refer to?", "95d0c2e1-1776-4fd3-a9a3-e629899daa21": "In a feedforward neural network, what is the role of the activation function h(a)?", "9097e718-c9f6-44f7-887b-5bd3a6a72ace": "How are biases typically included in the weighted sum calculation for each unit in a feedforward neural network?", "fd8117b1-c9a3-46c0-90e5-c6ad1e0d108d": "What dataset is used in the paper to evaluate the performance of the BERT model after losing some tuning data? How much F1 score is lost compared to the full model?", "f65c5dec-83af-4779-8739-9ee67c4d7df6": "The SQuAD 2.0 dataset adds what new type of examples compared to SQuAD 1.1? How does the model handle questions that do not have an answer span in the provided context?", "490a2d69-7c15-4739-8bc2-5ea9f286d513": "According to the definition provided by Mitchell, what are the 3 key components that determine if a computer program can be said to \"learn from experience\"?", "e6782241-fdbc-4a00-b3ff-57dd27b3f1ed": "The context mentions that machine learning enables us to tackle tasks that are too difficult to solve with fixed programs designed by humans. Can you provide an example of a task that would be difficult for a human to manually program a solution for, but that could potentially be solved by a machine learning algorithm?", "4e0d6dc9-84ee-4656-bf99-2bc7fc69408a": "How does dropout regularization compare to training large ensembles according to Warde-Farley et al? What additional improvements does dropout provide?", "9e949a10-72ef-424e-bd85-cb096443da54": "What is an example given of how dropout acts as an \"intelligent, adaptive destruction of the information content\" of the input rather than just destroying raw input values?", "ee45dfee-3b4a-449f-8927-4145d5831416": "In the example gridworld, what makes it difficult for action-value methods to find the optimal stochastic policy?", "deb328d8-1bc0-4a20-96aa-b59d4eb60623": "How can policy approximation methods like actor-critic find stochastic optimal policies more naturally than action-value methods? What aspect of policy approximation methods enables this?", "3802874a-7c52-4209-9b6a-05af23d51f99": "According to the passage, why do some singular values remain above 1 for a contractive autoencoder?", "98cf9beb-1b27-433f-8325-65448a7f26cc": "The passage states that the CAE tangent directions should ideally correspond to what?", "9af96b30-37d0-495a-859e-5079d65e33c1": "What is the name of the inverse function of the logistic sigmoid function?", "a02b50ef-ba40-499c-ad39-0ca39e41a4a4": "Fill in the blank: The ______ function is defined as o(x) = log(1 + e^x).", "ab79ce76-5b56-4c07-b13b-ffdf6c971865": "According to the assumptions made in the context, how are states represented as inputs to the TD learning algorithm?", "78c05ff2-e642-4af6-a87f-4d20181046e4": "What algorithm is assumed to be used by the agent to learn the value function V in the context?", "37636de2-ef4e-4951-97c5-9c956b5def28": "What data structure is studied for efficiently storing training data in high dimensional spaces for nearest-neighbor search in memory-based learning?", "7f0cd882-ef0a-4293-98b0-71f1d570ec81": "Memory-based learning algorithms like locally weighted regression require fast methods for which two computational tasks?", "73a209a4-3237-4d4d-a5fc-76b48ff55543": "According to the passage, what is one way that supervised training of feedforward networks shapes the learned intermediate features?", "1ed00372-d91c-4a93-9743-30126ab7c2a2": "The passage mentions that distributions with more independences are easier to model. What type of representation learning algorithm could we design that encourages the elements of the representation vector to be independent?", "55a65018-4e21-4cba-823e-4280931a1fc8": "What are the four primary value functions that correspond to the four Bellman equations and four expected updates in classical DP methods?", "955e4cc9-e782-483a-8d0b-24d0cf72c947": "According to the passage, how can DP methods and almost all reinforcement learning methods be viewed? What are the two interacting processes involved?", "dfd82168-490f-43cb-8602-1ef9b6bfa985": "Consider an exponential distribution with rate parameter \u03bb. Based on the transformation method described, what function f(z) should we use to transform a uniformly distributed variable z to have this exponential distribution?", "7ea17b46-5765-45e4-b0b7-eff152d251eb": "The Cauchy distribution has probability density function p(y) = 1/(\u03c0(1+y^2)). Using the transformation method, what is the form of the function f(z) that should be used to transform a uniformly distributed variable z to have a Cauchy distribution?", "5ab2156b-7b02-494d-b64a-49a6779c40f3": "What causes the two-dimensional nonlinear manifold for the laminar configuration to be broken into distinct segments?", "823489a6-c6f6-40e4-9f08-84aeb7f029e7": "What is the name of the popular tourist attraction geyser located in Yellowstone National Park that was known for the supposed regularity of its eruptions?", "bcdb1982-9dc2-42b1-b9f7-4d7168ae6b08": "Which methods are the authors comparing their proposed algorithm to in the passage? What are some key differences between their method and these other approaches?", "220e7855-1833-480b-8475-c9f0db628970": "The passage mentions \"predictive sparse decomposition (PSD)\" and \"Generative Stochastic Networks\". Briefly summarize what these methods do and how they relate to the authors' proposed approach.", "0c311203-e725-4f4e-97e6-3d1e9e416b79": "What is one advantage of parameterizing policies according to the soft-max in action preferences over epsilon-greedy action selection?", "28b23555-b742-482a-8c4d-751d073aa4fd": "If we compute action preferences using a deep artificial neural network, where theta is the vector of all the connection weights of the network, what kind of policy parameterization does this represent?", "e6a431ec-1390-439d-8c9f-9d4c56224ed6": "According to the passage, what happens to a synapse when a reinforcing signal arrives while the synapse is eligible?", "7167510c-e803-43e3-801f-70e6471668a0": "The passage states that dopamine neurons project fibers widely to multiple parts of the brain. What does this explain about the dopamine system?", "5daf52fd-c86e-47fe-9a7b-a01b79d82ddc": "In the iterative mean field inference algorithm described, what are two common convergence criteria that can be used to determine when to stop the updates?", "bb35d263-a03c-4619-9525-d6e48f4421b3": "For the binary sparse coding model, what must be done before we can write expressions for the derivatives with respect to hj, according to the information provided?", "ff19a351-ca4a-4ddf-8b63-fb401c8aaee4": "How are the responsibilities in variational EM related to the responsibilities in maximum likelihood EM?", "2b2535f8-bc15-4372-963a-367c37305248": "What is the similarity between the variational posterior distribution and the corresponding factor in the joint distribution?", "4d918627-9ce0-4aa4-a9b2-3fb3083351cf": "According to the passage, what evidence suggests there may not be a clear separation in the brain between mechanisms for habitual and goal-directed learning?", "3423b77d-1b49-4f2d-8516-ae5227bd2bd7": "The passage mentions several researchers who have critically evaluated which hypothesis related to addiction?", "f908ecda-db43-4a43-92bd-bc0cb4e3b74d": "What kind of recurrent network is described in the passage, where the same parameters are used on each time step to iteratively refine the estimate Y?", "39ff6302-5907-4438-97b3-75b4c06cdba6": "According to the passage, after a prediction is made for each pixel using a recurrent convolutional network, what methods can be used to further process these predictions to obtain an image segmentation?", "0151b18a-4f92-4824-bdfa-b1e9e7eae3b9": "According to Section 2, how does the Earth Mover (EM) distance compare to other probability distances and divergences used for learning distributions?", "543a194c-cd6d-454b-a665-0d37db67a45a": "What are two practical benefits of using Wasserstein GANs instead of regular GANs, as discussed in Section 4?", "284cf44c-4ac2-470d-aca1-847e8b2fe4c4": "According to the passage, how many different data augmentation techniques are experimented with for quantitative comparison? What are the 3 levels these techniques are categorized into?", "94d3c7a6-59a1-4c4e-b2c6-1171d51939d8": "The passage mentions 10 commonly used model-agnostic data augmentation techniques. Can you name 5 of them and the level they belong to?", "42504823-85d2-40b0-90db-a66d5e0a091c": "If A is a real symmetric matrix, how can we choose its eigenvectors ui to be orthonormal?", "b13ba168-6228-4b77-9c64-683073c92a31": "If \u03bbi and \u03bbj are two distinct eigenvalues of a real symmetric matrix A, with corresponding eigenvectors ui and uj, what can we conclude about uTi uj based on the properties discussed?", "34cdf519-7235-4837-a5e8-22f1470ce4dd": "What does the policy improvement theorem state in relation to epsilon-greedy policies?", "b32ee66c-5218-45ee-8532-d7979dd338fd": "Fill in the blank: \"For any ____-soft policy \u03c0, any ____-greedy policy with respect to q\u03c0 is guaranteed to be better than or equal to \u03c0.\"", "997ae443-d608-422a-b391-70bfdf5871b0": "According to the passage, what are two problems with using LSTD (least-squares temporal difference learning) for control tasks?", "d384da3c-44aa-4b43-9016-b5613870c874": "The passage discusses two different approaches to approximating value functions. What are these two approaches called? Briefly explain the difference between them.", "4ad52837-0b57-401b-8fbb-bd35192cc231": "Consistency regularization is one semi-supervised learning method mentioned in the passage. What is consistency regularization and how does it work?", "cba64a60-cb67-4bdf-9004-353f8e775d0f": "The passage mentions generative methods as another semi-supervised learning approach for NLP. What are some examples of generative methods for semi-supervised NLP and how do they leverage unlabeled data?", "9e13ea36-198f-487a-be73-1de9b01bbc1c": "According to the passage, why does asymmetric data augmentation (applying transformations to only one branch of the framework) hurt performance?", "5d753b66-6f18-4879-b8d7-f99a3bc0aff2": "The passage states that combining random cropping and random color distortion is an effective data augmentation strategy. Why does the passage suggest that random cropping alone can lead to issues related to color distributionshortcutting?", "2bbab379-39db-4c70-ba13-66c2aa9a59f6": "What are some of the strategies discussed in the section for determining the order of small updates to improve planning efficiency beyond that possible with prioritized sweeping?", "4af34a65-b0df-4555-b6ae-13a03abb61c1": "According to the passage, what are the primary ways that one-step value function updates can vary?", "05432d87-e336-4c30-b48e-28346fc2e978": "What are some of the challenges with deep Boltzmann machines that motivated the development of \"generative machines\"?", "5b019a46-f417-4185-86c6-f294bc16d610": "The context mentions two concurrent works that developed more general stochastic backpropagation rules. Who were the authors of these two works?", "bec4a021-2686-478f-a9bf-79c215393c50": "According to the passage, what are the two main roles that real experience can play within a planning agent?", "c3b3b0b0-bd50-4f6c-8f6e-2e801c199baa": "The passage discusses debates contrasting indirect vs direct learning methods. What are some of the relative advantages and disadvantages of each approach that are mentioned?", "d010bf07-8b60-4ee0-a1c7-60be37d30f80": "According to the passage, what is the sample-average method for estimating action values?", "b5f9adc5-4083-405f-b418-9dd0b45a531c": "The passage states that Qt(a) converges to q*(a) as the denominator goes to infinity. What mathematical rule is this an example of?", "beea41a3-8f59-4408-bbbf-07c0b93d0982": "According to the passage, how do animal experiments show that conditioned reinforcement can facilitate learning with delays?", "aaeeb515-52d5-4a89-8eca-55238ca6b4d0": "The passage discusses an actor-critic architecture that relates to Hull's hypothesis. Briefly explain the role of the critic and actor components in this architecture.", "269fc7a0-988a-423f-b8b4-627d127416fd": "What is the key property of n-step returns that enables n-step TD methods to converge to correct predictions?", "7b4e0a73-49ee-4b35-88c9-9f95a2965114": "How do n-step TD methods relate to one-step TD methods and Monte Carlo methods?", "4bacb566-3231-4fad-9e65-ff2ed7bfea37": "If a probability distribution p has multiple well-separated modes, how should we choose the approximating distribution q to minimize the KL divergence between p and q?", "11f6c84f-663c-4552-80bd-b75ef7df26f2": "Suppose we want to represent a probability distribution by splitting it into many factors that we multiply together. If we have three random variables a, b, and c, give an example of how we could write the joint distribution p(a,b,c) in factored form.", "231c80d5-6913-4bd7-99db-b449b5c7327a": "What is the purpose of replacing the batch of hidden unit activations H with yH'+@ rather than just the normalized H'?", "66d16cc0-5b51-4170-b9c9-49ca411f2100": "The new parametrization yH'+@ allows the variable to have any mean and standard deviation. How does this help with the learning dynamics compared to just using the normalized H'?", "7c7ec3ac-2493-4862-b4a0-20a24c335356": "When extending the Bayesian framework for neural network regression models to classification problems, what output activation function should be used for a network performing binary classification?", "353a3d3e-6136-4428-a7d3-0cab002deaa6": "How does the log likelihood function for a neural network classifier compare to that for a linear classifier model? What key difference arises in the neural network case?", "b5e469be-af49-47ba-a171-9d468982a6f6": "According to the passage, what are some theoretical results that show limits on the performance of optimization algorithms for neural networks?", "2ee9447a-6dad-4adc-9cf2-1887bf994084": "The passage mentions that some theoretical results apply only when the units of a neural network output discrete values. What does the passage say most neural network units output that makes optimization via local search feasible?", "5d190d4c-9aec-486d-a8ef-3b1dedebae2f": "According to the homework policy, what percentage of credit will a homework assignment receive if it is turned in 36 hours after the due date and the student has already used their 3 allowed late days?", "aa63dea9-d637-4dd7-ab10-b14b46dccdd4": "The instructions state that students are required to typeset homework solutions using LaTeX. What is the purpose of having students submit assignments typed in LaTeX rather than a word processor like Word?", "4e23ef5b-6e6b-43ee-b254-a5e034e32be5": "What is the significance of being able to decompose a matrix into its eigenvalues and eigenvectors? How can this help us analyze properties of the matrix?", "2b7f437e-3da0-4227-81fd-19a43e125450": "If A is a square matrix, V is the matrix containing the eigenvectors of A as columns, and \u039b is the diagonal matrix containing the eigenvalues of A, what is the relationship between A, V, and \u039b?", "b0020984-32c6-494d-93b3-53d08d4eec33": "Which workshop or conference was the paper \"Learning to extract relations from the Web using minimal supervision\" presented at?", "bc25094c-5556-429a-95e0-291a099d12aa": "Which paper discusses learning the structure of generative models without labeled data?", "c4c0bd45-3fde-43cc-a6f9-2a2b67ad8228": "What is the key advantage of sequential learning methods over batch learning methods?", "aaabe9a7-5aec-4027-b050-99f19751b7c8": "How does the incorporation of each new observation update the posterior distribution in Bayesian sequential learning?", "84bcc865-98fd-4715-b483-cef3cf5d9c99": "What happens to the variance and bias of the model predictions as the regularization coefficient \u03bb is increased?", "68a3c01a-14d7-433e-97c8-f05b3a8e7b98": "If the goal is to obtain an accurate model that closely matches the original sinusoidal function used to generate the data (i.e. minimize bias), should \u03bb be made large or small?", "e80a76e1-f476-44b5-9b5d-805e140216d1": "What is the key difference between the supervised data experience function and the active supervision experience function, according to the equations shown?", "1a136037-2fa0-4537-a85f-dbf9480f6604": "The formulation for active supervision combines two components in an additive manner. What are these two components?", "70702046-a10a-4f30-a655-e9a6999a09ac": "What happens if we set D to an f-divergence and do not restrict the form (e.g., classifier) of the experience function f\u03c6 in the f-GAN objective?", "621f3945-e0fe-4a99-b9cb-fe4220607823": "Suppose D is the first-order Wasserstein distance and the f\u03c6-space F is a convex subset of 1-Lipschitz functions. What does Equation 6.4 reduce to, as shown in Equation 5.8?", "208240f3-38c9-4a96-838e-af692100b0fd": "What is the form of the likelihood function for the binomial distribution?", "7a12a327-4a13-4e7c-920d-63c0d629a62f": "What property allows the posterior distribution to have the same functional form as the prior distribution when the prior is proportional to powers of \u03bc and (1-\u03bc)?", "a2dd3b52-a53e-4d6c-bd69-a7e7882848b1": "What are the three key cases of function approximation in reinforcement learning that are examined across Chapters 9-11?", "b291a2fc-10e3-4a83-a154-0ec42333569a": "According to the passage, what are the two main approaches to control that are explored? Briefly contrast these approaches.", "88ad704b-b2fd-4dc6-8575-0a50f7a489f6": "What is one drawback of policy iteration that is mentioned in the passage?", "7ae43ff3-7778-462e-b924-0f7628c15345": "If there are more than 10 cars kept overnight at the first location, what additional cost must Jack incur according to the new problem description?", "056524ae-7b22-46c7-8b75-6d05ad63eb5f": "According to the text, what are some of the properties of a graphical model that can be quickly determined?", "ce993d45-8696-46e5-a49d-eb0c73091073": "The text states that the output of each factor in a directed graphical model must be non-negative, but does not have to integrate or sum to 1 like a probability distribution. What constraint must the product of all the factors satisfy?", "3f410f0c-abf6-4866-8063-91e9b5b5dfc6": "What is the form of the loss function Lemb used for representation learning in this approach?", "e6daeadf-0202-45de-b20a-e07daec64ef1": "What are the two steps involved in computing the fast weights in this meta-learning algorithm?", "772c7efa-0d27-4ca9-852a-84c38f0e74e0": "What two datasets were used in the study and what do they allow for modeling?", "5cc94d1c-5c98-4479-9d9c-96e9f9755923": "What four sets of methods were run in the study? How did their performance compare in terms of BLEU score?", "9c59fa03-331d-40b2-9807-507aceb3094d": "What allows RNNs applied to images to have long-range lateral interactions between features in the same feature map?", "8307beaf-77d4-4eb3-8f51-da3a661fd59a": "What kind of architectures can map an input sequence to an output sequence that is not necessarily the same length?", "a646a125-3439-4096-b9dc-78c50ce15dd9": "Which authors proposed a theory of networks for approximation and learning in the provided context?", "6bc5cbbf-7302-4c3b-a3d9-0cdeebb9daae": "What procedure did Polyak propose that accelerates stochastic approximation by averaging according to the given information?", "84462311-2f24-4a12-80b6-ee221888e532": "What is one of the main advantages of using a continuous latent variable model like the one described versus a discrete latent variable model?", "b8a51353-1de5-4ed7-9ef8-a31fb5d9f178": "What are two potential future research directions mentioned for applying the Stochastic Gradient VB (SGVB) estimator and the Auto-Encoding VB (AEVB) algorithm introduced in the passage?", "680a7c55-6e04-49c4-87e4-76e5706a0da1": "According to the passage, what are the main advantages of RTDP over other algorithms for certain types of problems?", "0854ad21-2138-4b4c-a8e8-7014b0f24230": "The passage states that RTDP is guaranteed to find an optimal policy without visiting every state infinitely often for which types of tasks?", "3ee141c3-4f48-4c58-8a67-0c1347b7bffe": "What type of graph corresponds to joint distributions which factorize into the product of the marginal distributions over the variables comprising the nodes of the graph?", "7d22f2a6-1255-4bff-9dcf-20c52c3afbfe": "What is the term used to describe the set of nodes in a graphical model that renders a given node conditionally independent from all other nodes?", "112dcb6a-c927-4b30-8093-c42ba03b549b": "According to the results in the table, how does the performance of IS-BERT on the SentEval benchmark compare to the unsupervised baselines when using unlabeled data?", "2ee08108-39e3-4214-a879-70e1020eb0be": "What methods perform better on the SentEval benchmark than the average GloVe embeddings, and approximately how much better is their performance based on the Avg. score?", "9d2bcb1b-b9cd-4613-99e9-b3ec42457d05": "Using the definition of the multivariate Student's t-distribution as a convolution of a Gaussian with a gamma distribution, derive the expression for the variance of the multivariate t-distribution defined in equation (2.162).", "a2253324-ce9e-41d0-9687-e899a7975df8": "Consider the multivariate t-distribution in the limit as \u03bd \u2192 \u221e. Using the convolution definition relating it to a Gaussian distribution, show that the t-distribution converges to a Gaussian distribution with mean \u03bc and precision matrix \u039b.", "be1a7268-775e-4aa5-8e30-e102b091e198": "Using the information provided, what is the probability that a randomly selected fruit is an orange, given that it came from box r?", "cd06a549-6bd3-4e1c-828e-08c4cb0cc241": "Based on the context, what rule of probability can be used to find the probability distribution over boxes, conditioned on the identity of the fruit?", "8a00709a-88ed-471c-b9ca-bc56697834a6": "What are the two conditional probabilities that allow for efficient block Gibbs sampling in a binary RBM?", "0df71c8f-132a-493e-8700-d3ab7fadd471": "What two properties of the RBM energy function make training convenient?", "77cc3b52-6f64-41c2-b8a0-0759ec09c05d": "What are two perspectives on statistics mentioned in the passage?", "b028d23e-b53f-42c0-bae5-4daa6f4a676c": "According to the passage, what is the difference between a point estimate and a function estimator?", "4a86851a-ba46-455b-9f84-ff84d6158329": "The passage discusses using Fourier series as a function approximation method in reinforcement learning. What are some of the potential advantages of using Fourier basis functions for function approximation in reinforcement learning?", "3db11ff9-b411-4549-8306-f0026397be64": "The passage mentions that some automated selection methods developed for polynomial regression can be adapted for reinforcement learning. What aspect of reinforcement learning might require adapting automated selection methods compared to polynomial regression?", "48c31038-8e2a-4191-affd-8b223df0cc0c": "Consider the integral", "5112f2b7-48ca-4adb-95b7-87efba531cf1": "\u222b\u222b f(x,y) dx dy", "b31640e7-0e33-413d-8d92-f4ed83a51d9f": "is the first step in evaluating this double integral according to the instructions in the context?", "0e03744f-b9e7-48f5-81f0-fa7c93cc40a7": "Given a binomial random variable x with a beta prior distribution for \u03bc, the context states that the posterior mean of x lies between what two quantities?", "0f5a1073-5ec4-4657-b280-cf1b1e23310d": "What are the two key differences between the computational graphs used in the MP-DBM versus those used in dropout, as mentioned in the passage?", "2f3d41fe-36b4-4ff6-a889-cb7ad200f8ac": "The passage mentions that in practical applications, mean field inference is unrolled for several steps. However, the illustration only unrolls it for 2 steps. What does the passage say about unrolling it for more steps?", "0aa01382-b070-4ef4-980e-af933a0ca42c": "What are two key indicators in a model that it may be overfitting to the training data?", "a5c04dcb-a18f-4576-8fb0-88a72f2a9950": "According to the context, what is one of the most difficult challenges in improving the performance of deep convolutional networks on computer vision tasks?", "f1abfc3d-172d-4a4d-a3ee-e62bbccb3ee3": "In graph (a), is the path from node a to node b blocked if node c is observed? Explain your reasoning.", "e62b6d2c-20d2-4c82-b701-431733e0170b": "How do parameters such as \u03b1 and \u03c32 behave with respect to d-separation? Give an example based on Figure 8.5.", "7a7dbafe-f8d8-4874-b69a-9e1b9a30eea0": "Consider a mixture of Bernoulli distributions. After forming the joint distribution p(x,z|\u03c0,\u03bc) and marginalizing with respect to z, show that we obtain the marginal distribution p(x|\u03c0,\u03bc) as defined in equation (9.47).", "267fd41a-fd62-46d5-82e8-a094f9d57340": "For a mixture of Bernoulli distributions, show that maximizing the expected complete-data log likelihood function with respect to \u03bck leads to the M-step update equation given in (9.59).", "099c8f7a-dd36-45cf-b144-79e372c61079": "Consider the conjugate prior distribution for the linear regression model discussed in the context. Express the posterior distribution for w and \u03b2 given the likelihood function p(t|x,w,\u03b2).", "37903be4-cfc8-475a-84f1-2b49a318ee5f": "Using the properties of the equivalent kernel K(x,z) defined in the context, what can you conclude about the rank of the covariance matrix SN if the basis functions \u03c6j(x) are linearly independent and the number of data points N is greater than the number of basis functions M?", "b07d5fba-8d92-469a-98f7-039c39b87fd2": "What is one practical issue when using a full rank covariance matrix for a multivariate Gaussian distribution?", "ec3a794c-de63-46da-9858-fb2784d62a0a": "What type of neural network can be used to model multimodal conditional distributions over real-valued outputs?", "68681e57-df6b-40cd-99ce-242f07ad1cf4": "According to the passage, how does the strength of conditioning typically depend on the interstimulus interval (ISI)? What are the key properties regarding ISI and conditioning strength that are mentioned?", "bf3ec908-749e-4d72-a762-ad21251dd51e": "The passage states that for classical conditioning to occur, the unconditioned stimulus (US) generally must begin after the onset of a neutral stimulus. How does this relate to the idea that after conditioning occurs, the conditioned response (CR) begins before the appearance of the US?", "b957bca6-e632-4ddf-acfb-0cd3ffaac0f9": "What is the form of the function A(m) as given in the text?", "a773f476-6913-43d7-b293-a08a1d44a588": "According to the text, what are some alternative techniques for the construction of periodic distributions?", "326d0ecd-62c6-4dfc-9555-add86a536122": "According to the passage, what are some examples of cases where local descent does not provide a good path to finding a solution?", "3eff0087-2b68-46ba-9086-1265798eab81": "The passage mentions that local optimization moves can sometimes be too greedy and lead to what two undesirable results?", "a7ba5561-1533-4160-817f-568d08a049c0": "According to the passage, who first proposed the idea of pattern recognizing stochastic learning automata?", "acc9755a-ce1e-43a7-ad6f-4d6b09748ac2": "What term does the passage say Barto and Anderson used to refer to the synthesis of nonlinear control surfaces by a layered associative search network?", "cbfac45c-c3ca-4d9d-9984-058e1139a7ab": "According to the passage, how does the succinct experience (SE) framework allow expressing arbitrary relevant information to supervise learning?", "ae856a43-2db8-4cd4-8e2c-cbaeeef5c419": "What are the three principled terms that make up the general formulation of the SE framework, according to the passage?", "cfef35dc-bdc9-420c-bf21-e32d28a82902": "What is one of the key equations in reinforcement learning that decomposes the value function into immediate reward plus discounted future values?", "5d89a809-45de-4fd8-b541-b06802d8b3f9": "According to the context, what are two potential actions the agent could take upon waking up, along with their associated rewards?", "64d1c106-fbce-4749-a9a5-374f784a9789": "How do convolutional neural networks and recurrent neural networks differ in their approach to parameter sharing when processing temporal sequence data?", "68acff08-159a-4f84-8800-5988dfafc220": "What are two key differences between how convolutional neural networks process temporal sequences versus how recurrent neural networks process temporal sequences?", "d05458c8-c062-44ce-95bd-f92bd6591c3d": "In few-shot classification, what is the goal when training with a small support set?", "862bf629-d3a9-407e-9a4a-329b40d78a08": "How can we modify the optimization procedure during few-shot classification training to encourage fast learning on new classes?", "00158789-4181-4b0f-9bca-3e7e222c7e73": "Using the mean value theorem, explain how we can quantize a continuous variable x into discrete bins in order to define an entropy over x.", "396cbf1d-4424-4c15-be0a-e3891a660253": "Derive the expression for the entropy H of a discrete random variable X that can take on M equally likely states xi. Explain why this entropy is maximized for a uniform distribution over the M states.", "22ad5ca5-0cb0-4d05-aa34-c095d982409b": "What are the two main advantages of back-propagating through approximate inference in the MP-DBM compared to the original DBM?", "a1a7fe8a-5122-4633-b463-dc24c69869b4": "According to the passage, why does mean field inference in the MP-DBM perform better as a classifier compared to the original DBM without special modifications?", "91a56a50-8a5e-4047-84d9-858c5c394311": "According to the passage, how does the critic in actor-critic methods help address the credit assignment problem?", "fd949ada-a506-4f57-8ec1-67d499c9b005": "What is the core idea behind the Rescorla-Wagner model, according to the passage?", "38a218f1-86f0-4d93-8df2-c014bea6ef76": "What are the three terms that the expected squared loss is decomposed into according to the equations?", "a1526356-269b-4e19-ba59-8a6901919f25": "When fitting models to the sinusoidal data set with 100 datasets each containing 25 data points, what are we varying across the datasets?", "1adf4d6a-e8b5-4929-a88e-2f3e0201fc44": "According to the passage, why can we not simply compute and subtract off the mean when centralizing the projected data set \u00a2(xn)?", "eb6cb7ca-b582-49d2-b5f1-1a014a0cb02d": "The passage states that \"the standard PCA algorithm is recovered as a special case if we use a linear kernel k(x, x') = xTx/.\" Explain why using a linear kernel results in standard PCA.", "1b8d3743-87d9-4256-8d2e-534b83539381": "What is the significance of the structure of the message passing equation in (8.55)? How does it allow the outgoing message \u03bc\u03b1(xn) to be evaluated recursively?", "9a27f640-9318-4bb1-acea-6a444fdee889": "True or False: The normalization constant Z in (8.54) requires O(N^2) computation to evaluate by summing over all possible states. Explain your answer.", "f75929a5-572e-4f29-a27d-caeea84b46d8": "According to the passage, what are the two sources of experience for the reinforcement learning method used in Dyna-Q?", "9deba0a3-d672-4ca3-878a-d081e0be949c": "The passage states that \"learning and planning are deeply integrated\" in Dyna agents. What aspect of the Dyna architecture allows learning and planning to share machinery?", "10b1a3b4-6bb1-4016-91c4-17c069c34685": "According to the passage, what is one of the major reasons for the development of the TD algorithm?", "71909ad0-ea66-4ffd-8f01-e142c77c08b9": "The passage mentions that the properties of an animal's conditioned responses depend on certain factors. What are the three factors mentioned that the properties of conditioned responses depend on?", "62b616e4-0975-4bce-828c-8dc7f623a93a": "What is the main difference between n-step Sarsa and the algorithm described in the passage?", "c94afc1f-5fd8-42ea-abfe-39597658ae2b": "How is the n-step return redefined in the algorithm described in the passage compared to standard n-step Sarsa?", "c748a525-80b1-4fb9-ab34-2229b4990bc5": "What are some of the desirable properties of the Wasserstein distance as a divergence metric, compared to other divergence metrics like KL divergence?", "5a23b83a-d2fe-4c09-a227-fdff5a3d5e06": "Based on the given context, how can we write the first-order Wasserstein distance W1 between distributions q and p using the Kantorovich duality? What is the constraint on the function \u03c6 in the formulation?", "f4d128e1-7460-4730-93da-e699b9281f2d": "According to the given information, what is represented by the green contours in the diagrams?", "0db91684-d427-4610-b3b9-e595ebbe08ce": "After initializing the factorized approximation q\u03bc(\u03bc)q\u03c4(\u03c4), what are the next two steps in the iterative scheme to find the optimal factorized posterior distribution?", "c713bb83-8502-4526-9219-00cb14ee2002": "What can happen if we train a deep autoencoder architecture with a penalty on the Jacobian of the entire deep model, compared to training each layer separately to be locally contractive?", "1d81dfb4-39e7-42f0-abcc-f4bc869287bf": "What is one practical issue that can arise with using a contraction penalty during autoencoder training? Describe a hypothetical scenario that illustrates this issue.", "a91630f5-b2f6-42a8-887a-6f91bdab7a19": "According to the passage, why can we not conclude that a variational approximation did little harm to the learning process even if the gap between L(v,\u03b8,q) and log p(v;\u03b8) is small after training?", "53a1a731-20d2-40ae-a997-e0971a1a9277": "The passage states that to measure the true amount of harm induced by a variational approximation, we would need to know what?", "02c6dedc-0b6f-4f0f-8989-b7f0ff224d7f": "According to the passage, how does deep Slow Feature Analysis (SFA) compare to other learning algorithms in determining the features it will learn?", "fd1b095f-3c9c-435c-a2b8-b726ad685003": "The passage speculates that the slowness principle may be too strong of a prior. What alternative prior does it propose could potentially work better?", "94422c40-ebd0-4420-8313-298548f929e3": "What is the key mathematical object that defines a Markov chain?", "e0ea561b-8127-44c3-bf3b-fa45b97b7ad6": "When running multiple Markov chains in parallel, what distribution represents the states x(t) of the different chains after t time steps have elapsed?", "d4d02b9b-6457-4d3d-8831-03f0fc9bb6a0": "According to the passage, why does one-shot learning work well when using a deep representation?", "8b631a9e-8d2b-440a-bdf6-277fead49fe6": "The passage mentions two types of extreme transfer learning. What are they and how do they differ?", "bc4d44d4-1b47-454b-9d2e-85c02c61bb12": "According to the context, what assumption does the naive Bayes model make about the feature values conditioned on the class Ck?", "0711823d-1b91-4e77-af9d-9a2cec3dfe0b": "The context mentions that a general distribution for binary features xi \u2208 {0, 1} with D inputs would require a table of 2D numbers for each class. What reason does it give for seeking a more restricted representation than this general distribution?", "3b500158-1614-4fe2-ab35-4a855c05a2ab": "According to the passage, what was one of the applications for hierarchical Bayesian models discussed by Blei, Jordan and Ng?", "ea65f6a4-2f80-42a8-9aba-a2972600bcdb": "The passage mentions a publication by Blum regarding multidimensional stochastic approximation methods. What was the name of the journal that this work was published in?", "f07fbfaa-709c-460e-afd7-ff8ae230184a": "According to the passage, what is regularization defined as?", "1565a431-c524-499a-8ad2-a347cd63be48": "The passage mentions that regularization strategies can involve adding extra constraints or penalty terms to the objective function. What is one reason given that carefully chosen constraints and penalties can improve model performance?", "5da4c9e3-382a-4e84-ac43-f8a44d38a2be": "What is the aim of considering small blocks of adjacent pixels, such as 5x5, when developing an image compression algorithm using K-means clustering?", "54a697ca-518a-4017-b08d-ef068c7d7094": "What does the introduction of a K-dimensional binary random variable z allow us to do when formulating Gaussian mixture models?", "20b04b1c-9c50-4bbe-81a6-ad47ad660975": "What is the main difference between PCA (principal component analysis) and the Fisher linear discriminant?", "7253a0fd-9b35-434e-91cf-5acf5f1b5b2d": "How can PCA be used for data visualization? What are the Cartesian coordinates used to plot each data point Xn when projecting onto a two-dimensional principal subspace?", "15be8bc6-1dd7-4b2d-b725-4985491c9d70": "According to the context, which researchers published a paper on \"Associative search network: A reinforcement learning associative memory\" in Biological Cybernetics in 1981?", "17817ecd-55b6-4fe1-996b-9548b23fe571": "The context mentions research on simulation of anticipatory responses in classical conditioning by a neuron-like adaptive element. Which researchers published this work in Behavioural Brain Research in 1978?", "0c6c7bd3-9955-4d80-8f43-c88dce06139a": "What algorithm can be viewed as an application of dynamic programming in the context of graphical models?", "62348ecb-4922-4622-ae5b-10b913ba1b8e": "Consider a simple joint distribution p(x, y) over two binary variables x, y \u2208 {0, 1}. Why is xmax generally not the same as the set of x\u22c6i values that individually maximize the marginals p(xi)?", "9679ebb4-0db7-49ac-a73c-9c78b5beb818": "Derive the equation for the optimal baseline b*(w) (Equation 20.68). Start from the variance formula for (J(y) - b(w)) and show the steps to minimize it with respect to b(w).", "c39ae23f-7fb5-4bf6-bd15-fb536a44b7e3": "How does the gradient estimator in Equation 20.69 improve upon the naive gradient estimator in Equation 20.65? What specifically makes b(w) better than a global constant baseline b?", "347d1c0f-c9d2-4d1b-93e4-76dcb818676e": "How does Reptile differ from MAML, even though both rely on meta-optimization through gradient descent?", "4dc81b77-a531-4388-8808-9e9fe1d8d85c": "Explain the Reptile algorithm. What are the key steps it repeats in each iteration?", "5f0cb2be-94cc-4b25-9e4a-0b2b7059bb16": "According to the passage, what happens when we have non-adversarial labeling functions and an optimal generative model?", "a970a740-b703-44e7-99c6-4253d72a759f": "The passage states that with high label density, the expected optimal advantage will have an upper bound that falls quadratically with what?", "ae0c9d03-c89e-4ab4-a0da-046de1ccae2a": "According to the passage, what are two ways to try to optimize your policy against an opponent in a game like Tic-Tac-Toe?", "d07f09ac-0d8d-4295-b889-99bbe521eb9c": "The passage mentions evolutionary methods could be applied to this game playing problem. What are a couple examples it gives of how an evolutionary method could work to optimize policies?", "f6db817b-7aa6-44c6-bc02-195367d134f8": "What is the key difference between episodic and continuing tasks?", "95e6f436-f31b-44ec-9a5b-cd273c458f45": "In episodic tasks, what are the differences between the set S and the set S+?", "4d98c14c-b31e-4a88-84dc-fb2f13c1973f": "The text mentions that decision-time planning is useful in applications where fast responses are not required. Can you give an example of an application where decision-time planning would be a good approach?", "5b358839-3f0f-453b-a3eb-12581b5a74ed": "The text discusses doing planning in the background to compute a policy that can be rapidly applied to new states. What are the advantages of this approach compared to decision-time planning?", "6580b484-5254-40be-9375-0e0c097ba7a2": "According to the passage, what is one way that latent variables can be useful in machine learning models?", "70c0602d-9903-46b2-bfc1-0a9c60715512": "The passage mentions that deeper models and models with different kinds of interactions can create richer descriptions of the input compared to simple probabilistic models. What are two examples of \"richer descriptions\" that could be learned?", "32a10e20-5ced-4fbe-b83b-2139bbd915a7": "Which paper discusses using expectation maximization to perform joint inference across multiple natural language processing tasks?", "18c5602a-3049-489a-8046-f4ae402f720c": "Which author proposed a formal computational theory connecting creativity, fun and intrinsic motivation?", "21e7abfc-f0d6-43ba-84d1-789be9fa9d02": "The critic learning rule depends on an interaction between what two factors?", "81f214c6-ad3b-47a1-b77c-6a43b9fc3ac5": "What are the three factors that interact in the actor learning rule?", "e58f0980-9bd7-4179-95fb-98cc8dc8b0ff": "What does the Hessian matrix represent?", "733e95fc-4055-4355-b345-1c664ff453d8": "If a function has continuous second partial derivatives, how are the differential operators \u22022/\u2202xi\u2202xj and \u22022/\u2202xj\u2202xi related?", "d0619a45-7cde-4e10-8c30-42c8817b9ad0": "According to the passage, why is it better to parameterize a Gaussian distribution in terms of precision rather than variance when using a heteroscedastic model?", "fae3f0c6-ebc7-4568-ae42-01f684bb2eb3": "The passage mentions that formulating a multivariate Gaussian distribution using a diagonal precision matrix works well with gradient descent. Why does this formulation result in well-behaved gradients?", "e78a3798-e3e6-4b5c-9744-fb88486d4f2d": "According to the text, what are the two important differences between Bayesian estimation and maximum likelihood estimation?", "32d6cbc2-5f9f-43ad-b284-942ed423bcaa": "The text states that in Bayesian estimation, predictions are made using a full distribution over \u03b8. What equation shows how the predicted distribution over the next data sample x(m+1) is calculated based on the posterior distribution over \u03b8?", "74e68fa8-45a6-4bac-97cd-ba98eb687717": "What is the key difference between the potential functions used in undirected graphical models versus directed graphical models?", "b8c49803-8329-4e66-95f4-68a7d35e9e12": "If we have both discrete and continuous variables in an undirected graphical model, how do we properly normalize the joint distribution p(x)?", "ea0ef91e-08e8-4797-8aa4-1300e0830006": "What is the main idea that autoencoders exploit, as described in the passage?", "427b0547-a49a-4e87-93fc-136ba20f042a": "According to the passage, when the norm of reconstruction error is large, what can be done to significantly increase probability?", "e7620ac7-fbf0-442d-a98b-138d22ae0493": "What is the main difference between on-policy and off-policy tabular algorithms when converting them to semi-gradient form?", "7f2b83e3-9901-4756-b643-b9334244b03f": "How does the semi-gradient form of Expected Sarsa differ from other off-policy algorithms like semi-gradient TD(0)? Why is this difference appropriate?", "fe2d5073-8b9a-4dce-91c0-e7771eadd302": "What algorithm is typically used to train Restricted Boltzmann Machines (RBMs) according to the text?", "bcc29071-8f4d-43f6-b9a5-ad14bab66332": "The text states that Persistent Contrastive Divergence (PCD) training of a Deep Boltzmann Machine (DBM) will typically result in what regarding the model's parameters and performance?", "36fc9a38-6ac2-4c7d-95b8-d1254cde39f4": "Derive the equation for the log marginal likelihood, equation (3.86), by first marginalizing the joint distribution over w and then simplifying. Show all steps.", "bf242d37-ba68-4610-a284-0ad09ebd26ad": "Starting from equation (3.86), show the steps needed to derive the re-estimation formula for \u03b1, equation (3.92). You may utilize the identity in (3.117) if needed.", "4fbf68e6-ff67-40e5-b17d-18913d561f71": "What was the key insight that allowed for progress to be made in reinforcement learning research, according to the passage?", "f3aa18e5-1932-4e13-8189-3e0554bbc5e5": "According to the passage, how did early work on reinforcement learning relate to later work on topics like pattern classification and supervised learning?", "4a4ae09b-7c64-40f1-8e92-56fbd7134e9a": "One of the advantages of eligibility trace methods over regular TD methods is that they can learn ________.", "07f0eb80-05af-4b9f-8b8b-7fecfc7f53b4": "Eligibility traces make TD methods more like __________ methods. This can be advantageous in ________ tasks where bootstrapping may not be as effective.", "40f4c5a0-d9c1-4149-b749-45374369939a": "According to the passage, why are methods that cannot easily handle nonstationarity less suitable for reinforcement learning?", "296f574e-a837-4b80-a625-c3b6784fed7f": "The passage mentions that with function approximation, an update at one state affects estimates at many other states. Why is this the case?", "d6a8c5b4-4000-4683-b8e6-2facdef8c450": "What is annealed importance sampling (AIS) useful for according to the passage?", "082e27a5-4d4a-40be-bb34-6dd3ff843405": "What is the sequence of distributions used in AIS meant to do, according to the passage?", "a8158de8-c43e-4f3b-bc24-022c25ff85fc": "According to the context, how are the input vectors x represented using vector notation?", "71fc8a5f-c37b-4253-94a7-7c0b4fbaf84d": "What matrix is determined by minimizing a sum-of-squares error function, according to the context?", "ad485bf9-3a4a-4d0d-b748-0a67207059d9": "According to the passage, why is computing the marginal probability of a general graphical model ##P hard?", "c77dee8d-f3fa-43e4-ab3f-73bf37f0d409": "The passage describes constructing a worst-case graphical model for a 3-SAT problem. What aspects of the graphical model construction allow it to encode the 3-SAT structure - specifically the clauses and whether they are satisfied?", "78af359f-f8f9-48b4-bcdd-4b46871364a8": "According to the passage, what transformation allows us to generate random numbers from a uniform distribution to one that follows z = b tan y + c?", "718b5fc3-1d58-4d7b-b65b-e8a965a11d62": "The passage states that for log concave distributions ln p(z), we can construct a suitable envelope function by evaluating ln p(z) and its gradient at some initial set of grid points. What property of the resulting tangent lines allows us to construct the envelope function?", "f037e45a-a0d5-49fa-8c30-2301f8df8a7c": "According to the passage, what are the two main challenges of off-policy learning with function approximation?", "577de768-e8d0-488b-a5ad-f4d45079e823": "The passage mentions two general approaches that have been explored to deal with the challenge of the off-policy update distribution. Briefly summarize these two approaches.", "d85e8d40-9d16-431a-b9ac-5e6e28429176": "What is the purpose of subtracting a baseline from the return G in the REINFORCE algorithm?", "f69c90d4-2f13-4814-93df-e7dd21b46c93": "Explain the difference between the Actor and Critic components in an Actor-Critic reinforcement learning algorithm. What does each component try to optimize?", "a451f093-a039-40a6-b31e-3309dab77b3a": "What is the decision rule that minimizes the expected loss according to the provided information?", "2ae43180-9cc8-4379-aacc-38cbe321fe48": "In the regions of input space where we are relatively uncertain about class membership, what happens with the posterior probabilities p(Ck|x)?", "e681a56f-ccc4-4148-ba0a-9f1d97be2905": "According to the passage, extending reinforcement learning to function approximation makes it applicable to what kind of problems?", "4cb8b76b-774b-41fb-87c5-2614b0095bde": "The passage states that theoretical results for methods using function approximation apply equally well to cases of what?", "c1f45874-6626-40ba-bcac-f6ff8b132c8f": "What is represented by the vector \u03c6i in the expression for C where \u03c6i denotes the ith column of \u03a6?", "f98fb981-8103-4463-ac65-6130b61efeaa": "How is the quantity \u03bb(\u03b1i) defined, and what does it contain?", "4e3ff7b5-15f5-48ca-a36d-6ed56bf4148b": "What is the intuition behind using a weighted sum of n-step TD targets rather than picking a single best n?", "651f21f8-dcbc-42d1-945e-00aea6b27c60": "True or False: In TD(\u03bb), the weights given to n-step TD targets decay by a factor of \u03bb with n. The more steps we look into the future, the less confident we are, similar to discounting future rewards.", "fd6e4583-d877-4fbc-a244-45b495ab1aaa": "What assumption enables us to describe the data-generating process with a probability distribution over a single example?", "c2e47959-518f-4d82-bd66-41ec6aaac411": "True or False: The expected training error of a randomly selected model is equal to the expected test error of that model.", "0ac5b531-ff17-47d1-9587-43d92214200b": "What does the parameter 'y' represent in the reparameterization of the energy function? How is it typically chosen?", "68d848f7-6136-4b58-9d4a-2445b6f8a1b9": "How does the centering trick/reparameterization of the energy function impact stochastic gradient descent applied to the likelihood? What are the key benefits it provides?", "da55305b-ca24-456e-bf41-142c5680f377": "The context mentions that GPT and BERT have differences in some aspects of their pre-training, like the use of sentence separators and classifier tokens. How do these differences in pre-training contribute to the improvements seen in BERT over GPT?", "f9df381f-e5c1-42d3-8cd9-ee80009751b9": "The context describes some ablation experiments done in Section 5.1. What was the purpose of these experiments and what did they demonstrate about the source of BERT's improvements over GPT?", "57b022d7-1e5e-4619-a43a-3704101d5a25": "The log likelihood function helps maximize a function by converting it to what equivalent form?", "afca4827-490a-47f7-9e54-f4afcd9bc5e3": "What are two benefits of taking the log of the likelihood function according to the given context?", "f83ce48f-f8df-4074-8ea5-f56142f005c0": "Ratio matching can be useful for dealing with what kind of high-dimensional data?", "dcd7e685-dd60-49e5-8ac1-4d731ad2d0ce": "What method did Dauphin and Bengio use to overcome the challenge of applying ratio matching to sparse data like word count vectors?", "25c8ed68-fbd4-40d6-943c-1c4e16518a2e": "The text states that MSE is usually not an appropriate cost function for modeling binary data. What are some more appropriate cost functions that could be used instead of MSE for modeling binary data in practical applications?", "a1591b60-11be-4335-a09b-099d3901bb54": "The text shows that a linear model results in w = 0 and b = 3 when minimizing MSE on the XOR function. Why is a linear model not able to represent the XOR function?", "97fde540-32ed-4541-aae7-4aefbd5a555b": "According to the analogy described, if we have a collection of data points in two dimensions and want to find the one-dimensional principal subspace, how can we visualize this?", "f565018e-8679-4955-9ed5-8be1caa93694": "In the analogy, what property of a spring is used to determine the energy between a data point and the principal subspace rod?", "e9cd92c2-f2ff-4ae8-be87-238ca5e8b512": "What were the three actions defined for the angle of attack in the interface between the agent and environment in the Reddy et al. paper?", "fe82971c-8049-4266-a4b4-119fb32ba967": "What were the constraints placed on the bank angle in the interface between the agent and environment in the Reddy et al. paper?", "766c9b30-7e05-4d5f-ad71-f5fc5e3fca9f": "According to the passage, who typically selects the tasks that a learning agent must master? What limitation does this impose?", "5612c390-9911-4b54-8412-1b3efbb086b6": "The passage mentions auxiliary tasks, GVFs, and options as examples of what an agent might choose to master on its own. Briefly explain one of these concepts.", "b4777406-e255-45c6-bc67-3f03c5ad45a1": "According to the passage, how can we control a model's tendency to overfit or underfit data?", "3a4de873-48dd-4ae1-bd3e-7c88d2cdf79a": "The passage mentions that we can regularize a model by adding a penalty to the cost function. What is the name of the regularizer that is added in the case of weight decay?", "c0d14ca2-38c7-400e-acf9-dbdf57cab735": "According to the passage, what are two rare cases where changing the weights in the lower layers can affect the output after batch normalization?", "3eeab0d7-ac48-4761-8a2c-c15854af0591": "The passage states that with batch normalization, the output y can be learned as a simple linear function of whit. Why does batch normalization make the learning simpler compared to a model without normalization?", "9323a2a4-a9dd-4b21-bcf8-b006a4c1c60a": "According to the passage, how can RNNs model dependencies between distant y values in a way that other models may not capture?", "e83c1d9f-61ae-4045-8555-d772a2f7a4fb": "The passage mentions two ways to interpret RNNs as graphical models. What are these two interpretations?", "8b13c9d1-591c-4737-bfcc-af4ef606fa8b": "The paper by Huszar (2015) discusses issues with which training method for generative models?", "711c36df-7119-409f-a665-922c3e4297a2": "Kakutani's 1941 paper provides a concrete representation of which mathematical spaces?", "9dcd0a7e-c445-4c8d-b4c3-25402ff5e48f": "According to the passage, what are some examples of transformations that can be applied to images in the training set to improve generalization?", "056a3970-6bd7-4d36-a444-cb93a02273c3": "The passage states that one must be careful not to apply transformations that would change the correct class when augmenting a dataset. For optical character recognition tasks, it gives examples of two transformations that should not be used. What are those two transformations?", "34bd2fed-4c1d-4f34-b7a1-71cbca08ba11": "What publication provides an overview of reinforcement learning in continuous state and action spaces?", "0e26d3c3-72c2-4e8c-b07e-c1b4b2b43446": "Which authors proposed using neuro-dynamic programming for retailer inventory management?", "71ac7a72-be9b-4813-8838-f9fa18363264": "What method did Williams use to show that a team of Bernoulli-logistic REINFORCE units implements a policy gradient algorithm with respect to the average rate of the team's common reward signal?", "311dbfda-4d74-4742-8e04-17f773af3e77": "How does a multilayer team of Bernoulli-logistic REINFORCE units learn, according to the passage? What process used in error backpropagation is replaced in this method of learning?", "1efbe7b2-0cce-4d32-b509-e1c0435d53db": "In the maze example described in the passage, how were the initial changes to the model characterized?", "40f9c162-06eb-459e-8684-b870ead9898c": "According to the passage, what are three potential reasons that a model may be incorrect?", "aa87bb16-fe3d-4576-b34b-ad62cd63b561": "What is the main idea behind the delta-bar-delta algorithm for adapting individual learning rates?", "b615b294-4670-4ffc-9305-c468cfbe8007": "What are some of the incremental/mini-batch based methods that have been introduced more recently to adapt learning rates of model parameters?", "e38489c4-248b-4d33-ad6b-bfa4acb904d9": "What is the form of the log likelihood function for the probabilistic PCA model?", "d354ccd0-32a0-4b3c-a1fa-5f0d67919fcc": "How can we find the maximum likelihood solution for the mean vector \u03bc in the probabilistic PCA model? Explain the steps.", "a78b972a-48a4-4995-b53b-99407b62e90a": "What are the three approaches to solving decision problems listed in order of decreasing complexity?", "249617d6-61b5-4acc-b30d-50356fbfc27d": "What is the difference between generative and discriminative models?", "97340b29-c870-4139-aaf7-c04bec0120bf": "According to the passage, how has reinforcement learning proven useful in understanding animal learning and behavior?", "f521eab4-907f-4dc1-89f7-57e3e87140e2": "The passage mentions that some of the correspondences between reinforcement learning and psychological learning theories arose independently in their respective fields. Why does the passage state that these connections are especially meaningful?", "07f82b0b-989b-4e1a-9fa9-9330347889dd": "What are the two major advantages of unfolding a recurrent neural network into a feedforward network?", "16ae4bb8-693f-4d15-b146-dd516c9c3052": "If we unfold a recurrent neural network for T time steps, what will be the input to the network at time step t?", "c4fde435-bd84-4583-9875-144f176b0815": "What two components make up a sigmoid output unit?", "b2586ff2-82bc-47b2-81f8-b92c4a59c9a0": "How is the unnormalized probability distribution P(y) constructed using the value z from the linear layer?", "2ba3db0a-ef22-4198-a11e-1823ec412d47": "What does the term \"back-propagation\" specifically refer to in the context of training neural networks?", "dbdb270d-afb8-47d6-80f1-4abd227fa527": "True or False: Back-propagation can be used to compute derivatives and gradients for any function, not just for multi-layer neural networks.", "2713009d-b832-49e7-908e-5a2197b6c9f5": "According to the passage, why is exact interpolation of target values undesirable when using radial basis functions for pattern recognition?", "40a3a0a5-d974-4773-809d-c1a04aab80af": "The passage states that the optimal solution for a sum-of-squares error function with a regularizer is given by an expansion in what?", "3e562f52-d9ed-4e52-a235-04aa54189868": "According to the passage, under what conditions can the EM algorithm converge to local minima or saddle points?", "4609c7bf-6056-4d01-91fd-e67ea88b3c8b": "What is the difference between the EM algorithm and the Generalized EM (GEM) algorithm in terms of how they select the next parameter value \u03b8?", "f9110bb1-649d-41d3-882c-9ecfffa914ec": "The simulation of the classically conditioned nictitating membrane response by Sutton et al. demonstrated which of the following?", "8d6d0690-af6d-4114-815f-5c1725231fb8": "Moore et al.'s study on parameter stability in the TD model of complex CR topographies was presented at which of the following conferences?", "98d93f8f-51d0-4527-81b8-988a2e35d761": "What is the term used in dynamic programming (DP) literature to refer to computing the state-value function v\u03c0 for an arbitrary policy \u03c0?", "090f4ae2-4275-4467-82dc-7a64b1660d3d": "According to the text, what two conditions guarantee the existence and uniqueness of v\u03c0?", "890bbebe-5052-4875-9667-50c0d64059b5": "What are the two opposing forces that regularized autoencoders like the contractive autoencoder (CAE) balance when learning manifolds?", "995e1390-baab-4cf5-89ec-a2f155460b29": "How does the contractive penalty in the CAE encourage the learned features to vary? What would happen to the learned features if reconstruction error alone was minimized without the contractive penalty?", "34255733-270a-4fa1-8fb7-8091ffcc1d5f": "The normal-Wishart distribution is a conjugate prior for which multivariate distribution?", "8f760d2e-ab80-48e5-904f-170ed0d786c3": "For a K-dimensional binary random variable xk, the multinomial distribution gives the probability distribution over what variable given the total number of observations N?", "bf736db3-288f-410a-b973-5f9bfab45330": "According to the passage, why is it computationally prohibitive to optimize the discriminator D fully in each inner loop during the training of adversarial nets?", "a415867e-abda-45eb-9970-51057034715d": "The passage mentions that in practice, the gradient from Equation 1 may not provide enough gradient for the generator G to learn well early in training. What is one reason provided for why this occurs?", "63497b2b-f1db-49b7-b966-b8f0e3bc257a": "What method of text encoding did the researchers find is 3x slower than bag-of-words at zero-shot ImageNet classification?", "b24dfd4d-4f30-46f6-8860-f99b8fef9747": "According to the results shown, how many images need to be processed for the contrastive objective approach to surpass the bag-of-words prediction approach in zero-shot ImageNet accuracy?", "9fc7899d-1ec1-4c22-9dc6-35829b93ab70": "According to the passage, who proposed a convergent O(d2) temporal-difference algorithm for off-policy learning with linear function approximation?", "664da8a7-7338-4748-a89f-8044c8a2e194": "The passage mentions advancements in temporal-difference learning with linear function approximation. What two elements does it say Sutton et al.'s fast gradient-descent methods combine?", "dde5dab2-916d-408d-8a23-a3b1fc1e557c": "According to the passage, what is one proposed way that developing the ability to predict and control sensors over short timescales could help with long-term reward prediction and control?", "a10ccfa4-4539-4784-b398-2626558fd2b3": "The passage mentions that in some artificial neural networks, the last layer is split into multiple parts called heads, each working on a different task. What are some examples of auxiliary tasks these heads could work on, as mentioned in the passage?", "16ddeccf-50f0-48cb-bf0f-aedf09864405": "What is the goal when maximizing the log likelihood function for a Gaussian mixture model, according to the passage?", "78221e10-5034-4246-9377-1cf6e9b6e07c": "The passage states that maximizing the likelihood for a complete dataset {X, Z} is easier than for an incomplete dataset X. Explain why this is the case.", "533cda33-104f-433e-8f63-ce782cfc378d": "What are the two key equations that the algorithm optimizes alternately in each iteration? Explain what each equation corresponds to.", "63d9982a-4a54-4e20-b890-f216790ff94c": "The context mentions that the practical implementation of the \u03b8' update depends on the parameterization of the data manipulation R\u03c6. What aspect of R\u03c6 affects how the \u03b8' update is implemented in practice?", "fcc210fb-1428-4235-9cfe-ce8efe4934b8": "According to the passage, why are sample updates preferable to expected updates when there is insufficient time to complete an expected update?", "76bcd84f-7b85-4a3d-afef-7c066c5fcb9b": "The passage states that with many state-action pairs, we are often better off with a few sample updates at many state-action pairs than with expected updates at a few pairs. Explain why this is the case.", "79b4b657-a7e4-41d8-a3fe-1cee02f9d943": "What does the RNN take as input when used as a Turing machine?", "90a1907a-399e-4e26-9cc1-853c51cc106c": "According to the passage, how many units did Siegelmann and Sontag use in their RNN to be able to compute all functions?", "1581641b-aa07-4f9a-8721-945d134cc00e": "In the joint model constructed for noise contrastive estimation (NCE), what is the probability that the class variable Y equals 1, as shown in equation 18.29?", "1d9c5e66-4edc-4502-9f55-9424dced12c7": "What are the three equations, 18.29-18.31, that specify the joint distribution Pjoint(X,Y) in the NCE framework? Briefly explain what each one represents.", "d7e5832b-b4fc-426d-8941-f7b3d22c3747": "According to the context, what are the key properties of a manifold in machine learning?", "acb9e9a2-46e9-46b5-8013-efffd5598600": "In Figure 5.11 shown in the context, what is indicated by the solid line with respect to the distribution of data points?", "6cf56980-dd5a-4e33-9707-8a36bccca604": "What process did Skinner compare to a sculptor shaping clay into a desired form?", "9cfbe473-150f-4797-80c7-bf5157cec729": "According to the passage, what psychological concept refers to processes that influence the direction and vigor of behavior?", "549380a0-bea4-4248-b7b1-c1699ff47008": "According to the passage, what are some examples of the \"less direct hints\" that representation learning uses to uncover the underlying factors beyond just the labels?", "80c78cd3-4118-41e1-b74b-be020d1faad3": "The passage states that \"one goal of deep learning is to find a set of fairly generic regularization strategies.\" What does the text say is an example of a generic regularization strategy that could be applicable to a variety of AI tasks?", "c02c32b3-0363-4e6f-8810-4be02e60c90d": "According to the passage, what was one of the key findings from using the SamplePairing technique on the CIFAR-10 dataset?", "846a6588-74cd-4938-b121-0b9d82cd0116": "The passage states that better results were obtained when mixing images across the entire training set rather than just within the same class. Why might mixing more diverse images lead to better performance when using the SamplePairing technique?", "222a423d-d2c8-41bc-ac75-98f1bb070f93": "What are the weights a(i) typically produced by applying in the attention mechanism?", "ff8ae8a4-421e-4aec-8e54-11bf9e138a5a": "The attention mechanism uses weighted averages of feature vectors h(i) instead of directly indexing the desired h(i). What is the main advantage of using the weighted averages?", "f3acd9ff-0cae-423c-bb17-79237edee504": "What is the form of the variational posterior distribution q*(\u03bck, \u039bk)?", "e9f903ca-efb7-4b55-a8fe-ea9ce25984fe": "Fill in the blank: The update equations for q*(\u03bck|\u039bk) and q*(\u039bk) correspond to a ________-________ distribution.", "d4262492-ba02-4812-ae23-cb6e9597974b": "What was unique about the way TD-Gammon 0.0 learned to play backgammon compared to previous computer programs like Neurogammon?", "b6c7221b-1075-4853-ae25-bcb9b2556687": "After the initial success of TD-Gammon 0.0, Tesauro tried combining self-play TD learning with what additional kind of knowledge to potentially improve performance further?", "810fb475-492c-4bb5-b61c-f4a7bc3294be": "According to the reading, what are two hyperparameters that can be increased to raise the model capacity?", "dd8c98b4-73c8-4413-8104-2c92fe9c4b65": "The reading mentions that increasing the number of hidden units can increase both time and memory costs. How might this impact the practical usage of neural networks with very large hidden layers?", "7e1fcaae-9c67-4269-bbff-1fd0a65ebbf5": "According to the passage, what are two ways that data augmentation can help speed up training time and improve accuracy?", "efa3d1ea-3c17-4093-a148-fefba324a813": "The passage mentions that higher resolution images require more processing power and memory to train deep CNN models. Why might downsampling images during pre-processing cause issues with image recognition?", "553834bc-15d8-479e-b984-c38b30ecb029": "In the scientific articles example, what type of database were the Stanford and FDA researchers trying to build to help predict unknown drug interactions?", "a05c9be0-af9a-422c-a063-878c7dad8578": "What are two reasons researchers want to analyze digitized electronic health records rather than conducting randomized controlled trials?", "88ff0e84-7878-44e8-b5d5-d46a2c57aafe": "According to the passage, why might a state that is good for making some predictions also be good for making other predictions?", "0097ba9e-7a79-4b08-a475-7b4b55276851": "The passage suggests replacing the theoretical guarantee of the Markov property with what practical heuristic?", "557bcbd4-3e2c-4f0c-95ca-2a33a5ae5cf1": "What are some of the reasons that the gradient for hyperparameter optimization is often unavailable in practical settings?", "776db726-8d6d-448c-989f-46c51b15c2c3": "What trade-off is involved in model-based hyperparameter optimization algorithms like Spearmint, TPE, and SMAC?", "ade868be-dbdf-409b-ab7a-dc899c67c1ef": "According to the passage, why is it important to choose appropriate features for a reinforcement learning system?", "712e3e6c-bbd0-49aa-ae85-c28243fc4557": "The passage provides the example of valuing states of a mobile robot. What are some examples of features that might be useful for this task?", "ae2dad42-e6d5-4a12-a99b-0ceea69c9dda": "What technique did Gidaris et al. propose in 2004 for learning generative visual models from few training examples?", "aa03cdce-9959-45b5-9f12-eaadc42775f7": "What approach did Goyal et al. propose in their 2020 paper for contrastive learning of visual representations?", "38c1827e-910e-456d-bd9f-b359634d7a20": "What is the convex conjugate J*(\u03c6) defined as in the context?", "fe5e81e3-17d8-4f81-9b6d-b1ba834bc8f1": "How does parameterizing \u03c6(t) as \u03c6\u03c6 and p as p\u03b8 recover the original GAN algorithm, according to the context?", "27ddfd3d-0c56-4f29-8dbe-4f22b35c7015": "What is the common estimator used to estimate the \u03b8 parameter of a binomial distribution?", "fc0a9bea-a650-4129-a3f1-5bfc82642c2d": "Is the estimator for \u03b8 given by the sample mean an unbiased estimator? Explain why or why not.", "f5353be9-90b4-48d8-8acc-e5a221131ad5": "According to the passage, why is model averaging often discouraged when benchmarking machine learning algorithms for scientific papers?", "beefdb83-c74c-4a09-b64d-30fcd60a8f68": "The passage mentions the Netflix Grand Prize as a prominent example of a contest won using what technique?", "4d2610fb-c3b7-4abf-973f-6b09f09af9ac": "What is the role of the auxiliary distribution q in the learning problem?", "5608ce2d-966b-41b9-b23c-abe0aabd459a": "Fill in the blanks: At iteration n, the update equations are given by ____ = ____ where Z is the normalization factor.", "e4712429-2076-415e-8ef5-b3ba4bee4ff5": "What is the key property of a consistent estimator?", "539b2b3c-b0b4-4ee6-ac5e-e68a993c110a": "How can we measure how close an estimated parameter is to the true parameter value?", "102799e0-365b-49ad-b7b2-f7ddbb56b86f": "According to the passage, what are two key elements that comprise an environment model in model-based reinforcement learning?", "6e38753a-07aa-4747-b728-f438b01f1d6a": "The passage mentions that algorithms like Q-learning and Sarsa enable learning with delayed reinforcement through the use of conditioned reinforcement. What provides the conditioned reinforcement signal in these algorithms?", "7a99a7d5-3e23-4b11-86ed-49ad886c1e12": "What are the key differences between TD and Monte Carlo methods for solving the prediction problem in reinforcement learning? Focus your answer on how they use experience and update value estimates.", "882b0027-7522-43da-8a35-d7b5cf64a5f4": "Explain the constant-\u03b1 MC algorithm provided in the context. What information does it use to update the value estimate V(St)? How does its update rule differ from TD methods?", "d73651c7-4cf0-4915-9e58-a5f408ad540c": "Which authors proposed the \"Locally weighted learning\" approach in the provided references?", "9d09793e-875f-42ca-a14b-42e8944b7d9a": "What publication venue published the paper \"The Option-Critic Architecture\" according to the given context?", "c68a1cc7-e710-4551-8218-209c72190458": "What is the significance of the forms of the expressions (9.71) and (9.72)? Why is it important to note that they differ in sign and that L(q,\u03b8) contains the joint distribution of X and Z while KL(q||p) contains the conditional distribution of Z given X?", "446e4218-af18-4bc1-a160-f865a06cc1b5": "What decomposition is shown in equation (9.70)? What two terms does it consist of on the right hand side? Briefly explain the significance of each of those terms.", "b4054794-6528-495e-b673-0f08c64b808e": "In the given MDP, what is the immediate reward for taking any action from state B?", "8c1c78a1-2bfc-492f-9276-ebd88076d4fa": "According to the value function v\u03c0 shown in Figure 3.5b, which state has the lowest expected return under the random policy described?", "fdad184f-9adc-4159-8271-f0d547299f55": "What does batch normalization act to standardize according to the passage?", "24d59c7d-1a54-49aa-b7f7-b7982e698ed0": "According to the passage, why do the lower layers in a deep neural network with nonlinear activation functions remain useful after batch normalization is applied?", "9261d77d-fe95-4996-943f-da886b9db0cc": "What is the key difference between First-Order MAML and full MAML in terms of the gradient?", "fd25e5b0-1334-4ed8-87c6-e4cfccc1ac90": "According to the context, Reptile is described as a simple meta-learning optimization algorithm. What characteristic of Reptile makes it simpler compared to MAML?", "dcd91fbe-5661-4321-b408-1e88c3387251": "According to the passage, why does the absence of links in a graphical model convey interesting information about the distribution it represents?", "abeb9e2c-9c21-45d3-84f8-c27d5f9fef5b": "The passage states that we can represent a joint probability distribution as a product of conditional distributions. Using the example of a graph with 7 nodes (K=7), write out the general form of the joint probability distribution in terms of these conditional distributions.", "dcb9b145-d7f5-4f29-a21b-254c3006813d": "What does the variable A represent in the equations provided?", "a0425274-7dff-4dcf-97eb-e9bc3b697b5f": "According to the passage, both MAML and Reptile aim to optimize which two goals during gradient update?", "f0450f71-00d1-48df-bf61-3181132a8fe6": "What technique involves constraining weights within certain groups to be equal, in order to reduce the effective complexity of a neural network?", "a732dc4b-d95f-4399-b39c-e2cd17848773": "The text discusses a form of 'soft weight sharing' that replaces the hard constraint of equal weights with what?", "0312858a-08e8-415b-af4a-a77745235c36": "What are some of the key benefits of Android 6.1 Jelly Bean mentioned in the context?", "b21c3253-0440-4ddf-ae79-a38aaa6a0e94": "According to the context, what are some of the skills that are highly valued for Internet members at universities at this time?", "bb46a578-1ced-46c1-9518-2faf91cf3c76": "According to the passage, why is it important that models being compared use the same binarization scheme for training and evaluation?", "414f0723-40e5-4302-8e6f-f4b0be87428a": "The passage mentions that visually inspecting samples from a generative model can be problematic for evaluating the model. What practice is described to verify that the model is not just copying training examples?", "f6b819a3-ab3e-4cfe-bdd4-bb084917a98b": "How does the policy used by the agent in RTDP differ from conventional value iteration as the value function approaches the optimal value function v*?", "1952ce05-bcc9-460e-97f7-c067a93e4b33": "Value iteration terminates when the value function changes by only a small amount in a sweep. At this point, why is a greedy policy close to an optimal policy, even though policies greedy with respect to earlier value functions may have already been optimal or nearly so?", "5fbbf431-199d-4ad4-a30b-43866160ab58": "According to the passage, why is the Bellman error (BE) not learnable from observable data?", "d6637b50-8d58-427c-a8df-4f13f9223c04": "The passage mentions two other bootstrapping objectives that can be determined from data. What are those two objectives?", "210b234f-6624-4e07-885b-e63a5e30e25d": "According to the text, how does the TD model differ from the Rescorla-Wagner model in terms of how it handles time steps?", "95d9b0db-baec-4047-8bf7-c347ba5275c1": "The text mentions that from the animal's point of view, a trial is just a fragment of its continuing experience interacting with the world. How does this perspective relate to the TD model's formulation?", "7c05b948-cf32-4b5f-95cc-eec93c7fce75": "What is the general form of the Sarsa control algorithm?", "ef6b9825-9d57-49c8-a146-f9fc8a7da937": "According to the passage, what two conditions are required for Sarsa to converge with probability 1 to an optimal policy and action-value function?", "d10a963e-c81a-4e1b-b72f-c67936980cd1": "Which researchers discussed tonic dopamine and its role in controlling response vigor?", "b99c0973-343f-4c95-a57b-d2727f76fcb0": "What publication by Nouri, Littman, and Hauwere discussed multi-resolution exploration in continuous spaces?", "fe0a5ea2-f830-41eb-b503-93d31c53bb49": "What was one of the key difficulties users encountered when designing labeling functions according to the passage?", "e3e77dd0-2ef5-418f-ba67-11825ee7e6d6": "According to the passage, what are some of the organizations and applications where Snorkel has been deployed since its initial release?", "af85834a-f6b0-45ba-baff-e1a822b35c13": "According to the passage, how does curriculum learning help accelerate progress in machine learning?", "ac5bf288-f000-4e69-b129-c75b9a8b7edf": "The passage states that curriculum learning has been successful in natural language and computer vision tasks. Can you name one example task in each domain where curriculum learning has been beneficial?", "56478682-6332-4e54-a237-41346e9012a0": "What modification does the RMSProp algorithm make to the AdaGrad algorithm to improve performance on nonconvex functions like training neural networks?", "97799053-7628-409a-81f7-5644a37c2641": "How does the accumulation of squared gradients from the beginning of training with AdaGrad result in problems when training deep neural networks?", "8cd50646-fa06-4a65-a3e5-2f3594c54923": "According to the context, which researcher proposed the \"Single channel theory\" as a neuronal theory of learning?", "68d2bc44-78c3-49cb-8bc5-3f2db96e2908": "What term did Sutton use to refer to the method of assigning credit for success or failure over multiple time steps in reinforcement learning algorithms?", "1c2ed797-c1dd-4dc0-a860-35efa2d927ca": "According to the hypothesis described, where do changes in synaptic efficacy from cortical regions to the striatum occur?", "7c30c2b0-e6e9-4f0a-b4b6-7a229a0a9994": "The hypothesis implies that dopamine is not a 'master' reward signal like scalar Rt in reinforcement learning. What does this mean about the nature of reward signals in the brain according to the hypothesis?", "f5c60282-574c-408d-ac95-cf9f6a85f1c2": "According to the passage, what benchmark is used for evaluating natural language understanding tasks?", "87815eef-34f4-4bc0-8f89-c2bb3cd83bc8": "The passage states that the BERT model is fine-tuned on GLUE tasks by adding which new parameters?", "49e505cb-8429-4ebd-8bcd-d3e46d301534": "What are the two basic approaches discussed in the book for deriving the transition operator T?", "1053ac56-20cc-4db7-926b-857e8499ce39": "When using a Markov chain to draw samples from an energy-based model, what approach does the book recommend to obtain the desired stationary distribution q(x)?", "e53ae7f4-229f-4881-9cc8-0855b1ca0280": "What does the article present that offers a unifying understanding of many important ML algorithms?", "804e623f-fdd9-486e-b183-a99b57887a21": "According to the article, what diverse algorithms are encompassed as special cases in the proposed ML framework?", "e6445df2-fad0-4d28-8f8a-f377a99331cd": "What is the TD fixed point in linear semi-gradient TD(0) algorithm? How is it defined in terms of the weight vector w?", "72e5b786-bca9-450d-879f-e0bbe1794904": "The text mentions that the matrix A (not b) is important for the convergence of the linear TD(0) algorithm. Why is this the case? What property of A assures the convergence?", "858f2be1-edfa-4822-88e4-cc86fba7a47f": "Consider the hint provided in the context about proving equation (11.24). What is the key step suggested in the hint to prove this equation?", "bae9f091-f74e-4c18-a9c8-00b3dd2dd0d6": "The context mentions a counterexample with two MRPs that have the same data distribution but different minimizing parameter vectors. What does this counterexample demonstrate about the Bellman error?", "d4bd430c-fff4-4fb1-8cc0-e2c3602eb24f": "What is the Lagrangian functional for this optimization problem?", "43fe63e4-61fd-456d-bbf3-984b32476086": "After setting the functional derivatives of the Lagrangian equal to 0, what functional form does p(x) take?", "b9a01451-b4b6-4e6f-b57e-1f73c8111746": "Consider the equation y = g(x) where g maps from R^m to R^n. Further suppose z = f(y) where f maps from R^n to R. Using the provided vector notation, write an expression for the gradient Vz with respect to x.", "1153e90d-829f-4b21-906e-6942ec5ad0c0": "The backpropagation algorithm relies on multiplying a Jacobian matrix by a gradient vector. True or False: The backpropagation algorithm can only be applied when the tensors are vectors, and cannot handle tensors of arbitrary dimensionality. Explain your answer.", "4193e555-b56c-4e6a-a429-b167c7d94f5d": "What was one detail left out of the generated response compared to the original input about the two boys in the water?", "b50f7885-f17f-435e-843b-aa80835ac322": "What activity was the woman partaking in that was left out of the generated response about her riding past a car and people?", "16dae997-c41c-4b56-9e22-dfae0859cf02": "According to the passage, if a leaf node in a sum-product algorithm is a variable node, what form does the message it sends along its only link take?", "c588dbdc-8ea6-4b56-8dc6-11467d198d60": "The passage states that the number of messages computed in the sum-product algorithm is given by twice the number of links in the graph. How does this compare to running the sum-product algorithm separately for each node in terms of computational efficiency?", "d3664287-2eab-4409-8233-6ceec9caaac0": "What are the two extreme cases of the generalized pseudolikelihood objective function?", "612bb2c0-ed63-48b0-a592-9210e1029811": "What factors determine the performance of pseudolikelihood-based approaches on different tasks?", "021a2bf5-080c-4b90-a46a-1fd23549abe2": "The paper by Blissett and Ji in 2019 focused on which NLP task for low-resource languages?", "db62f249-9f07-474e-802b-4214132bd3e8": "What semi-supervised learning algorithm did Berthelot et al. propose in their 2019 NeurIPS paper?", "eb1e7ff2-8eb9-4b38-b822-665744d5c733": "Consider the K-means algorithm discussed in Section 9.1. Using the fact that there are a finite number of possible assignments for the indicator variables {rnk}, explain why the K-means algorithm is guaranteed to converge after a finite number of iterations.", "92fa4d84-752e-4c6a-9c07-7c2ec20af444": "In Section 9.2, the Robbins-Monro procedure is applied to find the roots of the regression function given by the derivatives of J in (9.1). Explain how this leads to a stochastic version of the K-means algorithm, where for each data point xn, the nearest prototype \u03bck is updated using (9.5).", "dbb7d7b9-b470-4f26-9468-619f24967b5d": "The ImageNet database introduced by Dong et al. (2009) is a large-scale hierarchical image database. What are some of the key features of ImageNet that have enabled its widespread use in computer vision research?", "b75e5467-bb61-4a0e-ade3-66d4497e9048": "Fedus et al. (2018) proposed MaskGAN for improved text generation. What is the key idea behind MaskGAN and how does it differ from typical GAN approaches for text generation?", "59dcb397-d35a-4d11-aba1-d32866899d0f": "What is the equation that leads to the classical policy gradient algorithm, according to the context?", "8d0555da-5981-4f0a-826a-c730eb3ea343": "The context mentions that setting \u03b1 = \u03b2 := \u03c1 > 0 corresponds to which approach that casts RL as a probabilistic inference problem?", "2ab60c52-1fc2-4cad-b8cc-19f32a54f289": "What are the two key steps comprising the variational EM algorithm for a linear model with Gaussian noise?", "6da5e4e2-7241-4b1d-b3b0-b4bffc948fdb": "How can we derive the re-estimation equations for the variational parameter \u03be? What two approaches are mentioned in the provided context?", "faf29048-4b94-490b-9803-6cf770d7e8d8": "According to the passage, what are two common sources of 3D, volumetric data that can be used as inputs to convolutional networks?", "9de3ee68-b2e4-4408-b6ed-cac89b221411": "The passage mentions that modern convolutional network applications often contain over 1 million units. What two approaches does the passage recommend to help speed up computations in large convolutional networks?", "43dbed6a-a39c-4970-bb51-b8e26f6e516f": "What year was TensorFlow first introduced?", "79dc3f20-e34a-40bb-99d6-1a0cc060042f": "True or false: Albumentations is a library for augmenting images.", "4f06b769-1375-4f26-b146-c5d6f696cae4": "One approach mentioned in the passage to mitigate the gap between training and test time inputs for a recurrent neural network is to use a curriculum learning strategy. What does this involve?", "40068d66-5892-4050-aa55-1eb7bb35b7c6": "The passage mentions two ways to deal with the issue that the inputs a recurrent neural network sees during training may be quite different from the inputs it sees during testing. What are these two approaches?", "0c73dea0-6959-4f31-8842-6814e80f8130": "What dataset was used in addition to ImageNet to test the performance of the self-supervised learning method described?", "80267b1e-4189-4897-b410-66804209540b": "How was the ResNet-50 architecture modified when applying it to CIFAR-10 images compared to ImageNet images?", "7cf6b87c-898c-4ebe-a155-e75d305b73e8": "What are the inputs to the whitening workflow algorithm described in the context?", "a4eb521e-6f22-441e-9440-c82ba1865757": "According to the context, what are two benefits of using whitening operations for unsupervised sentence embedding learning compared to BERT-flow?", "937f9f4b-b476-4591-8194-3ad398d1e8d8": "What type of GAN architecture was used by Frid-Adar et al. in 2018 to improve liver lesion classification performance?", "d3db25f0-2550-4648-9a7f-7ca8bfef7805": "How can techniques used for image recognition tasks like classifying dogs versus cats be extended to other computer vision applications like object detection and semantic segmentation?", "39bf4420-b5df-41a9-989d-24e21e3783d9": "According to the process described, what are the two steps involved in generating the observed values x(i)?", "885d81c0-124d-4f97-a201-31c8f8cbda91": "What are two key assumptions made about the distributions p\u03b8(z) and p\u03b8(x|z) that enable the use of gradient-based learning?", "4e9f31d5-3c9f-4387-a398-8cad90a5ba00": "Which IBM researcher published a seminal paper in 1959 on machine learning using checkers titled \"Some studies in machine learning using the game of checkers\"?", "e8dac579-aae7-45b2-80ec-6858d707b8a6": "What year did Schmidhuber publish a paper on \"Curious model-building control systems\" at the IEEE International Joint Conference on Neural Networks?", "2391f2fe-6b9f-4360-a239-987e2c6ead21": "According to the passage, why is it important for reinforcement learning research to isolate and study subproblems that play clear roles in complete, interactive, goal-seeking agents?", "6e69195e-389f-418d-9f4e-79a3b167b752": "The passage mentions that a complete, interactive, goal-seeking agent does not always have to be an entire organism or robot. Give an example of a simpler agent that is provided in the passage and explain what its environment consists of.", "0b918d1e-3575-47cc-b0ec-9c04c2036a78": "How do greedy policies differ from longer-term policies in displaying ads to users, according to the example discussed?", "6340ce85-609e-4bed-b22f-1c2e299163e1": "What are two examples provided of how a longer-term ad policy might transition a user \"down a sales funnel\" before offering a final deal on a car purchase?", "b8c0d34a-eb0a-476c-a813-3b017367ca8a": "What are the key differences between the BERT and OpenAI GPT Transformer architectures according to the context?", "73d02137-fe22-4289-8bea-77beed91a6ea": "According to the context, what allows the BERT Transformer to represent both a single sentence and a pair of sentences in one token sequence?", "6e5ce5ad-9f29-429b-8494-3209ce9a1ac1": "What are two of the main challenges highlighted when using weak supervision for training machine learning models?", "a56acb40-0668-4e65-ab38-d03bd9a79b3d": "According to the passage, what are some techniques that can be used to reduce the number of labeled training examples needed when training deep learning models?", "ec322bc2-bcf1-4571-8f93-8dd5c7c8be8d": "What are some examples of memory-based methods that involve storing the entire training set in order to make predictions on future data points?", "f3e70a32-85f1-4660-b1a4-e350ab39dc61": "How do memory-based methods like Parzen density estimation and nearest neighbors differ from more traditional parametric models like neural networks during the prediction phase?", "7fd65c28-b2c7-40af-9965-7756fdb6fe3f": "Using the formula for the trace of a matrix product, show that the trace is invariant under cyclic permutations of the product. That is, show that Tr(ABC) = Tr(BCA) = Tr(CAB) for matrices A, B, and C.", "8181d272-fd6b-47d7-a174-0be1f5228f37": "Let A be a 2x2 matrix. Write out the explicit formula for the determinant of A in terms of its matrix elements. Then use this formula to show that the determinant of the product of two 2x2 matrices AB is given by det(AB) = det(A)det(B).", "b0a13029-625b-40d3-870d-5296ce1b9f4d": "What are two ways that the argument z to the softmax function can be produced?", "f863dc7c-138b-4cc3-8acd-5b301a507d49": "According to the passage, what happens to the output softmax(z) when z is much greater than all the other inputs?", "0f4cc74b-9d3b-435d-bc99-9651d10787c1": "What is the relationship between the Bellman error and the TD error?", "f2181cb2-c7b7-4441-8d06-1357df21e145": "The naive residual-gradient algorithm involves sampling the next state St+1 in two multiplied expectations. Why is this problematic, and what are two ways the residual-gradient algorithm can be made to work despite this?", "94ffffa4-0454-472a-9b5a-5ea3d363375e": "According to the passage, what percentage of pre-training steps used a sequence length of 128 before switching to a length of 512 for the remaining steps?", "eae6bc2f-031a-4cbf-8576-53ab34892c25": "The passage mentions optimal values for 3 hyperparameters when fine-tuning the model after pre-training. What are these 3 hyperparameters?", "a7f8e75a-d3c6-4144-a8e6-2ae6d7782b3b": "Consider the optimization problem of maximizing the function f(x1,x2)=2x1+2x2 subject to the constraint g(x1,x2)=x1+x2-1=0. What is the Lagrangian for this problem?", "b2cf7be9-66b3-46f7-b4d4-e3088d358afd": "In the example optimization problem described in the context, what is the stationary point (x1*, x2*) that maximizes the objective function f(x1,x2)=2x1+2x2 subject to the constraint g(x1,x2)=x1+x2-1=0?", "d84f4863-1a21-40c8-ba31-093f8bfe5ff6": "According to the passage, how do evolutionary methods like genetic algorithms work in reinforcement learning?", "165187fb-63d4-49da-a8f9-3e1fce71bef1": "What are two advantages of evolutionary methods over reinforcement learning methods that estimate value functions, according to the passage?", "230d1a1c-fe84-4ba6-b7d5-62c663f52f3d": "What type of deep neural network architecture has proven very successful for processing high-dimensional spatially arranged data like images?", "2d45fe99-cf80-4558-91fb-9eb2be76bc45": "According to the passage, what are two techniques that were used together in a reinforcement learning application for the game of Go?", "f5a2c2de-a8ba-4043-9b5d-ca47d5965d34": "What type of neural network contains loops in its connections?", "2b5c3c6f-4bfe-47b0-8496-7015b875b82d": "What term refers to the efficacy of a connection between two neurons in an artificial neural network?", "75fe0da9-2317-49d1-b7ac-aab9d243c093": "According to the equations provided, what are the key elements that control how past states influence future states in LSTM networks?", "5f514673-6ce6-4a0f-a222-48f079a33a9b": "The text mentions that the update gates in LSTMs act like conditional leaky integrators. What does this allow the update gates to do?", "b4f968dc-0d15-452d-9280-d8c794af25b0": "What type of generative model can be used to represent the relationships between entries in a waveform so it sounds like a coherent utterance?", "228981c6-35f9-43d6-8296-ce72abca5529": "What sequence modeling task that involves modeling sequences of joint angles of skeletons is important for the video game and film industry?", "8a57b5f6-d98d-4973-9cbc-ffbe00f2eda4": "According to the text, the Gaussian approximation to the posterior distribution is given by what equation? Explain what each variable in the equation represents.", "27b828bb-56fc-4067-b3df-f2a0b8f90932": "The text states that even with the Gaussian approximation to the posterior, the predictive distribution is still analytically intractable. What is the reason given for this intractability?", "47014537-4445-4244-9e2f-87f83852f872": "What type of neural network architecture is explored by Camilo et al. for learning implicit brain MRI manifolds?", "017e8f46-5536-494d-b6bd-2e6910d45c91": "Maria et al. proposed using generative adversarial networks (GANs) for what application related to radiology?", "5451cc92-a3cc-450c-ac07-b93de126d56a": "Consider a neural network with logistic sigmoid output units. How can we efficiently approximate the Hessian matrix for this network? Explain the outer-product approximation and how it can be built up sequentially using the Woodbury identity.", "80ba0c3e-94b4-4f2e-aa99-a4212142f6e1": "Suppose we have a multiclass neural network with softmax output units. How can we derive an efficient approximation for the Hessian matrix in this case? Explain how the result will be analogous to the case of logistic sigmoid outputs.", "e5c1bbc3-2ab1-41e1-8eeb-c89bb7910264": "What does the example with generating images of human heads demonstrate about the importance of learning saliency?", "291cde95-89bf-4479-9b3d-f905cc1e64c7": "How does an adversarial framework for training a generative model help it learn which features are more salient compared to training with mean squared error loss?", "78752a89-4652-455b-96ca-ceec1adbcd3c": "When comparing two machine learning algorithms, why is it important to use the same dataset augmentation strategies for both?", "b6387237-f1df-4ff7-b135-7312f40d0f6a": "What is an example of a dataset augmentation strategy that would generally be considered part of the machine learning algorithm itself rather than a separate preprocessing step?", "e0d427b5-aed7-46c2-b8f8-aa067e027c83": "What approach was commonly used from 2007 to 2013 to train convolutional networks when labeled datasets were small and computational power was limited?", "0bba522c-dd2a-4b48-aac8-7b61515de679": "According to the passage, what are two benefits of the approach where we train a model on small patches first before using those parameters to define the kernels of a convolutional layer?", "8e5eeef2-f285-4568-a965-6ae39ab2c923": "According to the marginal likelihood p(t|\u03b1,\u03b2), what is the distribution of t?", "f7e6472d-2c5c-4033-ae1e-8a781316e416": "What happens to the hyperparameter \u03b1 if there is poor alignment between the direction of \u03c6 and t?", "a9512a3b-7868-4aec-a40a-62990203e1b1": "What is the key idea behind general policy iteration (GPI) methods?", "d65aa3f1-3979-43c5-888c-203663b71d0a": "What is meant by \"bootstrapping\" in relation to dynamic programming methods?", "0daf4794-30b6-4348-aa04-586ed4d752b2": "The paper by Yosinski et al. in 2014 investigated how transferable features are in deep neural networks. What did they conclude about the transferability of features between neural networks trained on different datasets?", "f152afff-c2d4-4736-8d64-18600e6642e0": "Erhan et al. in 2010 studied why unsupervised pre-training helps deep learning. What were two reasons they proposed to explain this phenomenon?", "2c5411b9-1af1-4d4f-b0ba-09f5582a4d34": "According to the passage, why is it unreasonable to expect a shallow neural network to learn the relationship between abstract explanatory factors and image pixels?", "964184ce-a1f4-4184-a277-8aff2127819c": "The passage argues that choosing factors that can vary almost independently yet still correspond to meaningful inputs demands what kind of representations, and why?", "8c4b9d48-e83f-4faa-b7e0-ede5416a1c73": "According to the passage, how does dopamine act on a target neural structure?", "c1513556-39b0-4866-a963-5a7ea0245610": "What are two neural structures that are targeted by dopamine neuron axons, according to the passage?", "17054e7f-a992-4701-8560-354a245c4cf2": "What are some examples of black-box methods for generating adversarial text examples? Black-box methods like those by Ren et al., Garg & Ramakrishnan, Jia & Liang, and Ribeiro et al. focus on substitutions/paraphrasing using word similarity, language models, and rule-based methods without requiring model information.", "69815222-cdf5-416c-a9db-e354395f29eb": "How have adversarial attacks been applied to reading comprehension and machine translation models? For reading comprehension, authors like Jia & Liang and Wang & Bansal insert meaningless sentences or remove facts to disrupt reasoning. For machine translation, Belinkov & Bisk use typos and Tan et al. use morphology changes to create adversarial examples.", "85ea00c6-2bf6-4440-8b2e-7c3813149868": "What is the difference between batch-mode and online reinforcement learning algorithms?", "5c3a8ded-1f07-44ba-a1c0-ec532618f6ea": "What supervised learning regression algorithm can be used with batch-mode reinforcement learning algorithms to help them scale well to high-dimensional spaces?", "2f74c99c-bcaf-46e4-9782-5f812e0b83f2": "What does the variable 's' represent in the equation 'max logpz(f;1(u)) +log det', where s is sampled from the text corpus D?", "933397b9-612f-458c-89cd-2c27ce9e5b08": "According to the passage, why did Su et al. apply a whitening operation to the sentence embedding?", "d7c2209d-68ef-4c4b-9349-e14fbefc0b97": "What is the name of the error metric that is being minimized in the autoencoder framework described in the context?", "437b1f25-fccc-46bf-990d-247877e9d641": "According to the proof shown in the context, how can the reparameterization trick be used to make the Monte Carlo estimate of an expectation differentiable with respect to \u03c6?", "b623d690-28f8-49e8-9ec0-475116f7ab9d": "What do eligibility traces provide beyond n-step TD methods for unifying TD and Monte Carlo methods?", "1558d8f3-df45-4802-b6d8-100781e705b9": "True or False: Eligibility traces generalize TD and Monte Carlo methods by producing a spectrum of methods between one-step TD and Monte Carlo.", "9d222381-ea17-498a-958d-1cecc8c40516": "What are the two sets of terms that arise when we differentiate the log likelihood ln p(tN|\u03b8) with respect to the parameter vector \u03b8?", "bf2aab06-41da-40f1-905d-6e17c1d80472": "When differentiating ln p(tN|\u03b8) with respect to \u03b8, where do the terms arising from the explicit dependence on \u03b8 come from? What equations are used to compute these terms?", "57916e62-bb9d-4672-961f-a7a554dc2c4c": "What is the advantage of using the pseudolikelihood estimation method compared to computing the full partition function?", "38619320-63d3-4c77-abea-90c3dca6f953": "How can the tradeoff between computational complexity and deviation from maximum likelihood behavior be controlled when using the generalized pseudolikelihood estimator?", "7427789f-70eb-4df4-bef3-c674777b65e6": "What is the flaw in assuming p_y(y) = p_x(g(y)) when y = g(x) for some invertible, continuous, differentiable function g?", "72478b30-57d8-45e2-9958-6023f6fc0baa": "Consider the example given where y=3 and x ~ U(0,1). What mistake occurs if we try to calculate p_y(3) using the formula p_y(3) = p_x(2*3)?", "80c08c82-c884-4bf1-9200-e0287cf9ad7b": "What are two drawbacks of using the specialized approach for developing libraries for deep learning?", "6a2838ce-9f9e-4d64-a3ee-d61f036e9dc9": "What are two potential benefits of using higher-order derivatives when developing deep learning models?", "595a986c-4614-45d3-86a2-bfe03ac19f6a": "What is the goal of the PAC (probably approximately correct) learning framework in computational learning theory?", "ea192a39-b02d-4a2b-8fcc-eb82d9eeb7b2": "The text mentions that the parameters \u03bd and C for a support vector machine are typically determined by what technique?", "a078f8bb-7537-4ccd-bd1a-a742eedb14e3": "According to the passage, why can pattern recognition techniques be effective even in high-dimensional spaces?", "9af37201-541c-4a4b-a382-7df84f872e5a": "The passage provides an example of determining the orientation of identical planar objects on a conveyor belt using images. How many degrees of freedom of variability are there between these images according to the passage?", "1a4779ba-9de1-4c90-ae1c-383c2b252b07": "The context describes how simultaneous gradient descent on two players' costs may not reach an equilibrium in a minimax game. It provides an example with value function v(a,b) = ab. In this example, what causes the parameters a and b to go into a stable, circular orbit rather than reach the equilibrium at the origin?", "ca7a9151-0186-4c01-8650-0f8b3471a4b0": "The context mentions that for minimax games, the equilibria are not local minima of the value function v, but rather simultaneous saddle points that are local minima for one player and local maxima for the other. How does this property of minimax game equilibria relate to why simultaneous gradient descent may fail to converge?", "b5d37651-6780-4849-9f83-078e38e17956": "According to the passage, how does using approximate inference as part of a learning algorithm affect the learning process?", "6193d679-fda1-4b06-95e4-799302bcf56a": "The passage states that the training algorithm adapts the model to make the assumptions of the approximate inference algorithm more true. What specifically does the variational learning process do to increase Enxg log p(v, h) according to the equation shown?", "07f2dec2-e6dc-4ff3-98f5-348c1247ea0e": "What are the three main steps of the EM algorithm?", "e8e60b4a-9455-4ca4-b160-c113e9922350": "What role do latent variables play in the EM algorithm? How does the algorithm find maximum likelihood solutions for models with latent variables?", "d86bf77a-1049-430f-b11a-cc428947f55b": "What property must a function f satisfy in order to be considered a norm?", "838475ea-3cba-4cfe-af25-d36363e63f99": "If x is a vector, how can we calculate its squared L2 norm?", "5d1e987f-bbcc-4e79-bcec-55a1f3e273ea": "According to the context, why does the author state that Gaussian MMD tests may be unsuitable for capturing complex distances in high dimensional sample spaces like natural images?", "32334362-0e97-412b-b2f1-e6287b9dc910": "The context mentions that the MMD computational cost grows quadratically with the number of samples in the batch used to estimate equation (4). What does this imply about the applicability of MMD for high dimensional problems like 64x64 images, according to the given information?", "c7101aff-bf92-4fc1-8258-975f4e7203e0": "Using the result from Exercise 1.18, derive the expression for the ratio of the volume of the sphere to the volume of the concentric hypercube given in equation (1.145).", "e42876da-c6c0-440a-928e-d9db1ec805ec": "Using Stirling's formula, show that as the number of dimensions D goes to infinity, the ratio of the volume of the sphere to the volume of the concentric hypercube goes to zero. What does this tell us about how the volume is distributed in a high dimensional hypercube?", "82d74caf-7545-4004-b0cb-689b188b0974": "How does the energy function of a deep Boltzmann machine differ from that of a restricted Boltzmann machine?", "fa90c9c4-940f-47e3-a49b-4bf6188e6197": "What are two advantages of a deep Boltzmann machine compared to a fully connected Boltzmann machine?", "33c9b094-2746-41a4-b4bc-7ba792992d5f": "In the batch updating experiment described, which algorithm consistently outperformed the other in terms of lower average root mean-squared error?", "0fed7aab-b116-4dcf-9480-6248abcbe406": "In the first episode of the random walk example, what were the starting state, sequence of transitions, and rewards received?", "c11b4401-0038-4599-8842-5384985df4db": "What are the two distinct stages of the backpropagation algorithm?", "2d9fdb93-f1db-4090-a2df-34cf53400611": "True or False: The backpropagation algorithm can only be applied to multilayer perceptron neural networks. Explain your answer.", "c5b62a8b-4670-4b8c-9666-9ea83a8ef9cc": "What are the two most important examples of state space models discussed in the text?", "4edc622e-0a60-4f1a-8903-cc53d26bb811": "According to the text, what is the easiest, but likely ineffective way to treat sequential data? Why would this approach fail to exploit important patterns in the data?", "5c6687e7-500e-43e4-a333-297464199664": "According to the provided information, as we observe more and more data in a Bayesian learning framework, does the uncertainty represented by the posterior distribution steadily decrease on average? Explain your reasoning.", "9cda48c0-122b-451c-8df1-5b360b31062f": "Consider the result shown in equation (2.24) from the context. What does the term on the left-hand side represent? What does the term on the right-hand side with the variance represent? How does this mathematical result demonstrate that the posterior variance is typically smaller than the prior variance?", "9bc8dabe-0d99-4656-8a5a-e6723326936e": "What does the reward function R(x, y|D) represent in connecting maximum likelihood supervised learning to policy optimization?", "6e67a721-4299-4926-828d-9de19b1bf0ca": "How is the variational distribution q(x, y) formulated in the context of relating maximum likelihood supervised learning to policy optimization?", "08e3c32e-ba88-41eb-8ae5-e9d91863618f": "What technique demonstrates that some kinds of autoencoders learn the data distribution in some way?", "44499d5c-1622-48e5-b1fa-ace47c196a23": "What are the substeps used at each step of the Markov chain that generates samples from the distribution estimated by a generalized denoising autoencoder?", "3b8a828b-8fe5-4843-b0c2-3e24604e09b0": "According to the passage, what makes distributed representations powerful?", "20bbb962-13c7-4e1b-8397-8e7becf47140": "The passage states that deep learning algorithms are often motivated by the assumption that hidden units can learn to represent underlying causal factors. What does the passage say is a natural representation for this approach and why?", "3b0eacb0-1776-4b5b-8de2-ed8ad0fd42ff": "What is the error rate for classifying the MNIST digits using a convolutional neural network?", "d92040fd-0f89-4081-b5fe-9ac2de406ee9": "What is the principle behind the synthetic data set created for measuring proportions of oil, water and gas in pipelines?", "b5fc9c41-d6b7-415a-9f3b-39a3ac17ae1f": "What are two advantages of using a discriminative model over a generative model for classification, according to the text?", "bd33989d-5e30-484d-a605-111628c827f1": "The text states that by using a fixed nonlinear transformation \u03c6(x) of the original input x, the decision boundaries will be linear in the new feature space \u03c6. How does this allow us to model nonlinear decision boundaries in the original input space x?", "7f748ebc-0032-4d7e-aab3-1f5eac98575d": "What are the two key elements of the meta-learning algorithm described in the context?", "a699aeeb-49b7-433e-8961-ef5064efe207": "How does the training process for this meta-learning algorithm mimic what happens during testing?", "9064c19b-aa8b-4eb7-8f70-7f47b51aa80a": "What is a weakness of greedy action selection that \"-greedy methods aim to address?", "d7eb8bf7-b5ba-4457-9f90-7b6447598e03": "Describe the general idea behind \"-greedy methods for action selection in reinforcement learning. How do they balance between exploitation and exploration?", "3af30f88-8c02-409b-a0eb-7df878b86ade": "The passage states that much of the difficulties in optimization is due to the trajectory needed to arrive at the solution. What visual in the passage supports this claim?", "9f38fab9-2ff9-4b58-95e7-cf5342a60bc7": "The passage discusses several problems that can occur with optimization at a single point, such as poorly conditioned J(\u03b8), cliffs, and saddle points. How can these problems be overcome even though progress is difficult locally?", "4e352b7e-c922-4ff9-8893-54c300c2dd9c": "What was the performance of the pre-trained BERT sentence embedding on semantic similarity tasks before any fine-tuning?", "f3fe2955-6dcc-4c55-8824-a3f46c2d5e9c": "Which model configuration achieved the highest score on the MRPC dataset - SimCSE-RoBERTabase, SimCSE-RoBERTalarge, or SRoBERTa?", "9021e955-b07f-492f-b580-8cea36216c98": "What is the form of the log likelihood L(v, 0, h) as shown in equation (19.38)?", "1cff0dad-edd8-4ea4-95ed-11132b84a954": "Fill in the blanks for the following equation from the context:", "a9bf60b6-1020-4b47-bee0-f5d7b994dc65": "o(bj) - _____ - 1 + _____ + 1 - _____", "7471c78e-4df5-4cee-a20c-bd77e6dbf4e5": "According to the text, what role does the index i play when we consider sums over products of different probability distributions with positive weighting coefficients p(i)?", "e65647a4-ff1c-44a2-88e0-72fe2d29dc08": "The text mentions that taking the limit of an infinite sum allows us to consider kernels of a particular form. What is the form of the kernel mentioned in the text when we take the limit of an infinite sum?", "2ceb9971-ff78-461d-a970-3fc922869120": "What are two key principles from traditional machine learning that strongly influenced the development of deep learning algorithms?", "b4f55f5d-715f-4345-aa5c-b2c4fd3fcc51": "True or False: According to the passage, novice readers or those wanting a wider perspective should skip ahead to section 5.11.", "c2826290-497e-42ff-8711-e73c8478d159": "According to the passage, what are some approaches that have been developed to mitigate the risks of optimization?", "ff7f32a5-eb46-428f-884d-99784994b87d": "The passage mentions that reinforcement learning agents face two key challenges if they are to act and learn in the real world. What are those two challenges?", "d877890a-f38a-472c-ace1-5cd9ffe0ad33": "What are the two main components that make up the critic network described in the passage?", "09d9f8fc-11e3-4822-af75-0290c12aa6b9": "According to the passage, what does the output activity of the critic's V unit represent?", "7840911c-b200-47bf-8708-2e0a7fbb2ac2": "The context mentions that if maxyL(vu, 6 ,q) < log pv; 6*), it indicates what kind of problem that is very difficult to detect?", "abe60f31-a01d-4d11-8d7d-a5f155bfed32": "The context talks about learning to perform approximate inference. According to the passage, how can we think of the optimization process involved in inference?", "4db7ab13-a1f1-4a1a-ba95-34017c994a17": "According to the passage, what is the distribution of the output unit activation values a induced by the distribution over network weights w?", "85800057-c76b-49f8-af90-648f65070480": "The passage describes using two different methods to obtain the predictive distribution - one based on a simple approximation using a point estimate wMAP, and one based on marginalizing over a using the Gaussian posterior approximation for w. Briefly contrast these two approaches.", "12fe7035-3c5d-492d-b4e6-c3da3c598ef2": "What allows the use of tiny values of \u03b5 in the complex differentiation method described?", "ecc79fac-d72a-40b3-b733-2244961202b9": "According to the context, what two things is it often useful to visualize statistics of over many training iterations?", "3d5d8985-7150-4cc1-9aed-07dfc669e5b2": "What new billion-parameter self-supervised computer vision model did Meta recently create and open source?", "1e775c72-4c39-4544-b2dd-39c5337592f0": "What dataset was SEER, Meta's new self-supervised model, pretrained on before being fine-tuned on ImageNet? How did it compare to state-of-the-art self-supervised systems on ImageNet after pretraining and fine-tuning?", "b36f6983-e4db-4af7-b78e-bef2fe87cb22": "According to the passage, what are some ways that model-based and model-free reinforcement learning processes manifest in the brain?", "8196e1ce-464a-4f33-8279-0546b67cf95e": "The passage suggests that a better understanding of the neural mechanisms behind habitual and goal-directed behavior could lead to what new developments in computational reinforcement learning?", "522859ac-9986-4089-82a5-c94cd1814165": "What causes mode collapse in traditional GANs?", "bf125c0f-6092-4440-bbec-e996afe74188": "According to the passage, what are two practical benefits of using the Wasserstein-GAN algorithm over standard GANs?", "d9c6a016-f926-4855-b099-297704f1becf": "Who are the authors of the paper \"Efficient pattern recognition using a new transformation distance\"?", "f4ae410d-c04b-461c-baf3-8b33b0ae77c7": "Which paper introduced the Tangent prop algorithm for specifying selected invariances in an adaptive network?", "d34f6543-0796-4f19-bf4c-ebffce7d7720": "What is the key difference between the depth of a graphical model and the depth of a computational graph in deep learning models?", "88157ec8-35ac-4d85-b55d-d655ad3ac234": "According to the passage, what are the two key characteristics of the distributed representations used in deep learning models?", "205aef98-8c8b-4a9f-9e10-fa1ccb00d0bc": "According to the quadratic approximation of the cost function J around the optimal weights w*, what can we say about the Hessian matrix H when w* corresponds to a minimum of J(w)?", "b014a7a4-2c2b-4563-8c10-5900b42f56b2": "If we initialize the weights w(0) to zero and assume the Taylor series approximation of the gradient holds locally, what is the expression for the gradient VwJ(w) in terms of the Hessian H and the optimal weights w*?", "bca4076b-8d1d-47fc-bccc-89713809ef5f": "What is one advantage of learning a probability distribution over all relevant variables rather than learning many classification functions for missing inputs?", "02d9a457-95b2-405c-b321-f213ac020794": "The text provides an example of using deep probabilistic models for classification with missing inputs in what domain?", "ddee8903-52bc-45bb-b6ac-78d5f034aeb2": "According to the passage, what is the time and memory complexity of backpropagation through time (BPTT) for a recurrent neural network with O(T) time steps?", "e4dbfce0-5aee-4aa5-acdd-1e59ad9d4620": "The passage mentions that a network with recurrence only between the output at one time step to the hidden units at the next time step is less powerful than a network with hidden-to-hidden recurrent connections. Provide one example of something the former network cannot do that the latter network can.", "8f854222-13a5-41d7-955c-fe944f9ff3df": "What field did the theory of Markov decision processes (MDPs) evolve from?", "b6d7ab64-94f2-4562-b74b-a412f3d05c28": "According to the passage, how do reinforcement learning problems relate to traditional learning and decision-making problems in artificial intelligence?", "19ad93fe-7ecf-422f-b40e-700b11425a8b": "Consider a chain-of-nodes model with nodes X1, X2, ..., Xn. Using the sum-product algorithm, derive the expression for the message mu(X2) sent from node X2 to node X1.", "5aca98e9-c0fb-41da-809f-c61e5e437d2d": "Prove by induction that in a tree-structured factor graph, the sum-product algorithm messages can be passed from the leaves to a root node and then from the root back out to the leaves, such that each node will have received the necessary incoming messages before having to send any of its own outgoing messages.", "1153efba-ca06-4b90-ab44-05cd394951c2": "What is the benefit of using the matrix inversion identity (C.7) to evaluate C^-1 instead of directly inverting C?", "85a08473-3b57-4607-a0e6-c9c32f7e1092": "What are the differences between the posterior mean z|x and the posterior covariance for the probabilistic PCA model?", "13b3943d-219d-4c83-92c2-c99ff4a1dc2e": "Consider a multivariate Gaussian distribution with a precision matrix \u03a3-1 that can be written as the sum of a symmetric matrix S and an anti-symmetric matrix A. How does the anti-symmetric part A affect the Gaussian distribution? Explain.", "4715ad69-31a5-4354-8369-4f8ee4af8484": "Let \u03a3 be a real, symmetric matrix with eigenvalue equation \u03a3ui = \u03bbiui. By taking the complex conjugate of this equation and subtracting the original, show that the eigenvalues \u03bbi must be real numbers.", "45277081-4552-4874-a8dd-a59f1ef2fa51": "What are the two main ways that planning can be used, as discussed in the passage?", "f6b1853e-2738-422b-b8ae-8cd7c489c44d": "The passage mentions using planning with state values to select actions by comparing values of model-predicted next states. Can you explain how this process works?", "e480f164-9a7d-4c7f-9e7d-2896d58f0bb0": "What is the main idea behind continuation methods for minimizing a cost function J(\u03b8)?", "6754c63e-df1d-4117-852e-0f05372b7cbf": "How do traditional continuation methods work? What method do they relate to?", "2b1eeee7-70c4-4aef-a1ca-b48347274e60": "What two pretraining objectives were evaluated in the ablation experiments to understand the importance of BERT's deep bidirectionality?", "120fdd4b-bc87-4513-84d7-e12f045c1998": "How did the performance of BERTLARGE compare to the authors' ESIM+ELMo baseline system and OpenAI GPT on the task discussed in the passage?", "f6d4db26-537b-4232-82bd-cb1cd250188d": "According to the passage, what are two major changes made in the second edition of the book compared to the first edition?", "ec036a48-4238-4c07-b912-27de2e80dd38": "The passage states that after the introductory first chapter, the second edition is divided into three new parts. What do Chapters 2-8 focus on specifically?", "485a29db-de1d-42f8-9586-a05b69faddc4": "The context discusses how in high dimensional spaces, it is unlikely to randomly obtain a low cost local minimum. What theoretical work reviewed this phenomenon?", "6782b3fd-6328-4fd5-9918-1e655fd59514": "The context mentions that for many random functions, the eigenvalues of the Hessian become more likely to be positive as we reach lower cost regions. What does this imply about the likelihood of low cost vs high cost local minima?", "5cb9122d-02d3-440e-8d16-66f8f506ebd0": "What are some of the different types of experience that contemporary ML/AI research enables machines to learn from according to the passage?", "df050302-148c-4fed-a57d-ddcfde5fc45e": "What does the passage suggest is one challenge or difficulty that results from the many disparate narrowly focused ML methods developed so far?", "383d7a4e-9066-4ab7-859f-b4020ca6d69c": "The paper \"Accurate, large minibatch sgd: Training imagenet in 1 hour\" focuses on what technique to allow faster training of large neural networks?", "2f9af25c-bef5-4169-9bd9-b065cee79489": "The paper \"Momentum contrast for unsupervised visual representation learning\" introduces what novel technique for unsupervised representation learning of images?", "82385605-03a1-4511-b494-a2b2b3ebd113": "According to the passage, how can probabilistic PCA be interpreted geometrically?", "9b16fe04-6d49-4fd9-a73c-0f1a7d5a6975": "The passage states that PCA can be viewed as aligning a pancake-shaped region of high probability with a linear manifold. What is meant by a \"linear manifold\" in this context?", "03415bcc-2343-4f36-aedc-b7eadb078494": "What does the set T(s) represent in the every-visit Monte Carlo algorithm described?", "300b3117-1e8d-4db7-88f2-6ad9b8730819": "If the first episode ends at time step 100, and the next episode starts at time step 101, what time step would the return Gt correspond to for a state s visited at time step 105 in the second episode?", "a13a9a4c-0598-448d-bb6e-6150386c8b25": "In the application of backpropagation for computing gradients, what does u^m) typically represent?", "999251a2-11ec-4ce1-80ee-cec1a7c811fc": "When calculating the gradient with respect to the inputs u^(1) to u^(n), what quantity are we trying to obtain the gradient of, according to the chain rule?", "fb080e03-a237-4efd-914e-7606bd69d1b4": "What is the form of the contribution to the gradient from each data point n according to the equation in the passage?", "d3d3b3dd-a444-4c15-b3d5-9143b103ecab": "How does the gradient of the log likelihood function compare to the gradient of the sum-of-squares error function for a linear regression model?", "6e326024-bece-4913-aa26-a03cb59efe86": "What is the relationship between the number of latent variables and the number of observed variables in the generative model described? Why does this relationship mean that the marginal distribution of the observed variables will not be singular?", "725f3e76-3eb8-4395-b0e7-6deab3d9e601": "Why does the success of the independent component analysis approach described require that the latent variables have non-Gaussian distributions?", "8d826e40-0dc5-4831-a607-e307b4205e3c": "What causes the vanishing and exploding gradient problem in RNNs?", "d1453319-075c-4883-9f16-7075c0c473d5": "According to the passage, why is it difficult for RNNs to learn long-term dependencies?", "19d99c06-3b1b-476a-839d-759ed8671cd1": "In the probabilistic PCA model, what is the general form of the latent space distribution that replaces the zero-mean, unit-covariance distribution?", "49e77458-4dca-4765-a8ce-024bbe860657": "When minimizing the cost function J with respect to U, what can we choose for H without loss of generality that makes the math simpler?", "2562febd-ae8d-4ce0-baec-cf68e62ce9da": "What are the computational costs for prediction with a Gaussian process model versus a linear basis function model, assuming the number of basis functions M is less than the number of data points N?", "3ad8e430-a0fb-452c-b928-cbbd938e2c84": "What are two advantages of using a Gaussian process framework over a linear basis function framework for regression?", "528386fe-7cd6-429e-960a-55efdae8a060": "Graphics cards are designed to perform which types of computations very efficiently compared to traditional CPUs?", "efa81c16-6d06-483b-88cf-8872aa2f88bc": "What are two key differences between graphics cards and traditional CPUs that allow graphics cards to perform graphical computations more efficiently?", "5753b92f-9ec3-479b-9304-6cfc4cadce29": "What is the goal of partitioning the data set into K clusters?", "43e2f005-29f9-4c39-8ee8-f2c6c5ee77e7": "What does \u03bck represent in the context of clustering the data points?", "3daa646d-d8e9-4e08-9fc7-a6c56b45bc2a": "What is the name of the normalization constant for the distribution p(z)?", "e405b304-c32c-4431-962a-607576058fe6": "One way to estimate the ratio of partition functions ZE1/ZE2 is to use importance sampling. What distribution should the importance sampling be done from, that allows the partition function to be evaluated analytically?", "ce55b0c1-45dc-4625-b220-734a01996686": "The paper by Altun and Smola proposed a new framework for unifying what two approaches?", "13245d57-1057-4f61-b74d-bca0539d02a0": "Maximum a posteriori policy optimisation was presented at which conference in the given context?", "37de1419-0727-46bd-9bf8-f22a38161fc4": "What is the purpose of subsampling the sequence of samples from a Markov chain?", "6f98a61b-1a0a-4a72-8a68-dca768f1ede8": "How can we view Gibbs sampling as an instance of the Metropolis-Hastings algorithm? Specifically, what is the acceptance probability formula when the proposal distribution is the conditional distribution p(zk|z\\k)?", "5349a4e5-4d51-48f6-9839-7bdbf3e87c4b": "According to the passage, how does an energy-based model with multiple terms in its energy function relate to a product of experts model?", "241b80b5-ae74-4492-9cab-7e41c6a0c506": "The passage states that each term in the energy function of an energy-based model corresponds to what in the probability distribution?", "95a593c8-254a-4750-a9b9-f27fb6a05985": "What is a key strategy for reducing the cost of inference when deploying a model trained on a powerful computer cluster to a mobile phone?", "2922b733-550d-4dd1-98e4-aa493b383bde": "True or False: Model compression works by replacing the original expensive model with a smaller model that requires less memory and runtime to store and evaluate.", "1e077998-1cdb-49f3-bec7-4d07047922ea": "What field of study is concerned with the automatic discovery of regularities in data through the use of computer algorithms?", "fee426de-9e03-4cf3-b1cf-e2dbf4b16efc": "What example of pattern recognition is given that involves recognizing handwritten digits represented as 28x28 pixel images?", "ce46ca8b-dc84-4ed8-976a-ea0272c88824": "What is the purpose of the denominator in Bayes' theorem?", "e943f2c8-08be-4aa2-90ae-ea701a7cd57d": "According to the context, what do the heights of the bars in a histogram represent when a finite sample is drawn from an underlying probability distribution?", "7ab39640-9797-47ce-867e-7e97f46974f7": "What are some factors that influence the choice of minibatch size when using stochastic optimization methods?", "6ebec842-f9f7-406d-b352-6df34bcbaf4b": "Contrast online, minibatch stochastic, and batch optimization algorithms in terms of number of examples used per update.", "23e3db06-a3f9-411a-be15-05a1744406ee": "According to the context, what are some examples of uncertain events that cannot be repeated numerous times to define a probability?", "32c2960f-f062-4b1c-bdcd-bb3e7b8df7c3": "The context mentions using a Bayesian interpretation of probability to quantify uncertainty and revise assessments in light of new evidence. What are some benefits of using a Bayesian approach for quantifying uncertainty according to the passage?", "d139cfb2-e203-47ae-b928-581cc86c85c6": "According to the passage, what additional condition must be satisfied for a matrix to have an inverse, beyond having a set of m linearly independent columns?", "5a5373a0-395b-4a9c-a967-2acc61e4d924": "The passage states that if A is not square or is singular, we cannot use matrix inversion to find the solution to Ax = b. However, it mentions that solving the equation is still possible. What method could be used to solve Ax = b if A does not have an inverse?", "c23ccf9a-efa5-40e6-bd0f-28a46b164aa8": "According to the passage, why are evolutionary methods not well suited for reinforcement learning problems?", "855bfbf8-c143-4cad-acdb-31a19c496bc5": "The passage provides an example of a game to illustrate the general idea of reinforcement learning. What is the name of this game?", "16f8497e-da7c-4580-a121-5570c9ab319a": "What are the four classes of updates for approximating value functions that arise from the two dimensions of whether they update state values or action values, and whether they estimate the value for the optimal policy or an arbitrary policy?", "262ddb07-7a49-44dd-aa32-11b9c373eed3": "What are two key differences between expected and sample updates for planning that must be controlled for when assessing their relative merits, according to the passage?", "cc0664ae-11e5-459e-8222-8025ac6dc605": "If we assume the class-conditional densities are Gaussian with a common covariance matrix, what is the resulting form for the posterior probabilities between two classes C1 and C2?", "fa660b8d-00b3-493c-86c7-474e28d7f2fe": "Consider a 2-dimensional input space x. If we assume Gaussian class-conditional densities with a common covariance matrix, the terms involving x will cancel in the exponent when we compute the posterior probabilities. What shape of decision boundary does this lead to between two classes in the 2D input space?", "b131a4e0-87ba-4c54-8be3-0be0ec758d8e": "What is the key difference between neural auto-regressive networks and traditional tabular graphical models that allows neural auto-regressive networks to avoid the curse of dimensionality?", "75d77e4f-d70a-4300-87d5-7b71262dfe8b": "What are the two main advantages obtained by using a neural network instead of tabular discrete probabilistic models in neural auto-regressive networks?", "659e530c-9076-456f-a96f-92fb51ba7bef": "According to the table, what is the effect of decreasing the weight decay coefficient?", "724a3d49-391f-4d2f-bced-7023f444fe58": "The text states that the popularity of algorithms like logistic regression and SVMs stems in part from their ability to perform well with only __ or __ tuned hyperparameters. Fill in the blanks.", "2512c71b-d921-4e5b-ae37-39de81773a67": "What technique involves finding the eigenvectors of the distance matrix between data points?", "f98bd949-63b3-4a06-a932-ba1f847eabe7": "What two nonprobabilistic dimensionality reduction methods are mentioned in the passage besides MDS?", "49402e52-c091-4eed-bc8d-1f0f5e3bafb6": "The passage mentions that carefully specializing numerical computation routines can yield a large performance payoff. What are some of the strategies mentioned in the passage for optimizing implementation performance?", "0263a611-aff5-4993-aa51-1279d8099a98": "The passage states that GPUs were originally developed for graphics applications. What spurred the development of graphics processing hardware that made GPUs well-suited for neural network computations?", "45e04216-e3c3-49cb-887d-2576e0f79651": "What property of joint distributions does the example in the first paragraph illustrate?", "f2464ad2-23af-490b-a3e9-0e48f6d43b7b": "What equation is made use of in deriving the sum-product algorithm, according to the last sentence of the context?", "c9c12914-eea4-449e-a315-ebc16d565890": "What is the main downside of using grid search for hyperparameter tuning?", "a67d4c80-6c4a-4c3a-9520-2ee58985b40b": "Briefly describe the process of random search for hyperparameter tuning. How does it differ from grid search?", "694ff0aa-b8d5-48fc-b5f9-928010dc38bc": "According to the passage, why does the Least-Squares TD (LSTD) algorithm directly compute estimates of A and b rather than iteratively computing the TD fixed point?", "9b8428df-d61b-4584-94a9-72a3cf440d27": "The passage states that the estimates \u00c2 and b\u0302 are defined as:", "18afd922-4861-462b-b6f0-300d509c3582": "\u00c2 = \u2211t\u22121\u03c4=0 xt(xt - \u03b3xt+1)'", "c6706232-01b8-4413-8520-6545eaa7afd0": "= \u2211t\u22121\u03c4=0 Rt+1xt", "9321c4de-33e2-4355-bf8a-61f61de5275d": "must these estimates be divided by t to obtain the true estimates of A and b?", "0e962bf2-bf09-4719-ab34-3b4902f22070": "What are two advantages of using one-hot encoding for clustering algorithms like k-means?", "8bfa63b4-25ab-4482-8e65-490286d9bb74": "The context mentions that the clustering problem is inherently ill-posed. What does this mean?", "23a3e8fa-1dad-4824-966b-0f3119d380ff": "What are the responsibilities rnk used for in the variational M step of the EM algorithm described in the context?", "b7415740-ca7d-4ed7-9fa3-fa5e513908d2": "Fill in the blank: In equation (10.46) in the context, _______ represents the expectations with respect to the variational distributions of the parameters.", "7db8237f-6a7d-483d-bb73-29b00f7d3b6b": "According to the passage, what is the probability of generating a meaningful English text by randomly picking letters?", "6a085b53-2872-451c-aa1b-852c27776ce6": "The passage mentions two arguments in favor of the manifold hypothesis. What are those two arguments?", "0eeef591-2bc3-4bec-8cb3-1c0261051f2b": "Which 2007 paper reviewed unsupervised feature learning and deep learning techniques, noting their ability to discover intricate structure in large datasets?", "b220e69b-8a51-42b0-b28d-fe876690e764": "According to the 1995 paper by Berridge and Kringelbach, what three factors contribute to reward processing in the human brain?", "22c969d5-ed58-4d1f-bba4-589bf5c9c78b": "According to the text, how do sample updates in reinforcement learning differ from the expected updates of DP methods?", "ce4e670b-f1fa-4405-ac76-374628e65cd4": "What is the TD error measuring in the TD(0) update equation provided?", "4709bc18-de09-42a9-b974-62fffd61867d": "What two researchers' work likely influenced Arthur Samuel's development of a chess-playing computer program that could improve its play by modifying its evaluation function online?", "5b4a000d-ee20-4473-8cc1-fb4e5213defd": "According to the passage, what did Klopf contribute to trial-and-error learning in 1972 that brought it closer to temporal-difference learning?", "ac9ceaf1-8de8-49bd-a8dd-862d659e7e54": "What are some of the earliest demonstrations that showed the effectiveness of data augmentation techniques?", "1a17c41d-0814-4ffe-8d05-468d5722df73": "What are some examples of geometric transformations that can be used as data augmentation techniques?", "993ee5d6-606c-40a9-b6f6-e276318bea53": "In the example task of extracting adverse chemical-disease relations from text, what are the individual elements called that are classified as either true or false relations?", "6a7eae36-4cc9-432d-a3a6-54bb11512e6e": "In the Snorkel pipeline, what is the final output vector called that contains the probabilistic training labels?", "06c84608-05d3-468e-ba42-1f323e87d5bc": "According to the passage, what are two approaches discussed for finding a good reward signal for a reinforcement learning agent?", "0edeb6d8-3baf-4a55-9dfa-6dc1cf96f8f2": "The passage mentions that the search for a good reward signal can be automated by defining a space of feasible candidates and applying what?", "5feb7b6a-14cf-4646-8fba-973c0590eacb": "What are the two main classes of methods described in this passage for solving finite Markov decision problems?", "6a11b3cd-58b2-45ad-a7a3-e7eae1b5252e": "How do approximate solution methods, which are discussed later in the book, differ from the exact solution methods described in this passage?", "1106a3ad-58ee-4423-9149-cfb9944834f7": "What can be a challenge when using convolutional networks to output high-dimensional structured objects compared to classification or regression tasks?", "bd5f9a61-681c-4092-9f28-90a3d1659d98": "What are two strategies mentioned in the passage to produce an output map that is a similar size to the input when using convolutional networks for pixel-wise labeling?", "ad2cf2f0-ff80-4727-be9f-99244e910695": "What type of undirected probabilistic models were used for training in the deep learning approach described?", "603bea31-35c6-4723-9653-8ac25c46f2be": "What dataset was used to test the deep neural networks for phoneme recognition, and approximately how much did this architecture reduce the phone error rate on that dataset?", "49c96527-e05e-4049-a62f-175ac52ae268": "What are the three key ideas that make convolution useful for improving machine learning systems?", "a4f29494-65d7-47fe-8755-f6b086737cf5": "According to the passage, what does convolution provide that allows for working with inputs of variable size?", "b2c9f215-4ce2-4f7d-81a4-f92da2537ba5": "What is the gradient with respect to the parameter w given in equation (10.23)?", "95af5df4-9c2f-410a-9989-c07a92d47089": "Fill in the blank: The gradient with respect to the input x is not computed because ________.", "83c2d5ef-b163-4b97-9f75-d56f38fb5146": "What is the role of the parameter C in the optimization problem?", "12f89cf4-ae0b-4fa0-9a3a-d131a9ef9114": "How is the dual Lagrangian for the non-separable case similar to and different from the separable case?", "8e88099f-413b-432f-aaa4-2acffc65a093": "What was the finding regarding fine-tuning robustness to different masking strategies?", "e17e1052-11eb-43b0-b8b5-1ed90f304b64": "Why was using only the MASK strategy problematic for NER with the feature-based approach?", "05d99f7a-61fa-4695-9b0c-7802a70662a4": "Convert the n-step off-policy TD equation (7.9) to semi-gradient form. In your response, provide accompanying definitions of the return for both episodic and continuing cases.", "3070aeb8-55d0-4624-b17a-be892a3c26f7": "Convert the equations for n-step Q(\u03c3) (7.11 and 7.17) to semi-gradient form. In your response, provide definitions that cover both episodic and continuing cases.", "573edc34-7d9f-4123-8f6e-9a21566c8e8a": "Which conference proceedings published the paper \"Aggregating crowdsourced binary ratings\" by Dalvi et al.?", "a2f2717b-1578-4eb2-84f0-92f802bf53fc": "What type of data did the CTD-Pfizer collaboration manually curate, according to the Davis et al. paper?", "9f0f04b3-b6ae-4eae-ad18-89806b259357": "According to the universal approximation theorem, what class of activation functions can a neural network use and still approximate any continuous function on a closed and bounded subset of Rn?", "ffd7c17c-4e24-420f-b451-1f83205690df": "The text states that even if an MLP is able to represent a target function, learning can still fail for two reasons. What are those two reasons?", "48bc89c0-3815-4a3f-a058-e4618028ea99": "What are the two key equations provided in the context that are used to compute gradients by BPTT for an RNN?", "12b9bd39-058b-4d17-8664-527bc55252a2": "What does the context say is the starting point for the recursion when computing gradients by BPTT? How is the gradient initialization defined in terms of equations provided in the context?", "493e5700-fd93-493a-90f4-0dc587eed055": "What is the key advantage of the Hamiltonian dynamics method over the basic Metropolis algorithm?", "2f9d3052-c521-44d0-bed2-c35ff3aed2f4": "Briefly explain the leapfrog algorithm used in Hamiltonian dynamics to approximate continuous time dynamics. How does the step size \u03b5 relate to the time interval \u03c4 that is advanced in the dynamics?", "c6bdd8bb-a745-467d-98bd-b8f2be66c626": "According to the passage, what actions did the controller take when sensing large positive wind acceleration and no torque?", "35eb2437-8379-4a54-9f8e-d722132da2f2": "The passage states that controlling the angle of attack was useful for what aspect of soaring flight?", "cf9edb9d-7e05-4ad3-96b4-1a6e4510d79b": "According to the context, what is the relationship between the columns of W and the principal eigenvectors of the covariance matrix C?", "66369a7a-bbac-4140-82af-a785161225d9": "If x is a D-dimensional vector mapped to an h-dimensional hidden representation with d < D, what does the context state is the optimal reconstruction error when choosing the encoder/decoder parameters optimally?", "387e7ec1-0be9-4117-9234-4b7841e1f797": "What is the concept of discounting in reinforcement learning? How does the discount rate \u03b3 determine the present value of future rewards?", "fdffd9db-33d7-4725-a072-3c57d7e8f1ec": "Suppose an agent receives a reward Rt+1 at each time step t+1. What would the agent's objective be if the discount rate \u03b3 is set to 0?", "617729c1-957c-4e0c-9d0a-04b30871f088": "What does the f function do in the diagram?", "0ab35f58-a031-435e-8d27-75cf8a6ed81a": "How are the similarity metrics between points in x space and points in y space indicated in the diagram?", "abd35718-cb09-4346-853c-e7f5e97a0abb": "Batch normalization is a method of what, that helps with training very deep neural network models?", "a7d9bf22-0a7e-4dad-b616-af6467a00146": "The L-BFGS optimization strategy can be generalized to include more information about the Hessian matrix by doing what?", "796dcab7-6388-4268-b3fc-f0353cb640ce": "What is the form of the likelihood function for the multinomial distribution?", "8b438488-e597-46f6-8e05-a76e22a13cae": "How can we find the maximum likelihood estimate for the parameters \u03bck in the multinomial distribution?", "c0048b6e-b102-4aa2-a4b1-320365e508d3": "According to the policy iteration process described, why is the value of an improved policy \u03c0'(s) guaranteed to be better than the previous policy \u03c0(s)?", "ca7eafa0-c573-4d88-a379-a67a7d58b392": "What are the two key aspects of Monte-Carlo (MC) reinforcement learning methods according to the context provided?", "7a8cb17b-2c0c-4d69-8972-ac1d22e393f3": "What are two possible explanations provided in the text for why mixing images results in improved performance?", "101d180b-2c23-4c23-82bb-ce78df76e6a0": "According to the text, what are two techniques that can be compared to image mixing to analyze how they learn low-level CNN characteristics?", "5e369c2b-4024-4ec9-8ede-64c3c9b4bc38": "What type of neural network architecture do Conditional Generative Adversarial Networks (CGANs) employ?", "c08d1ca1-4009-4dcd-92fa-65e54fb6ca1e": "According to the study by Lucic et al. (2018), what did the authors find regarding the relative performance of different GAN architectures on image generation tasks?", "e8bcc098-d2e7-4a82-b99f-32f6d0ff3265": "What are two modalities that can be mapped between using the encoder-decoder architecture?", "b669f263-3f7d-4b4b-a784-712b9245c595": "What architecture is used to map between a surface representation like a sentence and a semantic representation capturing its meaning?", "78153998-5d74-459b-9e69-027fbf0237c3": "What did Gal and Ghahramani find regarding the classification accuracy of some models when using the Monte Carlo approximation?", "9c404fc9-626b-4103-ac67-3144fc6e96da": "According to the passage, what are some of the advantages of using dropout as a regularizer compared to other standard regularizers like weight decay and filter norms?", "1180bfcd-28fb-49de-a874-24be3fee7ff7": "According to the passage, why can using a surrogate loss function like log-likelihood sometimes result in lower test set error compared to just directly minimizing training set 0-1 loss?", "3f580ed9-b7fb-47dd-ade1-43a836956c98": "The passage mentions that machine learning algorithms typically use early stopping based on a convergence criterion to halt training before overfitting begins. What are some examples of common convergence criteria that could be used for early stopping?", "9853585e-5c7f-4f8b-bc59-35b3fad1079d": "What is the form of the new approximating distribution qnew(x) obtained after removing the factor fb(x2, x3) from the original approximation q\\b(x)?", "22e3e054-bc98-4f92-bc6a-773ee0d6061d": "After multiplying the exact factor fb(x2, x3) back into the approximation, what is done to find the new approximation qnew(x)?", "3646517d-2676-4ffe-aecf-232a8e79e608": "What is the name of the bias that can occur when taking the maximum over estimated action values?", "7635dc32-3283-47ff-85a2-e9cc31367c84": "The context describes two reinforcement learning algorithms, Q-learning and Sarsa. How do the target policies differ between these two algorithms?", "0016f9a9-db94-46b3-8b67-ad2762908237": "Using the log logistic function f(x) = \u2212 ln(1 + e\u2212x), find the second derivative and show that it is concave.", "5e45334a-c3cb-4c27-9bf0-37d025381b7b": "Consider the function f(x) = \u2212 ln(ex/2 + e\u2212x/2). Find the second derivative with respect to x and x2. Show that it is concave with respect to x but convex with respect to x2.", "6cc0f993-0bdd-4717-b027-43ab7f4eb479": "According to the passage, why do steep cliffs commonly occur in recurrent neural networks?", "9bc1d610-f155-4af7-9613-8194ba058598": "How does gradient clipping help gradient descent perform more reasonably in recurrent neural networks, according to the passage?", "ec529270-0af7-4fdb-b0f0-906243b8fa29": "According to the passage, what are two key advantages of convolutional neural networks over fully-connected networks?", "bb287e17-a2cc-4928-af96-ef0a4b595a40": "The passage discusses the concept of local connectivity. What does local connectivity mean in the context of convolutional neural networks?", "932994cf-d327-4f4f-aa87-1da54faa3246": "According to the passage, why is minimizing the Bellman error (BE) more challenging than minimizing the projected Bellman error (PBE)?", "e1060990-0dac-4b41-8e15-f5cbfd66cf0d": "The passage mentions that Gradient-TD methods can minimize the projected Bellman error (PBE). What are two benefits of using Gradient-TD methods over other methods like least-squares?", "86269c16-8b94-4711-a975-8ea7f25b3271": "According to the passage, what is the end goal when using Snorkel?", "d7513e9f-8838-40c2-812d-f59e6ae15ba0": "The passage mentions that as more unlabeled data is provided, the discriminative model sees more features that co-occur with what?", "8a02c486-f72b-4a34-a3c2-886e8e1f5910": "According to the passage, what are two key challenges of using reinforcement learning for text generation?", "97debc86-e45d-417b-9bb5-0c8cd6ba25d9": "The passage mentions policy gradient (PG) as a popular reinforcement learning algorithm for text generation. What are two limitations of using policy gradient methods that are described?", "0ce2aa18-b43f-438f-bdfe-885bdcc6701e": "According to the passage, why is gradient clipping particularly important when using the approximate backpropagation through time regularizer?", "886dd966-7a66-4925-b166-7e4245d341aa": "The passage mentions that the approximate backpropagation through time regularizer is less effective than LSTM networks when data is abundant, such as in language modeling. Why might this be the case?", "56fa97ad-5168-4b80-ba9b-3eb73d87704b": "According to the passage, what evidence is pointing to a more complicated picture of how dopamine neurons act compared to previous beliefs?", "6f5fc86f-4a57-4640-9161-244c692b70cf": "The passage states that dopamine has functions other than signaling reward prediction errors (RPEs). What are some examples of other functions of dopamine mentioned in the passage?", "5045b0a0-38b3-4e4a-af0f-d09f094fb3a1": "According to the passage, if we have limited training examples, what are two approaches we can take to encourage an adaptive model to exhibit required invariances?", "6d85fbf5-0ba1-44af-91f0-d14302bcae31": "The passage mentions four broad categories of approaches for encouraging an adaptive model to exhibit required invariances. Can you name at least two of these four categories?", "1efe6ce7-33b5-4645-981c-ff097d4e8466": "What algorithm is used to compute the gradient for a neural network?", "62142d63-5c02-40a3-8d09-5e977288fec2": "According to the passage, what are the two key design considerations when applying gradient-based learning to a neural network?", "cd3d7a43-fc8e-4cb8-8130-0d60db29c38b": "How can we modify the similarity metric in the data-instance experience function (Equation 4.2) to pay more attention to high-quality data instances?", "5965673a-4a27-4f60-833d-d6b34aa1c484": "What is the update rule for the model parameters \u03b8 when using weighted supervised maximum likelihood estimation, as shown in Equation 4.3? How does this differ from regular supervised MLE?", "199224db-5961-4877-bf7f-d7628446f7fb": "According to the passage, what are the two core processes that enable learning and planning in Dyna-Q?", "cea622e7-5586-433b-b463-249edc3e3b1e": "The passage mentions that the agent responds instantly to new sensory information. How does the agent accomplish this, according to the passage?", "b300a184-37ea-4f0d-bdbe-c40725dd88d5": "According to the course policies, what is the credit given for assignments turned in more than 48 hours after the late day limit?", "26d62da6-0c3e-4683-b0d7-8130d4483d04": "What are the four main parts of the course project that students will need to complete?", "f8f2efb3-29c7-4b08-b913-9e053d56c902": "Consider a neural network with a single logistic sigmoid output unit and a cross-entropy error function. Derive an expression for the outer product approximation to the Hessian matrix in this case, corresponding to the result (5.84) for the sum-of-squares error function.", "2b38ee7c-7185-40a1-a95e-15554b24261b": "For a neural network with K softmax output units and a cross-entropy error function, derive an expression for the outer product approximation to the Hessian matrix, analogous to the result in (5.84) for the sum-of-squares error function case.", "afa3417e-7dde-465e-88b2-11c3fb52309d": "According to the passage, what are two components of an environment model that the hippocampus is responsible for?", "51228be7-7a44-46ff-873e-43d289e1f186": "The passage mentions \"a voluminous literature on neural mechanisms underlying goal-directed, or model-based, learning and decision making.\" What key question does the author say remains unanswered regarding the neural mechanisms underlying different modes of learning?", "d6da7f0b-3d76-4cdd-b7a4-7fa87d7e0d29": "According to the passage, why is it challenging for each reinforcement learning agent in a team to learn to take the right actions, even though the team's collective actions can improve over time?", "a565e3a7-de5f-4691-ae88-393817229459": "The passage states that for any agent, all the other agents are part of its environment. What two aspects of the input for an agent depend on how all the other agents behave, making it difficult for the agent to fully observe the state of its environment?", "b7c0d9b4-6f0e-4769-ad21-21271740c1b3": "What property of the density function leads to choosing a uniform prior distribution for the location parameter?", "590cdfbb-8634-46a0-9725-ea99db6ce637": "Consider a Gaussian distribution with unknown mean \u03bc. What is the noninformative prior distribution for \u03bc, and how does taking the limit of the variance result in a uniform distribution?", "6193cd87-3aa2-415d-a91d-0c72d1206217": "What does the hidden state variable in the graphical model of an RNN allow us to do?", "3b6f1dd1-113e-4da8-b29c-ec6f1014a296": "How does the RNN provide an efficient parametrization of the joint distribution over observations, compared to a tabular representation?", "750ce885-5447-41df-9559-e7b48fbdcaf3": "If we have a data set with D dimensions, and we want to approximate it using a lower M-dimensional subspace, what will be the dimension of the vector zn representing the approximation of the nth data point xn?", "1ad97265-3431-497f-a2ff-62044361d5a8": "True or False: The coefficients {ani} that represent a data point xn in terms of the complete orthonormal basis {Ui} will be the same for all data points.", "96efd124-2d12-42b4-b312-f17c4e84aded": "let me know if you would like me to modify or expand on these questions in any way. I aimed to create questions that test comprehension of key concepts from the given context.", "89d0850c-7caa-4762-81e9-04ae6597a1d3": "Collaborative filtering relies on what principle to make recommendations?", "cf7bc33f-05ea-41be-b584-f0802bc95019": "What are the two common types of machine learning problems that recommender systems tackle?", "0d54e591-b653-467e-b8df-25676bf261c2": "What is the key idea behind Hebbian learning rules?", "d9f4183f-9fa5-435e-9a03-b3469f01418a": "According to the passage, what are two key differences between Hebbian learning rules and backpropagation learning?", "ecc7a278-1ca7-4519-8e05-705a200776cb": "According to the text, why can k-nearest neighbors and decision tree algorithms be useful for machine learning, even though they are considered less sophisticated?", "3824ec4f-4379-4e44-8d6c-5e1fec2ed3f5": "What are some differences between supervised and unsupervised learning algorithms, according to the text?", "6d0bb139-a39c-43ac-b8f6-3fb0493fa4b1": "If we implement gradient descent incorrectly for the biases in a neural network, but the network still achieves reasonable performance, what may be happening?", "4395706a-37fe-43bb-a5b8-1da612b5c5a6": "When evaluating the performance of a new machine learning model, why can it be difficult to determine if the achieved error rate is as expected or suboptimal?", "103c7e1b-52f6-43ee-a78f-de5439280f4f": "What is the key equation that expresses the factorization properties of the joint distribution for a directed graphical model, according to the passage?", "9cf9fb77-4eeb-44da-99e5-ded83ab43706": "If x5 has parents x1 and x3 in a directed graph with 7 nodes, what variables will the conditional distribution of x5 be conditioned on, according to the passage?", "a1296221-85be-404f-8126-444b85f64978": "Give an example of a location-scale family of distributions and explain how we can generate random variables from this family using an auxiliary variable.", "59139138-5c07-4407-ab6d-1dc3bf9f977e": "The Log-Normal distribution is an example of which method of constructing a random variable? Explain how the Log-Normal distribution is constructed using this method.", "c559bfd9-8644-445d-b6bd-35bb4bc54910": "What does Klopf's hedonistic neuron hypothesis propose about the collective behavior of neurons in an animal's nervous system?", "92556a50-18fb-4bda-ae41-6a8121a20a25": "How does the closed-loop interaction between a neuron and its environment help explain the neuron's behavior, according to the passage?", "d7fc78fe-dbfb-4abb-8abf-a9269486de49": "Based on Section 9.7, if we have a Gaussian mixture model and we maximize the complete-data log likelihood, what happens to the means and covariances of each component? How are the mixing coefficients determined?", "7feb70e2-96ec-4e51-b160-1ff692519ac4": "According to Section 9.11, what happens to the expected complete-data log likelihood for a Gaussian mixture model with covariance \u03b5I as \u03b5 goes to 0? How does this relate to the K-means algorithm?", "dcc7d323-af0f-4851-b8dd-f48af61bbb42": "According to the context, when will the constrained stationary point lie in the region where g(x) > 0? What is this case called?", "a1f352b9-faa8-47d8-b54c-8fa8a4a0818e": "The context mentions two kinds of solutions that are possible for maximizing f(x) subject to the constraint g(x) \u2265 0. What are these two kinds of solutions? Briefly explain the difference between them.", "bfdeae8f-e689-4ed3-97e8-81f89967cdba": "According to the passage, what is the key assumption that enables multitask learning to work?", "caf2423e-ffae-40e1-9696-a53f36d0d04c": "The passage states that multitask learning involves sharing some layers while keeping others task-specific. Which layers are typically shared vs task-specific in a deep neural network doing multitask learning?", "1a6d456b-5a8b-4406-96bf-61af54f727c1": "According to the context, how can we write the expected squared loss function?", "05a6cd0a-8d14-4d31-a99c-1e5c789b48ac": "The context mentions that we might use techniques like regularization or a Bayesian approach to determine which conditional distribution?", "e8bbd8b4-cd1a-4c7c-aada-d99a27b10446": "What are two key differences between the max-sum and sum-product algorithms for performing inference on tree-structured graphs?", "78efbb12-f724-41dd-b49c-1e2bb10b1c8c": "What is the general approach used to perform exact inference on graphs with loops, as briefly outlined in the context?", "eaf9600b-b7c9-4acb-a032-71bdcd1c1f31": "Which conference was the paper \"On adversarial examples for character-level neural machine translation\" published in?", "716863b9-d9e8-4845-b130-4c0b67ef9f1d": "What task was addressed in the paper \"Hotflip: White-box adversarial examples for text classification\"?", "e490c4ab-495b-441b-960f-55a522c1a85f": "Which GAN architecture allowed for generating higher resolution and more realistic images compared to previous GANs?", "c09480d6-a84f-4ad7-a638-f01371ab2bc6": "In what year was a technique published that sped up neural style transfer by using perceptual losses?", "cd87bddd-ccd9-442e-a27e-03ff84ee31e8": "According to the passage, why is parameter sharing important for sequence modeling?", "a2247c02-aa9e-4ec2-9658-9794e0e320c2": "The passage provides an example of extracting the year '2009' from two different sentences. What is the point being made by this example?", "ea3ce2f0-9e86-4610-983a-c3edb81ab838": "What is the order of operations required to evaluate the complete Hessian matrix using the symmetrical central differences formulation?", "e50d6153-aa75-4077-8d03-34e249626f22": "What is the more efficient approach mentioned that can calculate the Hessian matrix in O(W^2) operations instead of O(W^3)?", "e3f59bfa-0468-427e-a1b4-f6bc229eca86": "The forward-backward algorithm provides a way to compute what for a hidden Markov model?", "efd4adad-496d-4f17-b17b-9befbc68d118": "What technique is used to transform the directed graph of a hidden Markov model into a form that allows inference using the sum-product algorithm?", "f409407b-ded8-4f5a-a57c-0878bb1ae9fb": "What are two key characteristics of the k-nearest neighbors algorithm that distinguish it from other supervised learning algorithms?", "b80a3388-9eaa-4267-a03c-36e5f6dcb607": "How does the k-nearest neighbors algorithm make predictions on new test inputs? Briefly walk through the steps.", "d7255483-9d08-4ceb-9723-e958bf3b3f99": "What type of neurons respond with bursts of activity to novel or unexpected stimuli, and what kind of movements do these stimuli trigger?", "a7347fa5-90c3-4cbb-8a13-8a518a7583fd": "Parkinson's disease is characterized by motor disorders and deficits in self-initiated movement. What type of neuron degeneration is thought to be a cause of Parkinson's disease symptoms?", "bfe07bc3-c0dd-4851-b418-d472dbd4d9f0": "What is the key difference between greedy layer-wise pretraining of a Deep Belief Network (DBN) versus a Deep Boltzmann Machine (DBM)?", "f89ac08f-9ab2-4491-aae8-397016a65fe0": "According to the passage, what procedure is recommended when transferring RBM weights to a DBM, particularly for layers in the middle of the stack? Why is this procedure recommended?", "eba374b1-5aac-4e2f-817a-0fcb8128db8b": "What does the weighting coefficient \u03b1m give greater weight to in the AdaBoost algorithm, according to equation (14.17)?", "c7ef0c47-32d5-4c16-a59d-ce224f4b7cc9": "What type of simple classifier does each base learner consist of in the AdaBoost example illustrated in Figure 14.2?", "04f8fa37-5437-4573-a36f-7fe958d429fd": "What are the two key algorithm parameters for Sarsa(\u03bb) that are mentioned in the context?", "90586443-38b2-43fb-bb06-6cbc6b1e7597": "How does the trace decay rate \u03bb parameter in Sarsa(\u03bb) relate to the n-step parameter in n-step Sarsa?", "0b2f3a19-4cb4-41b2-b4e1-ff1b13d85fbf": "What property allows us to remove the first term from equation (2.58) to get equation (2.59)?", "32e3663f-0166-41ae-be14-d890a24b2560": "Fill in the blank: In equation (2.60), c is chosen to ___________ the expression -2a'g(c) + g(c)'g(c).", "9323c4fa-0ef0-4f90-8060-c1afff744db8": "What are the two key factors responsible for the improvements in neural network accuracy and complexity of tasks they can solve between the 1980s and today?", "47f1c1b9-da3a-4438-8f02-0f0a83962845": "According to the passage, why is the size of neural networks critical for deep learning?", "f2310792-4d2e-49c5-992f-98a0a7de7772": "What are some of the terms used to refer to the approach of learning from an expert agent's behavior?", "0733d7d9-8969-4aa1-b565-112e99b5cda0": "According to the passage, what are two ways that learning from an expert's behavior can be accomplished? What is the difference between these two approaches?", "42458077-c200-44e9-911d-e1437c10ea53": "What is the goal of the learning algorithm described in the example?", "b0155e5b-9b04-437a-b21c-f715083daec3": "According to the passage, when does the XOR function return 1?", "8276901f-c3cb-4810-a647-9ca674ad343c": "Given the initial values described in the context, what would the estimated value of the first state be after one update to w? Explain your reasoning.", "cc62b7f8-d10f-4259-bec1-ef39473f35be": "How would the behavior of the algorithm change if \u03b3 was reduced? Explain what would happen to the TD error and the updates to w if \u03b3 was much less than 1.", "7e405b0e-bc41-4c5c-9f97-d63cf8586492": "According to the passage, how does ICA help separate brain signals from other electrical signals measured at the scalp?", "d14f8420-f0df-4d2c-bd9b-69479551d373": "What are some common criteria used by ICA algorithms to make the elements of h independent from each other, instead of using maximum likelihood?", "0bae4398-a87c-45a3-a9ca-4477d829e029": "What is the Monte Carlo target Ut equal to in the gradient-descent version of Monte Carlo state-value prediction?", "3a206214-a9dd-48e7-8294-241a4155a1c7": "What does the gradient-descent version of Monte Carlo state-value prediction guarantee according to the context information?", "746eb35f-74f0-4c71-abf6-6ff0bb374d7a": "According to S., Watkins, C. J. C. H., where can one find their work on learning and sequential decision making?", "3db66ba2-ae88-4546-bf01-ff2f63c462c5": "Which journal published the paper by Baxter and Bartlett titled \"Infinite-horizon policy-gradient estimation\"?", "d9249331-7d90-414c-bff0-f16c04d6e392": "What is the key idea behind the deep learning approach, according to the passage?", "e2811eac-b56c-4f3b-ad60-904b60f1def4": "What is the Restricted Boltzmann Machine (RBM) an example of, according to the passage?", "caf99bde-dd27-4a16-9f5c-d4040c6569e3": "What dataset sizes were used in the comparative data augmentation study conducted by Shijie et al.?", "7e609ab2-9fae-4951-893f-31a43c53bcee": "What augmentation techniques were found to perform better than others in the study by Shijie et al.?", "6bf8e729-abce-4e90-9f15-fa5dbe3a1130": "Using the provided scheme for choosing target values, what would be the target for a pattern from class C1 if there are 100 patterns total with 40 in class C1?", "b204d9d4-d0f9-4622-973a-a548f60db14e": "The equation for the weight vector w derived using the provided approach coincides with the weight vector found using what other criterion?", "4197a888-50fa-4c7c-95f8-2f2308294ff5": "What problem does Snorkel aim to address according to the abstract?", "e70121e2-913b-4c06-a438-62e76dd0c43c": "What is a key difference between hand labeling training data versus using labeling functions according to the abstract?", "6d1ab808-50b8-40aa-b6d8-f911ac7b782b": "Why does the Gaussian RBM model only allow for a diagonal precision matrix?", "62e09325-7f7b-4bc4-8566-7f86daae8c45": "What are two alternative models to the Gaussian RBM that try to better capture the conditional covariance structure in real-valued data like images?", "71e5c920-f188-461f-99a3-0050fec5d4fa": "What type of network activation functions did Stinchecombe and White show can be used for universal approximation, besides sigmoid functions?", "6ea5624f-745a-40f4-b6c7-947024cf6533": "According to the work by Spiegelhalter and Lauritzen, what structures can sequential updating of conditional probabilities be applied to?", "8e623ce6-0f18-4d8a-8ca6-67443bede1fb": "What are the two types of mistakes that can occur when diagnosing cancer, and how do their consequences differ?", "24cbf285-5dd8-494f-b525-008945469841": "What is a loss function, and how can it be used to help make better diagnostic decisions when the consequences of different mistakes are not equal?", "739127c4-5dce-487a-b864-1a2c73240dcc": "What can happen when training with a penalty on the norm of the weights that makes explicit constraints preferable?", "82e6f7bb-265b-4efa-9f17-c2c379e7ee06": "How can explicit constraints implemented by reprojection help provide more stability during optimization with high learning rates?", "ea73faa9-51d5-4e30-a2dd-99d7432d0196": "According to the passage, why are local minima with high cost more problematic for gradient-based optimization algorithms than local minima that are equivalent in cost function value?", "076968e3-2818-4b5d-add4-ca67e577fcab": "The passage states that it remains an open question whether neural networks of practical interest have many problematic local minima. What are the two specific things that are still unknown, according to the passage?", "e7fbcf4c-2870-459e-b497-2fcdad7040ea": "According to the passage, what authors discussed the idea of \"Blind variation and selective survival as a general strategy in knowledge processes\"?", "3e29b831-a826-4fa8-b7cc-4913ecc55f31": "The passage mentions research related to \"Dopamine-mediated regulation of corticostriatal synaptic plasticity\". Which authors specifically discussed this topic?", "86b6c779-7575-4731-a50a-007fac2702ce": "In the basic neural network model described, what are the w^(1)_j0 parameters referred to as?", "8c06ff74-549e-4661-9f23-4f4804093d34": "What is done in the first step when constructing a basic neural network model according to the description?", "716aec51-5017-4349-95e4-121ea7d670e6": "What are some of the key differences between variational inference methods and sampling methods for approximate inference? Variational methods make global approximations and can't generate exact results, while sampling methods can give exact results but are more local. Variational methods tend to be faster while sampling takes more computation.", "d6eee9c0-2ebd-4b98-8e76-b6f3db8ec007": "What is the historical origin of variational inference methods? Variational inference has its origins in 18th century calculus of variations developed by mathematicians like Euler and Lagrange. While standard calculus studies derivatives of functions, the calculus of variations studies extrema/optima of functionals.", "7cd22d43-7d73-4fe7-bf47-bfdd932f5e2b": "According to the passage, who proposed a synaptic learning rule similar to Seung's, in which each synapse acts like a chemotactic bacterium?", "aa3d6fd0-d270-4430-9a45-0d93aaaf21b8": "The passage mentions three phases in the research on the behavior of reinforcement learning agents in team and game problems. Who is credited with beginning the first phase with investigations into learning automata in connection to bandit problems?", "21c4a14b-ecca-4028-b199-611b73cdce3e": "According to the passage, why does stochastic gradient descent minimize generalization error most clearly in online learning scenarios?", "f0f9295d-85e0-4031-9b71-2779451dd471": "The passage states that on the second pass through the dataset, the estimate of the generalization error becomes biased. What causes this bias?", "a7795321-d8ce-4e29-ae1c-5747c52db184": "What is the main difference between Monte Carlo methods and the bandit methods discussed in Chapter 2?", "44776c2d-5b49-43ea-9c39-c33c2d132d0b": "How do the value functions and policies interact in Monte Carlo methods to attain optimality, and how is this similar to the process in dynamic programming?", "ae73afae-5932-4f5d-8b21-c32bad83183a": "According to the passage, what is the main reason that random search finds good solutions faster than grid search?", "0ecbeedd-758d-4f49-a934-8c55a957fdea": "The passage states that with grid search, if the change between two values of a hyperparameter does not make much difference in validation error, what will occur?", "342258f8-8a22-4d6a-94af-356f294c265b": "What are the two key steps in making optimal decisions according to decision theory?", "291a6156-b267-4e55-8223-cb3d0a7ce91c": "Once the inference problem has been solved, what does decision theory say about how to make optimal decisions?", "72fe7412-6701-40c9-bb57-8018e7c4ee07": "What is the relationship between q(h|v) and the lower bound L(v,\u03b8,\u03c6)?", "7677fdaf-f53a-43be-b2ef-cef4a87008dd": "What are two ways we can make approximate inference less expensive, according to the passage?", "fffb4e86-b429-4e77-940a-22dfc2f24df4": "What is one way the activity of dopamine neurons differs from the predictions of the TD error model when a reward arrives earlier than expected?", "d186893c-45ec-4549-9eed-bcea065b7c1f": "According to the passage, how did Suri and Schultz propose addressing the mismatch between dopamine neuron activity and the TD error model when a reward arrives earlier than expected?", "6d05c1b9-3da1-4eb6-aa0b-5318e3ba9735": "The context describes how a neural network can solve the XOR problem. What is the rectified linear transformation that is applied to the outputs of the hidden layer?", "fe233163-02b5-4f9d-85b4-6b7ec9e16bd5": "The context mentions that there can be billions of model parameters and training examples in real situations. What optimization algorithm is mentioned that can be used to find good parameter values in these large-scale problems?", "debe3b96-51e2-4787-8ea7-7a736b50cd48": "According to the passage, why is there no advantage in using two-layer neural networks over principal component analysis for dimensionality reduction?", "49e52ebd-545c-40af-83eb-cf1c8598bbf4": "The passage states that the situation is different if additional hidden layers are permitted in the network. What is the example given of a network with additional hidden layers that can overcome the limitations of PCA?", "86c6bf8e-e9e8-4df6-89a6-9d2370981da8": "According to the passage, what is the core mathematical challenge of learning long-term dependencies in recurrent neural networks?", "15fc3031-c4d5-4fc0-8063-de2f56a865c5": "The passage mentions that Socher et al. propose using what types of operations in place of the traditional artificial neuron computation?", "c33b1771-20e1-4420-933c-4b84d33c13df": "In the incremental EM algorithm for Gaussian mixture models, how are the sufficient statistics for the means updated between iterations? Explain the formulas used.", "fcc20245-b971-45ee-b99c-b9a51397f18c": "What are two key advantages of using an incremental EM algorithm compared to batch EM for Gaussian mixture models?", "58bf2bd6-7989-444c-a544-a4caf4c68871": "According to the context, as the order M of a polynomial increases, the growth in the number of coefficients is like ___.", "5d16f965-0a55-4472-9598-5883bd7d59ea": "The context states that our geometrical intuitions can fail badly when considering spaces of higher dimensionality. As a simple example, it gives the fraction of the volume of a sphere of radius 1 that lies between radius 1\u2212\u03b5 and 1 in a space of dimension D. What happens to this fraction as D increases, for a fixed small \u03b5?", "1720cc26-1c90-4783-901f-de903d29ac9b": "According to the passage, what makes the true posterior density p\u03b8(z|x) intractable in the described scenario?", "f478f055-afe5-482e-9a8c-6825f570bd62": "The passage states that sampling-based solutions like Monte Carlo EM would be too slow for the described scenario. What aspect of the scenario makes these sampling-based solutions impractical?", "f2827818-1e75-4244-9bbd-e83d4c2462db": "What does local contrast normalization ensure compared to global contrast normalization?", "0277e950-9b35-43e6-bfa9-e28722204723": "What are some different strategies for implementing local contrast normalization?", "3afb97c1-3dc7-4551-85d4-c6997ce4df1d": "What are the mild conditions outlined in section 2.4 for choosing an approximate posterior q\u03c6(z|x)?", "41c0f7d3-27cc-4b69-9453-56c3a2d60140": "Explain the Monte Carlo technique used to form estimates of expectations w.r.t. q\u03c6(z|x) using a reparameterization trick and an auxiliary noise variable \u03b5. How is this applied to the variational lower bound?", "b279c295-b227-4c32-a913-aa32b0fab607": "In the example 19-state random walk process described, what were the initial values for all the states?", "86d6cca4-7c1c-43ea-9a9c-caa083b96080": "According to the passage, how did the estimates for states D and E change after the first episode that went from C to E and terminated on the right with a return of 1, when using a 2-step method?", "60c9198e-a144-4c9e-8713-e97e32c5f607": "What was the key motivation behind Ipek, Mutlu, Martinez, and Caruana's reinforcement learning memory controller research?", "6a37bc90-46df-4deb-a728-81cafe25e3fe": "What are some key characteristics of DRAM (dynamic random access memory) systems that make controlling and optimizing their performance challenging?", "93fb2c20-118d-4bfa-b2c7-f920ffb79ae8": "According to the passage, what is one advantage of using a single K-class discriminant function over individual two-class discriminants?", "417f58ec-0fcb-4d80-8dbf-de02ff8da571": "The passage states that the decision regions created by a K-class discriminant function are always singly connected and convex. What property of the decision boundaries leads to this?", "3094b889-95c2-4e2d-b063-7eb1e7db6c52": "According to the passage, what two features of the environment did Reddy et al. find allowed the reinforcement learning agent to best control the glider and gain altitude?", "c7384535-d2ba-47c0-ad75-df25d6138bed": "The passage states that \"Vertical wind velocity is indicative of the strength of the thermal but does not help in staying within the flow.\" Why does vertical wind velocity not help the glider stay within the rising column of air?", "5cc4c15c-fe47-4c8a-ae2d-cd5535f9bba6": "What are two common approaches for training a neural network to make predictions based on input x?", "b7dea182-3906-45cc-be84-ea035a8b9f66": "What is weight decay and how can it be used when training neural networks?", "93662d6b-785c-4a1d-8124-545513f5b950": "According to the context, for what values of \u03b1 is the divergence D\u03b1(p||q) zero-forcing?", "30edb352-d97f-4bf2-841b-28e114f77b1f": "The context mentions that for \u03b1 \u2265 1, the divergence D\u03b1(p||q) is zero-avoiding. What does this imply about the support of q(x) relative to the support of p(x)?", "6f5e9a23-c706-4635-b543-caee49490d40": "What is the computational cost of naively evaluating the marginals p(xn) for every node n in the Markov chain using the propagation algorithm described?", "7f25c541-79bc-4dbe-b434-82a100bd177f": "How can we reduce the computational cost of evaluating the marginals p(xn) for every node compared to the naive approach? Describe the strategy of first propagating messages from one end of the chain to the other and storing intermediate messages.", "f1cad431-2513-4382-b8ba-d15dac5386fb": "According to the passage, what are two key benefits of using dropout as a regularization method for neural networks?", "7d9bdf00-4af6-498b-b7ee-02da05b9c856": "The passage mentions that bagging multiple large neural networks can be impractical. What does dropout provide that makes bagging more feasible for large neural networks?", "e54e93ab-9f02-42bf-af42-d6816e87ebf6": "What is the displacement vector for the asymmetrically offset tilings shown in the lower part of Figure 9.11?", "32f75f55-539e-4313-9783-2a6779a2927e": "According to the passage, what displacement vectors do Miller and Glanz recommend using, and why?", "d6f4fb57-cad7-4467-873c-dc3511fb5ede": "What is the full title of the edited book by A. Hudspeth and A.J. Hudspeth that is referenced?", "0a2c5e90-fecc-4c25-95fd-829e61a6b76b": "According to the authors Kashyap, Blaydon, and Fu, where does their chapter on stochastic approximation appear? What is the name of the book it appears in and who are the editors?", "69b4f00b-6e8d-4704-afe7-92abf74394d7": "What is the key innovation of the sequence-to-sequence architecture compared to previous architectures mentioned in the passage?", "cc8efb25-4ff3-4e72-86bf-d47c3c96114c": "How is the last state hn of the encoder RNN used by the decoder RNN in the sequence-to-sequence architecture?", "53fe8e3b-6fe5-4bb8-b028-cdb81318b528": "What are two drawbacks of n-step TD methods compared to one-step TD methods?", "36166879-4289-4372-b40b-0de75dfaaeba": "How do the n-step action-value update rules generalize Expected Sarsa and Q-learning?", "1c374753-c0df-44ba-b03f-23ad5091f1cf": "Consider a vector x of continuous variables with distribution p(x) and entropy H. If we make a nonsingular linear transformation y = Ax, what is the entropy of y in terms of H and A?", "387d97de-4c45-43c7-ad9b-a75aefb8268d": "Suppose the conditional entropy H between two discrete random variables x and y is zero. What can we conclude about the relationship between x and y for values of x where p(x) > 0?", "3b9823e7-81ff-41fc-a56d-f61a5bafbdea": "In the example of controlling a robot arm to do pick-and-place tasks, what are the suggested components for the state representation?", "be164f19-8d4c-418f-80eb-06973d106c80": "The text mentions that rewards in reinforcement learning tasks are always single numbers. For the robot arm example, what reward ideas are suggested to encourage fast, smooth motions?", "4adc3810-87f9-49b1-8d9b-21ff684f2d1c": "What is the range of possible values for the cosine similarity Cij between network output vectors Zi and Zj according to the Barlow Twins method?", "4f2dc8c5-2dce-4507-b0c6-27d9a8280ced": "What are the two main terms in the Barlow Twins loss function and what does each term aim to achieve?", "bc447a63-67ff-45ac-825f-0602f8d9ca9f": "What are two traditional uses of autoencoders that are mentioned in the passage?", "54ea0d37-3e78-45e5-9bef-5a0de8bd312e": "According to the passage, what technique can be used to train autoencoders that is also commonly used to train feedforward networks?", "effcf80f-a619-47a3-8ded-1809581d26ea": "What year was the QANet paper published that proposed combining local convolution with global self-attention for reading comprehension?", "e3ede98a-1992-4e36-b157-29e05dd1d0ad": "The paper by Zellers et al. introduced what large-scale adversarial dataset for grounded commonsense inference?", "752ac661-10b0-43b5-8a2a-c8a9e0b5419d": "What are the key differences between the gradient update rules for FOMAML, MAML, and Reptile as shown in the equations? Focus on the different terms present in each gradient.", "bfa6a40f-c039-417e-b91b-5033f2accd47": "What is the meaning of the O(a2) term that appears in the gradients for FOMAML, MAML, and Reptile? How does this term relate to the step size a and the inner gradient updates?", "b3af1ee5-fe13-4eba-bc1f-4a7a4fc9f230": "In the episodic actor-critic algorithm, what are the two parameters that are updated on each step?", "d2a70cb8-04c9-47df-8b22-87807a631569": "For the continuing actor-critic algorithm, how is the performance defined, in terms of the average reward rate per time step?", "792203d6-4dec-4ffd-b334-c3e372a8c1f0": "What property of the technique for computing the Hessian matrix mirrors standard forward and backward propagation equations?", "dbc359a6-e62a-469a-90e2-471765dd4f13": "According to the passage, how does the number of hidden units M affect generalization performance?", "01280b51-f218-44b8-ba70-2aab03cc54b0": "What makes recurrent neural networks well suited for processing sequential data?", "5e6184c3-1738-4c1e-85b9-a64f6abfac36": "How do recurrent neural networks differ from standard multilayer neural networks?", "eab54cee-acf2-4da2-a60d-a3a9383a4339": "What are two ways that state dependent termination generalizes the episodic setting as discussed in the passage?", "462d0ac4-e33d-4927-a2b8-cb3cc2033a49": "According to the passage, how does variable bootstrapping affect lambda returns? What is the difference between state-based and action-based lambda returns?", "ffc34d7d-618b-4bef-a493-061fe1a83dac": "What is the goal of regression?", "295def43-4192-497d-814f-d18847cfbc2a": "What are linear regression models linear functions of?", "5cad9fec-48a4-49bc-8bcb-dff957dd7a9b": "What is the formula for estimating the parameter b in support vector regression?", "68400566-957b-4236-b140-de6f86dc31c3": "How does the alternative formulation of support vector regression differ from the original formulation? What parameter does it use instead of \u03b5 to control model complexity?", "dd1833ae-a957-4bbd-80f0-6f5b93223d0b": "What was one issue with early artificial neural network research according to the passage?", "2bec03de-6088-4b75-8a1e-17c26071b98d": "According to the passage, how did some artificial neural network researchers and textbooks blur the distinction between reinforcement learning and supervised learning?", "d0a5de4b-584f-4e5d-af89-d7abb8e0ae05": "According to the passage, what are some of the discrepancies between the temporal difference (TD) theory and experimental data on the brain's reward system?", "5451b332-93a9-451a-b6ca-705a779839bc": "The passage states that the reward prediction error hypothesis has been functioning effectively as a catalyst for improving our understanding of the brain's reward system. What are some of the ways this hypothesis has done so, according to the passage?", "b0a5470d-3b52-4852-bfc4-e3c80adaf460": "What are the 3 main contributions of this survey on data augmentation techniques for NLP tasks?", "972d99ce-4d11-4a7a-9f70-cd86d45ccda7": "According to the experiments done in this survey, which augmentation method works best for supervised learning and which works best for semi-supervised learning?", "364b42dd-a5f3-4fc7-96e1-e1e0fde748aa": "What is the main idea or purpose of contrastive representation learning discussed in the Lil'Log article? Summarize the key points.", "46cdbe26-d8b5-4a23-8ae3-b3436a34ba3c": "The table shows several unsupervised model results on semantic textual similarity (STS) benchmarks. Compare and contrast the performance of two of the models in the table. What conclusions can you draw about their effectiveness for semantic similarity tasks?", "1e14e70c-0dde-4a14-ad4e-7c4d6e409996": "Given a prior distribution p(\u03bc) = N(\u03bc|\u03bc0, \u03a30) for a D-dimensional Gaussian random variable x ~ N(x|\u03bc, \u03a3), derive the expression for the posterior distribution p(\u03bc|X) after observing data X = {x1,...,xN}.", "41e1f1e7-7e0f-476d-ba5a-a5b6c60f0f74": "Consider a Gaussian random variable x with distribution N(x|\u03bc, \u03c32). Starting from the posterior distribution after N-1 observations, p(\u03bc|x1,...,xN-1) = N(\u03bc|\u03bcN-1, \u03c3N-12), multiply by the likelihood p(xN|\u03bc) and complete the square to derive expressions for \u03bcN and \u03c3N2 after N observations.", "57ac5bcd-d17c-443e-a341-563155b624af": "What is the purpose of having separate Q and Q' target action-value functions?", "61675336-b914-4b4a-aa36-c32a15a4f06e": "What are the two ways an action at is selected during the learning process described?", "2b7cf9aa-798e-4d02-a395-58569da91cbc": "What happens to probabilistic PCA as the noise parameter sigma goes to 0?", "ba7c6337-771a-4799-977a-6fc7e0372ccf": "What is one key difference between PCA and ICA in terms of how they model the underlying factors?", "6bfbd849-c841-4208-b07f-37fcbfcade76": "According to the passage, what are some forms of regularization that should be included from the start when training a model, unless there are tens of millions of examples or more in the training set?", "b3c8e19d-134e-4290-a7d2-216e16093778": "The passage mentions that batch normalization can sometimes reduce generalization error. How might batch normalization help reduce overfitting, according to the passage?", "d5c04d50-0697-4f93-95f6-9010138b1348": "What optimization algorithm is typically used for a simple objective function like vanilla supervised maximum likelihood estimation?", "91f3a0dd-23a3-4c23-ad66-777441db6230": "According to the passage, what is needed for optimizing more complex objective functions like the general SE formulation?", "c7799550-d295-4a65-affb-31a2c743c7dc": "According to the passage, why is TD(0) faster than Monte Carlo methods in batch form?", "5fbe797c-3569-453d-b51e-b7961f22a0e6": "The passage states that nonbatch TD(0) may be faster than constant-alpha MC because it is moving toward what kind of estimate?", "85df2119-0f76-429d-b2a9-b9067a3257d9": "According to the text, if the importance sampling ratio \u03c1t is zero, how is the n-step return defined in the off-policy case?", "98650c77-303a-4ca2-ba8c-8da37571bf56": "How does the use of a control variate in the definition of the off-policy n-step return help reduce variance compared to a simple weighting?", "90e8c2d1-207b-4fef-adbb-335d8fda8079": "According to the passage, what are two advantages of using cross entropy or the Gini index over misclassification rate for growing a decision tree?", "6efe6f42-3a31-4332-a83d-8fd952fff7fc": "The passage mentions that tree-based methods like CART can be very sensitive to small changes in the training data. What is one problem this can cause, according to the passage?", "cf480aa9-402c-416a-aca8-8b15fb659b53": "According to the article by Werbos (1988), what method did he propose that became the foundation for the backpropagation algorithm in neural networks?", "46252adf-ea06-4e1c-ad89-8fb028e28017": "In the chapter by Werbos (1994) in the Handbook of Intelligent Control, what two main approaches for system identification did he discuss?", "ee5278a1-b43b-4a80-8c8e-3a42e2ef2dac": "What are some of the limitations of using a squared error function for classification problems?", "c6cea59b-2291-4efc-b559-c7024516af9a": "The one-versus-the-rest approach is commonly used to combine multiple two-class SVMs into a multiclass classifier. Can you explain this approach and discuss one potential problem with it?", "069eecc0-3c3f-46b8-b1ae-ecd81f42a74c": "According to the passage, what are some of the advantages of RTDP (real-time dynamic programming) over conventional sweep-based value iteration?", "33ee61cf-021a-409e-aecd-74a3c0dafdfc": "The passage mentions that checking for the emergence of an optimal policy before value iteration converges requires considerable additional computation. Why does it require considerable additional computation?", "e834fdaf-f093-414d-85d5-bf9810c4035e": "What are two advantages of using adversarial networks over methods based on Markov chains for generating distributions, according to the passage?", "c6d7dfb2-300d-4061-a4c2-adf1fb553411": "The passage states that with adversarial networks, components of the input are not copied directly into the generator's parameters. Why does this provide an advantage over other generative models?", "c2076dd4-eb82-4b28-a30e-06dfe0c05c5e": "What does the parameter norm penalty do, according to the passage?", "7807b2fa-7526-44e2-a18b-062d0e19db3f": "The passage states that if theta is the L2 norm, then the weights are constrained to lie in what kind of region?", "d76d6214-8ac3-483a-9392-497a1b6b6f09": "What publication venue was the 2019 paper by Zhang and Bansal on semantic drift in question generation published in?", "63122de0-561e-45cb-a534-11d23c17ec50": "What topic did the 2020 paper by Zhang, Sheng, Alhazmi, and Li survey?", "e6c2e47e-c545-47ea-90ad-11a7073bcffb": "According to the passage, what are some potential issues that can arise if a designer tries to address the sparse reward problem by rewarding the agent for subgoals?", "613fb280-cb82-47f0-a37f-9364658bb2be": "The passage mentions that a better alternative to rewarding subgoals is to augment the value-function approximation in what two ways?", "343a713f-f30b-4551-9ac4-a1a16d80039e": "According to the passage, what is the traditional meaning of \"reinforcement\" in psychology?", "a1390a70-e031-4794-9daa-4f9d2384dd72": "How does the passage say that the use of \"reinforcement\" in psychology has been extended beyond its traditional meaning?", "d0131b5e-832f-4394-9fa8-22679f93994c": "What issue arises when we try to build a K-class discriminant by combining a number of two-class discriminant functions?", "19c412cc-ec48-4a8b-a023-55210e5e3754": "What are the two approaches mentioned in the context for building a multi-class classifier from binary classifiers? What is the issue with the \"one-versus-the-rest\" approach?", "2a831cd2-29d5-412c-86dc-24bbab8b5437": "What is the Dirac delta function defined as?", "4a91cb0c-f8c4-4578-89a7-45c60c5b23dc": "The Dirac delta function can be thought of as the limit of what kind of series of functions?", "e026b09d-d487-4208-ae95-d04495eb1bfe": "In which paper is the adaptive switching circuits work by Widrow and Hoff originally published?", "988a0c70-3c62-425c-9315-d45b8db4ca47": "Which two algorithms are mentioned by Widrow and Lehr as examples of 30 years of adaptive neural networks?", "c68f9fd3-39b3-4fd9-9c88-ec2d3263d017": "What year was the paper \"Reinforcement learning with unsupervised auxiliary tasks\" published on ArXiv by Jaderberg et al.?", "faf40d29-892a-4a0b-8c84-f89f6fec8273": "Which researcher discussed increased rates of convergence through learning rate adaptation in their Neural Networks paper at NIPS 7?", "18301fd5-2024-4acf-baa2-0cd900e564b6": "What is the importance sampling ratio \u03c1t:t+n-1 used for in off-policy n-step TD learning?", "9aea65a6-1b84-4ee2-aac8-f66bb714d896": "If an action Ak is taken that policy \u03c0 would take with much lower probability than behavior policy b, how will this affect the weight given to the n-step return?", "652e36f4-af69-49d0-bf6f-1d4f51cfbbca": "What happens to the autoencoder when the Jacobian penalty is applied to the sigmoidal units?", "e4ac242b-e60d-4e79-8b33-f4f1205b9f97": "According to the passage, when can a linear operator be said to be contractive in the theory of linear operators?", "d140db29-8a30-4087-a6ac-cc81f7888bc8": "What were two reasons that the rollout policy network was less complex than the SL and RL policy networks?", "d402a6db-afc8-47fa-aa23-59196ee47d87": "According to the passage, why did AlphaGo play better against human opponents when APV-MCTS used the SL policy instead of the RL policy?", "b43d0008-556f-4d5e-a2a1-0722b79d3ff0": "What is the objective function that is minimized during Deep Q-learning?", "cdea4224-be1f-4345-a0bf-034f29278eeb": "According to the passage, what are some of the challenges that can make Deep Q-learning training unstable and inefficient?", "83353d44-6fcf-4257-8547-0757fee17354": "What technique did Chen et al. (2020c) propose in their MixText model for semi-supervised text classification?", "d512a59e-92ec-4b59-9293-2698354ce701": "Chen et al. (2020d) proposed using virtual adversarial training for what NLP task?", "77a2bafe-876c-43b0-8e75-cc62847b8f53": "According to the passage, how does the presence of outliers affect the Gaussian distribution versus the t-distribution?", "f66e1027-50d7-4900-acd1-58bd54b85984": "The passage mentions two reasons why outliers may arise in practical applications. What are these two reasons?", "aa5b3c70-a0f3-484f-b76e-9614a775e5c5": "What does the parameter 'f' control in the equation for a simple cell's response?", "6128fb60-5e8d-4da3-b2a7-40ebaba333e4": "How does the phase offset '\u03c6' affect a simple cell's response?", "e12642e0-7569-4fec-9228-53ef28f89dd1": "Consider the probit regression model discussed in Section 4.3.5. Write down expressions for (a) the gradient of the log likelihood function, and (b) the corresponding Hessian matrix. These expressions are needed to train a probit regression model using iterative reweighted least squares (IRLS).", "787c0286-31fd-46ec-a1d2-8913f033c4f6": "Derive the Bayesian information criterion (BIC) result given in Equation 4.139, starting from the Laplace approximation to the model evidence given in Equation 4.137. Assume a Gaussian prior over parameters p(\u03b8) = N(\u03b8|m, V0). Your derivation should demonstrate that the log model evidence under the Laplace approximation takes the form given in the context, where H is the matrix of second derivatives of the log likelihood.", "856ecf2f-0c0a-45c6-874e-b2d7cad2a7d5": "According to the passage, what is meant by the \"error in a state s\"?", "c9430cdc-968b-4911-a7d5-2fed02184739": "The passage mentions using a state distribution \u03bc(s) to weight the mean squared value error (VE). What property must \u03bc(s) have?", "31f64d8b-cb77-4aed-b3b0-7c3d70379924": "How can importance sampling be used to improve stochastic gradient descent training of models like classifiers?", "9f67f3b9-1856-4369-b09f-2345cc7cd55a": "What are Markov chain Monte Carlo (MCMC) methods and how are they useful when sampling directly from Pmodel(x) is intractable?", "a46a4d56-756f-4237-8039-89ad05fd89e6": "What technique do NTMs use to read from or write to memory in order to alleviate the difficulty of optimizing functions that produce exact integer addresses?", "e7a4e718-2e3d-40b3-8906-68c7cf7b48ca": "What are the two main reasons given in the passage for NTMs using vector memory cells rather than the scalar memory cells used in LSTMs and GRUs?", "67bb6c82-a8ba-4549-9728-4c40377f011f": "What are the two main differences between the pseudocode and the REINFORCE update equation (13.8)?", "557c3923-cc1b-4e36-bf6f-b3b257e8bc83": "In the context passage, the eligibility vector is referred to by several different names. What are two of the names used to refer to the eligibility vector?", "9f30c55f-9499-42b0-9514-eb44ef2b3529": "What is the probability of selecting the red box, p(B = r), according to the information provided?", "c14e71e8-d6b4-4c3c-82be-e746751f678c": "If the blue box is selected, what is the conditional probability that the fruit inside is an apple, p(F = a | B = b)?", "0ef20abe-ab80-4e29-af7f-16ca11aeb34f": "The text mentions that dopamine neurons receive input from many different brain areas. What does this imply about the nature of the theoretical scalar reward signal Rt that dopamine neuron activity represents? Specifically, discuss how Rt likely arises from a pattern of activity across multiple brain regions rather than a single area.", "9945a5d8-161f-48b4-967c-bc70e8b37329": "The text states that the actor-critic model illustrated in Figure 15.5b \"clearly needs to be refined, extended, and modified to qualify as a full-fledged model\" of dopamine neuron function. Give at least two examples of ways the model likely falls short as a complete explanation of phasic dopamine activity. Cite empirical evidence that supports your answer.", "c1445e90-e3dd-4bf6-9ff3-3d9ad61ac39b": "Why can high variance in the step size be problematic for stochastic gradient descent (SGD) methods?", "3a07c98f-c9be-4bcb-8607-3f79a8a4ddb3": "The text mentions some methods that can help address the issues of high variance in SGD. Name two of these methods.", "01181527-0e87-40cb-bb1a-a6db0ba6ab3e": "According to the passage, how can the error term of the offline \u03bb-return algorithm be written in terms of TD errors?", "2aac9332-a224-440a-b045-f146d07e4f8e": "The passage states that the offline \u03bb-return algorithm has limited utility. What aspect of the \u03bb-return makes the offline algorithm impractical, particularly in continuing tasks?", "e22af98a-6523-4b1d-959b-0dc7df57fd72": "According to the context, what is the form of the predictive distribution p(t|x,x,t)?", "7440fa18-6c4b-452b-9f76-8cd8ef2cbce9": "The context mentions that the posterior distribution p(w|x,t) for problems such as curve-fitting is a Gaussian distribution. What two quantities can be evaluated analytically from this Gaussian posterior?", "faccd95e-ca92-4355-8a4f-7fde1ca98fbb": "Using equations (14.10), (14.11), and (14.12), derive equation (14.14) for the expected sum-of-squares error EAV of a simple committee model. Show your work.", "10247be5-12ce-4c36-8fac-690e1ca5cf38": "Using Jensen's inequality, prove that for any convex error function E(y), the average expected error EAV of the members of a simple committee model (equation 14.10) is less than or equal to the expected error ECOM of the committee itself (equation 14.11).", "1079ec41-f7b8-4159-8b87-223b78243ed4": "What are two examples of structured output tasks discussed in the passage?", "2c653dbf-ca2b-4428-95ac-de7182625418": "What is one example of an anomaly detection task mentioned in the passage?", "39a16631-2cbf-4ad6-87c0-201acb144468": "What approach involves pretraining a deep convolutional neural network on one set of tasks, then transferring those pretrained weights to initialize a network of the same size for a different set of tasks?", "c6624b9d-1502-4ca7-aa10-a818fc48e744": "What is the name of the transfer learning approach that trains a wide, shallow teacher network first, and then uses that to train a thinner, deeper student network?", "cb572f3a-c377-4434-8f4b-31407c4e5d80": "According to the passage, what is the first step in processing a batch of inputs through a neural network?", "7748d7a6-ee0f-4520-adcf-d2f483bf1895": "In the example in the passage, what is the result of multiplying the input matrix X by the first layer's weight matrix W?", "70e5a934-c50d-48fa-9a2f-ce50eeec7926": "According to the context, what type of brigade was proposed for development as part of the infantry regiment?", "d2cc8268-acf7-42d4-a5ed-73e0f8918734": "The context mentions amendments were made in 1966 to which Act that brought it into state law?", "d3d8adeb-7e86-42bc-9dc2-0eebd4271221": "According to the text, what is one way we can make the joint distribution p(t,x) more flexible than using a single Gaussian?", "65682689-c62a-47b2-9f30-471022901f72": "The text mentions that using a Gaussian mixture model to represent p(t,x) results in a tradeoff between training time and prediction time. What is this tradeoff?", "028dc7ea-8641-40fe-b609-e2161b05ff03": "What is the loss function for maximum likelihood learning of a Bernoulli distribution parametrized by a sigmoid?", "7e033dac-baec-4fa4-94bc-a3a9d2deaa99": "According to the derivation, when does the loss function saturate? In other words, when is (1 - 2y)z very negative?", "bdde8df9-f293-4053-a514-11644240a3f7": "What is the starting condition needed to evaluate \u03b2(zn) recursively using the backward algorithm described?", "f640d07f-dba7-473d-84cc-ad7c0ad6c8ad": "How is the quantity \u03b2(zn) calculated from \u03b2(zn+1) in the backward message passing algorithm?", "a585addf-0cd7-4fbd-bcec-27b02c1164fb": "What is the purpose of introducing new variables \u03b7j in the Gaussian mixture model optimization?", "1aeac9e8-a07f-4fb0-9a25-b7daf4820d6e": "What function is used to express the mixing coefficients \u03c0j in terms of auxiliary variables \u03b7j to satisfy the constraint that the \u03c0j sum to 1?", "10f47c1f-f084-46aa-898c-b4682be1e299": "What is the role of the normalization term Z in the optimization procedure described?", "73574474-5c5d-4749-a5d9-ecb86c290165": "How does taking the limit as \u03b1 \u2192 0, \u03b2 = 1, and using the specified reward function R\u03b4 make the optimization procedure reduce to maximum likelihood learning?", "7eb29841-6c50-4dee-9eeb-833ecb20da0a": "According to the passage, what is one advantage of using afterstate value functions over conventional action-value functions?", "05bd774f-b636-46ea-a123-97b3b1b07af7": "Give an example from the passage of two different position-move pairs that would have the same afterstate value.", "5b42cf23-4273-472a-bb22-f92ed66eba55": "What is the weight scaling rule an approximation for?", "0ee5a848-f77c-4e5e-ab5b-ed7a246e2bbc": "According to the passage, how can we simplify the ensemble predictor P(Y=y|v) to obtain a softmax classifier?", "0c34bac2-8150-4b92-b5c3-3917a850a164": "What are the two terms in the predictive distribution in equation (1.69)? What does each term represent?", "0a96f1ab-57a0-4f8c-b136-8badfd07c7af": "The context talks about controlling model complexity in polynomial curve fitting and other models. What are some ways model complexity can be controlled in models like mixture distributions or neural networks?", "a0b854f6-ff51-492a-9d37-0d0d17e53767": "What topology does the total variation distance give in the case of Prob(X)?", "0465e589-1968-4a42-88f2-be37d10bcd54": "What does assumption 1 state about the function g?", "301a1220-9afa-451b-a09a-90acd6caa393": "True or false: Inference in a deep belief network is intractable because of the explaining away effect within each directed layer and the interaction between the two hidden layers that have undirected connections.", "5b9f280d-e77d-45c7-8444-0b506d81cacf": "What are two problems associated with deep belief networks that are mentioned in the context information?", "95050ea6-db22-4ced-8156-dae857e6070f": "What is the conjugate prior distribution for the precision of a Gaussian distribution?", "dddaeb96-100f-4f17-96ba-91d302412e1a": "In the directed graphical model shown in Figure 10.8, what are the two main posterior distribution factors we want to find approximation re-estimation equations for, according to the variational framework described?", "83b20c92-a2c5-467c-a8bf-b617dc7ee504": "How does zero padding affect convolution near the borders versus the center of an image?", "a24a73ce-83a1-45ba-8fcd-5bacfd041c87": "What are the two extreme cases for zero padding described in the passage? How does each case affect the representation of border pixels in the output?", "0ed33843-67e0-46a5-8c8e-b7ff73439edf": "What kind of models does the passage say have been used as components in more complex models?", "3b1ddf8b-78b9-42f7-8836-4d9e5ec6b660": "According to the passage, how are issues of nonlinearity and non-Gaussianity related in latent variable models?", "79f52563-10c5-4ac7-8cae-397ca1d256a7": "According to the passage, what are some of the benefits of using grid search for hyperparameter tuning when there are 3 or fewer hyperparameters?", "60b628e8-8512-44d0-9b78-4014131c3bd9": "The passage mentions that when doing grid search, the user selects a small finite set of values to explore for each hyperparameter. What does the passage recommend in terms of how to choose the lists of values to search over for numerical/ordered hyperparameters?", "c890054e-8c4c-4835-86d6-44068b491a2c": "According to the passage, why do many representation learning algorithms like autoencoders and RBMs yield a more uniform and unimodal distribution over h compared to the original data distribution over x?", "697773a5-a4f6-4ca0-b968-3e8fe0671585": "The passage states that training an RBM in the higher-level h-space allowed Gibbs sampling to mix faster between modes. Why does this occur?", "8148797a-417a-4f10-93d3-597f79cec8b4": "What was the main finding from the studies on monkey behavior described in the passage?", "a7972330-8f8e-4c5d-93af-9f0c3b59a1d5": "How did researchers connect the phasic responses of dopamine neurons to the TD error signal used in reinforcement learning algorithms?", "67cac6d5-130f-4f8d-9a71-a6517eee9a5b": "According to the article, how do babies learn about the world as they grow?", "1023fc41-d537-4fbc-a19e-1eaaca43d9a2": "The article states that common sense is like the \"dark matter\" of AI. What does this analogy mean?", "c7599b4a-3463-4b5d-b32a-5eb69ccccf4e": "What is the goal of the loss function Lswav?", "e5513682-f489-4c78-9b28-c820df7ff7d6": "What does the matrix C represent in the context of prototype clustering?", "0d40ebcf-428d-47d7-bd11-42ff4f627f1f": "What is the Policy Gradient Theorem and how does it relate to policy gradient algorithms?", "5883a2c7-481d-419a-b667-f830ff7ecdb8": "Compare and contrast the REINFORCE and MC policy gradient algorithms. What are their key similarities and differences?", "6b0f2624-72e4-4687-aac4-b55fdb98f88e": "What does the entropy term in the variational lower bound encourage when q is chosen to be a Gaussian distribution?", "e6280353-e459-4524-bbb8-27b0a9cf656e": "How does the variational autoencoder differ from traditional approaches to variational inference and learning?", "64621da2-7343-49cc-b85f-87d339adaecc": "What are the two energy functions that jointly define the mcRBM model?", "e171dfcc-ce54-47af-bf6c-dfdf31053a11": "Fill in the blank: In the mcRBM model, the parameter ____ corresponds to the covariance weight vector associated with the binary covariance units nj.", "53168ac5-299d-4d8d-aa6c-095c3a55e114": "What are some of the challenges with using synonyms for text data augmentation? The context mentions that simply replacing words with synonyms from a dictionary often leads to minimal improvements or can even degrade performance. This is due to lack of contextual information when fetching synonyms, especially for words with multiple meanings.", "17b8e0e9-54f0-4dfc-a865-5c7db5afeba8": "What are some of the broad classes of text data augmentation methods discussed? The passage outlines four main approaches: token-level augmentations, sentence-level augmentations, document-level augmentations, and semi-supervised based augmentations.", "3f4f1ac6-df4b-44e1-84c7-dd4ae7643320": "What are some reasons why we may want to approximately minimize a cost function rather than directly evaluate it?", "f41aa6db-7311-4397-8450-9868d6783b34": "Decision trees and k-means clustering are examples of machine learning algorithms that require special-case optimizers. What property of their cost functions makes gradient-based optimizers unsuitable?", "2e791b25-db92-4ffa-9335-d944200a9d44": "What method did Cotterell and Heigold (2017) propose for crosslingual character-level neural morphological tagging?", "f951c4a4-adba-48e2-8ef3-04c51fc9b01d": "Which Microsoft group published research on recent advances in deep learning for speech in 2013, according to the given context?", "5bd5177e-4d9d-47d9-b156-0cb1ff7d432a": "According to the passage, why is using the training set performance not a good way to evaluate the predictive performance of a model?", "46be6806-4134-4c6f-aa95-cebee96a000a": "The passage discusses using a validation set to compare models trained on the same data set. What is one reason the passage gives that it may be necessary to use an additional test set?", "efacbd4e-0187-4fde-964c-33f8f9d9c469": "What additional materials are available to support the book according to the passage?", "9db560a6-a91b-40c3-9d65-55ab1f525843": "Based on the context, what are the 3 levels of difficulty for the exercises at the end of each chapter?", "727aae0d-c4ed-442b-baa2-eed54b92ffb9": "According to the passage, what is one of the minuses of using reinforcement learning based on optimization?", "652e8264-9f49-4a41-a36f-c3eecd2fbecd": "The passage mentions that reinforcement learning agents can sometimes find unexpected ways to obtain rewards. Can you describe an example of how this could potentially be dangerous if applied to a real-world environment like healthcare?", "97042f97-6ed3-4cf3-88ef-4773f0fe033c": "What are the two sufficient statistics computed in the E-step of the EM algorithm for probabilistic PCA?", "f12491d8-2e7e-4e70-8c92-8448232607b2": "Fill in the blanks: In the ____ step of the EM algorithm for probabilistic PCA, we use the old parameter values to evaluate the sufficient statistics ____ and ____. In the ____ step, we maximize the expected complete-data log likelihood with respect to __ and __, keeping the posterior statistics fixed.", "9472be68-5904-4468-bdc1-6cd03fc9904a": "What theorem states that the sum of many independent random variables is approximately normally distributed?", "e0b64b09-fa3f-410f-bc6e-b50f80cea0ce": "In the example normal distribution depicted in the passage, what are the values of \u03bc and \u03c3?", "41dfe1ae-55ab-416c-b937-660eecc60b90": "In the multi-armed bandit example, what additional information is given to the agent to help handle the nonstationarity according to the passage?", "f2c5a5a7-5dda-4b4e-bfbd-0a0907680148": "In the multi-armed bandit example, if the color of the display changes to red, what action should be taken according to the policy described in the passage?", "0349fd14-f8b3-4457-9908-02a9343a9c4b": "True or False: The \u03bd-SVM parameter \u03bd can be interpreted as both an upper bound on the fraction of margin errors and a lower bound on the fraction of support vectors.", "5250b7ff-b864-49c0-8974-145b62d92ec4": "Briefly explain the difference between the standard SVM formulated with the parameter C and the \u03bd-SVM formulated with the parameter \u03bd.", "b092520e-9af7-4d5d-90e0-94faa7fc99af": "What is the training objective for the discriminator D in GANs?", "04512348-d99b-4b45-876c-e48dfde30062": "According to Theorem 1, when does the virtual training criterion C(G) achieve its global minimum value?", "a1f16f45-00c3-47f0-a453-ba5663ca9ddc": "What are some of the challenges with training stochastic architectures that make discrete decisions compared to deterministic algorithms that make soft decisions?", "ac8d0fef-6b17-48fb-a1d9-e0c2693c431b": "The concept of attention mechanisms was first introduced in what contexts before being applied to machine translation and memory networks?", "cc81160d-96f6-47f4-8944-9a35b679ca54": "What principle do we often use to train latent variable models?", "182b69f0-f9cf-4f67-9ba3-165bea18c061": "What type of problems are computing p(h|v) and predicting variable values or distributions given other variables examples of?", "4aa046c7-58ec-4085-ba41-342473bd4147": "If v is a unit vector orthogonal to the principal subspace spanned by the retained eigenvectors of the covariance matrix C, what is the variance of the predictive distribution along v?", "aa640d25-3a0e-4eca-9211-96da34e5cb35": "True or False: The columns of the matrix W are the principal component eigenvectors scaled by the corresponding eigenvalues.", "ddfda3b0-1d2f-42d0-a78d-a7e426e8758d": "first question tests understanding of how the covariance matrix C behaves along directions in the nullspace of the retained eigenvectors. The second question tests understanding of the interpretation of the columns of W. Together these span different aspects of the concepts discussed in the given context.", "2d98798c-c4c9-43f9-a295-932fd0e8b45d": "What issue needs to be addressed before the forward-backward algorithm can be used in practice, according to the passage?", "139562f4-c13a-4d64-86c1-60c97de8b11e": "According to the passage, why do the values of \u03b1(zn) go to zero exponentially quickly as we work forward along the chain?", "5e486192-e77e-4c84-ac19-ec4bfcfed98f": "According to the passage, policy-gradient methods were some of the earliest reinforcement learning methods studied, but became less popular in the 1990s. What caused policy-gradients to become less popular in the 1990s?", "31e31563-69b2-41e8-9e97-b650854628ae": "The passage mentions several recent developments in policy-gradient methods that go beyond the core concepts covered in the chapter. Can you name 2 of these recent advancements that have renewed interest in policy-gradients?", "92b15efe-e1f2-4fcc-a9e2-e3f729e5975d": "Fill in the blank: From equation (13.99), we multiply both sides by _______ and substitute for p(xn+1|zn+1) and p(zn+1|zn) to obtain a recursion involving the Gaussian parameters.", "3a7e09fe-db99-446b-9025-b44ca789ad0c": "True/False: The recursion obtained by manipulating (13.99) makes use of (13.98), which defines the Gaussian distribution over the latent variable zn.", "f0b4ddd2-bf59-4a11-87bd-f3ab3bf7ad7f": "How do the Gabor functions in the left grid differ from each other?", "1c8c1239-5a75-4cc6-a267-4aebb3613c9f": "What happens to the width and height of the Gabor functions as you move through the grid in the center plot?", "7551c41b-bab3-4608-9564-c0d793ac6b0b": "AlphaZero achieved breakthrough performances in Go, chess, and shogi by utilizing what general reinforcement learning algorithm?", "09dc1548-fe51-43e7-970b-e60d4a26092e": "What simple reinforcement learning method is commonly used in marketing to determine which version of a website, A or B, users prefer?", "0b52c484-b226-4922-a945-ad6c9a807029": "What type of activations were used in the generator nets and discriminator net?", "31dc7fcd-5a7a-4bf0-9ecb-53ca1354c098": "What method was used to estimate the probability of the test set data under pg?", "947f8a2e-61ac-47bf-a089-0951b6a82ce6": "What is the full title of the Dynamic Programming book by D.P. Bertsekas that covers approximate dynamic programming methods?", "d43d443a-39a7-4ac1-92a2-ce0a09af9765": "According to the context, which of D.P. Bertsekas' books covers rollout algorithms for discrete optimization problems?", "fc7cbc0d-312e-486a-b61d-1772ecd333e9": "What are the two distinct approaches to planning discussed in the context?", "134efd7a-6318-4d08-8930-88f506e5da14": "The context mentions that in reinforcement learning, the focus is on stochastic sequential decision problems. What type of planning methods are difficult to apply efficiently to these types of problems?", "bd09066e-6809-4c3d-af1e-100fd01c4f55": "Consider the univariate Gaussian distribution. Starting from the standard form, show the steps to cast it in the exponential family form, as given in equation (2.194).", "1a555d07-5b1c-492e-9afe-90c847868bff": "Given a set of i.i.d. data X={x1,...,xn} from an exponential family distribution, derive the equation for the maximum likelihood estimator \u03b7ML of the parameter vector \u03b7. Your derivation should start from the likelihood function and make use of the results from the context relating the moments of u(x) to the derivatives of g(\u03b7).", "747884ec-6703-41b3-9fe4-252b38cdd033": "What is our goal for the probability distribution q(x)?", "a16d67b7-bdd6-4f98-b522-ca72f4cd2223": "How can we represent the effect of the transition operator T using a matrix A?", "8f36001f-b045-4466-b43e-7931512cbeda": "What is one way the Wasserstein GAN (WGAN) enforces a Lipschitz constraint on the critic function fw?", "044d6c0a-289e-40c1-b60a-fcf1e1eb532b": "True or False: The function g\u03b8 in the context satisfies the assumption that it maps the random variable Z to a distribution P\u03b8.", "a13b54a0-c544-44de-a497-253caf206407": "What dataset did the study by DeVries and Taylor that examined cutout regularization achieve one of its highest accuracies on?", "17a200e5-78f1-4242-9a71-ebcf5b969fa8": "What technique involves randomly masking regions of an image similar to random erasing that was explored by DeVries and Taylor?", "9aa455ec-3f54-4c0d-9eac-85132b67d85e": "According to the text, how can the experience function f\u03c6(t) be instantiated for problem (2)?", "ea87e7d4-d294-4c63-a92e-b2b95d961222": "What is one approach mentioned in the last sentence that could help enable efficient updates to the general experience function f\u03c6 across all three problems?", "8f2f1929-3770-40a3-8eac-5d2442a0deb3": "What is the purpose of introducing Lagrange multipliers \u03b1n \u2265 0 in the constrained optimization problem?", "c383855d-e8f0-4f27-bbea-ac3583cb1701": "How is the dual representation of the maximum margin problem obtained after eliminating w and b from the Lagrangian L(w, b, \u03b1)?", "762c7503-d73a-4bb8-947f-ca5a59328f30": "According to the context, as N (the number of random variables xi) increases, the distribution of the mean (x1 + ... + xN)/N tends to become more like what distribution?", "ab42bd9a-e768-4614-94c6-d9cadc35afae": "The context mentions that the binomial distribution, which is a distribution over m defined by the sum of N observations of a binary random variable x, will tend to a Gaussian distribution as N approaches infinity. What property of the Gaussian distribution does the context say is important, that makes this convergence useful?", "30e9a3c8-974c-407a-a24d-00a2fe933b33": "What are some of the advantages of asynchronous dynamic programming methods compared to synchronous methods according to the passage?", "67b6bedb-632b-48c5-9248-a4b8198660a9": "The passage mentions two key computations involved in dynamic programming. What are the names of these two computations?", "3e62f2a5-a4b0-42a7-8cce-df1b972a11db": "What does the kernel function represent in the context of making predictions at new values of x?", "881e5d67-6f58-4b29-879c-cbd65365d653": "The context mentions that the kernel function weights can be negative as well as positive. How does this relate to whether the predictions are convex combinations of the training set target variables?", "0dff61c7-633a-4c84-bd88-9f90b5b5e911": "What method did Clark et al. (2018) propose in their EMNLP paper for semi-supervised sequence modeling?", "06cd55e5-b29c-4e5b-84a1-3cc5ae1a0e35": "What kind of neural network architecture did Collobert and Weston (2008) propose for natural language processing tasks?", "662fba2b-3205-4f39-afad-ab50292282c6": "According to the passage, principal component analysis (PCA) arises naturally from what type of model?", "0c45c31a-ff30-49b0-b681-81787a6bc245": "The passage states that PCA is a well-known technique that is related to which other model mentioned?", "7b0b8111-50cd-45e0-8d11-f50b30c6b783": "According to the article by Pawlak and Kerr, what is required for spike-timing-dependent plasticity in the corticostriatal pathway?", "830de6aa-b017-48e1-894d-a93601e02c5a": "What did the model developed by Pearce and Hall suggest about the effectiveness of conditioning versus unconditioned stimuli in Pavlovian learning?", "537308e6-d078-4a32-98f3-b69d43f16d87": "According to the update rule shown, what is the gradient based on? Explain.", "429653a6-1feb-492a-a1ea-ba956392eda2": "The context mentions that the closest point p is a function of \u03b8. Why does the gradient not need to account for the derivative of p?", "c057a119-3885-4c21-b918-b7f9847163b4": "According to the Randl\u00f8v and Alstr\u00f8m abstract, what method did they use to teach a bicycle driving agent?", "a34e8feb-9be3-43ab-b4d3-be99333af1e1": "According to the Rangel, Camerer, and Montague paper, what framework did they propose for studying value-based decision making in the brain?", "429bde88-543d-425b-8634-f0223e627990": "What are some of the key challenges in analyzing the performance of optimization algorithms for machine learning?", "867bdbf7-a632-4a6b-ab18-93c65c6eeb23": "What algorithm is commonly used for optimization in deep learning, and what is the key idea behind this algorithm?", "5b1b2abe-7299-415e-a6c1-2c0c231afdc6": "Why is it important that the minibatches be selected randomly when training a neural network?", "8e2cf348-aaf8-4f02-aa16-354a8c25b500": "The context describes a dataset of medical data consisting of blood samples from different patients. What is one reason this dataset may need special handling when creating minibatches for training?", "2b257a90-1c65-4cef-996b-8038b71ef0cc": "According to the passage, what is the effect of observing a dataset with m observations of x=1 and l observations of x=0 on the hyperparameters a and b when going from the prior distribution to the posterior distribution?", "bc9803e7-7648-4b29-a168-8da58e274a2f": "If the current posterior distribution has parameters a=2 and b=2, and we observe a single new data point with x=1, what will the parameters of the resulting posterior distribution be?", "aaab43f3-4ff9-4738-8faa-0bdd1984d31e": "What are the eligibility traces of the critic unit's synapses called in the actor-critic model described?", "7d3c2c89-009b-4301-bfa4-2a20b6495d09": "How does the critic unit in the actor-critic model act as a simple starting point before using a more complex neural network for the critic?", "df1da31c-8818-41f3-ab1f-1cf7a0215544": "What distribution does the posterior take when multiplying the Dirichlet prior by the multinomial likelihood function?", "b9806f97-2ce2-42f2-9b25-a8e48d136298": "What does the parameter \u03b1k of the Dirichlet prior distribution represent in terms of the multinomial distribution?", "2a393971-54a9-4be5-adb2-858616362033": "In associative search tasks, how do the actions affect rewards compared to the full reinforcement learning problem?", "8657d4f1-477d-43fa-89ab-eb15bc61bfbe": "What are two key differences between the associative search task (contextual bandit) and the full reinforcement learning problem?", "1170f589-f911-4559-8784-942c784d45ac": "According to the passage, why does moralization often introduce a quadratic number of new direct dependences in a sparse coding graph?", "0b77490a-250d-498c-9a55-27498d4e3c51": "The passage states that no directed model can simultaneously capture two specific conditional independences present in an example undirected model. What are those two conditional independences?", "8ba63aa8-20e6-44b3-9805-0f4259da8019": "What two paradigms does our approach draw inspiration from and combine together?", "0d7593d6-ff2d-45b9-b109-be2d6d46b384": "What types of manipulation schemes can be reduced to different parameterizations of the data reward according to the approach described?", "c003250b-a70e-45ce-aaea-47c265bc9a5f": "According to the passage, decision trees typically use what kind of splits at each node?", "23bf01eb-5dc5-43df-9f2c-e40d50141452": "The passage mentions that decision trees can struggle to solve some simple problems that are easy for logistic regression. It provides an example of a two-class problem where the decision boundary is not axis-aligned. What does the passage say a decision tree would need to do to approximate the non-axis aligned decision boundary in this case?", "548aabb4-2a45-4002-ad6d-609bc7897519": "When training an autoencoder using the negative log-likelihood loss, what plays the role of both the input and the target?", "44edc74f-c917-4c4a-9840-8dd37298373b": "If the decoder distribution pdecoder(x|h) is Gaussian, what common loss function results from minimizing the negative log-likelihood?", "60ff241c-353b-4adc-8861-c63e2e3c657a": "Several studies have proposed using adversarial training methods for text generation tasks like machine translation and summarization. Which of the following papers introduced adversarial training for neural machine translation?", "f89a71b0-61c5-43d8-9d39-75bb57e8a7a7": "Self-attention mechanisms have become very popular in natural language processing models. Which of the following papers first proposed using a self-attention mechanism for machine translation?", "5b56e36c-db80-4af4-81e4-0660dff7cc16": "What did Tsitsiklis and Van Roy introduce in their work related to the material discussed?", "f7a3540b-ede6-4909-8579-3ef975c0c6f5": "Whose version of Baird's counterexample is presented in the material?", "4a518e69-357d-4fe4-b1a6-f341ea8aaf86": "What are the two extensions of the EM algorithm that can help address intractable E or M steps?", "1fd3fb6b-d19c-4069-be96-c2259c2443b3": "How does the Generalized EM (GEM) algorithm get around an intractable M step?", "c21264a8-8685-4709-85b4-19f58c1cbf2c": "According to the passage, tying parameters in a model helps to ____.", "8cee1f46-a9dc-437f-a054-431452dba9c6": "Increase the number of independent parameters", "26f879e3-792a-4e16-b2a1-97f3db4cc716": "Reduce the number of independent parameters", "7c6da48d-4895-418c-9af3-a3d87e544596": "Eliminate the need for a prior distribution", "c4234d7a-e7ef-427c-9c08-e25df300e2e1": "Add more conditional dependencies", "b8b38cd3-e50f-4b58-b3cd-34e3851f6780": "In the chain example described, what is the total number of parameters needed to define the joint distribution if we tie the parameters governing the conditional distributions p(xi|xi-1)?", "23a0d3ba-b09e-466c-852c-8955c47ee81c": "K", "e8fa352d-8391-4862-86de-adf8eb90ea7e": "K-1", "ae4285d7-bbba-4021-9e67-089e8c155eb8": "K^2 - 1", "048fbcbc-ca2a-4598-a680-b390372adc72": "K(K-1)", "7b4dd680-b45c-4f2a-b591-113a92192912": "The pseudolikelihood approximation allows us to compute conditional probabilities without knowledge of what?", "badd52c9-de09-4975-b282-08f39f62f901": "What are the three partitions of x that allow us to compute the conditional probability p(ab) more efficiently?", "5296478c-d531-4f69-9937-b807500e21c2": "What are the two main approaches to computing derivatives during backpropagation?", "c77dd008-b685-4d8e-8238-62dec8fd2ba4": "What does the \"symbol-to-symbol\" approach to computing derivatives do? How does it differ from the \"symbol-to-number\" approach?", "b74e211a-c5a5-4908-912a-169045865dea": "Who independently discovered some of the key ideas behind True online TD(\u03bb) that were primarily developed by Harm van Seijen?", "c24a7bbc-0ef0-410e-9a52-8bc16700d0bb": "Off-policy eligibility traces were originally introduced in which paper?", "25c23b14-d408-4042-b81a-3ea3db58a8d0": "Using the matrix identities provided, derive the expression for the Kalman gain matrix Kn given in (13.92). Show your work.", "cf9066a8-9bd0-43df-8a65-08be19033a4f": "Augment the matrices A and C by adding columns corresponding to the parameters a and c to show that the extension in (13.94)-(13.97) can be recast in the framework discussed in the chapter. Define the augmented state vector z and write out the augmented A and C matrices.", "b1aef80c-6990-4f22-8085-9abc39f90085": "Who first applied kernel regression to the pole-balancing task in reinforcement learning? What method did they use to approximate the value function?", "fa68af9d-0dca-48db-af03-0b0d1a68b3fd": "Whose early work on checkers is cited as the earliest example of using function approximation methods for learning value functions? What suggestion did this author make regarding value functions?", "b26e435f-a37b-485c-ba14-229d0fa43373": "The passage introduces latent variables (zn) to create a more flexible model while limiting the number of free parameters. What key conditional independence property must the latent variables satisfy to achieve this?", "93841e55-626b-42ed-9a0e-f4669bb9a557": "The passage states that by introducing latent variables zn, we can construct a rich class of models out of simple components, giving the example of mixture models in Chapter 9. What type of model is created by introducing the latent variables zn that form a Markov chain, as shown in the figure?", "f50ef921-3762-43f5-a153-3a2ac8afa311": "How are the initial conditions for the recursion equations obtained in the provided information?", "4cdc1c07-205f-490f-8326-1060d6895e8c": "What is the interpretation of the steps involved in going from the posterior marginal over zn-1 to the posterior marginal over zn in the provided information?", "6127738a-aa4c-493c-82c6-235a2383bfbe": "According to the passage, what probability distribution do binary x values correspond to in a typical autoencoder?", "242b7ed9-cca1-4645-a06c-616a387e74a3": "What does the passage say is a benefit of modeling the output variables as conditionally independent given h?", "07ad3745-df0b-4910-b55d-22ea01cb2196": "According to the explaining away effect, if you observe that you have not received a report from your colleague, what can you infer about the probability that she is sick or on vacation?", "a84a2c0c-bd82-4ae6-a7dc-999caf90e19a": "In the graph shown in Figure 16.9, if variable B is observed, which other variables become d-separated from each other?", "c6fea6f9-b1a6-44ef-a938-39bab3379990": "The authors mention their MaxEnt RL framework is more robust against which common issue that arises when training RL agents?", "5f07ac0f-b0d9-46d9-a337-38ab6374e73d": "What are two potential downsides or risks of deploying the text generation model described in the paper into real-world applications that the authors discuss?", "64ff53cf-1820-4d50-878d-606e618f5a0d": "What is a sparse autoencoder? How does it differ from a regular autoencoder?", "0e6534a4-9172-49e4-a41e-6d04322b559a": "According to the passage, why can the encodings learned by autoencoders be naturally useful, even without explicit regularization?", "b44dda30-a17d-40f1-bcbc-e4a475ef4ff2": "What is the purpose of resampling in the described algorithm? How does resampling help obtain samples that are approximately distributed according to p(z)?", "3146da5c-3019-417f-87b7-1eac8f2f37b7": "Explain why the cumulative distribution function of the resampled values approaches the cumulative distribution function of p(z) as L approaches infinity, assuming suitable regularity of the distributions. What replaces the sums in the cumulative distribution function when taking the limit as L goes to infinity?", "1ec81d25-4ec7-4f33-b089-8e148ab7bc23": "What are the two basic strategies discussed for the second training procedure when doing extra training after initial training with early stopping?", "33c22132-32c5-49cf-9092-1639b8721ffd": "When retraining the model from scratch on all of the data in the second training pass, what issue arises regarding how many parameter updates or passes through the dataset to do compared to the first training pass?", "71c9b318-f8ed-4fa8-a5e9-b5ce457d186b": "How many total pieces of fruit are in the red box?", "b16eef86-9444-437d-8f54-3ba0f0afc2a7": "What is the total number of oranges across all 3 boxes?", "4edc06a4-bb9f-459a-be98-8fc661f432c3": "Marvin Minsky's doctoral thesis in 1954 was titled \"Theory of Neural-Analog Reinforcement Systems and Its Application to the ____ Problem\". What problem was Minsky trying to address with his thesis research?", "20ac4f6e-99cd-484d-964e-fcf3a0447f53": "The 2013 paper \"Playing Atari with Deep Reinforcement Learning\" by Mnih et al. demonstrated the use of deep reinforcement learning for what application domain?", "b3597300-d631-4a35-ae7d-6d13e4afa73a": "What is the implication of applying Newton's method iteratively when the objective function is convex but not quadratic?", "84a54050-1199-493d-a925-5606c54741a5": "According to the passage, what are two key steps involved in the iterative procedure for applying Newton's method to optimization problems?", "25783644-1e7d-4efb-b868-e307c2250007": "What is the main difference between DeepCluster and SwAV for contrastive representation learning?", "10103c4c-e57e-47da-91da-61f50b7e4566": "What does the SwAV algorithm do in each iteration? Describe the steps it takes to compute the loss function.", "6aa3fe89-1d9b-47c2-a456-61cdc37c77c7": "According to the passage, when TD learning is complete and the value function V converges to the correct predictions, what will the TD error be for transitions from reward-predicting states?", "312bac2f-73af-4c94-921f-f6679963f18d": "The passage states that TD(0) updates occur at each state transition. What does this indicate about how the values are updated during the learning process?", "89cb21c9-d3e3-4ea4-9ad0-475e615d2481": "According to the excerpt from the Deep Learning book, what happens to the generalization error of a nonparametric model as more training data is provided?", "901073b0-c1a5-4876-95ec-67646841098a": "The excerpt states that it is possible for a model with optimal capacity to still have a large gap between training and generalization error. What is one way this gap could potentially be reduced?", "b2f8214c-fc74-4497-8686-cbeb68c4b4ea": "What is the purpose of adding a regularization term to the error function, as discussed in Section 1.1?", "16b59663-e5e3-4354-ab1d-ddf5b2c2a053": "The context mentions a particular regularization technique called weight decay. What are two advantages of using weight decay as the regularization term?", "f44584ce-708a-40a8-a7a6-d34955a71830": "What is one advantage of using the Generative Topographic Mapping (GTM) model over Principal Component Analysis (PCA) for visualizing the data, as shown in Figure 12.21?", "ee7ea91a-c7c2-4822-9b5f-dd674f2aed30": "The text mentions several straightforward extensions that can be made to the standard GTM model due to its probabilistic foundation. Name two of these extensions.", "7a50569d-6427-4673-8126-d98bb5ff1ee4": "What did Zaremba and Sutskever find when training recurrent neural networks with a stochastic curriculum versus a deterministic curriculum?", "3e0da803-5ffc-465f-9f7c-672fcb304450": "According to the passage, what are two key benefits of using a curriculum-based approach for teaching models compared to uniform sampling?", "5a9c8953-41d5-4236-9724-4cc1d5eee7dd": "According to the passage, how can artifacts from generalizing function approximators with tilings be avoided?", "3b9a5137-2c00-405f-bf28-cb9f00a1e4ff": "The passage states that if a state is moved by w in any cartesian direction, the feature representation changes by one component/tile. What is w in this context?", "d5428f64-e944-4025-bdff-3e9b517eb40a": "What is represented by Lkj in the loss matrix?", "d70c86e6-6c3a-4161-90dc-907338f0689f": "If a patient has cancer but is diagnosed as healthy, what would the loss be according to the example loss matrix provided?", "f4df19d5-0743-407a-8c66-88a3838f01f9": "Which augmentation strategy uses an evolutionary algorithm to train a population of models in parallel to find the best augmentation strategies?", "be31305d-685e-4278-ad06-77097e3426e7": "What is the key difference between Mixup and Cutmix for image augmentation?", "07ebe512-250d-4242-a4e5-cf4af6a6bc22": "What does denoising score matching allow us to do rather than using the true data distribution pdata?", "4d63c8cb-36c7-46ae-820e-32c663a8adb4": "What kind of process is the distribution q(x|y) in denoising score matching, and how does it relate y to x?", "f5e211e2-37fb-46ae-a594-f6e6e4d42bb6": "True or false: Bootstrapping often results in faster learning because it allows learning to take advantage of the state property, which is the ability to recognize a state upon returning to it.", "e1e60c3e-0c09-4d12-9f37-c8ad62e38fd9": "Fill in the blank: Bootstrapping can impair learning on problems where the _______ representation is poor and causes poor generalization.", "14000987-97dd-4ddd-8bfb-c0638d557a76": "What is one key difference between minimizing DKL(p||q) versus DKL(q||p) when approximating a distribution p with a distribution q?", "a5612b9f-ccfb-4bb2-aa7a-27e086135fd2": "Consider a mixture of two Gaussian distributions for p. If we want to construct a single Gaussian approximation q that places high probability anywhere p places high probability, which KL divergence should we minimize - DKL(p||q) or DKL(q||p)?", "499d952b-f1ed-43c5-8acf-d842fa8de770": "According to the passage, why might it make sense to use a longer window of observations to estimate zN when the signal is changing slowly and noise levels are high?", "340e80d5-bb70-4e1a-b213-2bca7d2867d5": "The passage mentions that a weighted average, where more recent measurements make a greater contribution, could potentially provide a better estimate of zN than a simple average. However, it notes that this sort of intuitive weighting is unlikely to be optimal. What systematic approach does the passage recommend instead?", "e94fdf02-ee1d-492f-bba8-92e4701a1658": "According to the passage, what are the three key ingredients needed for successful transfer learning between two languages?", "d798de86-8b31-4b5a-97b3-38b7003f04f1": "The passage mentions that zero-shot learning is a form of transfer learning. What does zero-shot learning refer to in the context of transfer learning between two languages?", "a8e81089-508a-4fe1-af9e-acc42271c860": "According to the text, what is the effect on the model evidence of increasing the order M of the polynomial regression model from M=0 to M=1? How does this relate to the fit of the model to the data?", "f4f15bb1-3bd4-4362-bf92-359e3192e6a7": "The text states that in going from a quadratic polynomial model (M=2) to a cubic polynomial model (M=3), the residual data error is reduced only slightly. What property of the underlying data generation process causes this diminishing reduction in error with increasing M?", "b4102aaf-bc18-4b76-a199-7a0b3417e46c": "What are feedforward neural networks typically represented by?", "a63a05eb-3f3f-4a4d-9c22-03dafc9d3acb": "In a feedforward neural network, what is the first layer called and what is the final layer called?", "9169705b-9cb9-4a40-a728-f2d0b92f184e": "What did Srivastava et al. show regarding multiplying weights by pe^N(1,J) compared to dropout based on binary masks?", "83a182c5-1f6d-40ef-8283-5b8de7e39b36": "How does the concept of dropout relate to sexual reproduction and swapping genes between organisms, according to Hinton et al.? What kind of features does this tend to produce?", "d5322f72-f3d8-4c36-94e9-d96019a858ad": "According to the passage, what is one assumption that motivates algorithms like tangent propagation and manifold tangent classifiers?", "17533780-25ce-40ec-a715-14ace299516e": "The passage mentions that slow feature analysis makes what assumption about the most important explanatory factors?", "d650272a-7ae1-4224-9ef8-4f3af7b76406": "Fill in the blank:", "57d88b01-927b-4528-ac42-d9f94d365f7d": "____-step return for tree-backup is written in terms of the expected approximate value ____(S) and the action probability ____(A|S).", "32f9d6a4-2b19-43ac-8801-66124cbb2c53": "True/False:", "e0ba5b9a-24aa-4e51-9b3b-819495773075": "tree-backup n-step return equation is the same as the n-step return for Sarsa with control variates, except the importance sampling ratio is substituted with the action probability.", "de1fff9c-4e41-4e1b-bdc1-1a21f2b4529f": "According to the passage, what are some areas where policies derived from reinforcement learning could advise human decision makers?", "1506c315-295d-44dd-a362-b0b36702278b": "The passage mentions that reinforcement learning has had impressive results in which two games?", "b9b2d0b7-b5fe-44bc-8ea2-a1f316a39cbc": "What is the walk-back training procedure proposed by Bengio et al. for training denoising autoencoders?", "f09c80c9-ad47-4449-ac94-e42521875684": "What does detailed balance specify about a Markov chain at equilibrium?", "696c256b-72fe-44dc-8918-87d4319d7e0e": "What is the core architecture used in BERT?", "257ba3aa-67e6-45f6-a3bf-748f5ce3feca": "How many Transformer blocks are there in the BERTBASE model?", "0b8b5cb0-ed67-4659-92a3-691f98aec2c2": "What framework is known in statistics as empirical Bayes or type 2 maximum likelihood, and in machine learning as the evidence approximation?", "0295608c-dce0-4d7b-9cb0-d772daaadf78": "If we introduce hyperpriors over \u03b1 and \u03b2, how is the predictive distribution obtained according to the provided information?", "22fcf151-8e02-48da-af9f-15946924d667": "What is the relative improvement in top-1 accuracy on ImageNet that SimCLR achieves compared to previous state-of-the-art in self-supervised learning?", "9330c4c6-aa7d-4e2a-9ec2-249a1767b5b0": "How many out of the 12 natural image classification datasets did SimCLR perform on par with or better than the supervised baseline when fine-tuned?", "e180bbb4-a4e7-4e02-8d45-3e24e062b5bd": "What is the key difference between the on-policy distribution and the generalized on-policy distributions discussed?", "b69fc8ab-fe55-4f4f-af0b-d19c5ba87c0f": "If interest is a random variable indicating how much we care about accurately valuing a state, what are the minimum and maximum possible values for interest?", "154d8494-7978-41b1-8250-63566717a34f": "Let \u03bc be a signed measure with Hahn decomposition (P,Q). If f is defined as f* = 1Q - 1P, what is the range of values f can take?", "9aface90-2988-4ede-bedb-246c9401211f": "Let \u03bc = Pr - P\u03b8 be a signed measure with Hahn decomposition (P,Q). Given \u03bc(f) \u2265 -\u03b4, what lower bound can we derive on Ex\u223cPr - Ex\u223cP\u03b8?", "19324d6d-1470-48c1-a2ce-202dd93d3236": "What technique involves normalizing the output of deep layers in an artificial neural network before they feed into the following layer?", "be16cf25-5845-4c67-8fb0-de88f742ba1c": "What technique involves having a block of layers in a deep neural network learn a residual function, which is then added to the input to produce the desired function?", "c93c8a2d-4490-47f1-9365-8be0297b31b8": "What technique has been used primarily in the context of recurrent neural networks to act as a regularization method?", "f47bad49-27c4-497b-84e2-021eefe1ea55": "How can adding noise to the weights of a neural network model be interpreted from a Bayesian perspective?", "4fdc1658-2458-4c7c-8edf-db9ffb320291": "What are the two main reasons that the TD target is considered an estimate, according to the passage?", "fa0bad2f-be1c-4af0-9eff-04deec5dafc9": "The passage mentions that TD methods combine aspects of both Monte Carlo and dynamic programming methods. According to the passage, what specific aspects of Monte Carlo and dynamic programming do TD methods combine?", "ab3200e7-9881-41c6-97b4-37a1b3eb4a4c": "What makes Gibbs sampling efficient in a deep Boltzmann machine?", "a0829f5e-39e5-4190-90dd-140761f9765c": "According to the passage, how many update iterations are required for Gibbs sampling in a DBM with l layers?", "83f1df6f-b32f-4f54-840c-6770e3fc7d3f": "According to the Olds and Milner paper, what brain region did the researchers electrically stimulate to produce positive reinforcement in rats?", "0a6feb89-ca93-4f00-9c6a-6eff2beefa75": "The O'Reilly and Frank paper proposed a computational model involving which two brain regions to explain aspects of working memory and learning?", "5a5d168e-ed0b-45b3-ba86-2a74dd6b0c81": "What are some examples of models that have been pretrained using self-supervised learning in natural language processing, as mentioned in the context?", "b5c6d2d9-ce2b-44ef-bdfb-aff147ef5d1f": "According to the context, what are some of the benefits of using self-supervised learning compared to supervised learning alone?", "7287fd3f-f55b-4ed6-b083-7bf752e77e21": "What are the two key problems that the momentum algorithm aims to solve?", "eeb6f558-24cc-4460-b7e0-23e766a26bfe": "The passage states that momentum traverses a long, narrow valley or canyon lengthwise. How does this contrast with the behavior of regular gradient descent without momentum?", "05b24b04-35fe-489c-93fd-73af5b69e656": "According to the passage, what methods did Tesauro and Galperin explore as an alternative to full-width search that reduced TD-Gammon's error rate by large factors while keeping think time reasonable?", "9bcb27f5-e00e-4536-83a0-7a2fe524f948": "The passage states that based on results and analyses by backgammon grandmasters, TD-Gammon 3.0 appeared to play at close to, or possibly better than, the playing strength of the best human players. What version of TD-Gammon did Tesauro report had a \"lopsided advantage\" in piece-movement decisions and a \"slight edge\" in doubling decisions over top human players?", "4fd47646-792c-41dc-91c5-33d6292c2d7e": "What is the default recommendation for the activation function used in modern neural networks?", "34906233-a5cd-4716-b59a-4ab3b7617eb9": "Fill in the blank: We can specify our complete network as f(x;W,c,w,b) = ____ max{0, Wx + c} + b.", "61d03503-6f8b-41df-b5e7-6ab516cc2b19": "What are the key differences between a memory bank and a queue-based dictionary for storing representations in contrastive self-supervised learning? Focus your answer on how representations are generated and reused in each approach.", "2b06cff3-ba26-4093-a115-8b113c9cb935": "Explain the InfoNCE loss function used in the context. What role does the temperature parameter play? Why is a contrastive loss used for self-supervised representation learning?", "74f182e6-72a2-4df5-9c80-849fce14e1e9": "What is the purpose of introducing latent variables in mixture models according to the passage?", "3c96f5eb-a458-490a-bfca-fc786069f65f": "Briefly explain the expectation-maximization (EM) algorithm mentioned in the passage. What role does it play in latent variable models?", "3c5a4d49-b8d3-45ca-baac-7d2557da44d4": "According to the text, when we restrict attention to approximations where the factors themselves factorize with respect to individual variables, what does the overall distribution q(x) become?", "780e1695-75a3-44c3-9df6-01e52bc76a1f": "In the example provided, suppose we initialize all the factors and choose to refine factor q3(x3). What is the corresponding factorized approximation?", "39a9e41c-4d5d-4863-89d6-32d306413b04": "What does the denoising criterion with Gaussian corruption and reconstruction distribution yield according to the passage?", "857fce4e-1ac6-4a5f-9710-d3f91463f0b8": "According to the passage, what is illustrated with the gray circle of equiprobable corruptions in Figure 14.4?", "36171fa9-4ee0-4f69-a3ca-4c40a262236a": "Derive the backpropagation equations for \u03b4kr given the regularized error function in (5.127) and the equations for \u03c6kr provided.", "d0aef583-5784-4a0e-802c-ca31cba5fb88": "Consider adding Gaussian noise \u03be~N(0,I) to the input x. Show that this leads to a Tikhonov regularizer of the form given in (5.135). You may follow the arguments in Section 5.5.5.", "76a687bd-b92a-44d9-867c-79c6357fc513": "According to the passage, what are the two key requirements for collective learning in a team problem?", "727c2aef-3735-40f6-a69d-e168393a433b": "The passage states that the simplest way for a team of reinforcement learning agents to explore the space of collective actions is for each member to independently explore its own action space through persistent variability in its output. Can you explain why this variability in each member's output causes the team as a whole to vary its collective actions?", "39abe6ea-3500-49b6-b2c0-3ea64cdc2b01": "According to the context, what is the notation used to represent a single observation of a vector-valued variable with D dimensions?", "120d9671-f5ad-4a1d-99aa-990b31c742f6": "The context mentions that the observations x = (x1, ..., xN)^T are drawn independently from a Gaussian distribution. What two parameters of this Gaussian distribution are unknown and need to be determined from the dataset?", "16eb5b34-9bf7-4cdf-afe0-fe424a61b9ed": "According to the passage, what are two benefits of using generative models in AI systems?", "c897fb5f-aabe-4c41-b20a-e2f963c4a8dd": "The passage states that generative models can provide AI systems with a framework for intuitive concepts. What does the passage say this framework allows AI systems to do in the face of uncertainty?", "5b6d2e09-c877-43ae-81ec-e6bcd61a43df": "What method did Watson use to compute the estimated action value q(s, bet) for each legal round-dollar bet?", "e8bab1f8-ca56-4604-9448-af2881b23a46": "According to the passage, why did Tesauro et al. adjust the action value formula by subtracting a fraction of the standard deviation?", "a25b893a-1462-43ea-a109-929f92ae7739": "Consider the Bayesian linear regression model discussed in Section 3.10. What is the form of the predictive distribution for this model, and how is the input-dependent variance determined?", "2c29213e-8d0f-4a21-8a7c-7f62125b7b42": "In Section 3.8, we discussed updating the posterior over the parameter w in a linear basis function model when a new data point is observed. Describe the process by which the posterior is updated when a new data point (x_{N+1}, t_{N+1}) is observed, including the steps of completing the square and determining the new sufficient statistics m_{N+1} and S_{N+1}.", "7f1d2e8b-a2f5-4e49-acd9-0e6d68dd1513": "What is the relation between y and \u03b7 in a generalized linear model, according to the derivation in the text?", "9177e909-e53b-42bf-a7dc-85a4a54a5943": "The context describes two key functions that relate the expected value y to the linear predictor \u03b7 in a generalized linear model. What are the names of these two functions?", "ccb94cf6-c8e6-4dca-9393-83cb9d1ddc98": "What is the core idea behind representation learning that allows it to be useful when transferring knowledge between different settings?", "db83f364-2282-4134-9666-10480ba2f039": "What was the experimental setup in the machine learning competition mentioned, in terms of the data provided to participants and the tasks they needed to perform?", "82c9cc41-082a-4ca3-8953-0eff6d71e7dc": "According to the passage, what are some of the key properties of convolutional networks that allow them to implement neuroscientific principles?", "4f8a9995-6129-4d24-bb59-c1348cdebd36": "The passage mentions that convolutional networks have become very popular in deep learning. What are some of the reasons contributing to the usefulness of convolutional networks in deep learning models?", "373e53f1-a6a5-4e3a-8890-8472487ef092": "According to the n-step Sarsa algorithm described, what happens to the values of Qt+n(s, a) for all states s and actions a such that s \u2260 St or a \u2260 At?", "add87caa-8022-41e4-86d4-db6bb91ee9cd": "The pseudocode for n-step Sarsa is provided in the box on the page following Figure 7.4. What is the purpose of taking the index modulo n+1 for the store and access operations for St, At, and Rt?", "0eac82d7-fd95-4ce9-b70a-b16a21ee19b4": "According to the passage, what are the two charge levels that can be distinguished for the robot's battery?", "5f898c39-741a-4f1a-a6f3-c8d3f7f253b6": "What are the three possible actions the robot can take when its battery level is low?", "6f36713e-9ae6-4652-80b0-da77b09bc096": "What are some limitations of using the bias-variance decomposition to understand model complexity?", "61a8978a-e286-47b1-be2c-87e286d8cb2b": "According to the passage, how can we control the effective model complexity when using maximum likelihood for linear regression?", "0955000d-9370-4ada-82dd-a2e3a0af396a": "What is the Hessian matrix and how is it related to the curvature of the cost function?", "2bf66593-6160-4d2c-b07b-2ba57105aeef": "How does positive, negative, and no curvature affect the relationship between the gradient and the true value of the cost function? Provide an example for each type of curvature.", "8eee6057-eecd-461c-9434-634687e4d281": "According to the context, how does thinking about discounting as pseudo termination help with off-policy learning?", "6a97146e-d66e-4ae7-80a6-c728c060c265": "In the one-step Emphatic-TD algorithm, what are the two key terms that are updated on each time step? Define each one briefly.", "eb13e7ff-13ef-401f-8afd-32d6224c6c84": "What organization was Harry a senior scientist affiliated with?", "5f01bbb0-d687-41f9-bef7-133650a43240": "What university conducted a project funded by AFOSR to assess the scientific merit of Harry's ideas about maximizing systems and natural intelligence?", "ba7bb2f7-7b09-40f9-a420-6e84f6b7c280": "Who does the author thank for providing specifics on reinforcement learning techniques discussed in certain sections of the book?", "0ceb1784-4c3d-43a8-84e2-b75f8a0b7b98": "Which organizations does the author thank for their \"long and farsighted support\" of their work on reinforcement learning?", "cb49cc21-8063-449c-a7a0-78df49b7fd2c": "According to the passage, what is one benefit of modeling interactions between few channels in a convolutional neural network?", "426f8c87-df4d-4b8f-b0e1-37e470415631": "The passage mentions \"tiled convolution\" as a compromise between what two types of layers?", "ceb4c6bc-66da-4a1a-9018-8d37df0a4f14": "What are the two conditions given by the stochastic approximation theory result that are required to assure convergence to the true action values with probability 1?", "4be40733-b150-45fa-bfef-d7ef730fc515": "Consider two possible choices for the step-size parameter \u21b5n(a): (1) \u21b5n(a) = 1, and (2) \u21b5n(a) = \u03b1, where \u03b1 is a constant. Which one meets both convergence conditions, and why?", "20d7641a-82cb-4a09-aafd-029cb57c5276": "Given a matrix A \u2208 Rm\u00d7n, what is the notation used to refer to the element in the ith row and jth column of A?", "630247fc-8d1c-484e-94b2-f1dc24450778": "Consider a 5x3 matrix B. What is the notation used to refer to the 3rd column of B?", "1d7bdec7-550e-4e4c-ad4b-c20b1ae02fa7": "What can injecting noise into the inputs of a neural network be seen as?", "7b2849a1-5be1-4c16-8fef-6f525ea7e993": "According to the passage, what approach has Poole et al. shown can be highly effective for improving neural network robustness, provided the magnitude of the noise is carefully tuned?", "73fa2c8a-ac29-473c-82c8-dcfa897b2628": "According to the passage, what is the main benefit of using early stopping as a regularization technique?", "42d30ef0-a854-4ee4-a546-0f5509aadbe4": "The passage mentions that early stopping can be viewed as a hyperparameter selection algorithm. What hyperparameter does early stopping help select?", "25b09226-477d-4196-ab77-8289ecccf224": "According to the text, as the number of data points N becomes much larger than the number of parameters M, what happens to the eigenvalues \u03bbi of the matrix \u03a6T\u03a6?", "8667a3b9-fe1d-4186-b8ab-fe2827f885a2": "The text states that the evidence re-estimation equations for \u03b1 and \u03b2 do not require evaluation of what matrix's eigenvalue spectrum?", "f251fe08-3983-462e-9b81-f7b3f592035f": "What is the role of the function g\u03c6(.) in the variational autoencoder algorithm?", "49b297a0-bf2f-4909-8f84-e49355052277": "What are the two terms in the variational autoencoder objective function (eq. 7) and how do they relate to regularization and reconstruction error respectively?", "0a26f268-6e52-4d81-9de1-6b64b52f7ddb": "What is the Fisher kernel and how is it defined in terms of the generative model p(x|\u03b8)?", "792cffe9-2725-4afc-a7d7-1780c51cfa19": "How can we extend the mixture representation in equation (6.29) to allow comparison of sequences of differing lengths?", "fa527971-621f-4928-99e0-8b3d203b0373": "What is the distribution of the random variable z in the sequential estimation of the mean of a Gaussian distribution?", "ba5d5c9c-40c5-4c8a-bcf9-e33908506045": "In the Bayesian treatment of estimating the mean \u03bc and covariance \u03a3 of a multivariate Gaussian distribution, what are put as prior distributions over these parameters?", "75ceaeea-b916-40ae-b4f7-29b1aa44ef86": "What is the main manifestation of ill-conditioning of the Hessian matrix in neural network training according to the passage?", "bc26310d-ead1-4b43-aeba-81e0f065fb4c": "According to the passage, when does ill-conditioning of the gradient become a problem for gradient descent?", "db28ba10-a574-4087-ae3f-58bcfe1be334": "According to the passage, reinforcement learning theory has contributed to formulating quantitative models of what in humans and non-human primates?", "419732ad-5434-44bd-aa6f-446a5c6462c5": "The passage mentions that reinforcement learning contributes to which interdisciplinary field that studies the neural basis of decision making from an economics perspective?", "a2d661a9-e8b3-463e-a065-0484b3b1dde9": "According to the passage, what is the purpose of forming contiguous blocks of occupied points on the board?", "9dc5b819-156e-4ddc-972d-f77324d11838": "The passage states there are 24 possible locations for pieces on a backgammon board. What are the 2 additional locations besides the 22 points and bar that pieces can occupy?", "1cefec25-ad77-4b27-815e-3cb3d7472bc9": "According to the passage, why do we usually want a step size less than 1 when using tabular TD learning?", "73f401a0-01f6-4c16-9c6e-48ef542dc0fa": "The passage mentions that with linear function approximation, there is not a clear notion of the number of experiences with a state. Why is this the case?", "09d16d98-ff7c-4ecd-8248-483557e4cca8": "Density estimation involves modeling the probability distribution p(x) of a random variable x given a finite set of observations. What problem does this relate to that was previously encountered in Chapter 1 regarding polynomial curve fitting?", "fa4de38f-4d24-4361-a0c4-7033f0f57576": "The context mentions that density estimation is an ill-posed problem. Why is this the case?", "24917f81-33ab-47e0-b529-98a5f73a3d5b": "What technique does the author suggest using to achieve high-resolution GAN samples, since obtaining high-resolution outputs is one of the primary difficulties with GANs?", "7ca523bb-bcf7-49eb-a880-c374a8c0f92f": "The author mentions comparing two strategies: using super-resolution networks like SRCNNs or SRGANs on lower resolution GAN samples, versus using the Progressive Growing GAN architecture. What are these two strategies and how would their performance be compared?", "74d07f67-9152-4da2-ab26-4c77ae0101b3": "According to the passage, why are optimal policies rarely achieved in practice for the tasks we are interested in?", "3a411e85-d029-400a-a5aa-308b89b458d1": "The passage states that many reinforcement learning methods can be viewed as approximately solving the Bellman optimality equation. What does the passage say these methods use in place of knowledge of expected transitions?", "31dcc812-f976-4bfe-9820-ffa2cfd21e40": "According to the passage, what creates pending messages on the links in a graph?", "d36eff93-dbf4-48bb-a4a3-9eeda7e38f5f": "The passage mentions that loopy belief propagation may never terminate when there are loops in the graph. Why is this?", "f66a79d3-53ca-49eb-966b-5d84543f3ef0": "According to the passage, what is the difference between model-free and model-based reinforcement learning algorithms?", "3f213db3-892e-4ba2-a786-c34801d2e1bc": "The passage states that habits are triggered by stimuli whereas goal-directed behavior is controlled by its consequences. How does this relate to the distinction made between habitual and goal-directed control of learned behavioral patterns?", "9d9ebf0e-250b-4fac-9c98-03956c0137f1": "What are some of the key differences between LSTM and GRU networks?", "a0676f9e-2091-4d91-9e5d-2716ada90af3": "The context mentions that LSTM networks have been shown to learn long-term dependencies more easily than simple recurrent architectures. On what types of tasks have LSTMs achieved state-of-the-art performance?", "bf87a76e-c3c3-4c5e-b740-2bb48eeb5434": "What are some of the benefits of learning good representations according to the passage?", "04139c62-6117-4229-9f5f-9091c993be24": "The passage provides an example of how the representation of information can dramatically affect the difficulty of a task. What is the example given and how does it illustrate this point?", "0824ddbf-121e-4628-afca-a793953af3a7": "What is the key property of the estimator bn that allows it to approximate the true expectation s?", "72316410-5e63-4c0f-b0d6-a0bd5d383fe7": "The law of large numbers states that as n increases, bn will converge to what value?", "6081f26e-68fa-4b6b-a415-37efc21a96fe": "According to the passage, what are some examples of more advanced machine learning techniques that are discussed as future research directions?", "c44122f8-2345-4805-80d8-faf112d6eb8a": "What does the author suggest could lead to a \"Standard Model\" of machine learning and a turnkey approach to panoramic learning with all types of experience?", "929a6f01-bc45-4546-8997-1464832d4336": "The paper \"Knows what it knows: A framework for self-aware learning\" was published in which journal?", "34fb9cf3-7bcf-4ab7-89f9-4fc44a6eaab6": "What method did the paper \"Composable text controls in latent space with ODEs\" propose for generating text?", "39e44404-9e61-4c4c-a3e8-abd85cda209a": "What is one disadvantage of using kernel PCA compared to standard linear PCA that is mentioned in the passage?", "467799c8-e641-4230-91de-cb05692ddd7b": "According to the passage, how does kernel PCA differ from standard linear PCA in terms of the matrices that are analyzed?", "e864bee7-ec20-41dd-a122-c7f4c3de8e38": "According to the passage, what are two benefits of using vector valued memory cells instead of scalar valued memory cells?", "6d2d0bbc-cb89-40ac-b9a9-428fdd10683c": "The passage mentions \"content-based addressing\" as an advantage of using vector valued memory cells. Can you explain what content-based addressing is and how it allows for the recall of memories based on partial information, using an example from the passage?", "baed7f2d-0453-49e3-bae3-50af5ddb468d": "What is the analytical form for the value function J(\u03b8) according to the context?", "f0d3901f-5a2d-495c-bc86-13c485658247": "According to the context, why is it theoretically justified to replace d(.) with d\u03b8(.) in the expression for T(\u03b8)?", "243a6d96-c55f-412e-834c-362e8426515e": "What type of neural network model is described in the provided link and figure caption?", "956abf50-b143-44e8-aaf1-f577e4be7c54": "The figure caption mentions \"high-dimensional manifolds\". What does this refer to in the context of variational autoencoders?", "0d31e44e-9a08-4b81-b729-0d39767e5643": "Consider two probability distributions P and Q. As n goes to infinity, which of the following statements are true?", "9394ccab-b30c-4d75-8787-c94a2987bc5f": "The total variation distance between Pn and Q goes to 0", "3c235f0a-c215-4e9e-be9c-760feb1e0c45": "The Jensen-Shannon divergence between Pn and Q goes to 0", "12270ab1-7d26-45fb-8f74-654abeb3d988": "KL(Pn || Q) goes to 0", "c1faa986-9dab-4aaa-a9a4-399d385a2e29": "A and B", "936ba82a-d456-4381-b9e8-3a4ea4481d40": "A, B, and C", "d253e0ca-ebf5-42f9-a77d-e6fc6325149c": "Which of the following statements comparing the properties of KL divergence, Jensen-Shannon divergence, total variation distance, and EM distance for learning distributions supported on low dimensional manifolds is true?", "5cdb89de-fa05-4852-a4c9-de47c915f5f0": "Only EM distance is sensible for this setup.", "a7543eee-50ac-45f4-b25a-6e98d3707827": "Only KL divergence is not sensible for this setup.", "44f51b18-ea12-488e-81ad-b9b6e5ec5562": "Both JS divergence and TV distance are not sensible for this setup.", "8a2ae69b-a074-438b-bdee-f367efc85437": "Both KL divergence and JS divergence are not sensible for this setup.", "c30cc6d4-3407-4dc2-99e6-53fdb13ef11d": "KL divergence, JS divergence and TV distance are all not sensible for this setup.", "eac30494-1aae-49ae-829c-b87fcecfac8d": "Which paper proposes a system for holistic data repairs using probabilistic inference?", "6247d304-3eb4-45d5-944a-26708f567ceb": "Which conference was the paper \"Modeling relations and their mentions without labeled text\" presented at?", "8493c45b-a7dd-42a3-8287-8083315601c1": "What is the key idea underlying all Monte Carlo methods for estimating state values?", "88055806-d4f3-489a-b1e2-aedf98b55f58": "How does the first-visit MC method differ from the every-visit MC method in terms of estimating v\u03c0(s)?", "88d61552-ae28-4a46-af54-508345ff249b": "According to the passage, neurotransmitters like dopamine can bind to several different types of receptors on the postsynaptic neuron. How many different receptor types are mentioned that dopamine can bind to?", "1497ceb2-3938-4ba0-96ab-560c5f024510": "The passage states that neurotransmitter molecules are released from the presynaptic side of a synapse and diffuse across the synaptic cleft. What is the name of the very small space between the presynaptic ending and the postsynaptic neuron?", "d01eebb5-41d6-4670-97af-41bd827a6ce5": "What does the dot over the equals sign in the equation p(s'|s,a) = ... remind us of?", "92ae72e5-71e5-4746-9bd5-98511d027ce8": "The dynamics function p takes how many arguments as input?", "283ce062-8df0-4ae5-9d61-e3ec1de142f3": "The Bellman equations provide the theoretical foundation for many RL algorithms. However, we typically cannot directly apply the Bellman equations in RL because we do not know which of the following?", "18bfb976-9614-4a3a-96b1-bf772867314e": "The reward function R(s,a)", "e5c9a875-ace8-4fb1-aeb3-b8fd435319ba": "The transition probabilities P(s'|s,a)", "332c50eb-a417-4c62-a07b-71f097e56f49": "The value function V(s)", "3e4acbeb-8c7d-44cd-b25e-c3dda15bce7f": "The policy \u03c0(s)", "68526e5e-8305-4949-ab13-4c55992c4f0a": "When we have complete information about the environment dynamics and reward structure, reinforcement learning reduces to which classical AI approach?", "342f2298-d209-42f2-ad0f-b17fa16e49f2": "Evolutionary algorithms", "ddd2df5e-145c-403d-8c6d-c68a79d127f0": "Propositional logic", "63826172-632d-4e93-803a-22d643d6f275": "Dynamic programming", "4651301e-ab9e-4b15-b9cd-700e6c18d621": "Neural networks", "b4bd9451-789a-4d65-96a9-ede258699a06": "What is the goal of the GQ(\u03bb) algorithm?", "50b0321e-b3ff-4ce1-a144-1f5857f81043": "How does HTD(\u03bb) relate to TD(\u03bb)? What is HTD(\u03bb)'s most appealing feature compared to GTD(\u03bb)?", "7cae4781-34b9-46ac-abbf-04e61018d589": "According to the passage, what are some of the broader forms of experience that panoramic learning makes use of, beyond supervised labels?", "312099a9-3068-4ad1-8e2a-56dc61218e75": "The passage mentions that the experience function f(y) offers flexibility for expressing different types of experiences. What are some examples of these different types of experiences that f(y) can capture?", "c6e665eb-f8da-4226-9e4a-e7174550c333": "According to the passage, why can the gradients in a recurrent neural network be problematic during training?", "8b736623-0ad8-438c-9961-6eba50c2be12": "The passage mentions \"clipping gradients\" as a strategy to deal with the cliffs and flat regions in the objective function landscape of a recurrent net. What is gradient clipping and how does it help address the training difficulties caused by large or small gradients?", "1880971e-f388-4426-a3a5-73cff6bfd56c": "What are two reasons that contrastive divergence is slow when training deep Boltzmann machines?", "207172f5-298a-4163-961c-834f4c5a81ec": "What is one way to enable successful training of deep Boltzmann machines from random initialization?", "c7da8008-be34-4975-b487-9f170b8d5b6c": "What two types of loss functions are commonly used to evaluate model performance? How are they different?", "b70b127c-847e-4aba-bcf5-47887df45e79": "Why is it important to evaluate model performance on data separate from the training data?", "9b75564c-8a00-4fde-82d3-a2b1f256deb8": "What is the gradient of the log probability log P(y|C) with respect to the presoftmax activations a?", "6a1a635c-519a-4007-8599-aa0a73b54362": "The negative phase term in the gradient pushes a_i down with weight P(i|C). How can we estimate this term without computing P(i|C) for all i in the vocabulary?", "1dbc1019-02fb-4dc2-93a2-7e365c3e7838": "What are the two main kinds of reinforcement learning methods discussed in the chapter? What are the primary components that each relies on?", "2db1c73d-8758-4b33-8e7a-9cf0c406690c": "The text mentions that model-based and model-free reinforcement learning methods share similarities. What is stated as the \"heart\" of both kinds of methods?", "279415df-31f5-472b-9739-3dce1e6ccfcf": "What are the three main approaches discussed for extending Gaussian process classification to multiclass problems?", "c4e5ef4b-280d-4e07-b25c-42677bee432d": "What property of the true posterior distribution makes the expectation propagation approach well-suited for Gaussian process classification?", "27ec0c2b-8e0f-43d4-8f29-b2f0404c117e": "What is the expression for \u03b3 in terms of the eigenvalues \u03bbi of the matrix \u03a6T\u03a6?", "4b9b7fe3-9646-4a1e-b85a-46824d314c9a": "Derive the expression for the value of \u03b1 that maximizes the marginal likelihood. Start from the stationary point condition and show the steps to arrive at the final expression.", "a75e59bd-9c57-4b19-8528-7958177939f2": "What is the significance of an eigendecomposition of a real symmetric matrix A? How can it be used to understand the properties of A?", "dfb50460-65a6-443c-a6dc-1ea96f59399f": "True or False: The eigendecomposition of a real symmetric matrix A is always unique. Explain your answer using information from the context.", "bc338982-b2f7-4e48-82d7-ab52fa74357b": "What is the debiased contrastive loss designed to mitigate compared to the standard contrastive loss?", "96dd08f6-a715-44cf-94de-f7817074a438": "According to the context, what are some common data augmentation techniques used when training contrastive representation learning models in computer vision?", "620f0fa8-d924-4483-b026-cb2efce2a328": "What are the two types of models discussed that can predict how an environment will respond to an agent's actions?", "f1949bab-6eb9-403c-82ac-4a50edaceaf7": "If a model produces a description of all possible next states and rewards and their probabilities, what kind of model is this called?", "0169b8fd-637e-4bab-9211-3d4e47384f70": "What is one way to measure the performance of a regression model on a test set?", "643def5c-ddad-460f-bfb6-b7392c7bc634": "Fill in the blank:", "9d48301e-9a1f-4350-80f7-356de25d0aa4": "we can see that the mean squared error decreases to _____ when g(x(test)) = y(test).", "51781f51-6fcb-45d3-8ab8-98f2944566aa": "According to the passage, what are two key advantages of parameterized policy methods over action-value methods?", "d500a07f-3154-4aa9-a5f6-1c8abcb845a3": "The passage mentions the \"policy gradient theorem\". What does this provide for policy gradient methods that action-value methods lack?", "dc48a7c0-d25b-44e8-a6b8-6ba0c01afd0d": "What outdoor activity was the man in the black shirt participating in?", "083b191e-3614-4e30-8c64-6f3260c5b2ec": "What action was the child taking in the pool with the woman wearing a black swimming suit?", "8bbd842f-5949-4d11-b60b-106d6a396d72": "What is the purpose of using the parametrization 0 = o(slow) + @(fast) in Fast PCD?", "2f82e3f6-7ed6-438a-b5a4-70f163b2dd65": "What are two key differences in how the slow and fast weights behave during learning in the Fast PCD algorithm?", "9f8212f7-6039-4178-a69e-eb7c861a7c44": "What is the term used to describe the specific arrangements of objects in the bins in physics terminology?", "891a47eb-820b-47a1-8b67-2e815b78fa8b": "If we have N total objects to distribute into bins, with ni objects in bin i, what is the formula for the total number of arrangements of objects into bins?", "3448e120-9de5-4ae7-824d-4d3c022f4ead": "According to the given information, how is the mean \u03bck of component k determined in a Bernoulli mixture model?", "7cd9656a-89ab-4c77-b33c-d88d63739c69": "The context mentions that a Bernoulli mixture model does not have singularities that cause the likelihood function to go to infinity like in a Gaussian mixture model. What bounds the likelihood function in a Bernoulli mixture model?", "b047cbbd-c13f-47cb-9d3f-cd7794abaff7": "Rollout algorithms are often not considered learning algorithms. What feature of reinforcement learning do rollout algorithms utilize to estimate action values without exhaustive sweeps?", "479bb3ad-59fa-4053-8ca0-af5121493777": "Monte Carlo Tree Search (MCTS) enhances rollout algorithms by using value estimates obtained from simulations to successively direct new simulations. What method does it use to obtain these value estimates?", "10cd2cb4-fed9-47b9-a5da-317b8635235b": "What are n-step TD methods?", "4188d039-74be-4ffb-9e4e-400ca74bfe6e": "What is the target used to update the estimated value v\u03c0(St) in a Monte Carlo update?", "95fccdf0-80c3-437e-a874-22a06cbf548d": "What is one way to address the potential seriousness of the problem of insufficient experience with off-policy Monte Carlo methods?", "4d5aeee4-06a1-43ca-9240-fbf204164014": "In the simplified racetrack example, what are the components that make up the velocity of the car?", "34eb6940-a11b-4370-b762-dd8daf1c710e": "Who developed the theory of reinforcement learning with a non-Markov state representation?", "e9c9261e-3df6-4940-874a-8d1aac432e5c": "Whose technique of providing an initial approximation to the value function is equivalent to the potential-based shaping introduced by Ng, Harada, and Russell?", "5c3374bf-11a5-4856-b797-baf2ad08d0fd": "What are the three components that make up the parameter of the function approximator in this example?", "6e35584d-2298-4094-9f52-95200a47fdac": "If the system starts in state A2, what state does it transition to next and what is the reward associated with that transition?", "01d5fd3a-4a6c-4da7-af26-5ca356471a2f": "What are the two types of constraints described when defining the generalized Lagrangian or generalized Lagrange function?", "836f3cda-33da-4184-850a-017db4f1fc1f": "Fill in the blanks: The generalized Lagrangian is defined as L(x, \u03bb, \u03b1) = f(x) + ____ \u03bbi gi(x) + ____ \u03b1j hj(x).", "da8f551c-b2d5-4463-9a26-c8e79ff694b3": "According to the left graph, after how many episodes do the learned state values come close to the true values?", "176621a0-f848-4520-8150-43a8e5a39dca": "What performance measure is shown in the right graph, and how is it calculated?", "6790e42e-e672-4af0-93f3-ab6f37112073": "Explain the cause of high variance in importance sampling estimates of partition functions according to the given context. How does the variance relate to the proposal distribution po(x) and the target distribution p(x)?", "7d11ff03-17cf-4f67-b81b-e0b1f62e52b0": "The context discusses two strategies, annealed importance sampling and bridge sampling, that attempt to improve on basic importance sampling for estimating partition functions. Briefly compare and contrast these two strategies. How do they differ from basic importance sampling in terms of the proposal distributions used?", "26df2161-80aa-4013-8a9f-4f8ea03f0c53": "According to the passage, what does Figure 14.9 illustrate?", "f106e133-4d10-4c88-b309-d026ab0331f9": "The passage states that each local patch can be thought of in two ways. What are those two ways?", "c69b9c44-3112-4368-b45a-8ecdcbc2d709": "What happens to data points that lie on the decision boundary in the soft margin SVM formulation?", "a8b1d789-f8cf-402d-bd57-7a3368001118": "How does the slack variable \u03ben relate to whether a data point is correctly classified or not in the soft margin SVM?", "fd5926d3-fd28-4bc3-8c83-685e7ac6c9c6": "The 2017 paper \"Bidirectional Attention Flow for Machine Comprehension\" proposes an attention mechanism that combines context-to-query attention and query-to-context attention. What are the authors' names?", "c32fc2f2-e397-4448-9b3b-1c5d81e4f30c": "The 2010 paper \"Word representations: A simple and general method for semi-supervised learning\" proposes a method for learning word representations using unlabeled data. What type of model does this paper use for learning the word representations?", "9b6e10b3-08de-4ea2-b26d-07cabeef991a": "What is the difference between the flow of information in a convolutional network for recognition versus for generation?", "cb16cf38-05dc-4bf2-9c0b-bdbbdeb7eaed": "According to the passage, what are some of the benefits of using transpose convolutions in the generator network when generating images?", "3838bde9-b740-44a1-9f64-d9060e8127d0": "According to the passage, how does the momentum algorithm simulate a particle subject to Newtonian dynamics?", "49be9a0c-30bb-4762-ab54-a43978a049b8": "The passage states that the step size in the momentum algorithm depends on the size and alignment of a sequence of gradients. How does the momentum hyperparameter \u03b1 influence the maximum step size?", "8f572687-9a82-469a-9681-46845afb0149": "What are two advantages of spike and slab restricted Boltzmann machines (ssRBMs) compared to mean-covariance restricted Boltzmann machines (mcRBMs)?", "ac13347f-de30-4ee8-8b98-f70e4f0abd1f": "How does learning in the mean Product of T-distributions (mPoT) model compare to learning in restricted Boltzmann machines like mcRBMs and ssRBMs?", "3c467f09-f524-4df5-9c90-66acbafa2632": "What did Tesauro's neural network encoding scheme use to represent points on the backgammon board that had no white pieces?", "45b7a1f9-a03d-44e4-a758-fa3f383dbc59": "According to the passage, what concept did the third input unit activate for if there were exactly three white pieces on a point on the backgammon board?", "e169e2be-922c-4c00-9b71-9aa30db55636": "Explain the key idea behind the hierarchical Dirichlet processes (HDP) model proposed by W., M. I. Jordan, M. J. Beal, and D. M. Blei. How does the HDP extend the basic Dirichlet process mixture model?", "1df5a4ee-e178-4039-abdc-84cb624e37f1": "Compare and contrast the approaches taken by Tesauro's TD-Gammon program and Thiesson et al.'s graphical model for time series modeling. What are the strengths and weaknesses of each approach for modeling time series data?", "6b5790eb-1e6b-414f-8881-289b4efed348": "What risk is associated with using computationally intensive nonlinear optimization techniques?", "4ede6d67-d815-4363-ad27-b5613ba5dc30": "What limitation arises from using a clustering technique like K-means to partition the data set before applying PCA to each group?", "5e153540-2976-4c47-9645-f5dc90a4f050": "According to the passage, how does the error in value estimates typically fall when using sample updates for a state-action pair that has a moderately large branching factor?", "1616acd4-f3f6-4ee7-bd24-ee56036b1ccd": "The passage suggests that sample updates have an advantage over expected updates in improving value estimates across many state-action pairs. What is the reason provided for why this advantage may be underestimated in the analysis presented?", "38ab7308-11e0-488a-8bc0-ff341476a2ce": "Which journal published the paper \"Value-dependent selection in the brain: Simulation in a synthetic neural model\" by Friston et al?", "52c0732d-61ea-410e-8a69-34600024c5a4": "According to the paper by Gallistel titled \"Deconstructing the law of effect\", in what journal was it published?", "a8871cfd-d9f7-45d9-be79-c514f3ddbfb8": "What type of memory deconstruction is discussed in the Trends in Cognitive Sciences paper by Hassabis and Maguire? This paper proposes using a constructive memory framework called \"scene construction\" to help explain episodic memory.", "4314e2d0-9a1d-4408-bbb7-5461ec50179c": "According to the paper by Hauskrecht et al., what is a macro-action in the context of hierarchical solutions for Markov decision processes? Macro-actions are temporally extended actions or subpolicies that can speed up planning in MDPs by reducing the effective depth of the search tree.", "559058cf-5ff8-468c-88e4-22ea6b2c0e5f": "According to the passage, how are the marginals associated with a factor node calculated in the sum-product algorithm?", "c70f3b8d-bdc5-412e-aeae-e937cf660780": "The passage mentions an alternative view of the sum-product algorithm that focuses on messages sent by factor nodes. What is eliminated in this view, and what advantage does it provide?", "4e33c700-aebd-41ad-bc3f-160160d69e6d": "What is the key idea behind the tree-backup algorithm for off-policy multi-step learning without importance sampling?", "766ed332-85a9-4828-9b8b-76b6430864c4": "How does a tree-backup backup diagram differ from a regular backup diagram? What extra information does it show?", "7c29bc31-b528-427b-9959-b794adf9e800": "What is the Newton-Raphson update formula for the logistic regression model, where z is a vector of what elements?", "f2544818-c2e0-4500-ab8e-37849c5d9d2a": "The iterative reweighted least squares (IRLS) algorithm involves iteratively computing what, using the new parameter vector w each time to compute a revised version?", "f50a26cb-8bda-46e0-bab6-a0962a987047": "What is a key advantage of restricting some matrices to be diagonal in machine learning algorithms?", "4f6f2aa1-855b-4fe2-a13e-6d32e6273070": "If A is a 10x5 diagonal matrix and z is a 5x1 vector, what will be the dimensions of Az? Explain.", "a9fb3e6e-41db-4744-866b-82c0ae6a0958": "What are some examples of data types with different dimensionalities and number of channels that can be used with convolutional neural networks?", "7947e0a6-9b2e-4d90-9159-e826e3cde7ac": "What is one advantage convolutional neural networks have over traditional neural networks when it comes to processing inputs with varying spatial extents?", "fa9f683a-343d-4436-9f4a-afcdd116943f": "Which conference featured a paper on reducing wrong labels in distant supervision for relation extraction?", "a82087f8-1fcb-4867-9ef5-91c74ecefd93": "What method did Varma et al. propose for inferring the structure of generative models using static analysis?", "2ef42311-f595-487a-870f-dbdc78a38a9f": "What is the purpose of the companion volume mentioned in the context?", "4dfe546e-769b-4425-816d-01ce0156c060": "According to the context, what should students have the opportunity to do with the key algorithms discussed in this book?", "b60c0327-008b-4292-be4e-e910059b1108": "According to the passage, why does the method focus on modeling pairwise correlations between labeling functions?", "60ab7488-e7e8-4ad8-9a4c-01e83dc3fb87": "The passage discusses constructing a full generative model using three types of factors. What are these three factor types and what does each represent?", "afb2d2f8-6776-4b99-98cd-051d75b6bb7d": "According to the passage, what are the main parameters to choose when using the linear learning rate schedule?", "0dfd302a-1e11-4b64-9456-d4f03c12c438": "The passage mentions that gentle oscillations in the learning curve are acceptable when training with which type of cost function?", "44bf1a91-e2cb-49d2-95d3-3f6dea47f863": "How many labeled examples are there in total for the SST-5 task described in the passage?", "4dc04e0c-e7fe-4b91-9e8d-f10e6e71ae2a": "What methods did the authors use to avoid overfitting when training deep neural networks on the small datasets?", "8fd756b9-6e2b-47f6-8333-1a1f453257ed": "What is the main reason that detailed balance holds for the leapfrog algorithm presented in the context?", "eb54d61f-49a4-4b04-b501-286d31da3443": "The context mentions that simply replacing the momentum variables randomly before each leapfrog integration is not sufficient to ensure ergodicity. What additional modification is suggested to avoid this problem?", "3d281439-8f16-4e83-9c4b-7518b19c78a8": "What normalization method does replacing \u03c6i with log \u03c6i in Eq. (11) effectively change the softmax normalization in Eq. (12) to, according to the passage?", "43e82a36-31cd-4a0c-9111-4d236229df4c": "According to the passage, what two types of data do the authors study text and image classification on, in the settings of low data regime and imbalanced labels?", "b52d3431-dbec-454b-a960-da5bc76c1515": "What are two key differences between traditional noise injection techniques and dropout, according to the passage?", "f83e5456-7135-4030-9a3d-70041bd1d7f3": "How does batch normalization differ from dropout in terms of the type of noise introduced during training, according to the passage?", "288f2d22-73e7-4a46-b916-4b0d896ea5ab": "What year was Michie's paper \"Experiments on the mechanisation of game learning. 1. characterization of the model and its parameters\" published in The Computer Journal?", "98c8f627-d1eb-4cb3-8281-6616011bf9e3": "Which book published by Edinburgh University Press contains Michie's work \"On Machine Intelligence\"?", "1177229b-504b-4190-bfdf-b37d49427787": "What are some examples of color augmentations that can be applied to image datasets?", "5152397a-5735-448a-bf2c-162606a982b6": "According to the passage, what are two advantages of using RGB images over grayscale images?", "c8454f44-cac6-4008-bfc4-331b65b3ac82": "What type of learning algorithm is used in each layer during greedy layer-wise unsupervised pretraining?", "6b0ee9dc-68ab-4bd7-a0cb-ec5d4fe376a5": "What are some examples of single-layer representation learning algorithms that can be used with greedy layer-wise unsupervised pretraining?", "0ebffe4d-44aa-477f-91f5-89fbd359cf57": "The context mentions that neural networks can adapt their parameters so that the regions of input space over which the basis functions vary corresponds to the data manifold. What property of the data vectors {xn} allows neural networks to do this?", "277258c6-9a6d-46bc-b3ce-d6f7e4b7b43f": "The context states that target variables may have significant dependence on only a small number of possible directions within the data manifold. What capability of neural networks allows them to exploit this property?", "d07e14f5-dad0-494c-9c0e-04465c6f712f": "What is the purpose of the row buffer in a DRAM cell array?", "4082acef-6de4-49b7-82b2-498d2f3f98cc": "Before a different row can be opened in a DRAM cell array, what command needs to be issued first?", "435802bc-37c6-4190-8b71-39a503e30b40": "What machine learning technique involves training a model to reconstruct a corrupted input, with the reconstruction error indicating if the input was clean or corrupted?", "2dcefc08-5ffd-4f3a-b7c0-4f911fe80ec2": "The technique of using a neural network to reconstruct corrupted text as a way to detect anomalies was revived and introduced into NLP in the late 2000s by what researchers?", "11bdd19b-705d-4b1f-aef8-74427ccbeaad": "What makes the 'training time' hyperparameter unique compared to most other hyperparameters, according to the passage?", "8410fe38-84ac-46b9-bbd5-9e664d9b7397": "What does Algorithm 7.1 describe, according to the passage?", "5efd8ae4-765a-43b0-ae81-b2d1e77e1ed9": "According to the passage, in which MIT Press published book did A.G. Barto author a chapter titled \"Reinforcement learning\"?", "a8993f7f-6c90-4eca-8955-c66b3fa7af16": "The passage mentions A.G. Barto contributed chapters to books edited by several different authors. Name 2 of the editors mentioned.", "b198076d-7a3c-4cba-8f46-b8b62d0eb559": "According to the passage, what are some benefits of establishing a unifying formalism between different learning paradigms?", "d34a3ecc-6225-494d-aa86-1528d9da1085": "The passage mentions previous work that connected reinforcement learning and posterior regularization. What was one of the key results enabled by this connection?", "19546a78-6123-4cf8-9a4e-3b9414cc41f9": "What training objective is used for the QA model described in the context?", "5d95aa8a-c54a-4340-ba38-563c7b084375": "According to the context, how does fine-tuning the QA model on TriviaQA before SQuAD affect performance compared to just fine-tuning on SQuAD?", "de26db87-1a83-4ca5-b733-453b17004a8c": "According to the passage, when is the backpropagation approach of equation 6.51 preferable over the alternative approach of equation 6.52?", "84d3dfc9-c50e-41f5-a117-fde0cb1b06cc": "The passage states that equation 6.52 is a valid implementation of the chain rule. What property of this equation makes it useful when memory is limited?", "06c489f1-3f43-4df9-8a38-c768e5934e53": "According to the passage, what is one of the main benefits of learning multiple prediction tasks P(y|x) via a shared intermediate representation P(h|x)?", "2fd5ade0-f529-4b39-8ffb-39f936c95319": "The passage states that many machine learning algorithms behave sensibly only when the data lives on a low-dimensional manifold. Briefly explain what a \"manifold\" refers to in this context and why the dimensionality matters for machine learning algorithms.", "1e943452-79f3-481a-a9e8-34721d4610bb": "What is the purpose of the softplus function?", "29287934-a983-4a86-a4da-e273d2984da1": "Fill in the blank: Just as x can be recovered from its positive part x+ and its negative part x- via the identity x = x+ - x-, it is also possible to recover x using the same relationship between ______(x) and ______(-x).", "1a3c298c-e1be-4b06-98b8-d74a88300a03": "What is the key difference between instrumental conditioning experiments and classical conditioning experiments?", "522ace8d-616f-4272-bca7-300743fd3dea": "According to the passage, is reinforcement always the result of an animal receiving a stimulus that evaluates its behavior as good or bad? Briefly explain your answer.", "2065d6c1-4519-4556-83ce-34a81f5f5cc8": "According to the text, how can the maximum likelihood expression for the mean of a Gaussian distribution be re-cast into a sequential update formula?", "87026288-e040-47eb-9f3b-1b936ec50d29": "The text mentions that the Bayesian approach naturally leads to a sequential view of the inference problem. Can you explain this sequential Bayesian perspective for inferring the mean of a Gaussian distribution?", "1ac4807a-9e8d-4378-bfe7-87dbb8d7480c": "According to the passage, what did Klopf specifically conjecture about how synaptic efficacies change?", "cb97aac7-151c-402d-a25b-440141664335": "The passage states that synaptic efficacies of eligible synapses increase if an action potential is followed within an appropriate time period by what?", "b2ee579e-9b32-4cfa-9641-98200eb45882": "According to the passage, why does stochastic gradient descent work well for training large machine learning models?", "ea8c0842-822b-4eb5-83f2-2d54a2723629": "The passage states that as the training set size m approaches infinity, the model will eventually converge before SGD has sampled every example. Why is this the case?", "6cae47ac-42ef-4719-92ae-c4885aff1756": "What is the form of the conditional distribution p(t|x) that is assumed in the provided equations?", "02d6748c-a297-4b11-aa73-5c983c88d00e": "What is the error function that can be minimized to learn the parameters w and \u03b2 in a maximum likelihood framework, according to the provided information?", "ac87ddd8-5ee2-4c2a-b4e2-ff55a124295f": "What technique, proposed by Hinton et al. in 2006, uses a layer-wise training algorithm for deep belief nets?", "2d8d4118-6b84-41ec-8e70-5926b62e48ed": "Which 2015 paper introduced batch normalization, a method to accelerate deep network training by reducing internal covariate shift?", "b51edcd6-f01c-4e4c-9bc8-d2fb17bf57c0": "What target is used to train the extra outputs added to the neural network in order to estimate b according to Mnih and Gregor?", "be23309d-a87c-413b-9138-cf982eef0d47": "Variance reduction methods that generalize previous work on the case of binary reward were introduced in what context according to the passage?", "a32440ff-bc00-4244-a2fe-03148b30183a": "According to the passage, what are the main visual processing areas that are activated in the first 100ms after viewing an object?", "72c58e96-1394-46fb-9926-99649663cff9": "The passage mentions that if we allow a person to view an object for more than 100ms, information will begin to flow backward in the brain. What term is used to describe this backward flow of information?", "66f1ac7b-dfc3-40cf-92da-1d0a57ec1144": "What are the two key differences between entropy measured in bits versus nats? (2 points)", "473541ca-dc15-41a6-8ace-6485245dcae3": "Imagine there are N=10 identical objects that can be placed into 3 bins. How many different configurations are possible for allocating the 10 objects into the 3 bins? Show your work. (4 points)", "9386e14d-7077-46af-8814-4e9059d61b5e": "What are the two key components of an actor-critic algorithm that relate to parts of the striatum in the brain?", "bbebe605-560d-4c71-ae15-7348c4e66521": "What dual role does the TD error play in actor-critic algorithms that suggests the algorithms may be implemented in the brain?", "bc906751-9f73-49b7-bbc6-1165d752303e": "What is the main challenge presented when trying to fit a model to the inverse problem data compared to the forward problem data?", "4d1b7712-e47e-42f6-ae97-6beab49dc634": "What approach does the passage suggest could be used to model the conditional probability distribution p(t|x) in order to address the limitations of the least squares approach for the highly non-Gaussian inverse problem?", "0ccc1fe8-6afe-40c3-aa62-62c92dbfa230": "According to the passage, why is it difficult to change the input size for Boltzmann machines?", "b1c894f4-63e7-4ace-a23a-ae1c495a3a8a": "The passage states that traditional convolutional neural networks can handle variably sized inputs in a way that Boltzmann machines cannot. What approach do convolutional neural networks use to obtain a fixed-size representation from a variably sized input?", "24d35db6-55a0-4415-886f-5c17207ef565": "Consider a robot arm with multiple joints as described. What is the name of the problem of finding the joint angles that will position the end effector at a desired location?", "41c6a1c6-86a0-4877-9e50-e87b21c104dd": "The context describes two solutions for the inverse kinematics of a robot arm corresponding to 'elbow up' and 'elbow down' configurations. True or false: the forward kinematics problem of determining end effector position from known joint angles has multiple solutions.", "b0440801-1c5c-4ca7-97fa-448743e1865c": "How many episodes did it take for the non-planning agent (n=0) to reach near-optimal performance, and how many episodes did it take the n=5 agent?", "cfeaf44c-c006-43bb-9d11-dbc96f977c57": "What happened in the policies found by the n=0 and n=50 agents halfway through the second episode? How does this demonstrate the effect of planning vs non-planning?", "3bc632a3-44ce-4978-8fc7-8043ef27e21d": "What book discusses belief propagation in graphs with cycles?", "5a22d5bb-60e2-46cf-b1c8-96d01af9dbc3": "Which author introduced a new boosting algorithm in a conference paper?", "c31ebed6-b21d-4742-a47e-259ae1a6f1d1": "What are two advantages of using the gradient compared to just evaluating the function itself in spaces of higher dimension D?", "fae2142f-3a90-46b3-8e89-3db8e6310dec": "How does the Hybrid Monte Carlo algorithm help reduce bias compared to just using the leapfrog algorithm for Hamiltonian dynamics?", "18a03755-1749-4656-a776-110b2d349d0c": "According to the text, the factor approximations in Figure 10.16 can sometimes have infinite or negative values for which parameter? What does this correspond to with regards to the shape of the approximations?", "bbe524cc-2cd8-4f8f-abe6-5d6e859d66ce": "The text mentions that EP can be used when the factors fi(\u03b8) depend only on subsets of the full set of variables \u03b8. What framework does the text say can be used to conveniently express such restrictions on the dependencies between variables?", "89b496a4-0d05-4cfc-b322-82289095ca8c": "What is the covariance matrix X calculated from in the given data samples {x_i}?", "a8e3618c-395c-42eb-995f-feb1b15b9dd0": "If we take the SVD of the covariance matrix S = UAUT, what are U and A in this decomposition?", "5c11f8a7-7e45-4379-938f-d0253931a54a": "According to the text, if the covariance matrix of the data has rank d, what happens to the eigenvalues \u03bbd+1 to \u03bbp?", "b8ad887e-7e69-4c57-b0d8-a64963263f2b": "The text states that the solution to PCA can be obtained by maximizing the variances of the elements of h under an orthogonal W. What is being maximized under this alternative PCA solution?", "e974be28-4d1a-4b3f-b996-6d34fb2ef3a8": "What are some of the categories of data augmentation methods for NLP discussed in the paper?", "01eb94f8-0209-45d5-9751-868e0511d53f": "According to the paper, what are some of the current challenges and future directions for limited data learning in NLP?", "507b070f-f883-4d28-88ff-677083f820b2": "According to the passage, why did the greedy method perform worse than the epsilon-greedy methods in the long run?", "7d44511e-4f5f-407e-a415-f7859e86539c": "The passage states that the epsilon=0.01 method improved more slowly than epsilon=0.1, but would eventually perform better on the performance measures shown in the figure. What aspect of the epsilon-greedy methods allows the epsilon=0.01 method to eventually outperform epsilon=0.1?", "4ebd3516-710b-40d8-8610-5b28a5cc267a": "What are some limitations of decision trees that probabilistic models like mixtures of experts can help address?", "d5f75d0d-1ebb-462c-8115-46e2b733294f": "How do mixtures of experts models work? What is the general form of the probabilistic mixture distribution used in these models?", "e3b35932-bf8b-4d5b-a746-c9309d4a9a4f": "What is the objective function that is minimized in ratio matching?", "9e2b60bf-0b29-4a31-b1cc-8f89aee3820a": "How does ratio matching avoid the partition function? What trick does it use that is similar to the pseudolikelihood estimator?", "ff64320d-7c8b-43ab-8296-0b2cd0beb54d": "What allows neural networks to be more resistant to adversarial examples compared to linear models like logistic regression?", "57b83ee1-b8f2-4f7d-a22d-331400a1938b": "How can adversarial examples be used for semi-supervised learning?", "07795135-866c-4b7d-abe5-dedfbfb4300c": "What are the four main components that make up nearly all deep learning algorithms according to the passage?", "f9941896-d794-40a9-8663-5bcde23a0494": "What is the most common cost function used in deep learning algorithms and why is it used?", "bb0484b1-037b-4412-97e3-0ba97aed0ef4": "According to the passage, what is one problem with using singular value decomposition (SVD) for obtaining user and item embeddings?", "11ed00f7-ba68-4db5-a958-91dbcabf28bd": "The passage mentions that we would like to avoid paying any cost for predictions made on missing entries in the user-item rating matrix R. What optimization-based technique is suggested instead of SVD to address this?", "fdf4aee3-eca9-49a0-a67c-c7a0c9b6e0e0": "What is a feature map in a convolutional neural network?", "6dc3071f-95f3-4ce0-83b3-66d0b2145b21": "True or False: In a convolutional neural network, units in the same feature map use different weights.", "33459b1e-2e87-43f4-80a2-735135916a6a": "What does L2 regularization encourage the parameters to do?", "32aa5cce-59f2-466f-91cf-a7c6e09fd988": "How does injecting noise into the output targets during training potentially help make the model more robust?", "a2c45d4c-c196-4e05-9bfb-27ec9f8d1314": "According to the text, how does the length of the second edition of the book compare to the first edition?", "b67d216a-b488-4e35-84ca-2a32de5648d1": "If you were teaching a one-semester course using this book as the primary text, which chapters should be covered to provide a good core?", "19a60946-a5f2-4dbb-b6b7-37ae30e254ac": "What notation convention is used in the given passage for random variables versus scalar functions and real-valued vectors?", "64c2446a-aeb7-4f5d-985f-87dc29865c37": "According to the passage, what is the first idea that likely comes to mind when we think about the nature of learning?", "aa7f9b20-6a83-42e7-a953-09f26de733cf": "What was the key finding from the latent learning experiment with rats in a maze?", "2400df12-424a-4a61-984a-12a32c212343": "According to the passage, what are two features of a \"cognitive map\" that Tolman proposed animals develop through latent learning?", "9bb8a4d0-d2c8-4d8b-9b67-0fed6864862e": "According to the passage, what are the two key distinguishing features of reinforcement learning?", "849fa085-d64b-42c8-becf-1070502ebe0a": "The passage makes a distinction between reinforcement learning as a problem, a class of solutions, and a field of study. Can you briefly explain the difference between these three concepts of reinforcement learning?", "5f7787f2-edfb-4481-af4f-52da30824271": "According to the passage, approximately what percentage of time steps are spent in the start state (state 500)?", "b4a3a839-60c1-4ddf-b4da-0e11175ede1a": "The passage states that the value estimates for the leftmost and rightmost state groups are shifted higher and lower than the unweighted average. What causes this shift?", "be578db3-ad41-4172-b310-a7cde7a6f034": "If we have learned a discriminant function directly instead of determining posterior probabilities, what procedure can we not apply?", "695a77ee-17d5-48df-9137-e1540019c96b": "According to the passage, what are two reasons we may want to break a complex problem into smaller subproblems?", "f500ff98-2647-430a-a4b1-7e4dff92159c": "According to M\u00fcller (1997), what are integral probability metrics useful for measuring?", "244465ab-aa1c-43f7-b0db-7f13f5fa9012": "What method did Nowozin et al. (2016) propose for training generative neural samplers?", "11bdb6d5-1048-48e4-8107-6d49d5704357": "What is the key idea behind probabilistic max pooling that allows it to scale better than a naive implementation?", "86350226-a189-40b0-8c66-3e5b31d070a8": "Approximately how many energy function evaluations would be required per pooling unit for a 3x3 pooling region using a naive max pooling implementation with binary detector units?", "acdf5cc4-c0a8-4443-9b1b-9e072ed30e6d": "Who first introduced the concept of \"sequential design of experiments\", under which bandit problems fall in the field of statistics?", "cb5142e4-b4cc-4e93-a17a-c72fde15b175": "According to the passage, what term did Holland use to refer to the conflict between exploitation and exploration that is central to bandit problems?", "d406d3a5-49de-4ab1-9866-b916fca788d3": "What are the two main algorithms discussed in the context that use eligibility traces? How do they differ in terms of computational complexity and expected performance?", "6443ed18-f17e-4e7f-9c88-d2fdf296e483": "The context mentions that the online lambda-return algorithm is currently the best performing temporal-difference algorithm. What are two of its key features that likely contribute to this strong performance?", "525852fe-efd2-4715-b5ef-041a151d5943": "According to the passage, why is mean field inference intractable for directed discrete networks?", "d27aa66f-45f5-4055-9240-fb2654701cbc": "What are two approaches mentioned in the passage for performing inference in a sigmoid belief network?", "0c3d59bc-f369-4e3e-a55f-a04884922b40": "According to the passage, what governs the optimization of the target model p\u03b8 given the updated experience at each \u03c4?", "eeecac72-13ce-4238-9a36-141a0a2da743": "The passage mentions that the experience can change over time for two reasons. What are those two reasons?", "8124856c-f827-4957-86bc-f3a724259f1b": "Use the binomial theorem to show that the binomial distribution is normalized. Specifically, start by pulling out a factor of (1 - \u03bc)^N out of the summation and then make use of the binomial theorem to complete the proof.", "864eb59c-206c-46c1-b2af-754e17019194": "Show that the variance of the binomial distribution is given by equation (2.12). To do this, start by differentiating both sides of the normalization condition (2.264) twice with respect to \u03bc. Then use the result for the mean of the binomial distribution from equation (2.11) to obtain an expression for the variance.", "8e1dcfca-6cb4-4741-8ad2-2453f0ea755e": "According to the passage, distributed representations with O(nd) parameters can represent how many distinct regions in input space? Explain the reasoning behind this.", "aca369b7-7303-4035-8eaf-c748b42aeceb": "The passage argues that distributed representations are more efficient than representations without assumptions about the data. How many training examples would be required for a representation with one unique symbol per region in a d-dimensional space? Explain the difference in complexity.", "379e9345-9138-4f3e-a843-40c76d74cc42": "According to the theorem discussed, what are the two conditions required for a symmetric real matrix S to be positive definite?", "3caac5c9-2a45-4472-a502-3c90d7017741": "Let \u03bc be the stationary distribution vector for the transition matrix P. What can we say about the vector 1>D(I-\u03b3P)\u03bc, where D(I-\u03b3P) is the key matrix, I is the identity matrix, and \u03b3 is a scalar less than 1?", "cd98fee3-5486-42e9-a497-1ed4f1239b9d": "What are two benefits of using pooling layers in a convolutional neural network?", "be3d7de8-d5bf-461e-b3ab-758283572c20": "True or false: Pooling regions must have the same size regardless of the input size. Explain your answer.", "fd46b4f7-e803-48dc-b572-126b37d5ffb8": "According to the passage, what term did Widrow and Hoff use to refer to circuits that can adapt and exhibit goal-seeking behavior?", "45a50b3d-30de-4721-9ed0-223100b59cd7": "The passage mentions several examples of Widrow's work. Which of his publications specifically focused on the topic of neurocomputing foundations?", "88d75d75-8848-442d-a042-1878c89bfbe4": "What are the two directions of the KL divergence discussed in the passage? What are some of the desirable and undesirable properties of each direction?", "c089910e-cb1b-4930-bee5-208c0e189e85": "The passage states that in the inference optimization problem, DKL(q||p) is used for computational reasons. What specific computational advantage does this direction of the KL divergence provide?", "4cd5aa74-9564-439a-b534-8d77648c2c1f": "What is the size of the Hessian matrix for a deep learning model with n parameters?", "082b6dcf-0d3d-4320-9613-faddc65681f1": "What methods are typically used to approximate operations involving the Hessian matrix, without explicitly computing the entire matrix?", "9fbc1ad9-b4cc-4028-b165-96db82fe9a6f": "What are the M-step re-estimation equations for the initial probability and transition probability parameters in an HMM?", "59e02ffa-6ba5-45fb-b774-215a4f4f6456": "How can we show that the definitions of the alpha and beta messages in a factor graph representation of an HMM are equivalent to the standard alpha and beta recursion equations?", "7bac8cd6-955c-418d-aa1b-744b323dad21": "According to the passage, what are the left-singular vectors of a matrix A?", "7ebe82ae-9bd5-4d41-b343-37c9b64a0104": "The passage states that the nonzero singular values of a matrix A are the square roots of the eigenvalues of what matrix?", "86281d4d-169e-41aa-9e42-61dc8b380e61": "Machine translation is an important application of deep learning. What are some examples of language pairs that machine translation systems commonly translate between?", "0fa41449-74b5-4bd0-9fc2-3498ed0d408b": "The context mentions that deep learning has recently begun to have an important impact on machine translation. What are some of the ways deep learning is able to improve machine translation compared to previous approaches?", "cefadb29-2e42-4e51-a357-0732f14a3191": "According to the passage, how does increasing the scaling factor g affect activations and gradients in the network?", "a555be1a-f1c0-4c9f-a6a8-03486a3a9277": "The passage states that setting the gain factor correctly allowed networks as deep as 1,000 layers to be trained without using orthogonal initializations. What key insight enabled this approach to work?", "8ed6eb51-4103-49ad-855d-9c57c06ab894": "What is the effect of the hyperparameter \u03b1 in the regularized objective function J?", "db5ff280-7864-4ee5-a31d-07637d43eed5": "How do different choices for the parameter norm \u03a9 result in different preferred solutions when training an algorithm to minimize the regularized objective function J?", "9a691e45-7fa0-485b-ad22-e4a5f03524e5": "What method did the researchers use to show that a reinforcement learning agent can achieve high performance on different problems without problem-specific feature engineering?", "0cb9b1a8-bd1d-4a80-bde7-cb25aed8c5c7": "What was the same and what was different about the 49 Atari games that DQN learned policies for?", "5ad867f9-7cce-4a0e-a7d3-04e2d0ef27b8": "What does taking the limit as \u03c32 goes to 0 correspond to in the EM approach for PCA?", "04bd456c-b972-4a4c-ade8-0b7be94cce0f": "Describe in your own words the simple interpretation of the E-step and M-step in the on-line implementation of EM for PCA.", "dcd8800c-9f99-44fc-8aa8-909161412389": "Which algorithm demonstrated the capabilities of TD(\u03bb) with function approximation by multi-layer ANNs on the game of backgammon?", "a46660c7-2e62-44df-bbdd-d72a9fd5acb9": "True or False: LSTD (Least-Squares Temporal Difference) involves incrementally updating an inverse matrix, a technique known since at least 1949.", "9b4b7483-54cd-4d40-beae-1b55f0bdc0a5": "What theorem provides an analytic expression for the gradient of expected return with respect to the policy parameters?", "2b822a24-9f43-4c9c-9c2b-859a4e204c88": "Fill in the blank: The policy gradient theorem allows us to compute the gradient of expected return without needing to calculate the _______ of the state distribution.", "41945459-c38d-4789-bd2c-7853d527add8": "Who built an early electro-mechanical machine capable of trial-and-error learning that could find its way through a simple maze?", "f3eb592b-a308-4921-9ab6-78700cb4746b": "In 1948, Alan Turing described a design for what type of system that worked along the lines of the Law of Effect?", "aefd0449-f04d-4780-b3f3-a8fee696e4cf": "According to the article by Abadi et al., what system did they develop for large-scale machine learning?", "ed7c9bd2-0e04-4127-9710-108abc311a91": "In the article by Agrawala, what type of teacher is used for learning?", "4ee387a0-c9e4-4078-aafb-5ba8ab0d8a01": "What are some of the benefits of using embeddings for representing semantic knowledge about words and concepts, according to the passage?", "bae06ae8-01d6-454c-b37c-a53c91408816": "The passage mentions that developing embeddings for phrases and relations between words and facts is an open research area. What application does it state could benefit from improved representations of phrases and relations?", "afd1a253-c0cd-4b54-925a-f38645326521": "According to the passage, why does convolution make sense for processing inputs that contain variable lengths of observations over time or space?", "3269fd63-a4dc-49fd-ae9a-bb0e88d16259": "The passage states that convolution does not make sense when the input has variable size due to containing different kinds of observations. It gives the example of college applications, with features consisting of both grades and standardized test scores, where not every applicant took the standardized test. Why does convolution not make sense in this case?", "ae2d0636-2176-4652-8cf8-eb17b8ebea80": "According to the text, what are some of the benefits of building a web browser that is open source?", "bcfc1f25-1c42-47c8-b36c-70757dc22a9f": "The text mentions how we can build on previous research about obesity. What is one way the text suggests we can improve our health based on these research findings?", "5e02054a-5cdb-43b6-bb57-59fdbd9039fe": "According to Figure 5.1, what type of regression model is being shown?", "8cba2fa8-1f16-4efa-ae8d-d22c1f399696": "Fill in the blank: In the model g=w'a+b, the mapping from _______ to predictions is a linear function, while the mapping from _______ to predictions is an affine function.", "80866ba8-cebf-4dd6-8713-d6719d59bfa5": "According to the graph in Figure 8.29, how many maximal cliques are there?", "e5fd9e19-77f4-46c7-9df9-16a4527c4f0d": "True or False: The set {x1, x2, x3, x4} is a clique in the graph shown in Figure 8.29. Explain your answer.", "705dc407-8042-494f-9417-207345381d50": "According to the context, how is the optimal solution qj(Zj) determined when minimizing the KL divergence KL(p||q)?", "f4d764e0-cfad-4c15-adcf-a50e41087dc1": "The context mentions that the mean of the approximation q(Z) is correct when minimizing the KL divergence between p(Z) and q(Z). What does the approximation fail to capture compared to the true distribution p(Z)?", "bf75e0d6-7fac-4df5-b57f-6bf063ab0420": "Based on the given information, what is the expression for the mean of a gamma distribution?", "b7db2854-8a74-4473-bf69-b07f1c6697eb": "The context mentions obtaining an \"unbiased estimator for the variance of a univariate Gaussian distribution\" using a Bayesian approach. What is this unbiased estimator equal to according to the information provided?", "952c41d6-efb2-44ec-b4c1-abf10b604869": "What is the name of the conjugate prior distribution when the variance is unknown?", "1d3640fc-3293-4011-8f7e-54dcd9c5a835": "If both the mean (\u03bc) and precision (\u03bb) are unknown, the conjugate prior p(\u03bc, \u03bb) should take what general form based on the likelihood function?", "e92b9ca7-043d-4ab8-b598-d568b560e841": "What is the form of the contribution to the error function from a data point n when we take the derivative with respect to the parameter vector w?", "4e49a4f4-307c-4697-a7aa-d31328755877": "What do we obtain for the combination of the logistic sigmoid activation function and the cross-entropy error function, and for the softmax activation function with the multiclass cross-entropy error function, when we take the derivative of the error function with respect to w?", "22d2cd25-9b0f-4314-bcfb-34c05c18236c": "What is the purpose or goal of the agent formalized as in reinforcement learning according to the passage?", "bd22233d-8bc8-47b3-9d84-a659c15df497": "What does the reward hypothesis state about goals and purposes according to the passage?", "ccb838b5-742a-4a65-b742-c8fa471ae19c": "According to the passage, how does weight decay affect the position of w2?", "2fb2467e-7050-4333-88aa-e48b14638531": "The passage mentions that weight decay decays away components of the weight vector corresponding to unimportant directions. How does this relate to machine learning, specifically linear regression?", "0f4c8aef-33bf-4bcc-a53f-67cef4186100": "What is the main idea behind emphatic-TD methods for off-policy learning?", "9d8d12c1-d35a-472c-aef1-351608539d26": "According to the context, why is there a mismatch between the state distribution and state-transition probabilities in off-policy learning?", "ff420a4b-d12f-49cc-9e95-ef25ce965212": "What does clamping the observed units x0 and resampling the free units xf allow denoising autoencoders to do?", "5232aa4a-3d21-4639-8d7d-1aaa9071408d": "How did GSNs later generalize some of the ideas present in MP-DBMs?", "6e43511b-2613-4228-b0b2-f9efe5bdf31e": "What is the form of the coefficient that determines the marginal distribution p(xa)? How does it relate to the mean and covariance matrix?", "5c85e104-1656-4a51-921a-4b3eb56f6b00": "How are the mean and covariance of the marginal distribution p(xa) expressed, and how does this contrast with the expressions for the conditional distribution?", "86071094-c2e2-4cb8-b1d9-2675c0cd285b": "What does the author say is the main difference between their self-supervised learning approach and standard supervised learning on ImageNet?", "f05dc27e-bf5f-4e2c-8de0-0a0fc2686adc": "According to the context, what are three components the authors carefully studied in their presented framework for contrastive visual representation learning?", "b76321d1-5e12-400d-a0c6-e895b2d0c1af": "What are the two main steps in constructing the BYOL loss function?", "55aad483-84c9-4c9f-baca-0914fea2c7f5": "How is the final loss computed in BYOL? What two losses make up the final loss function?", "45e69096-df1c-467c-a423-ea82cb1912eb": "What are two data augmentation techniques mentioned in the context that can improve image classification accuracy on the CIFAR-10 dataset?", "c2824d96-325a-4592-be53-82f2e689464c": "What are two potential disadvantages of using meta-learning for data augmentation mentioned in the passage?", "db75f08d-0be6-4561-a3a0-5a7e16c5878a": "According to the passage, who are Prometheus and Pandora in Greek myth, and how do they relate to the promises and perils of new knowledge?", "818656dc-73dc-457e-872e-2cf4f35a8aa7": "The passage states that reinforcement learning agents can learn from interaction with either the real world or simulations. What are two advantages provided by using simulations instead of the real world for an agent's learning?", "3af7ca21-78fc-41df-8144-392a52ca6bd2": "According to the text, what is represented by the notation \u03b3(znk)?", "c3f86975-5910-4394-a43e-21d4563dc0f3": "The E step involves evaluating what two quantities efficiently?", "bb67380a-67a7-4419-a633-64c28e8fa2a0": "What technique can be used to efficiently evaluate derivatives of the log likelihood function with respect to the network parameters?", "9a8ca327-273a-4770-88a1-fb46422c8262": "What framework allows neural networks to model conditional probability distributions?", "943ff8d6-ef5f-4d09-a90d-6a1c6f74e0e1": "What is the key difference between a hierarchical mixture of experts (HME) model and a simple unconditional mixture model?", "d71ef256-7551-4825-8c89-35a1083d0772": "The context mentions that the HME model can be viewed as a probabilistic version of which machine learning model?", "6a2ead88-9425-4549-afd9-69cbe9d8e2be": "According to the passage, how does a computational perspective help understand addiction?", "5aefd16c-12aa-449d-9561-4b952c3b127c": "What are some examples of computational models that are being used to better understand mental disorders, as mentioned in the passage?", "ccaa1154-6ab2-4b0f-9607-c5a272ca3451": "What publication was the first introduction of the Generative Topographic Mapping (GTM) algorithm?", "fa6b5f78-1e7d-49b7-8169-71434bb8098d": "According to the authors, what is one advantage that the GTM algorithm has over Self-Organizing Maps (SOMs)?", "dd4cd0ae-71e7-432b-96d4-605b48e01ddd": "True or False: Biased importance sampling requires the probability distributions p and q to be normalized.", "47928b62-07cb-47ed-81a4-cd56388ddbd1": "Explain the difference between using a sampling distribution q that minimizes variance versus using any valid sampling distribution gq that yields the correct expected value.", "452f0b2f-6801-4d87-9deb-42cfe4f41886": "What are some of the advantages of the probabilistic reformulation mentioned in the passage?", "4ac3f6b6-b9d1-47d0-9c63-f8d81679a194": "What are some of the generalizations of the latent variable concept that go beyond the linear-Gaussian assumption discussed in the passage?", "91c0d177-2a34-4042-8144-80b608222df6": "According to the passage, what are the three main blocks or steps that Pascanu et al. propose for transforming the raw input into a more appropriate representation?", "8eb1360c-20fa-4205-a313-1cf56b512b59": "The passage mentions that adding extra depth by using a separate MLP for each block makes optimization more difficult. Why does adding this extra depth make the shortest path between variables in different time steps longer, and how does this affect learning?", "cc0fb2e3-74b3-46be-84d3-3f738b421c1c": "What reward signal was found to produce the best learning in the wind simulation environment?", "db151125-598f-46a7-ab57-1ae33d51c892": "How were action probabilities computed in the wind simulation environment? Describe the equation used and the meaning of the temperature parameter tau.", "f182e596-1c2c-4e25-8fbb-d1c06c0be1c3": "According to the passage, why is it typically not practical to optimize the tree structure of a neural language model to minimize the expected number of computations?", "cf056a21-8342-41a2-87fd-ef0cf190e330": "The passage mentions using tools from information theory to choose the optimal binary code for a neural language model. What property of the words can these tools use to determine the structure of the binary tree?", "9136b9d7-d118-4cd6-b810-f27f52601c2b": "Consider a two-layer neural network with skip-layer connections from the inputs to the outputs. How would the exact Hessian matrix for this network differ from the Hessian for a two-layer network without skip-layer connections?", "cf62d022-c9ab-4e86-b528-0c0addd65311": "The update equation for the weight vector w using gradient descent is given. As the number of iterations \u03c4 goes to infinity, under what condition on the learning rate \u03c1 and eigenvalues \u03b7j of the Hessian matrix H will the weight vector converge to the optimal value w*?", "0b27ca05-46f5-49a3-9a83-b580a3d18ee0": "What is the key difference in how Markov states are defined in PSRs compared to traditional Markov models?", "b30a2a7a-bf0b-4a49-b8b6-e31ad6814f6e": "The passage mentions four main steps for handling partial observability in reinforcement learning. What is the fourth and final step listed?", "37fb8d74-a2e9-43f4-8159-72bf72032ad0": "Hidden Markov models can be represented as directed trees. What algorithm can then be used to efficiently find the most probable sequence of latent states in the model?", "99ae3173-ca9d-4bea-81bc-7dc49c221b00": "The forward-backward algorithm is used to find the marginals for each latent state variable in a hidden Markov model. How does the most probable sequence of states found by maximizing these marginals individually differ from the globally most probable sequence of states?", "3347ec81-8d91-4dc1-b279-b4e8d21c9fa1": "What is the general purpose and popular choice for the intermediate distributions Pn in annealed importance sampling?", "85b286d6-a20e-4590-a9b3-3e5e9f77a51b": "How are the transition operators Tn,n+1(x'|x) constructed in annealed importance sampling? What property must they satisfy?", "1bdc5b4e-8ac1-48f3-b604-a12fedcb32d2": "What augmentation techniques did Perez et al. test for skin lesion classification?", "d5971be0-7b3e-4b2e-b403-1267b90945a5": "How did test-time data augmentation impact model performance for the Inception-v4, ResNet-152, and DenseNet-161 models according to the results in Figure 32?", "615d48d8-5322-4fa6-b321-c90da721f974": "What does the author state is important to understand regarding unsupervised pretraining, in order to determine if it is applicable to a particular task?", "d7940ec7-4152-4b0f-bcea-15fad99f3a36": "What are two completely different paradigms for performing semi-supervised learning with neural networks that the author mentions?", "22d959c8-ec5e-4c91-ac77-c482d3db3252": "What is the first step when applying Expectation Propagation (EP) to approximate the model evidence p(D)?", "b87cb392-f464-4c81-b9e2-35f14efe3648": "True or False: Assumed Density Filtering (ADF) makes multiple passes through the factors, updating each one multiple times.", "82e41aa5-4ed4-4106-8bc4-3dca8106f4af": "According to the passage, what are the parameters for the largest Transformer explored in Vaswani et al.?", "7f9a91e9-d0e9-44d7-b894-bb0ff56799e1": "The passage states that BERTBASE contains 110M parameters while BERTLARGE contains 340M parameters. How many more parameters does BERTLARGE contain compared to BERTBASE?", "0336c5a4-292d-4230-8e10-69bc91e065e9": "According to the passage, what is the TD error \u03b4t-1 upon transitioning from any state to the earliest reward-predicting state?", "610e6111-bf44-4d2d-a23e-8c595e9db2d9": "The passage states that the TD error is zero for transitions between reward-predicting states except for the transition to the earliest reward-predicting state. What explanation does it provide for why the TD error is positive for the transition to the earliest reward-predicting state?", "275bc53a-a76d-4279-abf3-7b2759e712cf": "What are the two elementary rules of probability that allow us to answer complex probability questions?", "29eb5d55-7f87-4eb8-a55f-1249f7b56383": "If p(B = b) = 6/10, what is the probability that we select the red box, p(B = r)?", "4dfe9587-b099-4ffc-8af8-e7d4464f7ad5": "According to the passage, how does the curse of dimensionality impact the number of examples needed to cover all possible input configurations?", "b13d0559-67c6-413e-ae71-e3c5258bfd45": "The passage states that as the number of dimensions increases, the number of regions and examples needed grows rapidly. If we go from 2 dimensions to 3 dimensions, with 10 values along each axis, by how much does the number of regions and examples increase?", "40b92c8d-05b5-4bfb-ba1a-d655591c0000": "According to the text, why do we restrict the family of approximating distributions q(Z)?", "8410dbe9-7d1b-419b-92ec-bde1e66a752a": "The text states \"there is no \u2018over-fitting\u2019 associated with highly flexible distributions.\" Explain why this is the case in variational inference.", "0f7ed13c-3e93-4ffb-a61c-f2261ee2f0f9": "What theorem states that the Gaussian distribution maximizes the differential entropy?", "d7734524-4ead-426d-8a47-ac5da9e17f57": "What is the expression for the differential entropy of a Gaussian distribution with variance \u03c3^2?", "e87fa022-6653-41b7-b2ae-a47cae04a1a1": "According to the passage, what are two challenges for models of classical conditioning in capturing the timing and shape of the conditioned response (CR)?", "08e6b682-18fc-41b5-8313-302ce640781d": "The passage states that with the CSC representation, the curve of the US prediction formed by the TD model increases exponentially until what time step?", "c7910be2-0312-40cc-9489-092ce2386db2": "How does early stopping act as a regularizer?", "305f7920-7cdf-4cf1-80d6-00f579df0109": "The context mentions that early stopping provides regularization without requiring addition of penalty terms to the cost function. How does it achieve this?", "ecf37a25-1cc6-47df-a1ed-503c09a6859d": "True or False: Image recognition models can easily aggregate predictions across warped images, but object detection and semantic segmentation models cannot.", "7ad83e4d-7550-49bc-b155-496be1ee004f": "Which of the following statements is true about curriculum learning as it relates to data augmentation?", "41e54d97-6e13-415a-ad4e-b0f511728acd": "Researchers recommend training only on original data initially before introducing augmented data", "72f0c5d0-1577-4b1a-94c9-774b691e6cfc": "There is a clear consensus that introducing augmented data from the start leads to better performance", "631e4f0f-8bd8-480e-acb0-f4fd92148eb8": "Curriculum learning has not been explored in the context of data augmentation", "d3ab9ee1-658e-4911-8d5c-e15045ef04be": "Researchers found training on augmented data first works best", "b7bb5086-a501-4727-9d1a-ea96fc08f747": "Which distributions are members of the exponential family and widely used as building blocks for more sophisticated probabilistic models?", "ce790990-3618-48a0-af86-69e41ebd07da": "What are the two parameters that govern the beta distribution and what constraints are placed on them?", "1657bc4e-1507-4c16-a765-f25d3e290633": "Which paper proposed the U-Net convolutional network architecture for biomedical image segmentation?", "a1d3ec81-1a7c-4df7-8cbe-2fe870a96f26": "Which repository contains datasets that can be used for machine learning research?", "3a48e69d-2214-4f54-a028-1e3be35e1560": "What did Romo and Schultz find when they monitored the activity of dopamine neurons in response to the sight and sound of the bin opening outside the context of the behavioral task?", "e406aafe-2abd-4248-be1b-6c98fbbfeeb9": "In the series of experiments conducted by Schultz's group involving SNpc and VTA dopamine neurons, what did they initially observe about many dopamine neurons' response to a drop of apple juice as a reward?", "721921ae-d221-4ebb-a089-8965c1d8b7d2": "According to the passage, what is one advantage that many regularization strategies have over unsupervised pretraining?", "aea7f8ce-436b-4943-b55f-9f0ab13f89ca": "The figure in the passage shows the learning trajectories of neural networks with and without unsupervised pretraining. What do the different axes represent?", "699d4001-d565-464b-ae98-1782452866d4": "According to the passage, why does a deep autoencoder with additional hidden layers have advantages over a shallow autoencoder with just a single hidden layer?", "f05d9f4b-ad19-42f2-a722-9e2b6f8bb2a5": "The passage states that depth can exponentially decrease the amount of training data needed to learn some functions. Why is this the case?", "2a83660a-99f4-4d41-aed2-dee01f117361": "What term did Ivan Pavlov use to describe the innate responses that animals have to certain triggering stimuli?", "d7217628-36b6-4106-aba4-476d81bd0c56": "According to the passage, what is a reinforcer defined as, even if it is not contingent on the animal's previous behavior?", "4406052d-1d35-49dd-8724-564b1cffca1a": "According to the passage, why is it problematic to use a sigmoid activation for the output layer when training a neural network with gradient descent?", "f8ac9373-badb-4218-aa1e-81943097c2c4": "The passage mentions that using a sigmoid for the output layer can result in the gradient being 0 during training. What specifically causes the gradient to become 0 in this case?", "ac6e956e-08cb-470b-b2ef-53081316ac38": "What technique can be used to stabilize the log softmax function and avoid underflow in the numerator causing it to evaluate to zero?", "a0c6717b-c5b3-42f8-b61a-40ac3211c206": "When implementing deep learning algorithms, who should be especially mindful of numerical issues like underflow?", "6512e0a0-8753-44d8-a885-781fce8eec51": "According to the passage, how is the ensemble predictor Pensemble(Y=y|v) defined in terms of the individual submodels P(y=y|v;d)?", "7237264f-4771-4827-b6e0-feaed934ee57": "What does the binary vector d represent when indexing into the family of submodels P(y=y|v;d)?", "ec1783a4-8678-4e03-8909-5d777b957855": "What factors have motivated current research into specialized hardware for deep learning networks?", "84ac7c0e-e79f-4c80-b338-900fb9327c0c": "How does the current situation regarding hardware implementations for neural networks differ from the previous neural network era in the 1990s?", "766878ee-f71a-41b2-b403-06a3a8ac6854": "What limitation of reinforcement learning (RL) methods is called out as being especially relevant for the proposed approach?", "53d3c171-c5fe-4909-b5d2-f5d214cc9628": "According to the passage, what is one hypothesis proposed for why adapting the pretraining-finetuning paradigm to the proposed methods requires careful design?", "ebb3242c-4494-4395-ae86-9d645b5db21c": "What makes minimization with respect to h fast in predictive sparse decoding?", "654c002c-6bf8-44af-b2bc-4a36cbffeead": "How does the training procedure used by predictive sparse coding differ from traditional sparse coding?", "f4636ec3-64d9-4e16-b8a2-2621898c60db": "What is the analogy given in the passage between forward mode and backward mode on the one hand, and matrix multiplication on the other hand?", "203bce5d-d1ab-4d2a-b4e2-258f299dee2c": "According to the passage, in what case is it more efficient to use forward mode versus backward mode for computing derivatives?", "87e2e461-f7b2-4f85-b65f-e60ae7e8829a": "What is the relationship between TD(\u03bb) algorithms and Monte Carlo algorithms when \u03bb = 1 and episodic, offline updates are used? Explain why there is not an exact equivalence even under these favorable conditions.", "057a4491-a734-4278-93a3-8b90f6db95f0": "Even when \u03bb = 1, TD(\u03bb) algorithms bootstrap in what sense? How does this bootstrapping depend on the current value estimates?", "e6858666-977b-403e-ab9b-e88793a6dc85": "In a directed graphical model, what must you check to determine if a path between two variables is active or blocked?", "5491ca3b-e582-4909-9cb7-bcc407bb695b": "What graph structure represents any distribution but does not imply any conditional independences between variables?", "9a943aba-7b04-4098-9761-7b807ecedf1b": "What issue arises when performing variational Bayesian (VB) inference with directed probabilistic models that have continuous latent variables?", "4f2cbbed-a41e-4c94-9df7-bae6f639bae8": "What two main contributions are presented in the work described in the context to address the problem of intractable posterior distributions in directed probabilistic models?", "c9ac7231-a661-4824-a1fa-4c60cbbd70da": "According to Miller's hypothesis, what provides reinforcement signals to neurons so they learn to move from lower- to higher-valued states?", "d1a19700-2953-412e-a460-699407bfb9a2": "What mechanism in Miller's hypothesis makes the final selection and accomplishes the definitive change in appropriate synapses?", "7cd476a3-ecf6-43c6-b329-3a9a4b101a55": "In few-shot learning, how is the distribution over classes for a given test input x calculated according to the paper?", "e7a12466-0ba6-4dfb-9d25-24b7d7f431ed": "What is the loss function used in the paper for few-shot learning?", "4aef9438-a694-4fa7-a091-0c1942e6dd6e": "What is the Kullback-Leibler divergence a measure of?", "e8b32213-8443-4843-b10f-e115289a0522": "True or False: The Kullback-Leibler divergence KL(p||q) is equal to KL(q||p). Explain your answer.", "5de48319-7653-4e60-bb1d-efce4683c0b1": "According to the passage, what are two possible effects of focusing planning updates on the on-policy distribution?", "a050fdf2-8991-4ba6-b23b-7f5e145eb6e6": "What method did the authors use to isolate the effect of the update distribution in their experiment comparing uniform and on-policy updates?", "953d6964-790f-4b6c-bbf9-7b4859ae5962": "What is the key difference between stationary and nonstationary sequential distributions?", "eec75a2d-6eb9-48c1-9eb1-8bbec09f6f55": "According to the context, why is it impractical to consider a general dependence of future observations on all previous observations in a predictive model?", "9d7c4808-01ae-4faa-a25d-28c62e6c9b8a": "What are some of the advantages of using simulated training data for computer vision models according to the passage?", "aed1121d-550b-4af3-a43d-3e8a7873a491": "The passage mentions the CamVid and Cityscapes datasets require a significant amount of time to manually annotate images. Approximately how long does the passage state it takes to manually annotate one Cityscapes image?", "8ea63428-7268-4d2b-a74d-4ff8ab6cec01": "According to the passage, what are some of the day-to-day tasks a machine learning practitioner needs to perform when developing machine learning systems?", "5da506d4-55c4-413f-9d0b-78dd0a45d0a0": "The passage states that applying the right commonplace algorithm correctly is often more effective than sloppily applying an obscure algorithm. Why do you think this is the case?", "f79e53bf-3887-4767-8778-cae3d53ccfeb": "According to the passage, what is one advantage of using Fourier basis features for function approximation in reinforcement learning?", "904dd4cc-b7be-4e0e-9562-721a5c2b7088": "The passage mentions that Fourier basis features can have difficulty representing local properties well. What is one reason given for why this may be the case?", "382b8638-b93f-4751-9b96-abf7d3aded56": "According to the passage, how did the bank angles preferred by policies learned under different turbulence conditions help the authors understand how to cope with varying regimes?", "41b3a863-ecbd-4849-b84d-5b6f3131aa99": "What did the experiments on the discount-rate parameter gamma demonstrate about the importance of long-term thinking in effective thermal soaring?", "4d84a12b-1500-4fdc-9597-c9ed5b48190a": "What was the key contribution of the Snorkel system proposed by Ratner et al. in the 2017 CoRR paper?", "d15b6887-8fa9-4b72-9076-0a725c5b212a": "The Data Programming paper by Ratner et al. focused on what challenge in developing training datasets, and proposed what technique as a solution?", "a5bf1c6e-f5b7-425c-b29b-d60766aa30bb": "According to the passage, what are two contrastive prediction tasks that have been defined in prior work by changing the network architecture?", "9ba2ef41-eae9-42dc-b7a3-f8697fef6fea": "The passage states that simple random cropping can create a family of predictive tasks. What two specific tasks does it subsume, as shown in Figure 3?", "aa0c8cf6-69d7-469f-b5f0-8df56079bf6b": "Tikhonov regularization is a technique used to solve ill-posed problems. Briefly explain the concept of ill-posed problems and how Tikhonov regularization helps address them.", "61e13d5e-0199-4cf7-bbb2-f91cea71174d": "The Generative Topographic Mapping (GTM) is a nonlinear dimensionality reduction technique. Explain two ways the authors (Tino et al) propose to visualize the projection manifolds learned by GTM models, according to the context.", "9bde6b63-950d-4b1a-bb86-9b5b72fb1e61": "What is the form of the marginal likelihood, or evidence, for the hyperparameters according to the Laplace approximation result?", "60f7f0fa-2e00-4b3c-adfd-59c55058c0cb": "What equation defines the eigenvalue problem involving the Hessian matrix H comprising the second derivatives of the sum-of-squares error function?", "d8b64e33-e464-40fc-b671-12beddbe821d": "What are the two domains that CycleGAN learns to translate between according to the example given?", "c070c24b-4fe7-448a-9a85-68115b495e13": "What are the 7 different emotions that Zhu et al. built a CNN classifier to recognize using the FER2013 dataset?", "db821136-2ec5-4739-896e-7821b6194e73": "According to the passage, what are the two main parts of training an energy-based model (EBM)?", "a9adc7d7-2077-4a18-baa2-9bbb7557139f": "The passage states that part two of training an EBM is more difficult than part one. Why is it more challenging to ensure that incompatible x and y pairs produce higher energies than compatible pairs?", "ba1a519b-02be-4d9f-a170-eb0371fa8e77": "According to the passage, what is one of the main goals of this chapter?", "9a17227d-898e-4d1c-8ba9-5778988e8524": "The passage mentions that the idea of the eligibility trace originated as a property of what neural structures?", "af1317a1-188c-4deb-8890-6a41b93fec03": "According to the passage, why is dividing a high-dimensional space into regular cells problematic?", "55fe44d4-ecfe-474c-88f8-dd75e79e45a1": "The passage states that as the number of input variables D increases, the number of independent coefficients in a general 3rd order polynomial grows proportionally to D^3. What does this illustrate about the challenges of high-dimensional spaces?", "b62725cb-2ea8-4ed3-a400-306bf1807e68": "Which paper introduced the generative adversarial network (GAN) architecture?", "c9f94ffc-3bb2-437a-b262-08d3ccaed267": "The \"wake-sleep\" algorithm was proposed in 1995 for which type of neural network?", "1ee1bc07-7c99-4f9e-aa41-ae961c2186d1": "According to Pavlov's research discussed in the context, what term refers to the learned responses that occur due to associating a neutral stimulus with an unconditioned stimulus?", "55a2758b-a5fb-453c-96b0-d602de124153": "The paper by Parr and Russell discussed in the context focused on approximating optimal policies for which type of processes?", "5c7a0008-f2f6-4284-a307-bffd9f018ba1": "What does the acronym BERT stand for?", "2c0b3935-457d-4a23-8fba-4e4bfdc6f1f3": "According to the passage, what are two differences between BERT and previous language representation models?", "5a0a45e4-21cb-4f99-93a9-76bf58d7360b": "According to the passage, why is a Gaussian latent variable distribution insufficient to find independent components in a linear model?", "ee5b4559-695d-46fc-b860-4472d6b6cffe": "What optimization objective was used in the original ICA model instead of a Gaussian latent variable distribution, and why?", "3cda70c4-220b-4278-bfdc-4135dec5b05f": "In the example factor graph shown in Figure 10.18, how many variables and factors are there? Explain your reasoning.", "682e56ea-d8b2-4df8-adec-8abd95795694": "According to the context, if we minimize the Kullback-Leibler divergence KL(p||q) with respect to a factorized distribution q, what is the optimal solution for each factor?", "8d498e60-d878-41de-afce-123c6b03397b": "What type of model is being described in the context information?", "2515af25-6b9f-4406-98ef-1f8152a86d45": "What target coding scheme is used for the perceptron algorithm that is different from the scheme used for probabilistic models?", "d77aa82f-4eef-4c62-96f4-dfb5e31afcef": "What are the four key processes that are included in Dyna-Q according to the passage?", "2e38950e-0733-400d-ac6f-d7d27e460e4b": "What method does Dyna-Q use for planning, and what does this planning method do according to the passage?", "0f454035-b39a-48b3-acc6-c85e7260ab5c": "What is the purpose of the Kalman gain matrix in the Kalman filter?", "cb3f5e9d-6152-4868-aeeb-a540b075d81a": "Referring to Figure 13.21, explain how the Kalman filter corrects its predictions as new data arrives. Specifically, describe how the distributions in the left and center plots are combined to incorporate the new data in the right plot.", "22d77ab6-3030-4b84-911c-50d37355dff6": "In the Markov reward process described, what is the true value v\u03c0(C) of the center state C? Explain your reasoning.", "2ff70112-fec4-40fe-951f-74106caba4dd": "How do TD(0) and constant-\u03b1 MC differ in their abilities to predict state values in the given Markov reward process? What are some key strengths and weaknesses of each method in this context?", "8c62ef23-11f3-4f6a-9d75-80cedf74606d": "What are the two terms that the expected squared difference between y(x;D) and the regression function h(x) can be expressed as the sum of?", "a8a66a61-5cea-4a56-9f87-a1f6bc54e9de": "True or False: The variance measures the extent to which the average prediction over all data sets differs from the desired regression function.", "dfb32b3a-384f-4eee-8dbe-81c861048547": "The passage mentions that classical minimax solutions from game theory do not work well in this scenario. Why is that?", "acb3978a-20fc-4648-81e3-b17cf91878f0": "The passage states that classical optimization methods like dynamic programming can compute an optimal solution against any opponent given a complete specification of that opponent. What key piece of information is missing in this problem that prevents using these classical techniques?", "6741b4e3-d125-4b27-bed4-f99d60f2228d": "What technique is used to map high-dimensional vectors into a low-dimensional space to visualize decision boundaries?", "8ad9d4ee-9c31-4bf8-8d4f-7764645a245b": "How do conditional GANs differ from regular GANs? What additional input do they provide to the generator and discriminator?", "6c1372a2-ceb8-4fc3-b9fb-dc4e1b480e03": "According to the context, expectation propagation involves approximating the posterior distribution p(\u03b8|D) with a product of factors. What is each approximating factor fi(\u03b8) corresponding to in the true posterior distribution?", "a4eba58d-b8d9-463c-93a2-48dff22ae6db": "The context mentions that for continuous variables, the posterior distribution p(\u03b8|D) involves integrals, while for discrete variables it involves summations. What key difference between continuous and discrete variables leads to integrals versus summations for the posterior?", "a1a8cfbc-7426-4815-a643-cc7855d642c5": "What was the first change made to the baseline Street View Transcription system? How was this change motivated?", "e10e258e-81c8-466b-b8ad-923e983345cf": "What was the initial ad-hoc definition of p(y), and how did this motivate the development of a new specialized output layer and cost function?", "c56453e6-4641-4854-94d1-930177bf3cf4": "In the E-step of the EM algorithm for fitting a mixture model, what distribution is q(Z) set equal to in order to maximize the lower bound L(q, \u03b8old)?", "82ba4c26-4747-45ad-b32d-896eca4a6a95": "How does the lower bound L(q, \u03b8) change between the M-step and the next E-step of the EM algorithm for fitting a mixture model?", "2709337e-5ace-456a-a282-9cb61b9efad2": "What is the main drawback of variational autoencoders when trained on images?", "e10495d6-8869-4a3d-b629-a8f775c321cc": "According to the passage, what are two possible causes for the blurriness in images generated by variational autoencoders?", "4e143938-0c2c-4b9c-b0a8-37e0a045dfdd": "According to the passage, why can't there be a single minimal entropy probability distribution function that achieves maximal specificity?", "6dba2064-40cc-48e5-91b0-c90bbbfeb353": "What does the passage say is the sequence of probability distributions that converges toward maximal specificity?", "d5e3c0f1-1c08-4953-8ee7-b4e8bf751d50": "What is the significance of the identity matrix In?", "74f97455-ae3e-4c73-949c-dfb9a7ba5113": "Fill in the blank: Matrix ________ enables us to analytically solve equation 2.11 for many values of A.", "5fcc956c-4a93-41fa-a07a-5102af2e34fc": "What is the form of the optimal solution for the factor q(\u03b1)? How is this obtained?", "bb2db39b-88f1-475b-993e-223b6fe7b0b8": "What are the three quantities for which we have obtained re-estimation equations? What is the form of the re-estimation equation for \u03ben?", "deb5b4cd-dfac-4302-8379-582a271c254b": "What is the purpose of using regularization techniques like ridge regression or weight decay in machine learning models?", "80916d4b-d79d-491d-b1ef-d0d71b0e0474": "The context mentions that the coefficient w0 is often omitted from the regularizer. Why would including w0 in the regularizer cause issues with the results depending on the choice of origin for the target variable y?", "ed0e5461-d035-46f7-b323-940b500d9cb2": "What approximation is made for the predictive distribution to account for the variance of the posterior distribution?", "7ae4efdb-37ad-4665-94c0-ace3e5923cd6": "What kind of linear approximation is made for the output unit activation, and how does it differ from the approximation used in the case of regression?", "72561e46-de98-4f5f-b7a6-a2881cbee736": "What are the two learning processes involved in GTD2 and TDC called?", "0708cfd4-3164-428c-b044-051f31c42dcc": "What assumption do two-time-scale proofs for TD learning algorithms like GTD2 and TDC make about the relative speeds of the primary and secondary learning processes?", "6c2c14f1-7be6-47ba-a0a6-ed651aa31125": "Draw a directed probabilistic graphical model representing a discrete mixture of probabilistic PCA models in which each PCA model has its own values of W, \u03bc, and \u03c32. How would you modify the graph if these parameter values were shared between the components of the mixture?", "2ab480b7-ad05-410f-ac51-e6cbd1c35862": "Derive the E and M step equations for an EM algorithm that maximizes the log likelihood function for a multivariate Student's t-distribution. Assume the model has a latent variable z ~ N(0, I) and an observed variable x|z ~ N(Wz + \u03bc, \u03a6) where \u03a6 is the noise covariance matrix.", "9c1dd77d-31d4-4e88-896c-423c5551d1ab": "What problem does data augmentation address, according to the authors?", "08e77cab-c656-43a0-af56-2d299519759f": "What are two of the techniques encompassed by data augmentation, according to the passage?", "c7760da1-2d1b-425c-a220-0979af53a7e1": "According to the analysis on the 20 News Group dataset, which data augmentation method performed the best and which performed the worst? What reason is given for why the labels were not flipped in these examples?", "e7ce27cd-5ba7-4fa8-9935-3a0a3692fdcb": "For the RTE dataset, what percentage of labels were flipped by the Language Model augmentation versus the Cutoff augmentation? What percentages were marked as uncertain for each method?", "b8c6d5f9-f834-4285-b5f7-9b5e530a4e7c": "In the car rental example, what are the values for \u03bb at the first and second locations for rental requests? What are the values for \u03bb at the first and second locations for returns?", "c8bb4fbb-7150-45c3-93ba-a784fdd9aac9": "In the car rental example, what constraints are placed on the number of cars at each location and the number that can be moved overnight between locations? What is the discount rate \u03b3?", "c493f8e0-38fc-424d-a866-983328896169": "What are two benefits of using a distributed representation over a one-hot representation according to the passage?", "9f5e480a-0697-4163-8352-9300d1f49d7c": "What algorithm powers nearly all of deep learning according to the passage?", "4dde3447-5a93-47b8-8fce-2b01a4be559b": "What is the margin in a support vector machine and how does it relate to generalization error?", "0f3a5bf0-e06d-4071-9ed6-9622f569ea41": "According to the text, Tong and Koller provided insight into the origins of maximum margin classification by considering what kind of framework?", "78a3f1ed-14f4-4de2-ad5c-224ced959df4": "What are some key differences between the MNIST dataset and more challenging image datasets like ImageNet or CIFAR-10?", "9771c16d-5a0a-44e3-9150-73a65fdccaad": "The text mentions several GAN architectures that have been proposed to generate higher resolution images. Can you name 2-3 of these GAN variants that were highlighted?", "af72fb1c-5101-4b1a-acb0-2c462ec1f103": "According to the passage, why is heuristic search often effective for games like chess?", "8f4645e0-0776-4eef-8215-d6ed60d2041a": "The passage mentions that heuristic search allows chess programs to store value estimates for millions of positions. What aspect of heuristic search enables this?", "36be7472-cc84-435f-bfbb-ec25886d5c50": "What kind of path between two random variables a and b remains active even if a third variable s is observed?", "caed218a-f7ac-4b1e-bc9c-ba1f06f8a2ad": "According to the passage, if we know there is a hurricane based on observing variable s, how does this affect the expected wind speeds observed at stations a and b?", "75184e7e-4297-4155-a40e-f7393424a202": "What is the goal of the Laplace method for approximating a probability distribution p(z)?", "88e43b67-f8f6-4d9e-a5e9-93df8746c64f": "Given a probability distribution p(z) defined as p(z) = (1/Z)f(z), what condition must hold at the mode z0 of the distribution?", "ab0b42ad-c95a-4593-baf9-30ea1cee9de8": "The paper by Li et al. (2016) focuses on using deep reinforcement learning for what NLP task?", "ff109bcf-d683-46a2-a9f6-e58a2ca1ae47": "CommonGen (Lin et al., 2020) is a dataset created for what type of natural language generation?", "4ab8be4f-8213-4129-8b84-6269f105b91f": "Consider a random variable x that has 8 equally likely possible states. What is the entropy H(x) of this variable?", "8c21abdc-7cb0-48f4-af70-ae22cbae7340": "Suppose we have a random variable with 8 possible states {a, b, c, d, e, f, g, h} that have the following probabilities:", "5144b1ca-b4bf-4c57-82c5-531bd7dc339b": "a)=1/64, p(b)=1/64, ..., p(h)=1/64", "3785b766-0572-4a9b-854a-bd45a3e9a686": "is the entropy H(x) of this variable? How does it compare to the entropy of a uniform distribution over 8 states?", "75d41061-6e5d-43c0-8e1f-39e8c9782ad3": "What is the role of the smoothing parameter h in the kernel density estimation model (equation 2.249)? How does the value of h affect the resulting density estimate?", "31e305c0-96b8-422b-a95a-571de5780052": "What are the two conditions that must be satisfied by the kernel function k(u) in the kernel density estimator (equation 2.249)? Why are these conditions important?", "31881e9e-3ea5-47d5-991f-137221acaf85": "The EM algorithm is a common technique used in which of the following areas discussed in the provided sources?", "09bc2651-19b7-4c28-9255-51d1bca0c05c": "According to the Hardie et al. paper, what method did the authors propose to jointly estimate high-resolution images and perform registration using a sequence of undersampled images?", "b45b7aec-ac3e-4457-b3c3-f143947c401a": "What is the key difference between policy iteration for regular policies versus epsilon-soft policies?", "1b1c2795-b38d-42b4-88f2-c8676f3733cf": "The context mentions a dilemma faced by all learning control methods. What is this dilemma?", "6829fad6-f302-40ca-a103-47f04fea75ec": "Consider the function f(x) graphed in the figure. What is the equation for the tangent line to f(x) at the point x = x0?", "24eeeec1-e5a6-4780-987c-19ca4109e1a1": "In the context of the figure, what is the significance of the function g(\u03bb)? How does g(\u03bb) relate to finding the tightest lower bound on f(x) over the interval shown?", "b549c31c-4249-4385-92d0-05454c988f65": "According to the passage, what are some key differences between Monte Carlo methods and iterative methods based on local consistency for estimating state values?", "d27502c9-41e8-4a12-9175-f62703d01d66": "The passage mentions that with a model, state values alone are sufficient to determine a policy. Why does it state that without a model, one must explicitly estimate the value of each action for the values to be useful in suggesting a policy?", "5a458372-edc4-47a0-94bf-a0b9d67ae8ee": "What company originally sold the Atari 2600 video game console from 1977 to 1992?", "7f987517-0a96-45c8-857c-fc44b2369f89": "What algorithm did Mnih et al. use as the function approximation method in their demonstration of deep reinforcement learning on Atari 2600 games?", "1efbfb40-8b9f-414f-89a9-fd328e998061": "What type of tasks may fail when using paraphrasing for data augmentation according to the authors?", "4a32d499-4d9d-4866-a3c2-4bfe27d9ab27": "According to the passage, this work was supported by grants from which two companies?", "cfaea0c2-1718-4b89-8f4b-5febc7862c2a": "What is the role of the critic in the actor-critic algorithm? How does it work to improve the value function?", "754a14f3-dddf-4b26-9fbe-02e232199d3f": "What is the key difference between the learning rules used by the critic versus the actor in actor-critic algorithms? What causes this difference and why is it important?", "bf45fe69-4d8d-43d6-bb3a-b18dbd18a461": "According to the passage, why do we typically not want to partition data into a class of red cars and green trucks, and another class of green cars and red trucks?", "1a267ccb-fc80-4129-b751-85340deeeb27": "The passage states that hidden units in deep convolutional networks trained on ImageNet and Places datasets learn interpretable features. Can you name one example of an interpretable feature that the passage says these hidden units learn?", "eaead1a6-d695-498c-9aab-7bd668b9da92": "Zhu, Chen, and Xing proposed an approach for Bayesian inference that adds an additional regularization term to the posterior distribution. What is this approach called?", "59e0c8b1-eed4-4e98-a74e-39b26badd775": "Ziebart et al. proposed an algorithm for inverse reinforcement learning that utilizes maximum entropy principles. What is this algorithm called?", "8d735dd3-8fed-4c6f-9743-879efb690ee0": "According to the results in Table 4, how did data augmentation methods compare in performance to limited labeled data versus more labeled data?", "c3656df7-7348-4c9c-adc6-73c95bfbd0d6": "What was the overall trend in results for augmentation methods on inference tasks and similarity/paraphrase tasks in both supervised and semi-supervised settings, as seen in Table 5?", "a837b718-2865-43a5-90d5-10f4d0e964ef": "What are the two key steps in the teacher-student training mechanism described?", "29bbd6eb-6c2b-491c-aeb6-52fe5b9dae70": "What are some examples of popular training heuristics that can be viewed as instantiations of the teacher-student framework?", "430cc68f-d11c-4029-802a-8500e4c848f6": "What is the key difference between the backup diagrams for Sarsa and Q-learning?", "da4adaf0-0782-4059-9e4f-c37de080fa4e": "Fill in the blanks: In Q-learning, the ______ node is the state-action pair being updated, the ______ nodes are the possible next actions, and an ______ across the next action nodes indicates taking the ______.", "4112786b-1da3-4148-b0fc-dc31fe62988d": "What did Furrer et al. (2020) examine in their ACL paper regarding compositional generalization in semantic parsing?", "6673078f-8aad-4e71-8a95-2171d1b45361": "Gao et al. (2019) proposed a method called soft contextual data augmentation for what NLP task?", "283a36d9-3dfd-4d9c-8041-6db8023ff7b0": "What year was the paper \"Language models are few-shot learners\" published?", "d7d5be6a-f8d1-47a7-9d56-49972e4512d2": "Which conference proceedings was the paper \"Generating sentences from a continuous space\" published in?", "a7a5f15d-6df1-46ff-a953-d2940ab38f80": "Which author proposed using policy gradient methods in spike-based reinforcement learning in continuous state and action spaces, and discussed cases where this approach fails?", "437a751c-a6e2-470d-b172-47aff798848f": "Walter introduced two early pieces of work related to machine learning and artificial intelligence in 1950 and 1951 in which publications?", "419ee496-1671-4b0d-9248-56da51b7f753": "According to the passage, why is it problematic for a machine learning model to have higher capacity than needed for the task?", "1f5b4fbc-f248-41c7-bc10-b87b6eb53f09": "The passage shows three models fit to a training set - linear, quadratic, and degree-9 polynomial. Which model is described as having appropriate capacity? Why?", "21f40faa-48f8-4757-ade5-61c55e412973": "What are the two key components updated in the TD target for action-value estimation in Q-learning?", "7ea45ae5-ac83-43bc-8da1-33ddd5d1c719": "SARSA is an on-policy TD control algorithm. What do the letters 'SARSA' refer to in the sequence of steps used to update the Q-value?", "e889c377-0c88-4f41-afdf-c9bba56f2e1a": "What is the form of the conjugate prior for the parameters {\u03bck} of the multinomial distribution?", "0da0d22a-893c-469a-a147-501902724fb4": "The Dirichlet distribution in (2.36) contains parameters \u03b11,...,\u03b1K. What constraint must these parameters satisfy and why?", "0fb27cfc-b585-4e57-9687-078e38ad2f96": "Claude Shannon is known for designing an early maze-solving machine called the Theseus. What type of machine was Theseus?", "bbddfeca-2129-4c08-9899-d505e7752b41": "The paper by Shepard discusses a two-dimensional interpolation function for irregularly-spaced data. What conference proceedings was this paper published in?", "8ef55c02-3b2f-4030-b1fd-69d88b138417": "According to the passage, what are the three situations discussed regarding generalization and overfitting?", "df0f093f-6798-4b47-87ff-407e50352203": "The passage states that the goal of regularization is to move a model from which of the three regimes discussed into the second regime?", "217a6846-6541-4bbf-94cf-f0065f890662": "According to the passage, what did Modayil and Sutton demonstrate with their use of a mobile robot?", "08f5b30a-3a7d-4740-a575-c5d638b41a08": "The passage mentions that Dayan, Niv, Seymour, and Daw proposed a framework involving Q-learning to model what kind of interaction?", "eb614187-cd98-4132-b552-03804dbb5930": "According to the passage, what are some of the options that Swersky et al.'s hyperparameter optimization algorithm can choose from at various time points?", "caebbc53-9dcb-4a85-ae88-1f69b4896261": "The passage states that machine learning systems are difficult to debug for various reasons. What are two reasons mentioned why machine learning systems are hard to debug?", "5301e046-6dbb-43c7-97d3-c0886d3aaef0": "In convolutional layers, how are the bias parameters typically shared?", "d18fd459-b41f-4b22-9521-514546547605": "What are two benefits of learning a separate bias at each location of the output map rather than sharing biases in a convolutional layer?", "93c16c41-6188-4520-987f-af7f80018a1f": "What does the principle of maximum likelihood recommend for designing a good cost function for neural network output layers?", "879a64cd-30f9-47c8-96df-63b455ac68e9": "What is another common name for the softmax function, and why is it conventionally called softmax instead?", "e44e1e5b-45d2-46c3-84c9-52fdc00b284f": "What technique was used to generate adversarial examples in the study described?", "0b6182a1-3e96-4baf-abcc-ba9fadeecbf8": "After adversarial training was applied, how much did the error rate on adversarial examples decrease compared to before adversarial training?", "c6eb4ea9-ee28-4b70-818c-749c9348ed32": "According to the variational approximation of the predictive density, what distribution does the kth component follow?", "a974f9c1-a3cd-4594-aca7-53bc83dac370": "When the size N of the data set is large, what does the predictive distribution (10.81) reduce to?", "ce1680eb-f4c7-400d-bbeb-16af5642e4ae": "Derive the result (10.223) using (10.207) and (10.208).", "037c54b6-c92a-4d7a-b208-dc38bd64276c": "Explain the fundamental problem that approximate inference methods based on numerical sampling, also known as Monte Carlo techniques, aim to address. What mathematical expectation do these techniques attempt to evaluate?", "dcb57d18-5ace-417c-8c26-819b04380938": "If we make a linear transformation of the input data x \u2192 Ax, what corresponding transformation should we make to the weights W1 and biases b1 going into the hidden layer in order to leave the network mapping unchanged?", "4c08cd25-4621-4bf0-938b-dc7f259e0de0": "Suppose we have two equivalent networks that differ only by a linear transformation T of their output variables y \u2192 Ty. What transformation should we make to the second-layer weights W2 and biases b2 to achieve this mapping while leaving the rest of the network unchanged?", "38b8a296-3ace-4d91-9b60-75fa9da05258": "The context mentions that feedforward networks can represent any function given enough hidden units, but that the size of the network required may be very large in some cases. What theorem states that feedforward networks are universal function approximators?", "1d423a55-d2c3-462b-a80d-38d270c75ba6": "The context mentions the problem of overfitting when training machine learning models. What is overfitting and how might it cause a model to choose the wrong function?", "4aa39591-3648-4c30-aca4-5c98eeb1d944": "According to the passage, why does the author focus on gradient-based function approximation methods, specifically linear gradient-descent methods?", "4d78cbc9-b942-4463-9928-00a709685a14": "The passage mentions that some reinforcement learning methods may cause the value estimate (VE) to diverge to infinity in certain cases. What performance measure does the author suggest these methods should try to minimize?", "e9f4deec-8ef7-40de-b8ce-de98e7070b2a": "What is the key difference between how interior action nodes and leaf action nodes contribute to the target in a tree-backup update?", "ccb4659f-86fc-471d-a3cf-85a3b5179650": "If the probability of the first action A1 being selected in state S1 is 0.3, and the probability of action A2 being selected from state S2 is 0.5, what is the contribution weight of a non-selected third level action A3 to the tree-backup target if the probability of selecting A3 from state S3 is 0.2?", "4148d004-e94b-414d-a409-852e7a7942fa": "first question focuses on understanding the mechanics of how a tree-backup update works with regards to interior vs leaf nodes. The second is an applied calculation question testing if the student understands how to calculate the weighted contributions of different non-selected actions at lower levels based on action selection probabilities. Together these cover both conceptual and computational skills for this concept.", "0faf1e50-2699-4968-997e-4879d5e88651": "In a factor graph, what is the distinction between factor nodes and variable nodes?", "ee511358-ad29-401d-b83d-d9b258772eec": "Consider the factor graph shown in Figure 8.40. How many factor nodes are there? How many variable nodes?", "2bdb74a7-bf9c-48e7-8039-ac0ab130bd13": "Which year was the paper \"Class-based n-gram models of natural language\" by Brown et al. published?", "aa8572cc-122f-4fc7-a1c0-c58881ebf8b9": "What was the size of the benchmark dataset introduced in the 2013 paper by Chelba et al. for measuring progress in statistical language modeling?", "e91d34b4-37a8-4e27-a329-b0b9f8a68ad8": "According to the text, who applied reinforcement learning to linear quadratic regulation?", "f22ff187-cc56-4344-9a7d-3608308860fd": "The text mentions \"Incremental Dynamic Programming for On-Line Adaptive Optimal Control\" by Bradtke and Barto. What type of algorithm does this paper discuss?", "a3292527-3700-492b-9650-eb16a168d2ec": "The paper by Williams, Blake, and Cipolla in the reference list discusses techniques for which computer vision task?", "b030ff96-47e1-4cd4-92df-582767d67ea5": "Object recognition", "b5dd46fb-5a24-43ad-837b-e64a734ec9f2": "Image classification", "505fa873-9da6-4823-8db2-9c58e851ed93": "Visual tracking", "77bd9c49-a330-41ef-b93d-1102c03e29c3": "Image segmentation", "826f059d-4c77-4ffc-b3cd-514e0e0ceb2c": "What type of neural network model does the paper by Williams propose for estimating conditional multivariate density functions?", "7f87340a-d446-412d-8fba-c24a2163b17a": "Convolutional neural network", "ecdec918-d3fd-41ce-ace1-8af14064ae82": "Recurrent neural network", "8982423a-02a6-4bfa-b90c-29775947668b": "Restricted Boltzmann machine", "8fa79c3a-8ba8-47cf-bd10-22f81b2bf4a1": "Feedforward neural network", "57b35421-beae-4972-b591-d9796ed03bce": "What are some ways that GAN-generated samples can be further augmented to increase the size of the original dataset?", "3eff8f87-3239-4b26-8bd2-70816236d607": "The context mentions that test-time augmentation is analogous to what other machine learning technique?", "92d3d6b5-7649-4894-a9b4-e7efc499faf8": "What is the key difference between the estimates found by batch TD(0) and batch Monte Carlo methods according to the passage?", "722261ce-e14d-4468-9b15-8ec5316fcc5e": "According to the passage, batch TD(0) converges to what type of estimate?", "312ebff9-26b0-471d-a1dd-1172a5c38194": "What is the action value function, or Q function, defined as in the context?", "ffb9793c-f2c8-4fa3-8cce-6b402dc52d68": "The context mentions that we are primarily interested in learning what conditional model?", "2490dfb2-8c78-4c56-9020-eabb1b46c7ef": "According to the context, what is the form of the input-dependent variance for the predictive distribution over t?", "74d31a71-d277-45e5-bcaf-8d2038224cd5": "According to the context, when is the marginal likelihood function for the observed data a member of the exponential family of distributions?", "05dffa68-d60d-448d-adfd-8133662c7629": "What brain region contains \"grandmother cells\" that respond to specific concepts like a photo, drawing, or name of a particular person?", "209e1e1e-9fd2-4c4a-889a-dd36fbe797e8": "What is the name of the neuron discussed that fires in response to seeing or reading about the actress Halle Berry?", "ad477a7b-5f93-44f2-be3d-dec65fa32d7e": "In the context, what is said about using discounting to define an optimal policy in the continuing case with function approximation?", "4c25dbf3-89fa-434c-abc0-425919fab14d": "According to the context, what methods from Chapter 9 are extended in a straightforward way to action values?", "ed98deca-12c4-4b6a-8627-eafe32c870e6": "According to the passage, what are some common misconceptions about the difficulty with neural network optimization?", "56f6e544-675c-45d9-9df3-63359bdbd6e2": "What does the passage recommend as a test to determine whether local minima are the cause of issues with neural network optimization?", "35a4d820-49f1-4b4a-aabc-1bd1fc172fb6": "According to the passage, early stopping in neural network training should exhibit behavior similar to what regularization technique?", "989bdebb-41d5-45f4-a255-f614527f91d6": "Based on the analysis of the error surface shape and eigenvalues of the Hessian matrix, what path does the weight vector follow during training if no weight decay is applied?", "21c7cca8-81fc-490c-8d29-b45594da8a88": "What are some of the key generative modeling approaches that have been used for text data augmentation?", "a7a82bfa-e429-44a3-bade-4d4476dc853c": "How do white-box adversarial text example generation methods create perturbations, given that text is discrete, unlike continuous image pixel values?", "bb8857f0-cd16-44c5-a201-15c46488dd52": "What does Figure 6.6 demonstrate regarding the effect of depth on test accuracy for deep neural networks?", "945798fc-a121-48fb-b479-2880b6293d39": "According to the passage, what are two examples of specialized neural network architectures that have been developed for specific tasks?", "61ccd64b-5284-4805-ae52-c4abc4e8646a": "What paper proposed the Multi-Step Reinforcement Learning algorithm as a unifying framework for temporal abstraction in RL?", "a823ebef-8442-42c5-b684-fb6787d80600": "The Linear Programming Approach to Approximate Dynamic Programming uses linear programming to approximate the value function in MDPs. In what PhD thesis was this approach first proposed?", "fc66ba64-e849-4d39-9054-7b9f63d6829d": "What is the output shape after performing max pooling with stride 4 on the output of a convolutional layer that produced 64x64x64 feature maps?", "20aee1e4-f9bb-4be5-9ede-931b96068424": "True or False: The output of a convolutional neural network is always a vector before the softmax layer.", "fd4bf047-ac1c-437b-af40-f982b726d9ad": "What are two proposed methods to deal with exploding gradients in recurrent neural networks? The methods mentioned are wise clipping and clipping the back-propagated gradient.", "87d905c2-9510-48e9-824d-f4ec7820b2e2": "According to the passage, what strategy can help address vanishing gradients and better capture long-term dependencies in recurrent neural networks? The passage mentions creating paths in the computational graph where the product of gradients is near 1 to address vanishing gradients.", "a1b83bb3-6fd5-4e16-8539-c70d7206425b": "What is the relationship between the functions f(x) and g(\u03bb) according to equations (10.129) and (10.130)?", "df2a5cd2-9548-46e1-a656-f9cd9883fc47": "If we have a concave function instead of a convex function, how would we modify the approach discussed in the context to obtain an upper bound?", "69e70d12-329c-438e-beca-e02146009d1a": "What is the main limitation of semi-gradient TD methods like DP compared to true gradient methods?", "33304c84-dc36-4170-8b95-457acbbf2d3b": "According to the passage, what are two ways to choose good features for linear function approximation in reinforcement learning?", "f1706a2f-37b5-415c-94d5-34fd40c3c2b1": "What is one common criticism of the Bayesian approach regarding the selection of the prior distribution?", "1831815e-6b99-49ee-9b2d-c196cdc84447": "According to the passage, what are two benefits of frequentist evaluation methods compared to Bayesian methods?", "de031794-3f3f-41be-92fa-b1a155040f5f": "What are some of the key areas for future work in data augmentation that are mentioned in the passage?", "2be53370-68d1-49bd-94f4-d37a88a5bff7": "According to the passage, what are some of the data types beyond images that data augmentation techniques could be applied to?", "bdc462c8-396f-4778-8ecc-aa0044db0822": "What are some of the transformations that can be used for color distortion data augmentation, as mentioned in the code snippet?", "2730cb1a-ff69-43e8-b205-34070e938e71": "According to the passage, what percentage of the time is Gaussian blur applied during data augmentation? What range of sigma values is randomly sampled for the Gaussian kernel?", "931c07a2-d693-49d0-95ee-7feed91a50c4": "What are some examples of 'information criteria' that attempt to correct for the bias of maximum likelihood estimation by adding a penalty term?", "1ebb29f4-f979-4f05-8228-4c22d64fb94e": "According to the passage, what are some limitations of using information criteria like AIC and BIC for model selection?", "db201fd2-62f8-443d-86cc-98d5dc025444": "What is the issue with using localized basis functions like Gaussians for regression in regions away from the basis function centers?", "1f9b0bfa-d777-47af-bd6e-8171ff4f6ae0": "How does the Gaussian process approach for Bayesian regression avoid the extrapolation issue that can occur with localized basis function models?", "965fd5b9-8d47-4ed1-8a0d-6c8004137a3c": "According to the passage, what are two potential disadvantages of using random erasing as a data augmentation technique for image classification?", "fc601040-a78d-4814-ad67-ee4226b69f24": "The passage mentions that combining multiple data augmentation techniques may be beneficial. What are 3 data augmentation techniques mentioned in the passage that could potentially be combined?", "222506b3-a0d7-4fa3-a959-f9ffc649d8af": "According to the passage, which chapters would be most relevant for a course focused on machine learning or neural networks?", "54aa9d38-f9fb-4997-8527-1018383f7d79": "The passage mentions that certain sections and chapters are marked with an asterisk (*) to indicate they are more advanced and can be omitted on a first reading. What does the asterisk signify about those sections and chapters?", "0dd158fe-1f7a-4f97-adcc-3d9686c7b082": "According to the passage, what makes assembling large datasets for medical image analysis challenging?", "85d8d00d-bf75-4575-abf0-9057f2b84270": "The passage mentions several types of medical imaging that are used to generate datasets. Can you name 2 that are specifically called out?", "e8c1c449-8b89-4fb0-8026-6c892ffef8bc": "What is the key advantage of using an energy-based model compared to modeling the clique potentials directly?", "0d859b69-644f-455b-bdaa-51b5f3eebc6b": "True or False: The probabilities in an energy-based model can become exactly zero for some states x.", "52786df4-d6a0-4abe-a52c-5b20afb61690": "What are the two different branches explored when computing the cost to train the MLP using backpropagation?", "a80072e5-eb2d-4343-a12a-41c242f83738": "When computing the gradient on the weight matrix W using backpropagation, what two terms are added together?", "69704bd8-703a-4135-9b11-58e69a17d563": "What is another name for the 'squashing function' described in the passage?", "e52eb3fd-dcde-463f-bcc2-083fde950e4b": "If a(x) is a linear function of x, what governs the posterior probability according to the passage?", "cd3712b2-3204-4ce5-8784-5b2a638b07ac": "True or False: Probabilistic PCA is able to provide tractable inference despite having a graphical structure that introduces conditional dependencies between all latent variables.", "a3bd6732-4a30-4860-856e-4e99b633a657": "Briefly explain how some probabilistic models are able to provide tractable inference over their latent variables, even when the graphical structure introduces conditional dependencies between the latents.", "4ce15109-ed7e-421a-a605-a3f3c35383e4": "What is the main difference between Independent Component Analysis (ICA) and Nonlinear Independent Components Estimation (NICE)?", "7e4897c7-c091-4a45-8e87-7e40a1a1e2f8": "What are two generalizations of ICA that are mentioned in the passage?", "860fada0-403a-41c5-80e6-878b88a5d51c": "According to the passage, how does NADE differ from earlier neural auto-regressive networks?", "c0ac473b-1e82-49d7-8e6f-e26a200279e2": "In the NADE model illustrated in the figure, which weights are shared across the network?", "43bc715d-cf47-4e13-8c1c-741c76059a89": "According to Schraudolph (2002), what technique is used in stochastic gradient descent to enable larger learning rates?", "761b5aaa-0639-4e17-8fb6-a7e8f6ac1ce7": "According to Schultz et al. (1993), how did the responses of dopamine neurons in monkeys change over successive steps of learning a delayed response task?", "14769c28-e91b-4c6b-9070-74104db95d05": "What is the feature mapping \u03c6(x) for a 2-dimensional input space x = (x1, x2) using a polynomial kernel of degree 2?", "58ff9a1f-9835-4c35-b791-916e57943959": "What is the necessary and sufficient condition for a function k(x, x') to be a valid kernel?", "90c7e565-bb01-4478-9c8d-5f3ce9f2e74a": "What is the key difference between bagging and dropout in terms of how the models are trained?", "ea5c255e-2072-491e-a429-9af6851f1b13": "When using an ensemble method like bagging or dropout for a probabilistic model, what does each individual model output that is then aggregated to make a final prediction?", "1837d4f4-e33b-446a-9ed3-92e8514b217d": "Consider a Gaussian mixture model with K components. How many equivalent parameter settings exist due to interchange symmetries? Explain your reasoning.", "84ad5ce4-a614-4297-946e-d739e002d5d7": "Suppose we run variational inference for a Gaussian mixture model and the resulting approximate posterior distribution q is localized around one of the K! equivalent modes. How can we approximate the full posterior distribution using q?", "4f371be9-9778-47b9-bbc3-1968995ce34c": "What are some tasks that require probabilistic models to have a more complete understanding of the entire input, compared to just classification?", "12287afb-c19f-4dec-9946-48ac2032b4c5": "According to the passage, what is one difference between recognizing an object in a photo using a classifier versus estimating the density p(x)?", "7bcde163-5944-49db-a114-5c622a8a4a67": "What method did Kobayashi (2018) use to enable zero-shot translation in Google's multilingual neural machine translation system?", "52b38df0-b61d-4985-8030-905f7fd7663a": "Kolomiyets, Bethard, and Moens (2011) conducted experiments on model portability for what specific area of natural language processing?", "de4fe6fb-2192-4774-a578-aee597395035": "According to the context, what do we call the actions that have the highest estimated value Qt(a) at any given time step?", "b69011da-7248-4b3a-bee4-b07e2945bda6": "The context mentions exploiting current knowledge vs exploring to improve estimates of action values. If the agent selects a nongreedy action, is it exploiting or exploring?", "867e2ce5-c6bf-4cef-8621-563328785061": "How were the number of additional pieces beyond three encoded in the neural network's input layer?", "7cee6313-df77-4206-9c31-a2396cfe5db9": "What was the purpose of having two units indicate whose turn it was to move - white's or black's?", "55a5c208-f6a2-4e3e-afa2-616f0cfdf0b1": "What is the goal when using a Markov chain Monte Carlo simulation according to the context?", "b2e6ef2e-0c11-4120-8596-9c2eb70a5027": "What does the variable 'z' represent in the description of the dynamics in the context?", "af502a41-3065-4ec7-bd81-abde123f41ac": "What is one of the primary disadvantages of the spike and slab restricted Boltzmann machine (ssRBM)?", "3462f0d8-9052-4cbd-a489-1232017149c2": "According to the passage, what can qualitative examples of convolutional variants of the ssRBM produce?", "9c713ee1-a379-4fb6-a54a-fc853358a8de": "What force causes the particle to gradually lose energy over time and eventually converge to a local minimum in the momentum algorithm?", "ee1ed5fe-0d75-4687-9469-5d79970fd702": "In the analogy comparing the momentum algorithm to a hockey puck sliding down an icy surface, what additional force besides the gradient of the cost function is needed to prevent the puck from oscillating back and forth forever?", "4cb4c17e-a851-4d6d-881a-ea47e8d1fcfd": "What does Snorkel use the weak supervision labels for?", "524b1969-3944-4425-95e8-5f9ba2f59de3": "What are two types of information that deep neural networks can leverage simultaneously according to the passage?", "4717e09a-f7fd-4494-adb9-8a8def649474": "What is the key requirement for retaining an efficient inference algorithm that is linear in the length of the chain in a linear dynamical system?", "317f0e1c-da87-4205-9f64-68b10e0812be": "In the graphical model representation, what becomes apparent when hidden Markov models and linear dynamical systems are both expressed as graphical models?", "3a231cb3-4aac-45d8-b09a-9e5894f7c7d5": "According to the context, what was the asteroid spaceship designed to do on its maiden voyage?", "45194f72-d32b-4abd-8bff-d67c266e1ae5": "What does the context say is needed in the climate research study to better understand differing results from the same data?", "d580cb0c-c9ef-4943-8a7b-1c6f06c9ed51": "According to the passage, what are two possible explanations for the role of dream sleep in humans and animals?", "8164970e-d0f5-4b9f-a0c2-8c5461b63360": "The passage suggests that using only the positive or negative phase of the gradient for several consecutive steps is less effective for Monte Carlo algorithms. How does this relate to the typical sleep-wake cycle in humans and animals?", "8886a81e-71cc-462c-94cc-8ae2a2a31ccb": "What activation function is used in the neural network for the decoder that has a Bernoulli output distribution?", "057c29e1-a0d3-414f-8aae-cf92235a9fb0": "True or False: The encoder neural network has Gaussian distributed outputs, while the decoder can have either Gaussian or Bernoulli distributed outputs depending on the type of data.", "7d85d0e0-2d89-4997-b72d-8ac176a9a33c": "In the backward pass of inference in linear dynamical systems, what quantities are required that come from the forward pass?", "94fded75-771c-4240-a05e-ae5614ea2584": "What is required to find the maximum likelihood estimates of the parameters \u03b8 = {A, \u0393, C, \u03a3, \u03bc0, V0} in a linear dynamical system model using the EM algorithm?", "d11c0e42-20e3-4ef3-bd4c-fbf61efb0a9e": "What is the binomial distribution a special case of when N=1?", "b53e597a-9d32-4893-a272-7601eede598a": "True or False: The beta distribution is the conjugate prior for the parameter \u03bc in the binomial distribution.", "7b6078d8-96ea-4bc2-ac3f-e8a2389cae74": "What strategy can be used to impose sparsity on the activations of units in a neural network?", "1f20af83-4505-41b7-bf5f-d435018e1ca9": "How does L1 regularization lead to a sparse parametrization of a model?", "d102f019-df1e-4848-873f-3cacf9af80fe": "What were the four state space dimensions used initially as input to the reinforcement learning agent in the study by Reddy et al.?", "6b63782f-844b-43de-831b-c6d5744c1411": "What was the overall objective of the thermal soaring task studied by Reddy et al., and how was the reward signal designed to reflect this objective?", "d8bc4fa5-48cf-4a18-a728-7b8755f4bec6": "According to the passage, what are the three main classes of reinforcement learning methods that can be combined to obtain the best features of each?", "62fe84a6-bf63-46ae-b363-a637f853feb9": "The passage states that the most important feature distinguishing reinforcement learning from other types of learning is that it uses which kind of training information?", "d5964294-9e71-41a8-9c7c-efcb49176348": "According to the passage, what is one key difference in optimization considerations between CPU and GPU architectures?", "f7ea7ed2-4c36-4516-9645-d7d02b40cc76": "The passage mentions that GPU threads need to be coordinated carefully. What is one example it provides of how threads can be coordinated to improve GPU performance?", "609187b9-769b-470e-afaf-f2a8cc2b983e": "According to the passage, how do evolutionary methods and value function methods differ in terms of utilizing information from the games played?", "0aa05353-cfa1-4a48-aa67-13a10127cb57": "The passage states that with evolutionary methods, \"Credit is even given to moves that never occurred!\" What point is being made here about how evolutionary methods assign credit to policies?", "7ce7d287-2d5e-491d-bf65-ac4a2298f2e8": "What does probabilistic max pooling force the detector units to be?", "f8f72a12-7f32-4bd4-b97e-f3907f9466ff": "According to the passage, what constraint probably greatly reduces the performance of convolutional Boltzmann machines?", "2dae0b24-191c-4831-be15-c61132410d50": "The passage mentions that convolutional neural networks were more computationally efficient than fully connected networks. Why might this have made it easier to run multiple experiments and tune hyperparameters for convolutional networks?", "c6c6ca77-98c6-49fd-ba2f-4f085975ac16": "The passage suggests that psychological factors may have been a key barrier to the early success of neural networks. What psychological factors are mentioned that may have held back progress on neural networks?", "31340ccf-17b2-4d64-9fb9-82180a8d1f48": "According to the passage, what issue arises when using probabilistic max pooling with variably sized input images? How can this issue be addressed?", "100f5b2b-346b-41e7-acfc-f19cdaecd247": "The passage mentions two problems that can occur when modeling images with Boltzmann machines without implicit zero padding. What are these two problems?", "c5c1b6c4-fec7-4c10-b986-30dfe4b7b179": "What property of the Hamiltonian dynamics allows for systematic changes to z while avoiding random walk behavior?", "e63a1ce7-075d-48ac-8c4b-4454b9a47ed5": "What additional moves can be introduced in phase space that change the value of H while leaving the distribution p(z, r) invariant?", "b0b64368-3503-4115-a94e-f54ac32dfb03": "According to the passage, why is it better for an RNN to use the same conditional probability distribution at each time step rather than a different one for each t?", "aeca3d78-2dfa-46c9-8be0-b811d1dab725": "The passage states there is one additional complication for an RNN as a graphical model. What is this complication and how can it be addressed?", "764fa2f4-7f9f-4029-83c0-de934b9b7095": "What system of equations is formed when taking the derivative of the squared error function with respect to the weights?", "bc0a21ac-4441-4f60-b786-fba5f78e8952": "What term is often used to refer to a linear regression model with an additional intercept parameter?", "a553d56b-1775-4388-bb53-83d8788263aa": "What distribution do we assume for the Gaussian variance on y in the MSE formulation according to equations (5.70) - (5.72)?", "a3964019-6abf-4309-9816-fb72e4f9677a": "Before determining the posterior distribution over the model parameter vector w, we first need to specify what?", "83a5d7c5-57f8-4148-bd09-fdb93c455fc9": "What are some key components that need to be selected when forming a GVF (general value function)?", "4371b3a0-9800-47be-b877-9b97925714f5": "The passage mentions that greater power and generality in GVF design would come from making certain task choices automatically. What are these task choices that are currently done manually but could be automated?", "3d32bea4-6e0f-4674-869a-5a766f2d3a29": "What does equation (10.9) represent in the context of variational inference?", "957d3432-13bf-4f5e-9f52-ead7cac470b3": "Explain the iterative approach used to find a consistent solution to the set of equations given by (10.9). What guarantees convergence of this iterative procedure?", "dce044c5-73ca-45dc-8557-05897cfe2608": "Consider the joint distribution in Table 8.2. What is the marginal distribution p(a)?", "97170d74-9913-45e7-b48b-f0fd644b3303": "True or False: According to Exercise 8.4, in the joint distribution given in Table 8.2, the variables a and b are marginally independent.", "a8e2f82d-f7e2-410b-ac6d-ddc8ebfcafa2": "According to the passage, what is one key difference between directed and undirected graphical models?", "d6858014-ff6c-41a8-9c50-76ec363c93e1": "Refer to Figure 16.3. Which of the following statements is true?", "3f39a6b1-67ee-47fc-b409-dea23d524e2d": "The edge between h1 and h2 has a conditional probability distribution associated with it.", "770589f0-f35f-40aa-b6bf-d42aa4f83d12": "There is a directed edge from h1 to h3.", "185711f5-070a-4eab-b7d2-0d8af63ef53a": "The graph structure captures interactions between the random variables.", "4dac7e69-1774-49c1-b991-886489bf76dd": "The graph shows that h1 and h3 interact directly.", "f5f23384-8d5d-464a-9d24-fe727bd94289": "What problem does the WGAN algorithm help address compared to traditional GAN training?", "3fb98c0c-5a75-4ca8-91b5-974b7cb51e03": "According to the authors, what are some of the benefits provided by the theoretical analysis done on the WGAN optimization problem?", "2f572651-cbce-4481-aad6-e3c71b576a69": "According to the passage, Klopf's hedonistic neuron hypothesis proposes that individual neurons seek some stimuli and avoid others, similar to what organism?", "e5b25ba5-bdbf-4bc2-9c6b-9dfbfeed9068": "The passage states that the bacterium Escherichia coli provides a well-studied example of a single cell that seeks some stimuli and avoids others. What structures on the E. coli cell are involved in modulating its movement in response to chemical stimuli?", "8428ff44-b979-4aae-bf5b-d12c284fb143": "What is the initial weighting given to each data point when training the classifiers in AdaBoost?", "e58c5f2b-fc5a-497e-a964-5d11cecc32ae": "How are the predictions from each of the base classifiers combined in AdaBoost?", "7430e3a2-87f9-4164-834d-fec924240114": "According to the passage, why does a table-based language model require an extremely large training set to fit accurately?", "e5a43631-7a72-4e39-95b7-fdbdeb12235f": "The passage mentions two reasons why operations like computing marginal or conditional distributions from a table-based language model are intractable. What are those two reasons?", "8584b987-d164-4e05-bba7-a5889926bdfa": "What is the requirement on the stationary point z0 for the Laplace approximation to be well-defined?", "9d26a233-7f85-42fd-a075-40b569f1a4e9": "What does taking the exponential of the Taylor expansion around the mode z0 give us in the Laplace approximation?", "7483c6ee-5e99-4b52-b346-d0fb75c79dc7": "What is the final layer of a feedforward neural network called?", "ed7500b3-268a-4808-946a-0755d282dc56": "The training data provides approximate examples of what function evaluated at different training points?", "878bc934-888f-435e-aa73-b369be93a01a": "What are the two step sizes denoted in the REINFORCE with Baseline algorithm described? What is each step size used for?", "958e1121-2ee0-4008-bb14-98c1e7cabd06": "The context states that choosing the step size for values (\u03b1w) is relatively easy in the linear case and gives a rule of thumb for setting it. What is the rule of thumb provided for setting the step size \u03b1w for the value function?", "6d29da67-e717-4dce-a81e-53d056e714cd": "According to the experiments described, what did dopamine neurons respond to with substantial bursts of activity called phasic responses?", "11294cba-32f5-4630-ae30-87710a4814d9": "How did the experiments show that dopamine neurons signal reward prediction errors instead of reward itself?", "2379eded-e321-48ab-b80e-e0032c045710": "What is the main difference between first-order and second-order optimization algorithms?", "f615e028-71f0-4ca1-9684-f68fc33a61ae": "True or False: Newton's method is an appropriate optimization algorithm when the nearby critical point is a saddle point.", "4435746a-301c-4355-b1c4-a26a090216c5": "What are the individual component densities called in a mixture of experts model?", "ca06abc9-4d33-40c3-a3c6-e9b81022cdd7": "What constraints must the gating functions satisfy in a mixture of experts model?", "bcc9d25b-49e6-4288-8f11-b3168f041cfe": "In the example with the rabbit, what was the conditioned stimulus (CS) and unconditioned stimulus (US)?", "5502bc05-d4f4-4893-9900-c59c749a5bd0": "What are two ways that a conditioned response (CR) often differs from an unconditioned response (UR)?", "1526a50a-4098-448d-a827-4dd7412947a9": "Using the Taylor expansion provided, what is the first derivative of g(x) evaluated at x=0?", "89dc7831-2656-4215-9a36-8418f57b658e": "Given the Taylor expansion of g(x) around x=0, what is the 3rd degree Taylor polynomial approximation of g(6)? Show the work.", "fae9c92a-500a-4fec-bf90-d1b6c692c6d6": "According to the text, if the measurement noise is small compared to the rate at which the latent variable is evolving, the posterior distribution for zn will depend on what?", "a044497b-14be-437c-9014-5aeeafd7f943": "The text mentions an important application of the Kalman filter is to tracking. It provides a simple example of tracking an object moving in how many dimensions?", "21f95368-6611-43f2-9b4c-e454e6f78f28": "True or False: If v is an eigenvector of matrix A with eigenvalue \u03bb, then the vector 2v will have a different eigenvalue than \u03bb.", "2107fe67-4ac3-426c-8295-12161b6bf185": "If a 4x4 matrix has 4 linearly independent eigenvectors, how many unique eigenvalues must it have?", "588ec20e-1604-4610-b9da-e5ceb922e164": "According to the passage, when does a data set typically exhibit a significant gap between two sets of values, indicating a natural choice for AI?", "4768e460-aab7-409c-9d69-4cc1de600683": "The passage mentions that a data set's principal components can be visualized as eigenvectors scaled by the square roots of the eigenvalues. What do the eigenvectors and eigenvalues represent in this context?", "9950ab03-9f17-41bd-b151-b07e9040e03c": "In the Street View transcription system example, what is the useful capability of the machine learning system that is mentioned?", "a0c1953f-570e-4350-a74e-2608cddbdbdb": "According to the context, what metric can we use to summarize the performance of a binary classifier with a single number instead of a curve?", "af9fce01-b78e-49d9-aa8f-1895576bef0a": "According to the passage, what was the purpose of the first additional task that the monkeys were trained on, after becoming skilled at reaching into the bin and retrieving food?", "2a204798-d30b-4a6b-bd6d-28badf475010": "What two types of neuronal activity did Romo and Schultz record while the monkeys performed the reaching tasks in the experiment described in the passage?", "4747e115-b46e-4784-bb3c-f8eb61aa5226": "What type of error results from an oracle model making predictions using the true distribution p(x,y)?", "120bff84-4aba-4a4c-b0bb-e10ef06e7c98": "As the number of training examples increases, how can the expected generalization error change?", "c4c1908a-ae6f-45ac-9da4-ab85e0fee2d1": "According to the context, why is it common practice to grow a large decision tree initially and then prune it back?", "d272347b-85ff-487c-aa15-818f1596cb69": "The context mentions a criterion that balances residual error against a measure of model complexity when pruning back an overgrown decision tree. What are these two factors that are balanced in the criterion?", "a9ead762-1f54-4989-bb39-9952b03d6c4f": "What is the key difference between the conditional distribution over the hidden variables in the mcRBM versus the mPoT model?", "e00ddaf3-b4ef-47b6-9053-8b00e9629eba": "What are the two components that make up the mPoT energy function as shown in equation 20.49?", "8a7daef5-cc40-445c-98d0-673bc3b2ed77": "What is one way we can approximate a distribution p(x) using a parametric distribution q(x|\u03b8)?", "74b875f5-cb3a-48d3-8548-57c0b7d9fe0e": "How can we determine the parameters \u03b8 for the distribution q(x|\u03b8) if we have a training set {xn} drawn from p(x) but do not know p(x) directly?", "f278f25a-90c8-426d-a8f2-bed9f5be5e1d": "What is the projected Bellman equation and how does it differ from the original Bellman equation?", "2cc54ca8-c398-4aad-9b86-b52ab22c3c2f": "What methods converge to the solution of the projected Bellman equation? Briefly explain one of them.", "8800185f-2c89-4d1e-b592-5f411433e38c": "According to the passage, which EDA operation helps improve classification accuracy the most as the dataset size increases?", "50eaa0c6-f41a-4849-902c-6a3b29b5a1de": "What does the x-axis of the plots in the passage show? How does this relate to the impact of EDA techniques on accuracy?", "b1cb3ca6-0614-409a-bdff-46780654e555": "What are the two main types of problems that require learning the probability distribution of the data?", "2728d688-d495-458e-89bd-814c1bb45e15": "True or False: In density estimation, the goal is to learn a function that can be interpreted as a probability density function or probability mass function over the space the examples were drawn from.", "61b3c6b9-a477-4ecf-9862-43e426f4fb2a": "According to the passage, what are the two key factors that make it possible to learn a single recurrent neural network model that can operate on sequences of varying lengths?", "c27d8639-bbca-4260-9517-059153e14667": "The passage mentions that learning a single shared model enables generalization to sequence lengths not seen during training. Why does parameter sharing help enable generalization to novel sequence lengths?", "9265e4f7-cc6d-458d-aced-c70d7387276c": "What are the 3 regularity conditions stated in the passage that need to hold for Leibniz's rule for differentiation under the integral sign to be applicable?", "5668b205-f98d-4d27-bc96-f56877bdc5fe": "What is the key identity described in the passage that enables a variety of Monte Carlo methods for approximately maximizing the likelihood of models with intractable partition functions?", "fd31154d-9266-4031-94bd-e6445d746cbc": "What enables us to learn nonlinear models as a function of x using efficient convex optimization techniques, according to the given information?", "9383ac74-1c8c-4f3e-8389-a7bbc31a9bcd": "What are the two main reasons the kernel trick is considered powerful, according to the passage?", "815b2b99-9570-4ab5-ab06-cb3f9a83e812": "What is the dimension of the manifold traced out by translating the MNIST image vertically?", "097cdbf6-c9d3-4368-a8e7-ce86a781d13d": "What is the dimension of the tangent space at each point along the 1D manifold formed by vertically translating the MNIST image?", "273c8e28-1e6e-4eec-bce4-ec9f281821e4": "True or false: If the number of hidden units in a neural network is smaller than the number of input or output units, the network can represent the most general possible linear transformations from inputs to outputs.", "69ad0ffd-88f3-4c09-9445-41461072633c": "Briefly explain the difference between describing a neural network architecture as an \"N-layer network\" versus a \"single-hidden-layer network\".", "15a51fce-fb5d-4a6f-924c-72ae2b28bcc4": "Based on the information provided, what is the form of the optimal distribution q(w)?", "229ae69d-198d-4b93-934d-8c5c0773aaf3": "According to the context, what property of L(q) allows us to place a lower bound on it?", "6b9445ce-78e9-4aae-bedc-f636f9c4a611": "According to the passage, what is one key property that distinguishes reinforcement learning from other approaches to approximately solving MDPs?", "61ba81bf-a33c-4b28-b724-0b12b911e004": "The passage states that Tesauro's backgammon player plays with exceptional skill even though it might make very bad decisions on certain board configurations. What does this suggest about how reinforcement learning agents can approximate optimal policies?", "fd6f82fb-92f9-4633-bf61-9f8cbbac52ae": "What is the gradient of the meta-learner with respect to the model parameters \u03b8 when k=1, according to the equations provided?", "030283a0-6998-4240-a85e-80a4e7a6e47c": "What term represents the gradient used in the Reptile meta-learning algorithm, according to the provided information?", "dca51571-0b27-40ac-9502-58fc76c320df": "What is the goal when learning a model p\u03b8(x, y) that captures the joint distribution of observed variable x and latent variable y in an unsupervised learning setting?", "ab7edc93-281d-4fb4-86b0-562c6d1cd6ed": "The negative log-likelihood for unsupervised learning with latent variables is typically intractable to directly optimize. What is one common approximation method discussed that provides an upper bound on the negative log-likelihood?", "6fef3887-55be-4529-bf4e-c985a3b22726": "What is the main advantage of using a factorized variational distribution q(Z) as in equation (10.5) compared to restricting q(Z) to a specific parametric family like a Gaussian?", "09150217-4a34-41bd-b61c-734f015baa50": "The context mentions that we can use nonlinear optimization techniques to find the optimal parameters for a Gaussian variational distribution q(Z). What is the objective function that is being optimized in this case?", "adda56a9-4e48-4520-91a2-2c504e26655d": "What is the main difference between the off-policy \u03bb-return algorithm for state values (12.4) and the off-policy \u03bb-return algorithm for action values discussed in this section?", "b8a291d7-5dcb-44d0-9b99-48b98a5a9441": "What is the TD error equation used in the Sarsa(\u03bb) algorithm for approximating action values?", "458e8667-ce64-4dd2-8b2d-5412c8ed22f8": "What is the formula for the softmax function? Explain the role of the exp function in the softmax formula.", "a6a50c51-76d6-4f9e-a0fe-85b5f38cd177": "Consider the log-likelihood function log P(y = 1; z) = log softmax(z). Explain how taking the log of the softmax allows the direct contribution of z_i to be seen in the cost function.", "4ee00e6c-cfe6-419e-97b2-a4e856476cc1": "What is the purpose of introducing the extra term in the NCE loss objective based on the proximal optimization method?", "54fc57b9-7c6a-4a11-83a2-929d5ddbe476": "How does the difference between the embeddings in the memory bank {v_j} and the current embeddings v_i change as the model is trained and the learned embeddings converge?", "c4abef4f-d18f-4f47-a453-457bd9310882": "According to the text, if we assume the posterior distribution is sharply peaked for large data sets, the re-estimation equations for ai take a simple form derived from which equation?", "e41c7656-ddfc-4788-9d76-f514ed3dffab": "The text states that the E-step equations are given by (12.54) and (12.55). What is the only modification made to the M-step equations compared to previously in the text?", "8ba83523-3806-49b3-8eb5-e4aa1ecae374": "What does the exploration bonus encourage the agent to do in the shortcut maze example?", "5c407ece-3343-474f-87c5-504d6220581b": "The text mentions two ways that the Dyna-Q+ agent was modified. What are these two modifications?", "dc77739c-17c9-402e-ae15-37dbd0f55bb2": "What is the key difference between batch gradient descent and stochastic gradient descent (SGD) in terms of the learning rate?", "4c07389f-5b91-45e0-a464-a7d10c3c9066": "True or False: In practice, it is common to decay the learning rate linearly until some iteration T, and then leave it constant after that.", "963e1149-3f44-4492-8cfd-c592073780d8": "What are two extensions of the original DQN algorithm that can improve performance?", "ec0909b0-c860-4a12-ad64-6c3bb9b3dbba": "What is the difference between 1-step TD learning targets and multi-step TD learning targets? How can multi-step TD targets help improve value estimation?", "824dc30d-b459-4e47-8b39-c28852cc798f": "What is the equation that allows us to calculate the posterior probability given both the X-ray and blood data, according to the naive Bayes model described?", "ad7da50b-b7e2-45ff-82c5-db0c4dcd2d67": "What assumption does the naive Bayes model make about the conditional independence of the inputs from the X-ray images (xI) and the blood data (xB)?", "c921f02d-0708-45b8-b6c1-caaa888fe8b7": "According to the text, what are two key advantages of online gradient descent over batch gradient descent methods?", "a967be37-2653-4325-9654-e0deee09e7e7": "The text mentions that nonlinear optimization algorithms and their application to neural network training are discussed in detail in which two sources?", "03391daf-2d49-466f-a018-a68a5494222d": "According to the passage, what are the three distinct types of problems concerning learning with imperfect experience that were often studied by researchers?", "9b76549f-66a1-49e8-9bde-2ec3b9277bd1": "The passage states that the three problems of integrating knowledge constraints, handling small imbalanced datasets, and stabilizing GAN training can all be reduced to the same underlying problem from a unified SE view. What is this underlying problem that connects the three problems?", "9e6e17fe-b465-4372-b0fd-468dcdc23496": "What technique involves moving x in small steps with the opposite sign of the derivative in order to reduce f(x)?", "25a3ed11-cf8b-4437-9eb9-8b22e2f18252": "What are points where f'(x) = 0 called?", "a01b8d01-9f89-4e0f-b85b-cef6cdfae42b": "Write down the Kalman filter prediction and update equations for the linear dynamical system described, starting from the general results (13.89) and (13.90). Show that these reduce to the independent data results (2.141) and (2.142).", "9cbfef8d-3b36-48c2-a324-0069507259cf": "Using the matrix inversion identity (C.7), show that the posterior distribution over the hidden states z in (13.89) and (13.90) reduces to the probabilistic PCA result (12.42) when A=0, \u0393=I, and \u03a3=\u03c32I.", "400ea077-0399-4a30-a4c6-0fd22218e706": "Assume we are fitting a multioutput neural network model and the targets have Gaussian noise with a fixed, known covariance matrix \u03a3. What error function should be minimized to find the maximum likelihood solution for the network weights w?", "b756de7a-16dd-46df-88e1-7582fbc257ac": "Now assume the covariance matrix \u03a3 is also unknown and must be estimated from the data along with the network weights w. What expression should be minimized to jointly find the maximum likelihood solutions for w and \u03a3? How does this contrast with the case of independent target variables?", "420ddcac-eac5-47ac-8d6c-46541137b8c9": "What general result does the passage state about factorized variational approximations?", "5fdeb37d-47b2-4168-b3bf-3bc789e5c8b2": "According to the passage, if we had minimized the reverse Kullback-Leibler divergence KL(p||q) instead, what alternative approximate inference framework would this correspond to?", "98594efc-0fe3-48d0-9829-264050e7b9ef": "What is the form of the update for the learner's parameters at time step t according to the information provided?", "63f7d9ca-7159-4199-9b7c-30350d622f7b": "Why does the meta-learner being modeled as an LSTM make sense according to the context?", "532ea152-7c66-44fe-ad81-b2ddb3debabd": "According to the passage, what are some key differences between Monte Carlo methods and dynamic programming (DP) for reinforcement learning?", "8d4e32cb-573f-4a92-b941-f23e097a2f52": "The passage mentions that Monte Carlo methods can be incremental in an episodic sense but not in an online, step-by-step sense. What does this mean?", "737844f8-1fb2-4684-9be8-72aae823b2d6": "According to the passage, what are two ways that updates can be distributed in Dyna-Q?", "f00fd922-a270-404c-9704-0485e3c741bf": "The passage mentions that sampling from the state or action space uniformly suffers from some of the same problems as exhaustive sweeps. What problem is this referring to?", "e7c5fcd0-18e6-4a2d-bf9a-b22eda2e742c": "Consider a model with 3 base classifiers (f1, f2, f3). If the residuals after fitting f1 are (1, 2, 3), and the residuals after fitting f2 are (0, 1, 2), what would be the targets used to train f3 according to the sequential minimization framework described in the passage?", "739c85bc-3fd5-4a9a-ab58-9280c522494d": "For the tree models A and B described in the passage, which model achieves a lower training error on the provided dataset? Explain your reasoning.", "9dbd4399-3981-457f-891b-961f6095985f": "How does the sparse autoencoder framework approximate maximum likelihood training of a generative model according to the passage?", "ae370d55-fbe7-49e7-a52e-771e4a3956ce": "What is the difference between the \"prior distribution\" Pmodel(h) and the way the word \"prior\" was previously used in the passage?", "3e354f60-e4ec-4cc7-88ba-8747e8a6075d": "What is the definition of the bias of an estimator?", "2742b62e-fd86-4a04-b07a-5530c32b4548": "If an estimator \u0398^ is unbiased, what must be true about E(\u0398^)?", "cbe5aaaa-cb93-412e-a814-367911796d86": "What are two key features of tabular, model-free TD methods that make them simple yet powerful for reinforcement learning?", "5c383b4f-5e89-43aa-93db-d457fadd9114": "According to the passage, what are three ways that TD methods are extended in later chapters to make them more powerful?", "e5bf50b3-2b84-4066-a194-e4efd1723e4c": "According to Dickinson's chapter in Stevens' Handbook of Experimental Psychology, what are the two key processes involved in the development of behavioral autonomy?", "e05300b6-638c-44a9-a5d7-2b6671aeb7f2": "What role do Dietterich and Buchanan suggest the critic plays in learning systems in their chapter in Adaptive Control of Ill-Defined Systems?", "d0535cf2-042b-494a-94f0-c1a126c3a4b4": "Which paper introduced the Glue benchmark for evaluating natural language understanding systems?", "e11e874d-7d93-4508-99b4-b4dc2ad0f665": "Extracting and Composing Robust Features with Denoising Autoencoders was published in which conference proceedings in 2008?", "a3a705a1-af62-4bfd-895c-e254902c3080": "What journal was the paper \"CONDENSATION \u2013 conditional density propagation for visual tracking\" published in?", "2d7d7039-ad80-40b8-a92d-d6b67418ea68": "Which authors discussed using variational approximation methods in Bayesian parameter estimation in their paper?", "1f135d34-e09b-49d0-9ab4-ca7653dba885": "In the graph shown in Figure 8.14, which variables do not have a link between them, indicating a partially constrained covariance matrix?", "20abec75-9551-4ddd-b427-210f948254db": "If the nodes in a linear-Gaussian graphical model represent multivariate Gaussian variables, how can we write the conditional distribution for node i?", "7e349320-12df-4e22-b25c-e11f913332a0": "According to the text, who proposed an approach for inferring parameters and structure of latent variable models using variational Bayesian methods?", "98407c9a-4a0a-4905-bcea-a6e9385a13d0": "The text mentions a paper by Bishop on using a fast procedure for retraining the multilayer perceptron. What journal was that paper published in?", "1af4f569-47ad-45a7-987f-191ee2eb6732": "What did the researchers find when composing an ensemble of models trained on high and low-resolution images compared to individual models?", "eb49d20f-17df-4304-b3dc-d315d480c981": "According to the passage, how can different downsampled images be viewed?", "3372f597-5423-457b-a264-3d0e76a6404b": "According to the passage, what is one problem with using basic image transformations like color augmentations for oversampling minority classes?", "fdb2633c-628a-4f1e-945d-4b357ff1453f": "The passage mentions several techniques that could be used for more intelligent oversampling compared to basic image transformations. Which technique does it state creates new images by extrapolating style from a foreign style or interpolating styles within the dataset?", "9d8882d7-8698-4e6e-8d0e-4437ce1d95f1": "According to the context, if we assume the target variables are independent conditional on x and w, with a shared noise precision \u03b2, what is the form of the conditional distribution of the target values?", "22283a3b-bc8a-416d-b346-07bc0955d523": "The context mentions that there is a natural pairing of the error function and the output activation function. In the regression case, what property does it state about the relationship between the error function E and ak?", "7c59f875-5dad-42db-a2d7-91dee51a828c": "What is the relationship between the values of \u03b5, \u03ben, yn, and tn if an is nonzero according to the constraints?", "40dc8b29-c752-418a-894c-abe6b0ba0fd3": "Which data points contribute to the predictions given by (7.64) and why?", "77748769-935b-4d6e-b048-f60534ce2f29": "What are the three terms present when using gradient descent with a learning rate of \u03b7 to approximate a new point x'?", "472c1529-a503-4e20-b6e9-955407770f61": "When the term g'Hg is positive, what is the formula for the optimal step size \u03b7 that decreases the Taylor series approximation of the function the most?", "d51e242c-d2d1-419e-85c7-32a164cc5ccb": "What methods have been adapted for learning value functions, according to the passage?", "05e5087f-eba7-4192-84a5-3851d0d6cdc5": "The passage states that the chapter features the semi-gradient Sarsa algorithm. What is semi-gradient Sarsa an extension of, according to the passage?", "eddbd658-d22e-4347-946f-cea5d3587a04": "Which paper discusses using generative adversarial networks (GANs) for image generation?", "94aa4931-0209-4828-8d41-bbdfa1eabc57": "The paper \"Robustness gym: Unifying the nlp evaluation landscape\" proposes what kind of new resource for evaluating natural language processing models?", "5c0ced66-0205-476d-9921-fc707cbf9d3e": "According to the passage, what is one of the primary causes of adversarial examples in neural networks?", "b5f808af-da9d-4672-a474-bf6feb88cd46": "The passage states that adversarial training can help introduce a \"local constancy prior\" into supervised neural nets. What does this mean?", "9b80ede0-fa27-423d-9bc9-b306cbe0d5c6": "Using the results (7.94) and (7.95), derive an expression for the marginal likelihood (7.85) in the form given by (7.96), where \u03bb(\u03b1n) and the sparsity and quality factors are as defined in (7.97), (7.98) and (7.99).", "dc24284a-a41a-4163-8edd-3f7ac4c59ab2": "Explain how taking the second derivative of the log marginal likelihood (7.97) for the regression RVM with respect to the hyperparameter \u03b1i leads to the stationary point given by (7.101), and why this corresponds to a maximum of the marginal likelihood.", "d0755f5c-2b7e-45e6-ac52-a192471eea79": "According to the description, what are the two actions the agent can take in the golf example? What is the purpose of considering just the choice of club and not how to aim and swing?", "3d7e0dfd-a32b-4e87-b37b-19c2233a2726": "The text mentions a \"small backup diagram rooted at the state and considering each possible action.\" Draw a simple backup diagram with just two action nodes and explain how this helps determine the value v\u03c0(s) of a state under policy \u03c0.", "a0e64c1a-6b26-4c47-b32f-76acc2eecebe": "What is the main practical consequence of the new off-policy methods PTD(\u03bb) and PQ(\u03bb) that has not yet been established?", "bbb8acfb-fd8c-4529-9d3f-0a411af18483": "If \u03bb < 1, the deadly triad applies to PTD(\u03bb) and PQ(\u03bb). What are the 3 components of the deadly triad that can cause the parameter vector to diverge to infinity with these algorithms?", "3a999c18-ff6f-4463-897f-278856f93e01": "What is a common approach to trade off data staleness for cheaper compute when computing embeddings for a large number of negative samples?", "ea66aaff-f748-4809-88ca-2e20a514fb4a": "Instance contrastive learning considers each instance as a distinct class of its own. How can we approximate training a softmax layer with as many heads as there are samples in the dataset?", "527d3703-dd90-45de-bcff-d93ff45c20c2": "What is the expression obtained for the mixing coefficient \u03b1k for the kth component of the Gaussian mixture model?", "19641093-ee8a-423d-b0fc-4539872b2e91": "Briefly explain the iterative scheme suggested by the equations (9.17), (9.19) and (9.22) to find a solution to the maximum likelihood problem for the Gaussian mixture model. What are the two key steps involved?", "52b7b20a-bed9-4d79-891c-25d17f0d7a83": "According to the passage, why do small values of M give relatively large values of the test set error?", "2930207b-5e75-4083-be01-36244052a11e": "The passage states that for M=9, the training set error goes to zero. What does this tell us about the model with M=9, and why does this lead to a large test set error?", "9728edfc-8b6d-49a7-8fd8-af1fd0c34fb7": "According to the passage, how does decreasing epsilon (\u03b5) affect the complexity and predictive performance of the generative model?", "e38e9899-5e4d-4daf-bcc1-76c43eb38a4f": "The passage mentions an \"elbow point\" beyond which the number of correlations selected explodes. What does this elbow point represent in terms of balancing predictive performance and computation time?", "accb0ef2-9094-42ea-92af-110b84c4eeea": "What are the two key components of the reinforcement signal \u03b4t for TD state-value learning?", "ce3b145b-bf15-4707-8ded-b7d2446477d4": "When does the reinforcement signal \u03b4t provide 'pure' primary vs 'pure' conditioned reinforcement?", "9d13f1ef-8072-4e42-999f-5a964f338cbe": "What are the two common choices for parametrizing the conditional distribution over the visible units in a Gaussian-Bernoulli RBM?", "df85e9b1-fbdd-4a8d-a457-18c863ac0d13": "In the precision formulation of a Gaussian-Bernoulli RBM presented in the text, what is the form of the conditional distribution p(v|h)?", "af164b64-053a-448b-8456-435a13a3d20e": "According to the passage, why do Monte Carlo control methods not bootstrap?", "97c451b7-16e2-4cc5-b9dc-20835bfdc20d": "What are the two interacting processes involved in generalized policy iteration (GPI) as discussed in the passage?", "d78c21aa-530a-4d6a-815c-cd65abfac2ff": "What book discusses biological sequence analysis?", "68ba66c9-2083-4b00-abf5-0bc67e7f4227": "Which author proposed using the triangle inequality to accelerate k-means?", "729ce140-3a97-4d1b-9a17-9b1cb9a01379": "In a factor graph, what do the circular nodes represent?", "b3f33b1e-55f9-4ca6-a71b-cf5cbec078c4": "True or False: In a factor graph, an edge between a variable node and factor node means that the factor's scope includes that variable.", "c0a21f9f-0d42-424f-b851-57f1c6ac87df": "What are two weaknesses of Parzen window density estimation that are mentioned in the passage?", "388a92fc-64a7-4686-a75a-e8bff4244b90": "According to the passage, how do nearest-neighbor methods for density estimation address the issue of choosing the kernel width parameter h in Parzen window density estimation?", "5b62c819-a876-43a2-88dd-b2917dd6752f": "According to the passage, what does each binary feature hi represent in the distributed representation?", "6a53e603-7fe0-4e84-93c6-357e0371936b": "The passage states that \"each line represents the decision boundary for one hi.\" What do the arrows pointing to the h'i side of the boundary represent?", "780438c7-cc26-486e-8cf8-4c536db65d23": "Using the definition \u03be = m^(1/2)(\u03b8 - \u03b80), show that as m \u2192 \u221e, the von Mises distribution tends to a Gaussian distribution. You will need to use the Taylor expansion of the cosine function.", "38a1ecdc-2023-4a44-a767-ede33cc27f28": "Prove that the maximum of the von Mises distribution occurs at \u03b8 = \u03b80, and the minimum occurs at \u03b8 = \u03b80 + \u03c0 (mod 2\u03c0). You will need to compute the first and second derivatives of the von Mises distribution (2.179) and use the fact that I0(m) > 0 for m > 0.", "e9a846f3-87b9-4b20-9638-96edaa46a79a": "In the tic-tac-toe example, how does the reinforcement learning agent achieve effects similar to planning and lookahead without using a model of the opponent or explicit search?", "c199a1e0-129d-4710-93e9-85764c4f4251": "According to the passage, how does reinforcement learning apply in cases without an external adversary and in problems that do not break down into discrete episodes?", "1432b6bf-cbe6-4a7f-af96-719c26741db2": "Which 2014 paper discusses training deep convolutional networks for image super-resolution?", "49b41bd8-a0c1-4433-ae7d-2c661ee277c8": "Which 2017 paper introduces StackGAN, a method to generate photo-realistic images from text using stacked generative adversarial networks?", "91f38989-4010-4bd4-bc17-718912f18646": "According to the Littman, Dean, and Kaelbling paper, what is one of the challenges associated with solving Markov decision problems?", "a7767575-fa10-4c0b-82c7-6ffecbd797ec": "The Ljung paper discusses Monte Carlo strategies. What type of computing do Monte Carlo strategies apply to?", "f31508f1-ba47-4c88-85b3-faca9a539c9a": "What technique did Mnih et al. use to make Q-learning more similar to supervised learning and improve stability?", "05b383db-6f8e-4591-b43a-23a9ac046531": "What were the two modifications Mnih et al. made to the standard Q-learning update rule to improve stability?", "ce99552a-7fb4-40fe-9562-da6c448d12e8": "According to the passage, when designing a real-world product or service, what are some factors you must weigh against the cost of collecting more data?", "4d3f2674-b98b-4427-a087-938130596a31": "The passage states that in an academic setting, you typically have some estimate of the error rate that can be achieved based on what?", "b937d5a2-d494-4108-93ed-76def3594e02": "Consider a node V in a computational graph G that may be reached from z through multiple paths. How do we calculate the gradient for V according to the given information?", "277182d9-02d4-4187-980c-11d92404521b": "True or False: The get_operation() function returns a list of all the variables that are computed based on V in the computational graph G.", "3762fa01-5c0f-46aa-994b-df2a2c953905": "In the 1000-state random walk example, how many neighboring states can a transition go to from state 500?", "d79c4826-04ef-43db-9e7c-3e2752a19450": "What is an example of a gradient, r\u02c6v(St,wt), for the state aggregation method in the 1000-state random walk task?", "6ce8b746-6d42-4d8c-a6c0-b3b6fbc359e2": "What strategy did Desjardins et al. use to track the partition function of an RBM throughout the training process?", "df73045c-661d-4ea3-b9ec-c0711e9e9641": "What two main challenges involved in training and using generative models are mentioned at the end of the passage?", "3aeb1812-8aac-4411-baf5-b3ee7e3b634f": "True or false: In a deep convolutional network, units in the deeper layers interact with the entire input image.", "c4723177-dacf-4199-940e-1b7618db68d3": "Fill in the blank: ___________ refers to using the same parameter for more than one function in a model. This allows a convolutional network to efficiently describe complicated interactions between variables.", "36bd9252-fdef-46fb-a7da-f7ad860e6466": "What is the Fisher criterion defined as?", "40259f63-7955-4005-a0c2-adf57058dbfc": "If the within-class covariance matrix SW is proportional to the unit matrix, what is w proportional to according to the result in equation (4.30)?", "e6067617-bf4b-444b-8872-12d4bf023813": "Which 2018 ACL paper explores using universal language model fine-tuning for text classification?", "30c797b3-5dfb-4945-9171-4a0d44607b76": "What 2017 CoRR paper introduces discourse-based objectives for unsupervised sentence representation learning?", "76a206fd-dd81-41f6-be2a-a8bae110bfa2": "What algorithm can be used to efficiently solve the inference problem of determining the local posterior marginals for the latent variables in the linear dynamical system model?", "3b9f9996-8cb6-4b2e-956a-36614ac4a3ce": "What equations arise from applying the sum-product algorithm to perform inference in the linear dynamical system model, enabling real-time predictions of the next latent state zn and next observation xn given past observations x1,...xn-1?", "258a5500-96e3-42df-81d9-391a7be71cf6": "What are the two key differences between the symbol-to-symbol and symbol-to-number approaches described in the passage?", "b5908726-33c8-4704-8093-f6183d6f4865": "According to the passage, how does the backpropagation algorithm compute the gradient with respect to an ancestor node in the computational graph?", "12c52167-f9d8-46a3-b5ab-da772b840afb": "If an object is occluded from an agent's view, how might this impact the agent's ability to determine the full state of its environment?", "426069e3-a6ec-40a0-88eb-dc11d59da353": "The text mentions that parametric function approximation can help deal with partial observability. Briefly explain how the choice of parameterization can allow learning value functions that do not depend on unobservable state variables.", "4d6d9357-8316-4b34-8695-237723178b86": "Griffith (1972) compared three different machine learning procedures for playing checkers. What were the three procedures he evaluated?", "9cde0f84-ab62-4d22-8277-1dabe39ae4ed": "Gullapalli (1990) proposed an algorithm for reinforcment learning of real-valued functions. What was the name of this stochastic reinforcement algorithm?", "df400069-a2b0-49c0-835a-40bbc9e54d7f": "What is the probability formula for the final, k-th state of a multinoulli distribution?", "edfbb397-a04e-4479-936e-f50e89a0eb1d": "True or False: The Bernoulli and multinoulli distributions can describe any distribution over their domain because they are particularly powerful distributions.", "8c557f22-75fc-4297-b419-2fb5a9066d5e": "Based on the initial configuration shown in plot (a), what are the two Gaussian components represented by?", "f73c7bb8-40b2-4829-abf6-a8116a242d93": "How does the mean of the blue Gaussian change after the first M step, as shown in plot (c)?", "afb99df3-b317-4ef0-bb41-9619adc11cc8": "In the example discussed, what are two pieces of information that can be determined from the data distribution P, but not from the MDP alone?", "6d37adae-7e13-4593-9a13-7f0b0139f015": "The text mentions that the Bayes Error is \"literally not a function of the data.\" Explain why this is the case, using the simple two-MDP example provided.", "5a99f8ef-1674-49a2-af9f-2b36b3182da2": "Based on the equations provided, what is the bias of the sample variance estimator s^2?", "d5592b0a-a05e-4312-b492-f00db569f394": "What are the two estimators discussed in the context information, and how do they differ in terms of bias?", "bd35e1cf-0160-4eb6-ab01-35ac3a95a0d8": "According to the text, who first proposed using Monte Carlo methods to find numerical solutions to Dirichlet problems?", "5dbe1f96-23e6-422c-9f5b-d5b1932400bf": "The text mentions that Widrow, Gupta and Maitra used an example involving blackjack in their work on reinforcement learning. What was the key contribution of their work as it relates to Monte Carlo methods and reinforcement learning?", "4a6c3659-3990-4d55-bc1e-14becc96ee48": "What is meant by the term \"synaptic efficacy\"?", "4a9cafbf-e61c-4788-ada5-85566e985851": "What are some effects that neuromodulators can have in the brain?", "429cf46b-60fd-45f3-a052-81d7bfcbd7ae": "According to the passage, how can we represent the responsibilities \u03b3(znk) for each data point xn in the mixture model?", "bfbd77c3-bd07-499b-bbc6-3c0206d51592": "The passage states that a data point xn for which \u03b3(zn1) = 1 will be colored red. What color will a data point xn be if \u03b3(zn2) = 0.8 and \u03b3(zn3) = 0.2?", "155e07d6-6b61-44f4-b2ef-e661690afaaf": "The hierarchy of word categories shown has how many levels?", "14a9cbb0-88d6-40de-add1-17339e492912": "If a node in the tree is indexed (1,1,0), what words does it contain?", "786eada4-d878-49f4-aafd-963eb48ef2b5": "In the case where there is a fully connected graph with each node having all lower numbered nodes as parents, how many parameters wij are there in total?", "8e5b7048-9468-4c3e-a2e5-5015b3b46889": "What is the form of the covariance matrix when there are no parameters wij, and how many parameters bi and vi are there?", "7e5b7e3e-7a49-4d92-a021-7ef9d4d4d1cf": "What property must the resulting cliques satisfy after the triangulation step when forming a junction tree?", "fbf800a1-ba8b-4c59-bbfc-5c6ada83df4d": "What is the main idea that allows the junction tree algorithm to efficiently compute marginals and conditionals without working directly with the full joint distribution?", "ee445cc0-ce08-4df3-8874-1de9c8a0c619": "Which book provides a useful overview of recent developments in reinforcement learning?", "7e48a9d7-7cc3-493b-aaea-be3cda45d020": "Name one of the 3 special issues of the journal Machine Learning that focused on reinforcement learning.", "cf5b73fb-b3c7-4b6c-9eb2-739019e3550d": "What cost function can be used to train generative moment matching networks? How does it measure the error between distributions?", "ce1dda99-57f4-4e9f-95e7-0f3f0373ae67": "The context mentions two limitations of trying to match all statistical moments of a distribution. What are those two limitations?", "372089f8-f379-426b-8834-186a8b21047d": "What are two ways that a cascade classifier can achieve high capacity?", "e16efbba-e0c5-4b15-bced-6551ce7e9b36": "What machine learning model did Viola and Jones use in their cascade to implement a fast and robust face detector?", "6aa6b2db-ef5b-41e1-abef-8f4ca1a18462": "What method did Narendra and Wheeler study for adjusting learning automaton action probabilities?", "8bed9f19-71cb-451e-ba80-93e11bdfe54c": "What are two examples of fields where efficient off-policy learning is an important challenge?", "a0e02591-66af-4be4-88b7-a9cbf3547232": "What is the definition of a perfect map in regards to a graph and distribution?", "5afb70c5-9892-4f49-86b0-97748d83c050": "True or False: The set of distributions that have directed graph perfect maps is the same as the set of distributions that have undirected graph perfect maps. Explain your answer.", "97f5bd85-72f6-4579-b530-0ee57406e8c0": "Consider a learning machine with kernel k(x,x') = f(x)f(x'). Show that the solution found by this machine will always be proportional to f(x).", "ea4cb600-f44d-4b04-8ded-2353bf78f9de": "Let k(A,B) be the kernel function defined on sets A and B that is given by k(A,B) = \u03a3_{U\u2286A\u2229B} 1. Express this kernel as an inner product between infinite dimensional feature vectors \u03c6(A) and \u03c6(B).", "47d2313a-5513-4dbd-81be-2f51969a17a6": "According to the information provided, statistical inference can be viewed as what kind of procedure?", "0a9b15e3-19f9-4bf6-bb67-704d6f128614": "What theorem does the learning objective of minimizing the difference between input and output information correspond to, according to the context?", "59ff49c8-b38d-4a6d-a258-207de31bd5b8": "What are some examples of how self-supervised learning obtains supervisory signals from the data itself?", "b1c70589-cc33-4fa3-be50-272eb6513c29": "According to the passage, what are some promising new directions for energy-based models that the authors highlight?", "2cd5041f-48aa-4cb0-961a-905ebea57f44": "According to the text, what is the definition of the parameter w?", "4afb1bfe-8dea-48fa-83d6-b844df4f0af6": "How does the weight w_i associated with feature x_i affect the prediction jg? Explain what happens when w_i is positive, negative, zero, or large.", "3a86ba84-2cd1-402b-ac9d-2ed9878a22bb": "What is the title of the paper by Bishop and Nabney that discusses modelling conditional probability distributions for periodic variables?", "07c2bcfc-71cb-4499-9649-b700c6134b74": "Name one of the editors of the conference proceedings in which Bishop, Spiegelhalter and Winn published their paper on the VIBES variational inference engine for Bayesian networks.", "4c6fa926-8da6-46d7-bade-de20f06f4201": "What heuristic can help avoid the most serious consequences of the cliff structure in the cost function for recurrent neural networks?", "9bb2ffb2-9ba1-4b6c-9f20-0a06d3c3656e": "True or False: Gradient clipping reduces the proposed step size when traditional gradient descent would make a very large step. This makes it less likely to go outside the region where the gradient indicates the direction of approximately steepest descent.", "f514f820-e17a-4ab8-952f-910f73870816": "According to the example, what is one reason the Bellman error (BE) cannot be estimated from the data alone?", "478f7e50-f6ed-4779-8b57-6fb237532c6d": "In the simple example with two MDPs, what are the two key differences between the MDP on the left versus the one on the right?", "4a43bc73-dc6e-446b-9ec3-ff36bb7e6e7a": "What policy schedules DRAM commands to optimize average memory access latency?", "a4aef956-1ad4-4bcd-91fc-798e8698c5d8": "What are the two criteria used by the FR-FCFS policy to prioritize DRAM commands?", "dbc7bb9a-5da2-4e44-bfce-522dd3472c9c": "What method did Platt propose to enable SVMs to generate probabilistic predictions of the class label t for new inputs x?", "aed1a17c-7e03-47ea-8e22-a729b9279d0c": "What is the form of the conditional probability that is assumed for generating probabilistic predictions from an SVM, according to Platt's method?", "71cecd08-d37c-4977-be13-03211f96228c": "In the AdaBoost algorithm, how are the weighting coefficients w(m) n updated in each iteration m?", "1efb63c8-1ced-4847-a69e-3af97ae7d107": "What is the final prediction model in the AdaBoost algorithm composed of?", "b4db5607-0ad8-43cf-99e8-ec2b92d881ba": "What method proposes moving in the direction of the negative gradient in order to decrease the value of a function f?", "e67eacff-e6f5-4a20-a42a-a9b7352ec9dd": "Fill in the blanks: The update rule for steepest descent is x_{t+1} = x_t - ____ Vf(x_t), where ____ is the learning rate that determines the size of the step.", "a6898346-1658-48b2-a3fe-0ddf94a0e6ed": "What are the two major differences between Monte Carlo methods and DP methods for reinforcement learning?", "195db4a0-f322-47f6-a6f6-c8cf4b17c329": "According to the text, why is weighted importance sampling preferred over ordinary importance sampling in practice?", "f112183b-136c-4f04-8c6f-65214ebb7bb7": "John Holland introduced an important reinforcement learning system called classifier systems. What was a key component of Holland's classifier systems that enabled credit assignment?", "6a1541ff-50df-43e0-ae6b-f511a141a332": "The text mentions Harry Klopf as being responsible for reviving trial-and-error approaches to reinforcement learning within AI. What distinction is made in the passage between reinforcement learning for game playing versus reinforcement learning in the context of game theory?", "7c4fd33e-8db7-479f-a7fd-9a5f4ba3f98c": "What term refers to the process of connecting new stimuli to innate reflexes, as demonstrated in Pavlov's experiments with dogs salivating to a metronome sound that had been paired with food?", "be78bc4c-191b-4d5e-aaea-b8db3cd8906f": "According to the passage, what reasoning did Pavlov give to explain why it is adaptive for animals to form conditioned responses to stimuli associated with things that bring \"immediate benefit or harm\" even if the associated stimulus itself does not directly cause the benefit or harm?", "1b2cb228-0849-4f99-957d-26b2a7b871d6": "What is the relationship between n-step returns and the full return?", "66032faf-3af4-47f7-9766-ac255e2b7006": "When can an algorithm first use the n-step return in its computations?", "348c175d-2cb9-4b2f-8edf-9bc48d8f8a86": "What is the recursion for the f\u2192z messages in the Viterbi algorithm, according to the provided information?", "04150c8e-d5c3-4227-8e14-e863e1180577": "How are the f\u2192z messages initialized in the Viterbi algorithm, according to the provided information?", "7886774a-e296-44f0-adc3-5cf87d52a2e3": "What does the WGAN algorithm attempt to do before each generator update (line 10 in Algorithm 1)?", "40a9253a-c50e-4d89-9936-6bbb5e65ed53": "According to the passage, what is the first time in GAN literature that the loss of the GAN shows properties of convergence?", "3b37baf8-d154-472b-8426-25c485aec48d": "Using the expressions provided, derive the formula for N(D,M) in terms of n(D,m). Show the steps for your derivation.", "ab32b79c-2b63-4c31-93aa-df7ff563001d": "Prove by induction that N(D,M) = \u03a3(m=0 to M) (D+m-1)!/m!(D-1)!. Start by verifying the result for M=0 and arbitrary D\u22651. Then assume it is true for some M and use this to show it also holds for M+1.", "e54df5d1-0039-4a06-8d7e-00a5d9849299": "What conference was the paper by Zaidan and Eisner presented at?", "db26308e-d23b-47ea-8e2f-8e17e92e431d": "According to the summary, what approach did Zhao et al. take to discover truth from conflicting sources for data integration?", "6a0e72c2-e564-4fc9-9b4f-ec3d87251f90": "What is the relationship between the Kantorovich-Rubinstein duality and the Wasserstein distance W(Pr, P\u03b8)?", "12c3a19c-1a69-49d0-a4f5-85e81210c428": "How does using the set of all measurable functions bounded between -1 and 1, compared to using the set of 1-Lipschitz functions, change the topology and regularity of dF(Pr, P\u03b8) as a loss function?", "4d100e21-9fbf-4f65-9a62-71bf668b0d43": "According to the passage, what is the conjugate prior for the mean \u03bc of a Gaussian variable x?", "5b868f4c-783d-4df3-b422-051b067c84b6": "The passage mentions that the joint distribution over x and \u03bc is Gaussian. What type of graphical model does this correspond to?", "0f2ba4da-3aa5-4623-b66c-7ba95bb4c1b6": "According to the passage, why does overfitting occur when using maximum likelihood estimation?", "299aefed-e1e9-4f4f-a346-fdabe25a1595": "The passage states that a Bayesian approach can avoid the overfitting problem discussed in Section 3.4. Can you explain why a Bayesian approach does not suffer from overfitting compared to maximum likelihood estimation?", "dc8538e1-f356-4f09-9e5c-2965780ff248": "According to the given information, if we have a binary classification problem where the target variable t denotes two classes C1 and C2, what activation function would we use for the output unit of a neural network model?", "9455dfbc-ec36-4c07-b52d-9dea71fd7a66": "The given information discusses conditional probability distributions for target variables in a binary classification setting. What type of distribution is used to model the conditional distribution of binary targets t given inputs x?", "a98d2dcb-b3c9-4422-bd42-1da4424e1546": "Derive the expression for the log likelihood function for the regression model described, where the noise \u03b5 is drawn from the gamma distribution (2.293). Your expression should be in terms of the variables w, \u03c32, X, and t.", "fbf00f1a-19a8-4029-a386-2aaf755c7764": "Show that the gamma distribution (2.293) reduces to a Gaussian distribution when q=2. Your answer should demonstrate this by manipulating the gamma distribution equation.", "6ecf7782-0638-4f2a-a48c-67d1a717ec15": "What algorithm results from replacing the summations in the sum-product algorithm with maximizations?", "140c0700-1f39-4cfa-a0bd-f985d16c6b10": "According to the passage, why is it convenient to work with the logarithm of the joint distribution rather than the actual probabilities?", "f45249fa-259d-47d0-852f-f6f0a79a1236": "According to the given information, parameter nodes in a directed graphical model never have parents. What implication does this have regarding paths through parameter nodes?", "f264ace3-ccde-4cb8-a8d0-1531b7b2c388": "The concept of i.i.d. (independent identically distributed) data is provided as an example of what in the context of graphical models?", "ed4bac9e-bafa-4ba5-b102-88beea2202ec": "What are two metrics that can be used instead of accuracy to better characterize the performance of a classifier for an imbalanced dataset?", "bad1f1a2-9511-43ab-84e2-75e7b8e8c828": "What is the difference between precision and recall? Provide an example to illustrate the difference.", "b475ff86-086c-4506-bdbd-f26fb87bd581": "According to the context, why does the Newton-Raphson formula give the exact solution in one step when applied to the quadratic error function?", "49de6290-b46f-4fa5-8ec9-e7706e87ab2f": "The context states that the Hessian matrix H for the cross-entropy error function is positive definite. What does this imply about the nature of the error function?", "25b35d95-b0dc-411e-b757-ac06a2fbf9a5": "Peng's PhD thesis focused on which approach for efficient learning and control?", "5a001d84-c660-4583-aa27-56afbb119cea": "Perkins and Pendrith published research on the existence of fixed points for which two reinforcement learning algorithms?", "fadc6446-0b36-4f10-9282-5715b1943939": "What is the role of the experience function f\u03c6 in the equation provided? How are its parameters \u03c6 learned?", "be5d8361-3359-4e07-9efb-3d116f944faf": "The context shows that with certain assumptions, the optimization objective relates closely to generative adversarial networks (GANs). What are those key assumptions? How does the resulting objective recover the vanilla GAN algorithm?", "ff6b4bac-9d13-4c32-bbd9-c712c34b737a": "How does the factorized approximation in the variational Gaussian mixture model affect the estimated variance and model evidence compared to the true posterior distribution? Explain whether this tends to cause under-estimation or over-estimation of the optimal number of mixture components.", "302807e4-4497-40f8-9671-7020ff6055b0": "Derive the variational update equations for q(w), q(\u03b1), and q(\u03b2) under a factorized variational distribution with gamma hyperprior over \u03b2. How does the inclusion of the gamma hyperprior modify the lower bound expression compared to standard Bayesian linear regression?", "bf52d035-c16d-400e-8fad-603a07f21704": "What method did Mahmood et al. propose in 2012 to enable tuning-free step-size adaptation for reinforcement learning algorithms?", "a5d5db75-c5b9-476f-8812-58be7cd0dcd3": "What technique did Mahmood et al. develop to enable multi-step off-policy learning without needing to compute importance sampling ratios?", "8dd0f0d5-88f1-44e2-8f50-92d169b60aa3": "True or false: The Hessian matrix A is guaranteed to be positive definite for any value of aN. Explain your reasoning.", "5fc7c43a-34af-489d-b069-68c3804b7b28": "Consider the Newton-Raphson update equation for aN given in (4.92). How can we determine when the iterations have converged to the mode a*N?", "575691fa-26cd-426c-b0b5-3c06cb0051e5": "According to Breiman, what machine learning algorithm does he discuss in the referenced paper that is useful for classification and regression problems?", "d00ab06d-a821-4325-96b3-0743688d7f35": "What journal published the paper by I. and Tennenholtz discussing an algorithm for near-optimal reinforcement learning?", "fd22ae41-cc50-42f0-804e-30bee95a4237": "According to the passage, quantum mechanics describes the dynamics of subatomic particles as being:", "54dc556d-2a14-48da-9cc1-e450ef9503b3": "Deterministic", "4d399977-2069-47b6-b40b-88ea6a96d535": "Probabilistic", "a01bcdb4-324e-4a6a-abae-ebd40158b593": "Observable", "4845b794-6b75-4bb1-a42f-422a5c051ace": "Mathematical", "7e390e11-167e-4867-b8bd-22e30b1f2ab9": "Which of the following is NOT listed as a possible source of uncertainty?", "fbf635ca-8df2-4289-94b8-cf00062e47ce": "Inherent stochasticity", "f09f661f-41f6-4a45-acbd-7073fd0027c9": "Complete observability", "bb40f523-43ac-480f-927f-128729577bed": "Incomplete observability", "711a9887-9f0f-49be-9448-88253e613001": "Interpretations of quantum mechanics", "319b93f8-458a-4987-a723-d5e143cc77f3": "What is the contractive autoencoder penalty Q(h) according to the equations shown?", "34bb8f73-4615-4442-811c-a760c61a1ad5": "How does the contractive autoencoder relate to the denoising autoencoder, according to Alain and Bengio's findings?", "1668ff77-8021-4c74-9603-67c4de92fd88": "What is the expression for the bias value w0 according to equation (4.34)?", "fb4f1ab4-6890-46a0-be63-dd91d2a03c7d": "How is the generalization of the within-class covariance matrix to K classes defined, according to the information provided?", "c8bc4982-aaa5-42da-92b5-5ffb79d126ff": "According to the context, why is parameter redundancy due to multimodality not a major concern when using maximum likelihood estimation?", "52fd8689-e0db-455b-982e-b130acdef00e": "The context mentions adding a term ln K! to the variational lower bound when comparing different values of K. What is the purpose of adding this term?", "dc6fa001-23f2-4c37-9e1a-477a3de1089f": "What is the distribution used to model the input v given the hidden units h in the binary sparse coding model?", "d8069233-fbd4-443c-b30a-96e30311eb03": "What are two properties of the binary sparse coding model that we use throughout the derivations but do not explicitly highlight?", "b77953f2-d5a2-4afb-a438-1656e10ae7f4": "If x = [x1, x2, x3, x4, x5] is a 5-element vector with each element in R, what is the appropriate way to write x?", "38902ce3-1e44-4b97-9412-31cfe5e61c00": "Consider the vector w = [w1, w2, w3, w4, w5, w6]. If we want to index the elements w2, w4, and w6, what is the proper notation?", "fe6db2c6-b22f-4ab4-97f1-9e3fad49a85b": "According to the passage, the standard equation framework allows for combining diverse experience to learn models of interest. What are two benefits of the standard equation's simplicity and generality that are mentioned?", "6fe7ed97-1f64-4ea6-895c-31ab839a76e4": "The passage states that the standard equation framework subsumes a wide range of known algorithms in a unified manner. Name two existing algorithms or learning approaches that are special cases of the standard equation framework.", "2698f949-148f-47a6-892e-e6cef43218ee": "What is the primary disadvantage of using a nonparametric encoder like sparse coding versus a parametric autoencoder according to the passage?", "5ba2a02f-204d-479c-866d-a6afefab081d": "According to the passage, when did Goodfellow et al. show that a variant of sparse coding generalizes better than other feature extractors?", "3a68210e-3ee7-41b0-814f-5b2f0735300c": "According to the passage, why is it generally not feasible to perform the immense computation of considering all possible actions, rewards, and probabilities over a long horizon?", "957887d3-b0aa-4461-ac7b-99edea3e5d4f": "The passage mentions that using approximate reinforcement learning methods may allow one to approach the optimal solution to the bandit problem. What are some examples of approximate reinforcement learning methods that could potentially be applied?", "81eb7e18-6868-43c3-99ce-cf89bc10c12d": "What is the form of the marginal likelihood for the Gaussian prior model with a gamma hyperprior over \u03b1?", "bca81f9c-c89d-47e3-93eb-4f3a00d7ccd3": "After introducing a variational distribution q(w,\u03b1), what two quantities does the lower bound L(q) decompose into?", "e076148a-c82d-45fb-9546-820f20cefd8c": "What are some of the most popular optimization algorithms used for training deep learning models according to the text?", "9c12d506-9b2a-4125-8042-2ca4e4d7899d": "The text mentions that the choice of optimization algorithm often depends on what factor, according to the authors?", "dd664ed8-a6eb-4d68-8663-398a42f4fae9": "What is the advantage of rearranging equation 18.38 into the form shown in equation 18.39?", "5ddddb72-28bc-4dfd-b72a-7b832fd42897": "If you know the ratio of two partition functions r = Z(M4)/Z(M8), as well as the actual value of one of them, say Z(M4), how can you compute the value of the other partition function Z(M8)?", "d0beee43-aedf-4ccc-b7a1-1c95572d2ec8": "What is the purpose of the Lagrange multiplier \u03b1 in the generalized Lagrange function L(\u03b8,\u03b1;X,y)?", "5a2d05c5-0d12-4b87-8f4d-919d9b65c8c4": "True or False: The optimal value \u03b1* will encourage \u2225\u03b8\u2225 to shrink, but not so strongly that it becomes less than the constant k.", "c628a0c8-8c1d-4a6d-a75d-4ed850b97069": "According to the text, what are some benefits of the Structural Experience approach compared to previous machine learning practices?", "8f09a418-e87b-4fdd-b0ae-79e9e0fd6367": "The text mentions that it is still an open question how to formulate certain types of experience as an \"experience function\". What is one example given of a type of experience that poses this challenge?", "013f8a3e-d65d-4a0b-b609-55ef6a4a069f": "What is underflow in numerical computation?", "54e3b4fa-ef06-41ec-b72b-855cf362f468": "The softmax function is commonly used for what type of prediction task?", "7ae710f3-305e-423a-a039-b25e15df6d88": "According to the passage, what was a caveat of the testing procedure used to compare the ResNet-50 (4x) supervised and self-supervised models?", "ca1b02a9-900d-4b4d-8c28-e9c00c83b2e5": "The passage states that with a narrower ResNet-50 architecture, supervised learning showed a clear advantage over self-supervised learning. On what datasets did the supervised ResNet-50 model outperform the self-supervised model?", "9d8a15e3-8e29-41ab-bcf0-eefb379dd213": "What is the corruption process C(x|x) used for in training a denoising autoencoder?", "1fc926af-119c-4135-b746-1e919368c9ee": "How does a denoising autoencoder learn the reconstruction distribution p(x|z)? Describe the training procedure.", "abb3b7ed-fb78-41e9-85a2-a4d0cd530e69": "Which author proposed a neuronal model of classical conditioning?", "9b1c9e01-9857-42cf-a681-66c28e3683fe": "What does the acronym AFCRL stand for in the context of Klopf's 1972 technical report?", "0f2648a3-886f-46e2-b09c-022378bf6b26": "Consider the backpropagation algorithm described in the context. What are the expressions for the elements of the vector \u03b4\u03b8?", "048090dc-4cdd-47f4-9bd5-4c8f1117dfb1": "In the given backpropagation algorithm, new variables R{aj}, R{zj} and R{\u03b4j} are introduced for the hidden units. What role do these additional variables play in the implementation?", "ceb6d191-d779-40d1-b28b-a9d2eadbb637": "If we consider a proper prior distribution and then take a limit to obtain an improper prior, what typically happens to the evidence?", "fe2105b1-87da-46da-afc8-1e647f19f85f": "The text mentions two ways to potentially still obtain meaningful results with an improper prior. What are these two methods?", "5f9e7eb3-f3a7-4f83-927d-8d48efc9101e": "True or False: Continuity of the mapping \u03b8 \u2192 P\u03b8 depends on the distance metric \u03c1 used to measure the distance between distributions P\u03b8.", "1734e638-df55-4c3c-9b3e-5e048b8dcb57": "Fill in the blanks: If we want the loss function \u03b8 \u2192 \u03c1(P\u03b8, Pr) to be continuous, then we need the mapping _____ to be continuous when using the distance _____ between distributions.", "36a838b9-7428-4a6f-9211-e48ee447eb84": "According to the grading policy, what percentage of the final grade comes from the course project?", "0c96fc7d-0ea6-4a5a-af10-914334adf550": "Which of the following is NOT mentioned as a way to earn participation credit in the class?", "76d669c3-4077-4d49-bbb1-50c8fac4b097": "Contributing significantly to Piazza discussions", "065c1946-225a-4730-84df-ddd908467854": "Completing the mid-quarter evaluation survey", "65516f6d-f7c1-4fbc-a70f-62eb2f20a499": "Asking insightful questions during class lectures", "39c0fed9-b512-4cd9-9b53-84ec7b1465bf": "None of the above", "38519bc7-865f-46df-8e14-67cfae0c11f3": "What is the product rule of probability as it relates to p(x, Ck)? How does this lead to the result that the minimum probability of making a mistake is obtained by assigning each x to the class with the largest posterior probability p(Ck|x)?", "18a05e22-32c5-413d-b5a5-7c29d89427ec": "For the general case of K classes, what quantity do we aim to maximize in order to minimize the probability of misclassification? How does this relate to assigning each x to the class with the largest posterior probability p(Ck|x)?", "79f76ba1-9e24-4a67-99b2-36bafcfc9992": "According to the passage, what are some of the recent efforts focused on to increase the compositional generalization abilities of models?", "7f11b933-f380-4541-b339-f708b00ab7d9": "The passage mentions that compositional augmentation has been utilized in several NLP tasks. Can you name 2 of the tasks mentioned where compositional augmentation has been used?", "7b865b08-32f2-4278-9b4c-5e562a2ed0a9": "What was the main task of the battalion in the counterinsurgency campaign according to the military context?", "13cbb988-c3f4-411b-b209-620eb1743ff2": "According to the legal context, what is the emphasis of the essay being discussed in terms of space and time?", "246c83ba-d79a-4efb-9456-a1b9abd42e0b": "Which book discusses the use of second order derivatives for network pruning?", "62b88b51-4c55-4ed4-862d-81dc6be09bca": "Which authors proposed the \"Principal curves\" method published in the Journal of the American Statistical Association?", "404a7325-3056-4c8b-8cd1-f4b4f96d375a": "According to the passage, what are some key differences between \"simple cells\" and \"complex cells\" in the visual cortex (V1)? What evidence suggests there may not be a clear distinction between the two cell types?", "f2ba2c97-a2a7-4517-90d2-8532563c2a17": "The passage mentions some early models of vision that utilized model architectures similar to modern convolutional neural networks. Can you name one example model cited that used a layer-wise unsupervised clustering algorithm instead of backpropagation?", "b422201a-91f6-43f0-9ae0-9d19925ab00b": "What is another name for the bootstrap filter approach discussed in the text?", "626fb6e1-c646-4631-8453-76f0cff4851e": "Consider a Markov model with N nodes. Using the rules of d-separation, show that the conditional independence properties in Equation 13.3 are satisfied.", "d7610abb-9ba3-4f86-8b35-8d2fee6e0eb2": "Which of the following tasks involves determining if two questions asked on Quora are semantically equivalent?", "150038a4-294d-4ab3-9d08-ecb38ac867c6": "The Stanford Sentiment Treebank dataset consists of sentences extracted from what type of texts, and what is the classification task?", "9a0ce9e1-3547-4926-a609-ffe06e0853f3": "According to the passage, why is the \"brute force\" solution of learning a representation that captures all reasonably salient generative factors not feasible?", "f42dfe16-71a9-4b7d-9cdd-8d448e102f6c": "The passage mentions the work of Simons and Levin regarding selective attention. What phenomenon did they document that is relevant to determining what factors an unsupervised learning algorithm should encode?", "6ed51c9e-a407-4d04-b675-b6c671ebfb58": "What are two types of hidden units that can be used to reduce the number of parameters in a neural network?", "32b4dc48-308a-4697-95a6-6914af944658": "The softmax unit represents a probability distribution over what kind of variable? How may softmax units sometimes be used in a network?", "38a9d72b-03a3-40a0-8747-32750b4189cf": "What function does the AdaBoost algorithm seek to best approximate, within the space of functions represented by the linear combination of base classifiers?", "ae4720b0-ad07-4a31-b875-a26694e05f52": "The exponential error function minimized by AdaBoost differs from previous error functions we have seen. How does the author explain the motivation for using the sign function in (14.19) to arrive at the final classification decision?", "3248dd78-613e-4931-93b9-03a2e73b481b": "What is the main difference between convolution and cross-correlation in neural networks?", "8062a4bf-053e-4ce9-ab82-fd3769c9eed6": "True or False: In machine learning, an algorithm using convolution with kernel flipping will learn the same kernel as an algorithm using convolution without kernel flipping.", "0a6368cd-53d4-4869-91e2-ea7fd3c0bda1": "Fill in the blank:", "6979458e-7ffb-42a3-af5f-893543d87f94": "to equations 18.5 through 18.13, the gradient of the log partition function Z can be written as _________, where p(x) is the probability density function.", "2e227362-0f43-4d2a-9df9-5d0cb8057517": "True or False:", "8bf92d55-fc2d-4cad-baeb-77ee3ee83a27": "18.5 through 18.13 show that for models where p(x) > 0 for all x, the gradient of the log partition function Z is equal to the expected value of the gradient of the log probability density p(x).", "ef9aa70f-db6d-45d9-bc1a-e1fcc16934bd": "According to the passage, what is one benefit of learning the underlying causal factors rather than just modeling p(x|y)?", "4bd62a67-7890-4303-b8df-9fcf73370c9e": "The passage states that \"by Bayes' rule, p(x|y) would be sensitive to changes in p(y)\" if the cause-effect relationship were reversed. Explain why this is true.", "00d755f5-bbe3-4f75-a1e5-4cbcea6b5200": "What is the next sentence prediction (NSP) task used for in the pre-training of BERT models?", "d31b9ad7-0ceb-4666-9a29-a717d5a11fa2": "What percent of the time is sentence B the actual next sentence that follows sentence A in the NSP pre-training task?", "b45872d0-3d5c-4ea0-98d1-cbf1b11da423": "In the example factor graph shown in Figure 8.51, what are the two leaf nodes?", "0ada415f-a14b-4ed6-8d45-2a4f9b2966b4": "In applying the sum-product algorithm to the example factor graph, what are the six messages that are passed, in order, when node x3 is designated as the root?", "c794f917-b321-48fd-9e5a-826a5bec1c31": "What is one benefit of using labeling functions over traditional programming according to the passage?", "3c044497-89e1-45b6-9631-3af2770c5b96": "What is an example application of labeling functions on medical data that is mentioned in the passage?", "d2caba64-b2d2-4f4a-ad83-b2c6a7797f99": "What was done to the velocity \u1e8bt+1 when the state xt+1 reached the left or right bounds according to the passage?", "0b54db9f-b524-4733-91d1-46cc62de9822": "The passage states that grid-tilings were used to convert the continuous state variables into binary features. Approximately how many tiles were used for each dimension, and how were the tile offsets determined?", "e14bdb9f-a17f-4ef1-8e32-0be2361b29c3": "What is needed to take a Bayesian approach to model selection for PCA?", "8b5bb895-5adf-4032-bbbc-23727cc0b4e0": "What method can be used to approximate the analytically intractable marginalization over the model parameters w and \u03c3?", "a4d7e173-fce4-43ed-86d1-3d53cdbb6c84": "According to the passage, why does coordinate descent make slow progress for small values of a on the optimization problem min_x,y a(x-y)^2 + (x+y)^2?", "16b3cff9-0ac9-4d20-9721-8e5135d902a2": "The passage mentions that Polyak averaging works well in practice for training neural networks, even though its justification is more heuristic than for convex problems. What is the basic idea behind why Polyak averaging helps for training neural networks?", "ef5e8970-fadb-4f8d-9b1c-9512ceedf055": "Who proposed the tabular TD(0) learning rule as part of an adaptive controller, and when?", "5d3584c2-5c9b-48c5-bb26-d7a6276d2626": "What key contribution did Sutton make to temporal-difference learning?", "83639a70-3356-4e42-88ff-80c70ffdd42f": "What are some of the difficulties that sample-average methods have for nonstationary problems?", "b999912d-d59d-4b98-8da8-52f7c1e92f37": "If the step-size parameters \u03b1n are not constant, how would you express the weighting on each prior reward in the estimate Qn in terms of the sequence of step-size parameters?", "0e963b5c-cf2b-425a-a224-08fd3e5093ec": "What type of cropping is used for data augmentation in the default pretraining setting described in the passage?", "1ba01c33-ee11-44e8-86fd-b238386a7fb1": "What are the 3 data augmentations utilized in the default pretraining setting for contrastive learning of visual representations according to the passage?", "0d3553a4-8341-4166-a100-8c61972bde12": "What is the Kullback-Leibler (KL) divergence a measure of when comparing two probability distributions P(x) and Q(x) over the same random variable x?", "ff63a019-37cd-481e-a196-aac62006267c": "True or False: The KL divergence between two probability distributions P(x) and Q(x) over the same continuous random variable x is zero if and only if P(x) = Q(x) for all values of x.", "5bff6dbf-358d-416e-94b9-63abec153712": "What problems do wide, flat regions of constant value pose for numerical optimization algorithms, even in convex problems?", "cbec4ca7-fc0f-4385-a823-2721309192ee": "What causes steep cliffs or exploding gradients in neural network loss landscapes?", "c87eee57-96fe-4481-bf50-7ed8d03797ba": "Consider the form of the complete-data log likelihood function in the provided information. What are the two key components that make up this function?", "6ca8eb88-0852-48eb-b730-71f03fb95fa9": "The provided information discusses the E-step and M-step of the EM algorithm. What are the key computations performed during the E-step? During the M-step?", "cc082bbd-6e58-413e-b026-ed4aba8f8f33": "What are some applications of the Hessian matrix in neural network training and analysis?", "d37ce29d-e3c4-4295-a6a7-ac1ff733af34": "The Laplace approximation for a Bayesian neural network relies on the Hessian matrix in several ways. What are three specific roles the Hessian plays in the Laplace approximation?", "02d7f8de-bfb0-4236-b5d7-c26db4812af5": "According to the text, what loss function should generally be used with a recurrent neural network?", "1fb0aca4-41aa-4c38-9934-c9c7149a34a8": "The text states that the output of an RNN can usually be interpreted as a probability distribution. What type of loss function does the text say is associated with a unit Gaussian output distribution?", "be98ea41-3b6b-424c-81d7-c46df7f40e48": "What are the three key signals that link neuroscience to reinforcement learning algorithms?", "64e7279a-df60-42c4-933a-8ee2f60f1f32": "According to the passage, how does dopamine modulation of synaptic plasticity provide a plausible mechanism for how the brain implements learning algorithms?", "f5d021d7-96af-4d91-a99b-9743fee6623c": "What is the directional derivative and how is it related to the gradient?", "090a312a-3647-4d26-923b-b7e4f21dd480": "Explain what a \"local minimum\" is in the context of optimization algorithms used in deep learning. Why might we accept local minima solutions even though they are not truly globally minimal?", "784245a4-e856-46f4-8100-59c00640fcbc": "Compare and contrast the approaches taken by Sutton and Barto versus Sung and Poggio for applying machine learning to solve problems. How do reinforcement learning and example-based learning differ?", "7d57dcb0-b88c-4650-a005-e573597104bf": "Describe the novelty detection method proposed by Tarassenko et al. for identifying masses in mammograms. What makes this an appropriate application of machine learning?", "fb6a64ae-b537-451b-8f88-efffb174dacc": "Given a mixture of K Gaussian distributions with means \u03bck and covariances \u03a3k, k=1,...,K, with mixing coefficients \u03c0k, what are the expressions for the overall mean \u03bc and overall covariance \u03a3 of the mixture distribution?", "a31fb045-f657-4886-b59b-12c7a54462e1": "Consider a mixture of Bernoulli distributions where the parameters are set to maximize the likelihood. Show that after one iteration of the EM algorithm applied to this model, starting from an initialization where the means \u03bck=\u03bc for all k, the solution will converge to \u03bck=\u03bc for all k. What does this imply about the resulting mixture model?", "e1384a6e-91e0-4327-87aa-2120f218d814": "In the forward propagation equations for the two-layer network, what notation does Pearlmutter use to represent the differential operator vT\u2207?", "4944f07e-759c-4468-9623-4c7d1694434b": "What are the two main techniques utilized in the analysis of the forward-propagation and backpropagation equations when acted on by the differential operator vT\u2207?", "4d45b27b-d3a0-4b0a-96ce-a52ffcf6266a": "According to the text, what is the conditional distribution for observation xn given all of the observations up to time n under a first-order Markov model?", "4842f76a-0861-4a9b-b0a8-8054f70e8f78": "The text states that a first-order Markov model is more general than an independence model but is still very restrictive. What aspect of a first-order Markov model makes it more restrictive than desired for modeling many real sequential observations?", "397cf8dc-7433-427e-837b-6378b8acea1d": "Boyd and Vandenberghe's book \"Convex Optimization\" is published by which company?", "c74b527e-f49f-4411-8880-1f0ac0b4898a": "What are two key differences between the approaches taken by Boyen and Koller versus Box and Tao in their respective works on Bayesian inference?", "7460821f-5829-4a63-a63f-e46d663b7328": "What is the form of the prior distribution p\u03b8(z) used in the variational lower bound derivation?", "6a7c8c5b-d9a5-4c65-821b-ef33a564ac86": "If q\u03c6(z|x(i)) is the posterior approximation at datapoint i, what do the variables \u03bcj and \u03c3j represent?", "10316582-fce9-4694-bac2-d36f6365a88f": "According to the passage, what are two issues with using hard splits in decision trees for regression problems?", "89ceb163-4359-4569-9664-396344dec70e": "The passage mentions that the hierarchical mixture of experts model arrives at a fully probabilistic tree-based model. What two modifications does it make compared to a standard decision tree model?", "e9a51f89-cd78-4501-86d8-0482f9d917e2": "What happens to the Hessian matrix as the size of a increases?", "e467b0bf-8697-4322-8ea8-0e79e6a0eeba": "True or False: Newton's method can sometimes make smaller steps than gradient descent with a properly chosen learning rate, when strong negative curvature is present.", "ac7b1c15-1209-4fad-883d-714ae4372285": "What are some of the limitations of using K-means for image segmentation as described in the passage?", "e6cb029c-0165-498a-a95c-60fbf5142973": "How does the example of using K-means for image segmentation illustrate the use of vector quantization for data compression?", "fb8f220c-ef37-4a3c-acfe-59d9fdfd7a26": "What is used as the prior distribution over the latent variables z in the example?", "8f0f3980-0b3e-4533-9155-66199c2da0ff": "What type of neural network is used to compute the distribution parameters from z for the likelihood p\u03b8(x|z)?", "d3934ea0-c437-4247-b6bd-a2511c09016e": "What does the passage say is the challenge with fitting deep learning models to real-world data?", "a91d74fb-2095-4ff9-b59d-37dc325c8285": "According to the passage, why is controlling the complexity of deep learning models not as simple as finding the right size model?", "4131e379-df3b-4cb3-bcfa-e76ed799d534": "What is the maximum likelihood estimator for the probability of landing heads in a coin toss experiment, in terms of the number of heads observed (m) and the total number of tosses (N)?", "fe47721a-8418-4fdb-8a1a-73ed9645d39a": "If we flip a coin 3 times and observe 3 heads, what would the maximum likelihood estimate predict for the probability of heads on the next flip?", "03ae01ed-ba15-4632-8de8-ce06356699a5": "What is a good number of samples m to initialize for a Restricted Boltzmann Machine (RBM) trained on small image patches?", "60fa6fcd-7cba-4c1d-9249-c06c0e9ebd6a": "What algorithm does the paper by Marlin et al. compare to many other criteria for training deep models, finding it to be more efficient?", "ff8a7e8d-f88d-4381-98d5-8f0c815b6aee": "What is the role of the function f in the equation for the unnormalized log conditional distribution logN(v;Wh, \u03c3)?", "cf08f783-80e5-45eb-a0ed-5659a1f2bc55": "The energy function we construct can represent the desired conditional p(v|h). What term from the original equation 20.39 can we not include entirely in the energy function? Why?"}, "docs": {"10387844-ad1d-4562-86bd-d5f0494f10ff": "On each step, after selecting action At and receiving the reward Rt, the action preferences are updated by: where \u21b5 > 0 is a step-size parameter, and \u00afRt 2 R is the average of all the rewards up to but not including time t, which can be computed incrementally as described in Section 2.4 (or Section 2.5 if the problem is nonstationary).The \u00afRt term serves as a baseline with which the reward is compared. If the reward is higher than the baseline, then the probability of taking At in the future is increased, and if the reward is below baseline, then the probability is decreased. The non-selected actions move in the opposite direction. armed testbed in which the true expected rewards were selected according to a normal distribution with a mean of +4 instead of zero (and with unit variance as before).\n\nThis shifting up of all the rewards has absolutely no e\u21b5ect on the gradient bandit algorithm because of the reward baseline term, which instantaneously adapts to the new level. But if the baseline were omitted (that is, if \u00afRt was taken to be constant zero in (2.12)), then performance would be signi\ufb01cantly degraded, as shown in the \ufb01gure", "fa24bdfa-3b04-4b76-971c-da95bd6de7be": "From (9.7) the log of the likelihood function is given by Before discussing how to maximize this function, it is worth emphasizing that there is a signi\ufb01cant problem associated with the maximum likelihood framework applied to Gaussian mixture models, due to the presence of singularities. For simplicity, consider a Gaussian mixture whose components have covariance matrices given by \u03a3k = \u03c32 kI, where I is the unit matrix, although the conclusions will hold for general covariance matrices. Suppose that one of the components of the mixture model, let us say the jth component, has its mean \u00b5j exactly equal to one of the data points so that \u00b5j = xn for some value of n. This data point will then contribute a term in the likelihood function of the form If we consider the limit \u03c3j \u2192 0, then we see that this term goes to in\ufb01nity and so the log likelihood function will also go to in\ufb01nity.\n\nThus the maximization of the log likelihood function is not a well posed problem because such singularities will always be present and will occur whenever one of the Gaussian components \u2018collapses\u2019 onto a speci\ufb01c data point. Recall that this problem did not arise in the case of a single Gaussian distribution", "f089f0d3-7a9c-45d4-9573-b42f89d01510": "Because \u03a3 is a real, symmetric matrix its eigenvalues will be real, and its eigenvectors can be chosen to form an orthonormal set, so that Exercise 2.18 where Iij is the i, j element of the identity matrix and satis\ufb01es and similarly the inverse covariance matrix \u03a3\u22121 can be expressed as Substituting (2.49) into (2.44), the quadratic form becomes We can interpret {yi} as a new coordinate system de\ufb01ned by the orthonormal vectors ui that are shifted and rotated with respect to the original xi coordinates. Forming the vector y = (y1, . , yD)T, we have where U is a matrix whose rows are given by uT an orthogonal matrix, i.e., it satis\ufb01es UUT = I, and hence also UTU = I, where I Appendix C The quadratic form, and hence the Gaussian density, will be constant on surfaces for which (2.51) is constant", "56caa28b-42f9-45b1-9d74-37e0eda89a5f": "Some domains, such as natural language processing, are known to benefit tremendously from unsuper- vised learning techniques, such as learning unsupervised word embeddings. In other domains, such as computer vision, current unsupervised learning techniques do not bring a benefit, except in the semi-supervised setting, when the number of labeled examples is very small . If your application is in a context where unsupervised learning is known to be important, then include it in your first end-to-end baseline. Otherwise, only use unsupervised learning in your first attempt if the task you want to solve is unsupervised. You can always try adding unsupervised learning later if you observe that your initial baseline overfits. 11.3.\n\nDetermining Whether to Gather More Data  https://www.deeplearningbook.org/contents/guidelines.html    After the first end-to-end system is established, it is time to measure the perfor- mance of the algorithm and determine how to improve it. Many machine learning novices are tempted to make improvements by trying out many different algorithms. Yet, it is often much better to gather more data than to improve the learning algorithm. How does one decide whether to gather more data? First, determine whether the performance on the training set is acceptable", "95670e5d-a831-4e8a-98c0-40aa339bd173": "The origins of the sparsity when optimizing with respect to hyperparameters is discussed in detail in the context of the relevance vector machine. Section 7.2.2 In deriving these variational update equations for the Gaussian mixture model, we assumed a particular factorization of the variational posterior distribution given by (10.42). However, the optimal solutions for the various factors exhibit additional factorizations. In particular, the solution for q\u22c6(\u00b5, \u039b) is given by the product of an independent distribution q\u22c6(\u00b5k, \u039bk) over each of the components k of the mixture, whereas the variational posterior distribution q\u22c6(Z) over the latent variables, given by (10.48), factorizes into an independent distribution q\u22c6(zn) for each observation n (note that it does not further factorize with respect to k because, for each value of n, the znk are constrained to sum to one over k).\n\nThese additional factorizations are a consequence of the interaction between the assumed factorization and the conditional independence properties of the true distribution, as characterized by the directed graph in Figure 10.5", "7138a8eb-4948-467f-860b-8dcee5638a47": "Int J Uncertain Fuzzin Know Based Syst. 1998;6(02):107-16. Jia S, Wang P, Jia P, Hu S. Research on data augmentation for image classification based on convolutional neural networks.\n\nIn: 2017 Chinese automation congress (CAC), 2017. p. 4165-70.  llija R, Piotr D, Ross G, Georgia G, Kaiming H. Data distillation: towards omni-supervised learning. In: CVPR '18; 2018. Guotai W, Michael A, Sebastien O, Wendi L, Jan D, Tom V. Test-time augmentation with uncertainty estimation for deep learning-based medical image segmentation. OpenReview.net. 2018. Fabio P, Christina V, Sandra A, Eduardo V. Data augmentation for skin lesion analysis. In: ISIC skin image analysis workshop and challenge @ MICCAI 2018. 2018. Karzuhisa M, Akira H, Akane M, Hiroshi K", "2e1767a0-5a47-453f-8efa-dc6ed2e65253": "These three operations\u2014convolution, backprop from output to weights, and backprop from output to inputs\u2014are sufficient to compute all the gradients needed to train any depth of feedforward convolutional network, as well as to train convolutional networks with reconstruction functions based on the transpose of convolution. See Goodfellow  for a full derivation of the equations in the fully general multidimensional, multiexample case. To give a sense of how these  350  https://www.deeplearningbook.org/contents/convnets.html    CHAPTER 9. CONVOLUTIONAL NETWORKS  equations work, we present the two-dimensional, single example version here.\n\nSuppose we want to train a convolutional network that incorporates strided convolution of kernel stack K applied to multichannel image V with stride s as defined by c(K, V,s), as in equation 9.8. Suppose we want to minimize some loss function J(V,K). During forward propagation, we will need to use c itself to output Z, which is then propagated through the rest of the network and used to compute the cost function J", "fa70da63-af24-4ebc-983d-e85d5235b655": "Many reinforcement learning methods perform bootstrapping, even those that do not require, as DP requires, a complete and accurate model of the environment. In the next chapter we explore reinforcement learning methods that do not require a model and do not bootstrap. In the chapter after that we explore methods that do not require a model but do bootstrap. These key features and properties are separable, yet can be mixed in interesting combinations. The term \u201cdynamic programming\u201d is due to Bellman , who showed how these methods could be applied to a wide range of problems. Extensive treatments of DP can be found in many texts, including Bertsekas , Bertsekas and Tsitsiklis , Dreyfus and Law , Ross , White , and Whittle . Our interest in DP is restricted to its use in solving MDPs, but DP also applies to other types of problems. Kumar and Kanal  provide a more general look at DP. To the best of our knowledge, the \ufb01rst connection between DP and reinforcement learning was made by Minsky  in commenting on Samuel\u2019s checkers player", "7ff6ff12-aa2f-4cda-848d-4c69bf53ef8b": ", zN) = p(z1) Using the d-separation criterion, we see that there is always a path connecting any two observed variables xn and xm via the latent variables, and that this path is never blocked. Thus the predictive distribution p(xn+1|x1, . , xn) for observation xn+1 given all previous observations does not exhibit any conditional independence properties, and so our predictions for xn+1 depends on all previous observations. The observed variables, however, do not satisfy the Markov property at any order. We shall discuss how to evaluate the predictive distribution in later sections of this chapter. There are two important models for sequential data that are described by this graph. If the latent variables are discrete, then we obtain the hidden Markov model, or HMM . Note that the observed variables in an HMM may Section 13.2 be discrete or continuous, and a variety of different conditional distributions can be used to model them.\n\nIf both the latent and the observed variables are Gaussian (with a linear-Gaussian dependence of the conditional distributions on their parents), then we obtain the linear dynamical system", "98dd8c9e-4059-4d6d-82a9-af7bb6367c11": "Technical Report, Department of Computer Science, University of Illinois at Urbana-Champaign. Ormoneit, D., Sen, \u00b4S. Kernel-based reinforcement learning. Machine Learning, 49(2Oudeyer, P.-Y., Kaplan, F. What is intrinsic motivation? A typology of computational Oudeyer, P.-Y., Kaplan, F., Hafner, V. V. .\n\nIntrinsic motivation systems for autonomous mental development. IEEE Transactions on Evolutionary Computation, 11(2):265\u2013286. Padoa-Schioppa, C., Assad, J. A. Neurons in the orbitofrontal cortex encode economic Page, C. V. Heuristics for signature table analysis as a pattern recognition technique. IEEE Transactions on Systems, Man, and Cybernetics, 7(2):77\u201386. striatum locked to errors of reward prediction. Nature Neuroscience, 5(2):97\u201398. predicted events during classical conditioning: Evidence for eligibility traces in the rewardlearning network", "01cdb862-9e2e-43cc-90fb-8bce1f8df8dd": "Research on learning automata had a more direct in\ufb02uence on the trial-and-error thread leading to modern reinforcement learning research.\n\nThese are methods for solving a nonassociative, purely selectional learning problem known as the k-armed bandit by analogy to a slot machine, or \u201cone-armed bandit,\u201d except with k levers (see Chapter 2). Learning automata are simple, low-memory machines for improving the probability of reward in these problems. Learning automata originated with work in the 1960s of the Russian mathematician and physicist M. L. Tsetlin and colleagues  and has been extensively developed since then within engineering . These developments included the study of stochastic learning automata, which are methods for updating action probabilities on the basis of reward signals. Although not developed in the tradition of stochastic learning automata, Harth and Tzanakou\u2019s  Alopex algorithm (for Algorithm of pattern extraction) is a stochastic method for detecting correlations between actions and reinforcement that in\ufb02uenced some of our early research", "a1ae2722-9567-43fc-ad94-4c4fcc5184c7": "R., Szepesv\u00b4ari, Cs., Bhatnagar, S., Sutton, R. S. Toward o\u21b5-policy learning control with function approximation. In Proceedings of the 27th International Conference on Machine Learning , pp. 719\u2013726). Mahadevan, S. .\n\nAverage reward reinforcement learning: Foundations, algorithms, and Mahadevan, S., Liu, B., Thomas, P., Dabney, W., Giguere, S., Jacek, N., Gemp, I., Liu, J. Proximal reinforcement learning: A new theory of sequential decision making in primal-dual spaces. ArXiv:1405.6757. Mahadevan, S., Connell, J. Automatic programming of behavior-based robots using reinforcement learning. Arti\ufb01cial Intelligence, 55(2-3):311\u2013365. Mahmood, A. R. Incremental O\u21b5-Policy Reinforcement Learning Algorithms. Ph.D. Mahmood, A", "da9c9658-c2f0-4710-9b8b-bfbb6afed6ac": "Many recom- mendation problems are most accurately described theoretically as contextual bandits . The issue is that when we use the recommendation system to collect data, we get a biased and incomplete view of the preferences of users: we see the responses of users only to the items recommended to them and not to the other items. In addition, in some cases we may not get any information on users for whom no recommendation has been made (for example, with ad auctions, it may be that the price proposed for an ad was below a minimum price threshold, or does not win the auction, so the ad is not shown at all). More importantly, we get no information about what outcome would have resulted from recommending any of the other items. This would be like training a classifier by picking one class g for each training example x (typically the class with the highest probability according to the model) and then only getting as feedback whether this was the correct class or not", "8fda65c5-d5a3-4550-b2a9-6d275527a25b": "You and your roommate might infect each other with a cold, and you and your work colleague might do the same, but assuming that your roommate and your colleague do not know each other, they can only infect each other indirectly via you. file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    defined on an undirected graph 9. For each clique C in the graph,\u201d a factor \u00a2(C) (also called a clique potential) measures the affinity of the variables in that clique for being in each of their possible joint states. The factors are constrained to be nonnegative. Together they define an unnormalized probability distribution  p(x) = Ieeg o(C). (16.3)  The unnormalized probability distribution is efficient to work with so long as all the cliques are small. It encodes the idea that states with higher affinity are more likely.\n\nHowever, unlike in a Bayesian network, there is little structure to the definition of the cliques, so there is nothing to guarantee that multiplying them together will yield a valid probability distribution. See figure 16.4 for an example of reading factorization information from an undirected graph", "9b30509e-6180-4008-851e-db0f953df19a": "Positive definite matrices additionally guarantee that x' Aw =0> 2=0. 2.8 Singular Value Decomposition  In section 2.7, we saw how to decompose a matrix into eigenvectors and eigenvalues. The singular value decomposition (SVD) provides another way to factorize a matrix, into singular vectors and singular values. The SVD enables us to discover some of the same kind of information as the eigendecomposition reveals;  https://www.deeplearningbook.org/contents/linear_algebra.html    however, the SV 1s more generally applicable. Kivery real matrix has a singular value decomposition, but the same is not true of the eigenvalue decomposition. 42  CHAPTER 2.\n\nLINEAR ALGEBRA  For example, if a matrix is not square, the eigendecomposition is not defined, and we must use a singular value decomposition instead", "c6ab13e7-9aa4-4f20-b08e-c477f3c9bc73": "This follows from the fact that when we sample from p(zi|{z\\i), the marginal distribution p(z\\i) is clearly invariant because the value of z\\i is unchanged. Also, each step by de\ufb01nition samples from the correct conditional distribution p(zi|z\\i). Because these conditional and marginal distributions together specify the joint distribution, we see that the joint distribution is itself invariant. The second requirement to be satis\ufb01ed in order that the Gibbs sampling procedure samples from the correct distribution is that it be ergodic. A suf\ufb01cient condition for ergodicity is that none of the conditional distributions be anywhere zero. If this is the case, then any point in z space can be reached from any other point in a \ufb01nite number of steps involving one update of each of the component variables. If this requirement is not satis\ufb01ed, so that some of the conditional distributions have zeros, then ergodicity, if it applies, must be proven explicitly.\n\nThe distribution of initial states must also be speci\ufb01ed in order to complete the algorithm, although samples drawn after many iterations will effectively become independent of this distribution", "39eb5df9-454c-4bc0-8a25-e9b4b4d8d0c3": "What happens when we are given a choice between two estimators, one with more bias and one with more variance? How do we choose between them?\n\nFor example, imagine that we are interested in approximating the function shown in figure 5.2 and we are only offered the choice between a model with large bias and one that suffers from large variance. How do we choose between them? The most common way to negotiate this trade-off is to use cross-validation. Empirically, cross-validation is highly successful on many real-world tasks. Alter- natively, we can also compare the mean squared error (MSE) of the estimates:  MSE = E (5.53)  = Bias(n)\u00b0 + Var(6m) (5.54)  The MSE measures the overall expected deviation\u2014in a squared error sense\u2014 between the estimator and the true value of the parameter 6. As is clear from equation 5.54, evaluating the MSE incorporates both the bias and the variance. Desirable estimators are those with small MSE and these are estimators that manage to keep both their bias and variance somewhat in check. The relationship between bias and variance is tightly linked to the machine learning concepts of capacity, underfitting and overfitting. When generalization  127  CHAPTER 5", "37b1a589-468a-4ca6-96f8-c9adbefe7d35": "\u201cSentence-BERT: Sentence embeddings using Siamese BERT-networks.\" EMNLP 2019. 29] Jianlin Su et al. \u201cWhitening sentence representations for better semantics and faster retrieval.\" arXiv preprint arXiv:2103.15316 . 30] Yan Zhang et al. \u201cAn unsupervised sentence embedding method by mutual information maximization.\" EMNLP 2020. 31] Bohan Li et al. \u201cOn the sentence embeddings from pre-trained language models.\" EMNLP 2020.\n\n32] Lajanugen Logeswaran and Honglak Lee. \u201cAn efficient framework for learning sentence representations.\" ICLR 2018. 33] Joshua Robinson, et al. \u201cContrastive Learning with Hard Negative Samples.\" ICLR 2021. 34] Ching-Yao Chuang et al. \u201cDebiased Contrastive Learning.\" NeuriPS 2020", "bf47f87d-14d0-4a12-810c-e9ba4f5a5bd6": "During Q-learning updates, samples are drawn at random from the replay memory and thus one sample could be  https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log   used multiple times.\n\nExperience replay improves data efficiency, removes correlations in the observation sequences, and smooths over changes in the data distribution. Periodically Updated Target: Q is optimized towards target values that are only periodically updated. The Q network is cloned and kept frozen as the optimization target every C steps (C is a hyperparameter). This modification makes the training more stable as it overcomes the short- term oscillations. The loss function looks like this:  L(0) = E (6 a,r,s\")~U(D) . (I always get mixed feeling with parameter clipping, as many studies have shown that it works empirically but it makes the math much less pretty", "10b1d7c3-72db-4b93-a2fd-d1e14be6c3a4": "This approach uses extra parallel computation to eliminate latency.\n\nThe strategy of using only a single Markov chain to generate all samples and the strategy of using one Markov chain for each desired sample are two extremes; deep learning practitioners usually use a number of chains that is similar to the number of examples in a minibatch and then draw as many samples as are needed from this fixed set of Markov chains. A commonly used number of Markov chains is 100. Another difficulty is that we do not know in advance how many steps the Markov chain must run before reaching its equilibrium distribution. This length of time is called the mixing time. Testing whether a Markov chain has reached equilibrium is also difficult. We do not have a precise enough theory for guiding us in answering this question. Theory tells us that the chain will converge, but not much more. If we analyze the Markov chain from the point of view of a matrix A acting on a vector of probabilities v, then we know that the chain mixes when A\u2018 has effectively lost all the eigenvalues from A besides the unique eigenvalue of 1. This means that the magnitude of the second-largest eigenvalue will determine the mixing time", "086f9952-00e5-4077-9ab1-ce6b87f86738": "In doing so it is useful to note that on the right-hand side we only need to retain those terms that have some functional dependence on z1 because all other terms can be absorbed into the normalization constant.\n\nThus we have Next we observe that the right-hand side of this expression is a quadratic function of z1, and so we can identify q\u22c6(z1) as a Gaussian distribution. It is worth emphasizing that we did not assume that q(zi) is Gaussian, but rather we derived this result by variational optimization of the KL divergence over all possible distributions q(zi). Note also that we do not need to consider the additive constant in (10.9) explicitly because it represents the normalization constant that can be found at the end by inspection if required. Using the technique of completing the square, we can identify Section 2.3.1 the mean and precision of this Gaussian, giving Note that these solutions are coupled, so that q\u22c6(z1) depends on expectations computed with respect to q\u22c6(z2) and vice versa. In general, we address this by treating the variational solutions as re-estimation equations and cycling through the variables in turn updating them until some convergence criterion is satis\ufb01ed", "1115d656-a165-4225-b2de-e41ed110d40f": "The natural state-value learning algorithm for using n-step returns is thus while the values of all other states remain unchanged: Vt+n(s) = Vt+n\u22121(s), for all s6=St.\n\nWe call this algorithm n-step TD. Note that no changes at all are made during the \ufb01rst n \u2212 1 steps of each episode. To make up for that, an equal number of additional updates are made at the end of the episode, after termination and before starting the next episode. Complete pseudocode is given in the box on the next page. Exercise 7.1 In Chapter 6 we noted that the Monte Carlo error can be written as the sum of TD errors (6.6) if the value estimates don\u2019t change from step to step. Show that the n-step error used in (7.2) can also be written as a sum TD errors (again if the value estimates don\u2019t change) generalizing the earlier result", "77923ffd-f385-48a9-b5b6-863c2e92d470": "Let us begin by \ufb01nding an expression for the conditional distribution p(xa|xb).\n\nFrom the product rule of probability, we see that this conditional distribution can be evaluated from the joint distribution p(x) = p(xa, xb) simply by \ufb01xing xb to the observed value and normalizing the resulting expression to obtain a valid probability distribution over xa. Instead of performing this normalization explicitly, we can obtain the solution more ef\ufb01ciently by considering the quadratic form in the exponent of the Gaussian distribution given by (2.44) and then reinstating the normalization coef\ufb01cient at the end of the calculation. If we make use of the partitioning (2.65), (2.66), and (2.69), we obtain We see that as a function of xa, this is again a quadratic form, and hence the corresponding conditional distribution p(xa|xb) will be Gaussian. Because this distribution is completely characterized by its mean and its covariance, our goal will be to identify expressions for the mean and covariance of p(xa|xb) by inspection of (2.70)", "1eabf9ea-ddd5-43a9-b921-0488efdf7d16": "We also know that neighbouring pixels xi and xj in an image are strongly correlated. This prior knowledge can be captured using the Markov random \ufb01eld model whose undirected graph is shown in Figure 8.31. This graph has two types of cliques, each of which contains two variables. The cliques of the form {xi, yi} have an associated energy function that expresses the correlation between these variables. We choose a very simple energy function for these cliques of the form \u2212\u03b7xiyi where \u03b7 is a positive constant. This has the desired effect of giving a lower energy (thus encouraging a higher probability) when xi and yi have the same sign and a higher energy when they have the opposite sign. The remaining cliques comprise pairs of variables {xi, xj} where i and j are indices of neighbouring pixels. Again, we want the energy to be lower when the pixels have the same sign than when they have the opposite sign, and so we choose an energy given by \u2212\u03b2xixj where \u03b2 is a positive constant", "1f7169a0-d314-4590-a8cd-b6fbe1730150": "Thus, the data alone; knowledge of the MDP beyond what is revealed i Moreover, the two MDPs have di\u21b5erent minimal-BE value f the minimal-BE value function is the exact solution v\u03b8 = \u20d70 for 2. This is a critical observation, as it is possible for an error function t perfectly satisfactory for use in learning settings because the value th from data. For example, this is what happens with the VE. The VE policy together completely determine the probabilit Assume for the moment that the state, action, an for any \ufb01nite sequence \u03be = \u03c60, a0, r1, . , rk, \u03c6k, the sibly zero) of it occuring as the initial portion of P(\u03be) = Pr{\u03c6(S0) = \u03c60, A0 = a0, R1 = r1, . .\n\n, Rk = then is a complete characterization of a source of da everything about the statistics of the data, but it is particular, the VE and BE objectives are readily com Section 3, but these cannot be determined from P al the minimal-BE value function is the exact solution v 2", "0d5076d9-ec8b-406e-acfa-893a1633b706": "Sampling is also accelerated in the case of directed models, while the situation can be complicated with undirected models. The primary mechanism that allows all these operations to use less runtime and memory is choosing to not model certain interactions. Graphical models convey information by leaving edges out. Anywhere there is not an edge, the model specifies the assumption that we do not need to model a direct interaction. A less quantifiable benefit of using structured probabilistic models is that they allow us to explicitly separate representation of knowledge from learning of knowledge or inference given existing knowledge. This makes our models easier to develop and debug. We can design, analyze, and evaluate learning algorithms and inference algorithms that are applicable to broad classes of graphs.\n\nIndependently, we can design models that capture the relationships we believe are important in our data. We can then combine these different algorithms and structures and obtain a Cartesian product of different possibilities. It would be much more difficult to design end-to-end algorithms for every possible situation. 16.5 Learning about Dependencies  A good generative model needs to accurately capture the distribution over the observed, or \u201cvisible,\u201d variables v. Often the different elements of v are highly dependent on each other", "824fa87f-8009-4739-bbfa-6151ee6d7f2c": "Specifically, we use a minibatch of examples from the training set formatted as a design matrix X and a vector of associated class labels y. The network computes a layer of hidden features H = max{0,X WH). To simplify the presentation we do not use biases in this model. We assume that our graph language includes a relu operation that can compute max{0, Z} element- wise.\n\nThe predictions of the unnormalized log probabilities over classes are then given by HW), We assume that our graph language includes a cross_entropy operation that computes the cross-entropy between the targets y and the probability distribution defined by these unnormalized log probabilities. The resulting cross- entropy defines the cost J)yup. Minimizing this cross-entropy performs maximum likelihood estimation of the classifier. However, to make this example more realistic, we also include a regularization term. The total cost  1)\\? 2)\\? J=Iunt+0( 0 (we) +0 (we) (6.56) ij ij  consists of the cross-entropy and a weight decay term with coefficient \u2019", "a5171d5a-d29c-43aa-a3aa-8a2cb714fcf9": "What does this tell you about what happened on the \ufb01rst episode? Why was only the estimate for this one state changed? By exactly how much was it changed? \u21e4 Exercise 6.4 The speci\ufb01c results shown in the right graph of the random walk example are dependent on the value of the step-size parameter, \u21b5. Do you think the conclusions about which algorithm is better would be a\u21b5ected if a wider range of \u21b5 values were used? Is there a di\u21b5erent, \ufb01xed value of \u21b5 at which either algorithm would have performed signi\ufb01cantly better than shown? Why or why not?\n\n\u21e4 \u21e4Exercise 6.5 In the right graph of the random walk example, the RMS error of the TD method seems to go down and then up again, particularly at high \u21b5\u2019s. What could have caused this? Do you think this always occurs, or might it be a function of how the approximate value function was initialized? \u21e4 6, for states A through E. Describe at least two di\u21b5erent ways that Suppose there is available only a \ufb01nite amount of experience, say 10 episodes or 100 time steps. In this case, a common approach with incremental learning methods is to present the experience repeatedly until the method converges upon an answer", "23e88608-f132-48b3-b139-542f35e03424": "Also, while the (nonlinear) conjugate gradients algorithm has traditionally been cast as a batch method, minibatch versions have been used successfully for training neural networks . Adaptations of conjugate gradients specifically for neural networks have been proposed earlier, such as the scaled conjugate gradients algorithm . 8.6.3 BFGS  The Broyden\u2014Fletcher\u2014Goldfarb\u2014Shanno (BFGS) algorithm attempts to bring some of the advantages of Newton\u2019s method without the computational burden. In that respect, BFGS is similar to the conjugate gradient method. However, BFGS takes a more direct approach to the approximation of Newton\u2019s update.\n\nRecall that Newton\u2019s update is given by  0\u00b0 = 0) \u2014H 'VoJ(60), (8.32)  where H is the Hessian of J with respect to @ evaluated at 09", "85655d39-806a-4f48-834d-2ab47b9de2ad": "The right-hand plot shows the true conditional distribution p(t|x) from which the labels are generated, in which the green curve denotes the mean, and the shaded region spans one standard deviation on each side of the mean. red and blue. On the right is a plot of the true posterior probabilities, shown on a colour scale going from pure red denoting probability of the red class is 1 to pure blue denoting probability of the red class is 0. Because these probabilities are known, the optimal decision boundary for minimizing the misclassi\ufb01cation rate (which corresponds to the contour along which the posterior probabilities for each class equal 0.5) can be evaluated and is shown by the green curve. This decision boundary is also plotted on the left-hand \ufb01gure. In this appendix, we summarize the main properties of some of the most widely used probability distributions, and for each distribution we list some key statistics such as the expectation E, the variance (or covariance), the mode, and the entropy H", "02484d1b-ce1f-4c4a-ba0f-24e8b045cd28": "Olshausen and Field  showed that a simple unsupervised learning algorithm, sparse coding, learns features with receptive fields similar to those of simple cells. Since then, we have found that an extremely wide variety of statistical learning algorithms learn features with Gabor-like functions when applied to natural images. This includes most deep learning algorithms, which learn these features in their first layer. Figure 9.19 shows some examples. Because so many different learning algorithms learn edge detectors, it is difficult to conclude that any specific learning algorithm is the \u201cright\u201d model of the brain just based on the features it learns (though it can certainly be a bad sign if an algorithm does not learn some sort of edge detector when applied to natural images). These features are an important part of the statistical structure of natural images and can be recovered by many different approaches to statistical modeling. See Hyvarinen et al. for a review of the field of natural image statistics. https://www.deeplearningbook.org/contents/convnets.html    364  CHAPTER 9", "9e36e58b-c4e5-46cf-b7b8-e819037de2cb": "Together, these will motivate and illustrate the key concepts of d-separation.\n\nThe \ufb01rst of the three examples is shown in Figure 8.15, and the joint distribution corresponding to this graph is easily written down using the general result (8.5) to give If none of the variables are observed, then we can investigate whether a and b are independent by marginalizing both sides of (8.23) with respect to c to give In general, this does not factorize into the product p(a)p(b), and so where \u2205 denotes the empty set, and the symbol \u0338\u22a5\u22a5 means that the conditional independence property does not hold in general. Of course, it may hold for a particular distribution by virtue of the speci\ufb01c numerical values associated with the various conditional probabilities, but it does not follow in general from the structure of the graph. Now suppose we condition on the variable c, as represented by the graph of and so we obtain the conditional independence property We can provide a simple graphical interpretation of this result by considering the path from node a to node b via c", "3db9dbb7-8e94-40aa-bef6-f1d8630b1045": "This means that the direction of most curvature has five times more curvature than the direction of least curvature. In this case, the most curvature is in the direction ', and the least curvature is in the direction \". The red lines indicate the path followed by gradient descent. This very elongated quadratic \u2018unction resembles a long canyon. Gradient descent wastes time repeatedly descending canyon walls because they are the steepest feature. Since the step size is somewhat too arge, it has a tendency to overshoot the bottom of the function and thus needs to descend the opposite canyon wall on the next iteration.\n\nThe large positive eigenvalue of the Hessian corresponding to the eigenvector pointed in this direction indicates that this directional derivative is rapidly increasing, so an optimization algorithm based on the Hessian could predict that the steepest direction is not actually a promising search direction in this context. 89  https://www.deeplearningbook.org/contents/numerical.html    CHAPTER 4, NUMERICAL COMPUTATION  This issue can be resolved by using information from the Hessian matrix to guide the search. The simplest method for doing so is known as Newton\u2019s method", "75c5ba77-8121-4ca1-a419-62422e8d3f2a": "Because an inactive h\u00ae has negative value, then the solution to ming max, Maxq,o>0 L(#, A, a) will have a; = 0. We can thus observe that at the solution, a\u00a9 h(a) =0. In other words, for all 7, we know that at least one of the constraints a; > 0 or A\u00ae (x) < 0 must be active at the solution. To gain some intuition for this idea, we can say that either the solution is on the boundary imposed by the inequality and we must use its KKT multiplier to influence the solution to x, or the inequality has no influence on the solution and we represent this by zeroing out its KKT multiplier. A simple set of properties describe the optimal points of constrained opti-  https://www.deeplearningbook.org/contents/numerical.html    mization problems. These properties are called the Karush-Kuhn-Tucker (KKT) conditions . They are necessary conditions, but not always sufficient conditions, for a point to be optimal. The conditions are:  e The gradient of the generalized Lagrangian is zero", "91998ecf-f83a-4860-84e9-f2092086e460": "Wilson, R. C., Takahashi, Y. K., Schoenbaum, G., Niv, Y. Orbitofrontal cortex as a Witten, I. H. Learning to Control. University of Essex PhD thesis. Witten, I. H. .\n\nThe apparent con\ufb02ict between estimation and control\u2014A survey of the two-armed problem. Journal of the Franklin Institute, 301(1-2):161\u2013189. Witten, I. H. An adaptive optimal controller for discrete-time Markov environments. Witten, I. H., Corbin, M. J. Human operators and automatic adaptive controllers: A learning for trajectory generation. In 52nd Aerospace Sciences Meeting, p. 0990. Woodworth, R. S. Experimental Psychology. New York: Henry Holt and Company. Xie, X., Seung, H. S. Learning in neural networks by reinforcement of irregular spiking", "f9865213-2f72-4fea-a410-0ed1e489d426": "Formally, let Dv be the validation set of data examples. The update is then: where, since \u03b8\u2032 is a function of \u03c6, the gradient is backpropagated to \u03c6 through \u03b8\u2032(\u03c6).\n\nTaking data weighting for example where \u03c6 is the training sample weights (more details in section 4.2), the update is to optimize the weights of training samples so that the model performs best on the validation set. The resulting algorithm is summarized in Algorithm 1. Figure 1 illustrates the computation \ufb02ow. Learning the manipulation parameters effectively uses a held-out validation set. We show in our experiments that a very small set of validation examples (e.g., 2 labels per class) is enough to signi\ufb01cantly improve the model performance in low data regime. It is worth noting that some previous work has also leveraged validation examples, such as learning data augmentation with policy gradient  or inducing data weights with meta-learning . Our approach is inspired from a distinct paradigm of (intrinsic) reward learning. In contrast to  that treats data augmentation as a policy, we instead formulate manipulation as a reward function and enable ef\ufb01cient stochastic gradient updates. Our approach is also more broadly applicable to diverse data manipulation types than", "6eb5107b-1275-4a02-8cf2-ad90bcd7657b": "In this example, we evaluated the state in which the dealer is showing a deuce, the sum of the player\u2019s cards is 13, and the player has a usable ace (that is, the player holds an ace and a deuce, or equivalently three aces). The data was generated by starting in this state then choosing to hit or stick at random with equal probability (the behavior policy). The target policy was to stick only on a sum of 20 or 21, as in Example 5.1. The value of this state under the target policy is approximately \u22120.27726 (this was determined by separately generating one-hundred million episodes using the target policy and averaging their returns). Both o\u21b5-policy methods closely approximated this value after 1000 o\u21b5-policy episodes using the random policy. To make sure they did this reliably, we performed 100 independent runs, each starting from estimates of zero and learning for 10,000 episodes. Figure 5.3 shows the resultant learning curves\u2014the squared error of the estimates of each method as a function of number of episodes, averaged over the 100 runs.\n\nThe error approaches zero for both algorithms, but the weighted importance-sampling method has much lower error at the beginning, as is typical in practice", "c3957a94-4927-4fe6-b2c0-427de66b3d88": "G. A primer on reinforcement learning in the brain: Psychological, computational, and neural perspectives. In E. Alonso and E. Mondrag\u00b4on (Eds. ), Computational Neuroscience for Advancing Arti\ufb01cial Intelligence: Models, Methods and Applications, pp. 111\u201344.\n\nMedical Information Science Reference, Hershey PA. Ludvig, E. A., Sutton, R. S., Kehoe, E. J. Stimulus representation and the timing of Mackintosh, N. J. A theory of attention: Variations in the associability of stimuli with Mackintosh, N. J. Conditioning and Associative Learning. Clarendon Press, Oxford. Maclin, R., Shavlik, J. W. Incorporating advice into agents that learn from reinforcements. In Proceedings of the Twelfth National Conference on Arti\ufb01cial Intelligence (AAAI-94), pp. 694\u2013699", "b40088ed-95a0-4f4f-9223-88f8a9fae7cd": "This should be done subject to the constraints that UM+l be orthogonal to the existing vectors U1,\"\" UM, and also that it be normalized to unit length. Use Lagrange multipliAppendix E ers to enforce these constraints. Then make use of the orthonormality properties of the vectors U1,\"\" UM to show that the new vector UM+1 is an eigenvector of S. Finally, show that the variance is maximized if the eigenvector is chosen to be the one corresponding to eigenvector AM+1 where the eigenvalues have been ordered in decreasing value.\n\n12.2 (**) Show that the minimum value of the PCA distortion measure J given by (12.15) with respect to the Ui, subject to the orthonormality constraints (12.7), is obtained when the Ui are eigenvectors of the data covariance matrix S. To do this, introduce a matrix H of Lagrange multipliers, one for each constraint, so that the modified distortion measure, in matrix notation reads where Uis a m~trix of dimensio~D x (D - M) whose columns are gi:::..en b~ Ui", "b626c059-1cee-44c7-812a-9604b942e9d5": "For a D-dimensional vector x, the multivariate Gaussian distribution takes the form where \u00b5 is a D-dimensional mean vector, \u03a3 is a D \u00d7 D covariance matrix, and |\u03a3| denotes the determinant of \u03a3. The Gaussian distribution arises in many different contexts and can be motivated from a variety of different perspectives. For example, we have already seen that for Section 1.6 a single real variable, the distribution that maximizes the entropy is the Gaussian. This property applies also to the multivariate Gaussian. Exercise 2.14 Another situation in which the Gaussian distribution arises is when we consider the sum of multiple random variables. The central limit theorem (due to Laplace) tells us that, subject to certain mild conditions, the sum of a set of random variables, which is of course itself a random variable, has a distribution that becomes increasingly Gaussian as the number of terms in the sum increases . We can observe that as N increases, the distribution tends towards a Gaussian.\n\nillustrate this by considering N variables x1,", "7124ca67-9e67-422d-bc48-9d6378933dd1": "APPLICATIONS  Training n-gram models is straightforward because the maximum likelihood estimate can be computed simply by counting how many times each possible n-gram occurs in the training set. Models based on n-grams have been the core building block of statistical language modeling for many decades . For small values of n, models have particular names: unigram for n = 1, bigram for n = 2, and trigram for n = 3. These names derive from the Latin prefixes for the corresponding numbers and the Greek suffix \u201c-gram,\u201d denoting something that is written. Usually we train both an n-gram model and an n\u20141 gram model simultaneously.\n\nThis makes it easy to compute Pn(tt-n41, ne) %) Pr-1 (tt\u2014n41; re) %-1)  P(x | Tt-n4+1y+++ \u00bbt-1) (12.6)  simply by looking up two stored probabilities", "19a313ae-cacf-4290-8f66-e426fa862635": "We see that the mixture model gives a much better representation of the data distribution, and this is re\ufb02ected in the higher likelihood value. However, the mixture model also assigns signi\ufb01cant probability mass to regions where there is no data because its predictive distribution is bimodal for all values of x. This problem can be resolved by extending the model to allow the mixture coef\ufb01cients themselves to be functions of x, leading to models such as the mixture density networks discussed in Section 5.6, and hierarchical mixture of experts discussed in Section 14.5.3. target variable t, together with a mixture of two linear regression models whose mean functions y(x, wk), where k \u2208 {1, 2}, are shown by the blue and red lines.\n\nThe upper three plots show the initial con\ufb01guration (left), the result of running 30 iterations of EM (centre), and the result after 50 iterations of EM (right). Here \u03b2 was initialized to the reciprocal of the true variance of the set of target values. The lower three plots show the corresponding responsibilities plotted as a vertical line for each data point in which the length of the blue segment gives the posterior probability of the blue line for that data point (and similarly for the red segment)", "46afbbbc-8a5d-40aa-b623-e7386b1a65f2": "In many cases, x\u2019 can be so similar to z that a  + .007  https://www.deeplearningbook.org/contents/regularization.html    x sign(VaJ (0, x,y)) csign(V2J(0,2,y)) y =\u201cpanda\u201d \u201cnematode\u201d \u201csibbon\u201d w/ 57.7% w/ 8.2% w/ 99.3% confidence confidence confidence  Figure 7.8: A demonstration of adversarial example generation applied to GoogLeNet  on ImageNet.\n\nBy adding an imperceptibly small vector whose elements are equal to the sign of the elements of the gradient of the cost function with respect to the input, we can change GoogLeNet\u2019s classification of the image. Reproduced with permission from Goodfellow e\u00e9 al. 265  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  human observer cannot tell the difference between the original example and the adversarial example, but the network can make highly different predictions. See figure 7.8 for an example. Adversarial examples have many implications, for example, in computer security, hat are beyond the scope of this chapter", "edee76b5-8223-47d4-a0ab-2eeafba22254": "The agent\u2013environment boundary can be located at di\u21b5erent places for di\u21b5erent purposes.\n\nIn a complicated robot, many di\u21b5erent agents may be operating at once, each with its own boundary. For example, one agent may make high-level decisions which form part of the states faced by a lower-level agent that implements the high-level decisions. In practice, the agent\u2013environment boundary is determined once one has selected particular states, actions, and rewards, and thus has identi\ufb01ed a speci\ufb01c decision making task of interest. The MDP framework is a considerable abstraction of the problem of goal-directed learning from interaction. It proposes that whatever the details of the sensory, memory, and control apparatus, and whatever objective one is trying to achieve, any problem of learning goal-directed behavior can be reduced to three signals passing back and forth between an agent and its environment: one signal to represent the choices made by the agent (the actions), one signal to represent the basis on which the choices are made (the states), and one signal to de\ufb01ne the agent\u2019s goal (the rewards). This framework may not be su\ufb03cient to represent all decision-learning problems usefully, but it has proved to be widely useful and applicable", "4d598542-639f-4952-9ddc-ea862988ce41": "Modern reinforcement learning spans the spectrum from low-level, trial-and-error learning to high-level, deliberative planning. Reinforcement learning relies heavily on the concept of state\u2014as input to the policy and value function, and as both input to and output from the model. Informally, we can think of the state as a signal conveying to the agent some sense of \u201chow the environment is\u201d at a particular time. The formal de\ufb01nition of state as we use it here is given by the framework of Markov decision processes presented in Chapter 3.\n\nMore generally, however, we encourage the reader to follow the informal meaning and think of the state as whatever information is available to the agent about its environment. In e\u21b5ect, we assume that the state signal is produced by some preprocessing system that is nominally part of the agent\u2019s environment. We do not address the issues of constructing, changing, or learning the state signal in this book (other than brie\ufb02y in Section 17.3). We take this approach not because we consider state representation to be unimportant, but in order to focus fully on the decision-making issues. In other words, our concern in this book is not with designing the state signal, but with deciding what action to take as a function of whatever state signal is available", "155dd1ad-a67f-4fc3-9b5a-5c48e59ce63a": "Exploitation is the right thing to do to maximize the expected reward on the one step, but exploration may produce the greater total reward in the long run. For example, suppose a greedy action\u2019s value is known with certainty, while several other actions are estimated to be nearly as good but with substantial uncertainty. The uncertainty is such that at least one of these other actions probably is actually better than the greedy action, but you don\u2019t know which one. If you have many time steps ahead on which to make action selections, then it may be better to explore the nongreedy actions and discover which of them are better than the greedy action. Reward is lower in the short run, during exploration, but higher in the long run because after you have discovered the better actions, you can exploit them many times. Because it is not possible both to explore and to exploit with any single action selection, one often refers to the \u201ccon\ufb02ict\u201d between exploration and exploitation.\n\nIn any speci\ufb01c case, whether it is better to explore or exploit depends in a complex way on the precise values of the estimates, uncertainties, and the number of remaining steps. There are many sophisticated methods for balancing exploration and exploitation for particular mathematical formulations of the k-armed bandit and related problems", "ce50b152-6001-4782-8258-c89e51065a3c": "This network outputs two values:  (p, v) = fo(s)  gs: the game board configuration, 19 x 19 x 17 stacked feature planes; 17 features for each position, 8 past configurations (including current) for the current player + 8 past configurations for the opponent + 1 feature indicating the color (1=black, O=white). We need to code the color specifically because the network is playing with itself and the colors of current player and opponents are switching between steps. pp: the probability of selecting a move over 19%2 + 1 candidates (19%2 positions on the board, in addition to passing). v: the winning probability given the current setting. During self-play, MCTS further improves the action probability distribution 7 ~ p(.) and then the action a; is sampled from this improved policy.\n\nThe reward z; is a binary value indicating whether the current player eventually wins the game. Each move generates an episode tuple (s;, 7, 2,) and it is saved into the replay memory. The details on MCTS are skipped for the sake of space in this post; please read the original paper if you are interested", "c8d679f7-ba68-4e5e-914d-cdecc94b11ff": "Under modest assumptions\u2014 namely, that the average labeling function accuracy \u03b1\u2217 is greater than 50%\u2014it is known that the majority vote converges exponentially to an optimal solution as the average label density \u00afd increases, which serves as an upper bound for the expected optimal advantage as well: Proposition 2 (High-Density Upper Bound) Assume that P(\ufffdi, j \u0338= 0) = pl \u2200i, j, and that \u03b1\u2217 > 1 Medium Label Density In this middle regime, we expect that modeling the accuracies of the labeling functions will deliver the greatest gains in predictive performance because we will have many data points with a small number of disagreeing labeling functions. For such points, the estimated labeling function accuracies can heavily affect the predicted labels. We indeed see gains in the empirical results using an independent generative model that only includes accuracy factors \u03c6Acc i, j (Table 1).\n\nFurthermore, the guarantees in  establish that we can learn the optimal weights, and thus approach the optimal advantage. 3.1.2 Automatically choosing a modeling strategy The bounds in the previous subsection imply that there are settings in which we should be able to safely skip modeling the labeling function accuracies, simply taking the unweighted majority vote instead", "d3d745b1-a726-40b5-88fd-ac99c00cb651": "In fact, \u2212 ln x is a strictly convex function, so the equality will hold if, and only if, q(x) = p(x) for all x. Thus we can interpret the Kullback-Leibler divergence as a measure of the dissimilarity of the two distributions p(x) and q(x). We see that there is an intimate relationship between data compression and density estimation (i.e., the problem of modelling an unknown probability distribution) because the most ef\ufb01cient compression is achieved when we know the true distribution. If we use a distribution that is different from the true one, then we must necessarily have a less ef\ufb01cient coding, and on average the additional information that must be transmitted is (at least) equal to the Kullback-Leibler divergence between the two distributions. Suppose that data is being generated from an unknown distribution p(x) that we wish to model", "7fd2d2ff-bd85-44b1-ac67-a0d84a0a4793": "State B, on the other hand, is valued more than 5, its immediate reward, because from B the agent is taken to B\u2032, which has a positive value. From B\u2032 the expected penalty (negative reward) for possibly running into an edge is more Suppose the agent selects all four actions with equal probability in all states. Figure 3.2 (right) shows the value function, v\u21e1, for this policy, for the discounted reward case with \u03b3 = 0.9. This value function was computed by solving the system of linear equations (3.14). Notice the negative values near the lower edge; these are the result of the high probability of hitting the edge of the grid there under the random policy. State A is the best state to be in under this policy, but its expected return is less than 10, its immediate reward, because from A the agent is taken to A0, from which it is likely to run into the edge of the grid. State B, on the other hand, is valued more than 5, its immediate reward, because from B the agent is taken to B0, which has a positive value", "ba2cb73b-d9c5-430f-b3b7-716b723bc020": "in such a way that if such a signal occurs before the end of the decay time of the change the synaptic connexions between the cells are made more e\u21b5ective. Crow argued against previous proposals that reverberating neural circuits play this role by pointing out that the e\u21b5ect of a reward signal on such a circuit would \u201c...establish the synaptic connexions leading to the reverberation (that is to say, those involved in activity at the time of the reward signal) and not those on the path which led to the adaptive motor output.\u201d Crow further postulated that reward signals are delivered via a \u201cdistinct neural \ufb01ber system,\u201d presumably the one into which Olds and Milner  tapped, that would transform synaptic connections \u201cfrom a short into a long-term form.\u201d In another farsighted hypothesis, Miller proposed a Law-of-E\u21b5ect-like learning rule that includes synaptically-local contingent eligibility traces: ..", "d2ea6ee2-60ad-48da-bce3-b5cbb806e95b": "Each term in the sum in (5.48) requires one multiplication and one addition, leading to an overall computational cost that is O(W). An alternative approach to backpropagation for computing the derivatives of the error function is to use \ufb01nite differences. This can be done by perturbing each weight in turn, and approximating the derivatives by the expression where \u03f5 \u226a 1.\n\nIn a software simulation, the accuracy of the approximation to the derivatives can be improved by making \u03f5 smaller, until numerical roundoff problems arise. The accuracy of the \ufb01nite differences method can be improved signi\ufb01cantly by using symmetrical central differences of the form In this case, the O(\u03f5) corrections cancel, as can be veri\ufb01ed by Taylor expansion on Exercise 5.14 the right-hand side of (5.69), and so the residual corrections are O(\u03f52). The number of computational steps is, however, roughly doubled compared with (5.68). The main problem with numerical differentiation is that the highly desirable O(W) scaling has been lost. Each forward propagation requires O(W) steps, and there are W weights in the network each of which must be perturbed individually, so that the overall scaling is O(W 2)", "125acc8f-a14f-48e0-980e-c4af04249a40": "The log likelihood function for a Gaussian process regression model is easily evaluated using the standard form for a multivariate Gaussian distribution, giving For nonlinear optimization, we also need the gradient of the log likelihood function with respect to the parameter vector \u03b8. We shall assume that evaluation of the derivatives of CN is straightforward, as would be the case for the covariance functions considered in this chapter.\n\nMaking use of the result (C.21) for the derivative of C\u22121 N , together with the result (C.22) for the derivative of ln |CN|, we obtain Because ln p(t|\u03b8) will in general be a nonconvex function, it can have multiple maxima. It is straightforward to introduce a prior over \u03b8 and to maximize the log posterior using gradient-based methods. In a fully Bayesian treatment, we need to evaluate marginals over \u03b8 weighted by the product of the prior p(\u03b8) and the likelihood function p(t|\u03b8). In general, however, exact marginalization will be intractable, and we must resort to approximations. The Gaussian process regression model gives a predictive distribution whose mean and variance are functions of the input vector x", "5c556d31-8890-4f01-9af5-46e37bc22bbe": "If, as is often the case, p(z)f(z) is strongly varying and has a signi\ufb01cant proportion of its mass concentrated over relatively small regions of z space, then the set of importance weights {rl} may be dominated by a few weights having large values, with the remaining weights being relatively insigni\ufb01cant. Thus the effective sample size can be much smaller than the apparent sample size L. The problem is even more severe if none of the samples falls in the regions where p(z)f(z) is large. In that case, the apparent variances of rl and rlf(z(l)) may be small even though the estimate of the expectation may be severely wrong. Hence a major drawback of the importance sampling method is the potential to produce results that are arbitrarily in error and with no diagnostic indication. This also highlights a key requirement for the sampling distribution q(z), namely that it should not be small or zero in regions where p(z) may be signi\ufb01cant. For distributions de\ufb01ned in terms of a graphical model, we can apply the importance sampling technique in various ways.\n\nFor discrete variables, a simple approach is called uniform sampling", "360266b3-72ea-4745-b8fc-27a935cacfca": "We found that, although stronger data augmentation and longer training time do not bene\ufb01t accuracy on ImageNet, these models performed signi\ufb01cantly better than a supervised baseline trained for 90 epochs and ordinary data augmentation for linear evaluation on a subset of transfer datasets.\n\nThe supervised ResNet-50 baseline achieves 76.3% top-1 accuracy on ImageNet, vs. 69.3% for the self-supervised counterpart, while the ResNet-50 (4\u00d7) baseline achieves 78.3%, vs. 76.5% for the self-supervised model. Statistical Signi\ufb01cance Testing We test for the signi\ufb01cance of differences between model with a permutation test. Given predictions of two models, we generate 100,000 samples from the null distribution by randomly exchanging predictions for each example and computing the difference in accuracy after performing this randomization. We then compute the percentage of samples from the null distribution that are more extreme than the observed difference in predictions. For top-1 accuracy, this procedure yields the same result as the exact McNemar test. The assumption of exchangeability under the null hypothesis is also valid for mean per-class accuracy, but not when computing average precision curves", "9482d83e-2602-4c25-aec9-704b1997214b": "This form of synaptic plasticity, called reward-modulated STDP, is much like the actor learning rule discussed here. Synaptic changes that would be produced by regular STDP only occur if there is neuromodulatory input within a time window after a presynaptic spike is closely followed by a postsynaptic spike. Evidence is accumulating that reward-modulated STDP occurs at the spines of medium spiny neurons of the dorsal striatum, with dopamine providing the neuromodulatory factor\u2014 the sites where actor learning takes place in the hypothetical neural implementation of an actor\u2013critic algorithm illustrated in Figure 15.5b. Experiments have demonstrated reward-modulated STDP in which lasting changes in the e\ufb03cacies of corticostriatal synapses occur only if a neuromodulatory pulse arrives within a time window that can last up to 10 seconds after a presynaptic spike is closely followed by a postsynaptic spike . Although the evidence is indirect, these experiments point to the existence of contingent eligibility traces having prolonged time courses", "6a71596a-2572-49a3-ba28-2994ea9d8124": "Specifically, dropout trains the ensemble consisting of all subnetworks that can be formed by removing nonoutput units from an underlying base network, as illustrated in figure 7.6. In most modern neural networks, based on a series of affine transformations and nonlinearities, we can effectively remove a unit from a network by multiplying its output value by zero. This procedure requires some slight modification for models such as radial basis function networks, which take the difference between the unit\u2019s state and some reference value. Here, we present the dropout algorithm in terms of multiplication by zero for simplicity, but it can be trivially modified to work with other operations that remove a unit from the network. Recall that to learn with bagging, we define & different models, construct k  255  CHAPTER 7.\n\nREGULARIZATION FOR DEEP LEARNING  https://www.deeplearningbook.org/contents/regularization.html    Base network  Ensemble of subnetworks  Figure 7.6: Dropout trains an ensemble consisting of all subnetworks that can be con- structed by removing nonoutput units from an underlying base network. Here, we begin with a base network with two visible units and two hidden units", "7d7b6398-2773-4448-94b4-652522217859": "The result is like one step of the policy-iteration algorithm of dynamic programming discussed in Section 4.3 (though it is more like one step of asynchronous value iteration described in Section 4.5 because it changes the action for just the current state).\n\nIn other words, the aim of a rollout algorithm is to improve upon the rollout policy; not to \ufb01nd an optimal policy. Experience has shown that rollout algorithms can be surprisingly e\u21b5ective. For example, Tesauro and Galperin  were surprised by the dramatic improvements in backgammon playing ability produced by the rollout method. In some applications, a rollout algorithm can produce good performance even if the rollout policy is completely random. But the performance of the improved policy depends on properties of the rollout policy and the ranking of actions produced by the Monte Carlo value estimates. Intuition suggests that the better the rollout policy and the more accurate the value estimates, the better the policy produced by a rollout algorithm is likely be . This involves important tradeo\u21b5s because better rollout policies typically mean that more time is needed to simulate enough trajectories to obtain good value estimates. As decision-time planning methods, rollout algorithms usually have to meet strict time constraints", "c6386797-3ccc-4b6f-bee2-732906ab3d26": "Thus if (z, r) is the initial state and (z\u22c6, r\u22c6) is the state after the leapfrog integration, then this candidate state is accepted with probability min (1, exp{H(z, r) \u2212 H(z\u22c6, r\u22c6)}) . (11.67) If the leapfrog integration were to simulate the Hamiltonian dynamics perfectly, then every such candidate step would automatically be accepted because the value of H would be unchanged. Due to numerical errors, the value of H may sometimes decrease, and we would like the Metropolis criterion to remove any bias due to this effect and ensure that the resulting samples are indeed drawn from the required distribution. In order for this to be the case, we need to ensure that the update equations corresponding to the leapfrog integration satisfy detailed balance (11.40). This is easily achieved by modifying the leapfrog scheme as follows. Before the start of each leapfrog integration sequence, we choose at random, with equal probability, whether to integrate forwards in time (using step size \u03f5) or backwards in time (using step size \u2212\u03f5)", "5e0428f1-34f7-4946-9eab-6534e05837c8": "One way to prevent this is to explicitly model the noise on the labels. For example, we can assume that for some small constant \u00a2, the training set label y is correct with probability 1\u2014\u00ab, and otherwise any of the other possible labels might be correct. This assumption is easy to incorporate into the cost function analytically, rather than by explicitly drawing noise samples. For example, label smoothing regularizes a model based on a  https://www.deeplearningbook.org/contents/regularization.html    softmax with k ontput values by replacing the hard 0 and 1 classification targets with targets of k-1 and 1\u2014 \u20ac, respectively. The standard cross-entropy loss may then be used with these soft targets. Maximum likelihood learning with a softmax classifier and hard targets may actually never converge\u2014the softmax can never predict a probability of exactly 0 or exactly 1, so it will continue to learn larger and larger weights, making more extreme predictions forever. It is possible to prevent this scenario using other regularization strategies like weight decay.\n\nLabel smoothing has the advantage of preventing the pursuit of hard probabilities without discouraging correct classification. This strategy has been used since the 1980s  239  CHAPTER 7", "281a5e41-75f4-4d92-8452-bbf91ef75989": "This discussion is concerned with the status of faith for individuals or groups which may be members and members science: the chemical microscope is This essay discusses the mechanisms of reaction with a focus on the molecular structure of nucleite and of enzymes within the cytoskeleton, thus making it easier to understand the process of metabolism and other elements of cellular life", "d99aaaee-791c-4e7d-ac74-e12a8cb19e52": "Another simple way in which the learning of auxiliary tasks can improve performance is best explained by analogy to the psychological phenomena of classical conditioning (Section 14.2). One way of understanding classical conditioning is that evolution has built in a re\ufb02exive (non-learned) association to a particular action from the prediction of a particular signal. For example, humans and many other animals appear to have a built-in re\ufb02ex to blink whenever their prediction of being poked in the eye exceeds some threshold. The prediction is learned, but the association from prediction to eye closure is built in, and thus the animal is saved many unprotected pokes in its eye. Similarly, the association from fear to increased heart rate, or to freezing, can be built in.\n\nAgent designers can do something similar, connecting by design (without learning) predictions of speci\ufb01c events to predetermined actions. For example, a self-driving car that learns to predict whether going forward will produce a collision could be given a built-in re\ufb02ex to stop, or to turn away, whenever the prediction is above some threshold. Or consider a vacuum-cleaning robot that learned to predict whether it might run out of battery power before returning to the charger and that re\ufb02exively headed back to the charger whenever the prediction became non-zero", "6d462fda-d808-4f55-944f-4938ec5cc4bc": "The distribution of observed values x is therefore a mixture of Gaussians, which we take to be of the form where w is the proportion of background clutter and is assumed to be known. The prior over \u03b8 is taken to be Gaussian and Minka  chooses the parameter values a = 10, b = 100 and w = 0.5. The joint distribution of N observations D = {x1, . , xN} and \u03b8 is given by and so the posterior distribution comprises a mixture of 2N Gaussians. Thus the computational cost of solving this problem exactly would grow exponentially with the size of the data set, and so an exact solution is intractable for moderately large N. To apply EP to the clutter problem, we \ufb01rst identify the factors f0(\u03b8) = p(\u03b8) and fn(\u03b8) = p(xn|\u03b8). Next we select an approximating distribution from the exponential family, and for this example it is convenient to choose a spherical Gaussian where n = 1,", "5e720fe6-b1ab-42bd-b22d-a045ed8a8ab2": "Transition probabilities are all set to zero except for those that keep the state index k the same or that increment it by 1, and the model parameters are optimized using 25 iterations of EM. We can gain some insight into the resulting model by running it generatively, as shown in Figure 13.11. One of the most powerful properties of hidden Markov models is their ability to exhibit some degree of invariance to local warping (compression and stretching) of the time axis. To understand this, consider the way in which the digit \u20182\u2019 is written in the on-line handwritten digits example. A typical digit comprises two distinct sections joined at a cusp. The \ufb01rst part of the digit, which starts at the top left, has a sweeping arc down to the cusp or loop at the bottom left, followed by a second moreor-less straight sweep ending at the bottom right. Natural variations in writing style will cause the relative sizes of the two sections to vary, and hence the location of the cusp or loop within the temporal sequence will vary.\n\nFrom a generative perspective such variations can be accommodated by the hidden Markov model through changes in the number of transitions to the same state versus the number of transitions to the successive state", "877cc5b8-9193-41d0-9e76-9f4549fd6a29": "Because a potential function is an arbitrary, nonnegative function over a maximal clique, we can multiply it by any nonnegative functions of subsets of the clique, or equivalently we can add the corresponding energies. In this example, this allows us to add an extra term hxi for each pixel i in the noise-free image.\n\nSuch a term has the effect of biasing the model towards pixel values that have one particular sign in preference to the other. The complete energy function for the model then takes the form which de\ufb01nes a joint distribution over x and y given by We now \ufb01x the elements of y to the observed values given by the pixels of the noisy image, which implicitly de\ufb01nes a conditional distribution p(x|y) over noisefree images. This is an example of the Ising model, which has been widely studied in statistical physics. For the purposes of image restoration, we wish to \ufb01nd an image x having a high probability (ideally the maximum probability). To do this we shall use a simple iterative technique called iterated conditional modes, or ICM , which is simply an application of coordinate-wise gradient ascent", "baba5be0-6871-4235-9450-f828f714930e": "To write a sequential computer program to implement iterative policy evaluation as given by (4.5) you would have to use two arrays, one for the old values, vk(s), and one for the new values, vk+1(s). With two arrays, the new values can be computed one by one from the old values without the old values being changed. Of course it is easier to use one array and update the values \u201cin place,\u201d that is, with each new value immediately overwriting the old one. Then, depending on the order in which the states are updated, sometimes new values are used instead of old ones on the right-hand side of (4.5). This in-place algorithm also converges to v\u21e1; in fact, it usually converges faster than the two-array version, as you might expect, because it uses new data as soon as they are available. We think of the updates as being done in a sweep through the state space. For the in-place algorithm, the order in which states have their values updated during the sweep has a signi\ufb01cant in\ufb02uence on the rate of convergence. We usually have the in-place version in mind when we think of DP algorithms", "5cc881f6-e690-4ba9-903f-3a1a340d7029": "The input at time step \u00a2 is simply the output at time step t\u2014 1. The RNN then defines a directed graphical model over the y variables. We parametrize the joint distribution of these observations using the chain rule (equation 3.6) for conditional probabilities:  P(Y) =P(Y),....y\u00a5M) = P(y\u00a5O fy yO\", y\u2122), (10.31) t=1  where the righthand side of the Id is empty for t = 1, of course. Hence the (1) (7)  a a : c 1  https://www.deeplearningbook.org/contents/rnn.html   negative log-likelihood of a set of values {Y ,---,Y Ff according to such a model is t L= ye ) (10.32)  where L\u00ae = \u2014 log P(y = y | yl Dy) yD), (10.33)  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  Figure 10.7: Fully connected graphical model for a sequencey, f?),...,y,...", "5e4082b7-ca48-4f63-8fa1-a1b31a4a8234": "The above derivation of the backpropagation procedure allowed for general forms for the error function, the activation functions, and the network topology. In order to illustrate the application of this algorithm, we shall consider a particular example. This is chosen both for its simplicity and for its practical importance, because many applications of neural networks reported in the literature make use of this type of network. Speci\ufb01cally, we shall consider a two-layer network of the form illustrated in Figure 5.1, together with a sum-of-squares error, in which the output units have linear activation functions, so that yk = ak, while the hidden units have logistic sigmoid activation functions given by A useful feature of this function is that its derivative can be expressed in a particularly simple form: h\u2032(a) = 1 \u2212 h(a)2", "1947d75b-b2b6-4d51-9de2-d50f94c7fc87": "To summarize, principal component analysis involves evaluating the mean x and the covariance matrix S of the data set and then finding the M eigenvectors of S corresponding to the M largest eigenvalues. Algorithms for finding eigenvectors and eigenvalues, as well as additional theorems related to eigenvector decomposition, can be found in Golub and Van Loan . Note that the computational cost of computing the full eigenvector decomposition for a matrix of size D x Dis O(D3). If we plan to project our data onto the first M principal components, then we only need to find the first M eigenvalues and eigenvectors. This can be done with more efficient techniques, such as the power method , that scale like O(MD 2 ), or alternatively we can make use of the EM algorithm. We now discuss an alternative formulation of peA based on projection error minimization.\n\nTo do this, we introduce a complete orthonormal set of D-dimensional basis vectors {Ui} where i = 1, ..", "6f920f74-2971-4ab7-8a30-9adb5a19fbcf": "First, the large number of weights in a typical deep ANN makes it di\ufb03cult to avoid the problem of over\ufb01tting, that is, the problem of failing to generalize correctly to cases on which the network has not been trained. Second, backpropagation does not work well for deep ANNs because the partial derivatives computed by its backward passes either decay rapidly toward the input side of the network, making learning by deep layers extremely slow, or the partial derivatives grow rapidly toward the input side of the network, making learning unstable. Methods for dealing with these problems are largely responsible for many impressive recent results achieved by systems that use deep ANNs. Over\ufb01tting is a problem for any function approximation method that adjusts functions with many degrees of freedom on the basis of limited training data. It is less of a problem for online reinforcement learning that does not rely on limited training sets, but generalizing e\u21b5ectively is still an important issue.\n\nOver\ufb01tting is a problem for ANNs in general, but especially so for deep ANNs because they tend to have very large numbers of weights. Many methods have been developed for reducing over\ufb01tting", "da160142-a35e-4c88-8a22-1ce91a05141a": "We might imagine ourselves riding the stream of states, looking forward from each state to determine its update, as suggested by Figure 12.4. After looking forward from and updating one state, we move on to the next and never have to work with the preceding state again. Future states, on the other hand, are viewed and processed repeatedly, once from each vantage point preceding them. TD(\u03bb) is one of the oldest and most widely used algorithms in reinforcement learning. It was the \ufb01rst algorithm for which a formal relationship was shown between a more theoretical forward view and a more computationally-congenial backward view using eligibility traces.\n\nHere we will show empirically that it approximates the o\u270fine \u03bb-return algorithm presented in the previous section. TD(\u03bb) improves over the o\u270fine \u03bb-return algorithm in three ways. First it updates the weight vector on every step of an episode rather than only at the end, and thus its estimates may be better sooner. Second, its computations are equally distributed in time rather than all at the end of the episode. And third, it can be applied to continuing problems rather than just to episodic problems", "9423116b-f341-4116-b60d-e42d9e668a26": "In C. M. Bishop and B. Frey (Eds. ), Proceedings Ninth International Workshop on Arti\ufb01cial Intelligence and Statistics, Key West, Florida. Tong, S. and D. Koller . Restricted Bayes optimal classi\ufb01ers. In Proceedings 17th National Conference on Arti\ufb01cial Intelligence, pp. 658\u2013 664. AAAI. Tresp, V. .\n\nScaling kernel-based systems to large data sets. Data Mining and Knowledge Discovery 5(3), 197\u2013211. Valiant, L. G. A theory of the learnable. Communications of the Association for Computing Machinery 27, 1134\u20131142. Vapnik, V. N. Estimation of dependences based on empirical data. Springer. Vapnik, V. N. The nature of statistical learning theory. Springer. Veropoulos, K., C. Campbell, and N. Cristianini", "b123ac1d-3e8b-44e9-90ba-793fe78ad421": "However, sample averages are not a completely satisfactory solution because they may perform poorly on nonstationary problems. Is it possible to avoid the bias of constant step sizes while retaining their advantages on nonstationary problems? One way is to use a step size of to process the nth reward for a particular action, where \u21b5 > 0 is a conventional constant step size, and \u00afon is a trace of one that starts at 0: Exploration is needed because there is always uncertainty about the accuracy of the action-value estimates. The greedy actions are those that look best at present, but some of the other actions may actually be better. \"-greedy action selection forces the non-greedy actions to be tried, but indiscriminately, with no preference for those that are nearly greedy or particularly uncertain", "96f5b4a4-fb84-4ae1-8aca-fee76d70ea1b": "As an example of a zero-shot learning setting, consider the problem of having  536  https://www.deeplearningbook.org/contents/representation.html    CHAPTER 15. REPRESENTATION LEARNING  a learner read a large collection of text and then solve object recognition problems. It may be possible to recognize a specific object class even without having seen an image of that object if the text describes the object well enough. For example, having read that a cat has four legs and pointy ears, the learner might be able to guess that an image is a cat without having seen a cat before. Zero-data learning  and zero-shot learning  are only possible because additional information has been exploited during training.\n\nWe can think of the zero-data learning scenario as including three random variables: the traditional inputs zx, the traditional outputs or targets y, and an additional random variable describing the task, T. The model is trained to estimate the conditional distribution p(y | v,T), where T is a description of the task we wish the model to perform", "921f1dc1-f59b-45fd-ab18-89235e8447ec": "In the average-reward setting, the quality of a policy \u21e1 is de\ufb01ned as the average rate of reward, or simply average reward, while following that policy, which we denote as r(\u21e1): where the expectations are conditioned on the initial state, S0, and on the subsequent actions, A0, A1, . , At\u22121, being taken according to \u21e1. \u00b5\u21e1 is the steady-state distribution, \u00b5\u21e1(s) .= limt!1 Pr{St =s |A0:t\u22121 \u21e0\u21e1}, which is assumed to exist for any \u21e1 and to be independent of S0. This assumption about the MDP is known as ergodicity.\n\nIt means that where the MDP starts or any early decision made by the agent can have only a temporary e\u21b5ect; in the long run the expectation of being in a state depends only on the policy and the MDP transition probabilities. Ergodicity is su\ufb03cient to guarantee the existence of the limits in the equations above. There are subtle distinctions that can be drawn between di\u21b5erent kinds of optimality in the undiscounted continuing case", "b21dea30-8025-4db9-9c47-d2216ac7f968": "In policy gradient methods, the policy can be parameterized in any way, as long as \u21e1(a|s, \u2713) is di\u21b5erentiable with respect to its parameters, that is, as long as r\u21e1(a|s, \u2713) (the column vector of partial derivatives of \u21e1(a|s, \u2713) with respect to the components of \u2713) exists and is \ufb01nite for all s 2 S, a 2 A(s), and \u2713 2 Rd0. In practice, to ensure exploration we generally require that the policy never becomes deterministic (i.e., that \u21e1(a|s, \u2713) 2 (0, 1), for all s, a, \u2713). In this section we introduce the most common parameterization for discrete action spaces and point out the advantages it o\u21b5ers over action-value methods. Policy-based methods also o\u21b5er useful ways of dealing with continuous action spaces, as we describe later in Section 13.7", "1e51b269-ffbd-4eca-bc2d-7225a1671c14": "During training, however, the approximate inference network (or encoder) q(z | a) is used to obtain z, and Pmodei(x | Z) is then viewed as a decoder network. The key insight behind variational autoencoders is that they can be trained by maximizing the variational lower bound \u00a3(q) associated with data point x:  L\u00a3(q) = Rewq(z|a) log Pmodei(Z; x) + H(q(z | x)) (20.76) = Ee wq(z|a) log Pmodel(\u00ae | z) _ Dui (qz | L)||Pmode (z)) (20.77) < O\u00a3 Pmodel(Z).\n\n(20.78)  In equation 20.76, we recognize the first term as the joint log-likelihood of the visible and hidden variables under the approximate posterior over the latent variables (just  https://www.deeplearningbook.org/contents/generative_models.html    as with EM, except that we use an approximate rather than the exact posterior). We recognize also a second term, the entropy of the approximate posterior", "f2383460-7c76-4091-b56f-6197ceb0a44f": "The activity of cortical neurons conveys a wealth of information about sensory input, internal states, and motor activity. The axons of cortical neurons make synaptic contacts on the dendrites of the main input/output neurons of the striatum, called medium spiny neurons. Output from the striatum loops back via other basal ganglia nuclei and the thalamus to frontal areas of cortex, and to motor areas, making it possible for the striatum to in\ufb02uence movement, abstract decision processes, and reward processing.\n\nTwo main subdivisions of the striatum are important for reinforcement learning: the dorsal striatum, primarily implicated in in\ufb02uencing action selection, and the ventral striatum, thought to be critical for di\u21b5erent aspects of reward processing, including the assignment of a\u21b5ective value to sensations. The dendrites of medium spiny neurons are covered with spines on whose tips the axons of neurons in the cortex make synaptic contact. Also making synaptic contact with these spines\u2014in this case contacting the spine stems\u2014are axons of dopamine neurons (Figure 15.1)", "a9bfe953-d4fa-4455-a760-48adf2919b78": ", ym\u22121(x) are \ufb01xed, as are their coef\ufb01cients \u03b11, . , \u03b1m\u22121, and so we are minimizing only with respect to \u03b1m and ym(x).\n\nSeparating off the contribution from base classi\ufb01er ym(x), we can then write the error function in the form because we are optimizing only \u03b1m and ym(x). If we denote by Tm the set of data points that are correctly classi\ufb01ed by ym(x), and if we denote the remaining misclassi\ufb01ed points by Mm, then we can in turn rewrite the error function in the When we minimize this with respect to ym(x), we see that the second term is constant, and so this is equivalent to minimizing (14.15) because the overall multiplicative factor in front of the summation does not affect the location of the minimum. Similarly, minimizing with respect to \u03b1m, we obtain (14.17) in which \u03f5m is de\ufb01ned by (14.16)", "4a3fe2e7-94f0-4aac-ae7b-7bfecab838ad": "One can associate an image dest to a word Ytest, even if no image of that word was  https://www.deeplearningbook.org/contents/representation.html    ever presented, simply because word representations SY (ytest ) and image representations Fela est) can be related to each other via the maps between representation spaces. It works because, although that image and that word were never paired, their respective feature vectors fx(Ztest ) and fy(Ytest ) have been related to each other. Figure inspired  from suggestion by Hrant Khachatrian. 538  CHAPTER 15.\n\nREPRESENTATION LEARNING  explains how one can perform multimodal learning, capturing a representation in one modality, a representation in the other, and the relationship (in general a joint distribution) between pairs (a, y) consisting of one observation x in one modality and another observation y in the other modality . By learning all three sets of parameters (from \u00ab to its representation, from y to its representation, and the relationship between the two representations), concepts in one representation are anchored in the other, and vice versa, allowing one to meaningfully generalize to new pairs. The procedure is illustrated in figure 15.3", "81844d16-1c48-4a56-81b3-1ddb1a2e6529": "The use of momentum in combination with rescaling does not have a clear theoretical motivation. Second, Adam includes bias corrections to the estimates of both the first-order moments (the momentum erm) and the (uncentered) second-order moments to account for their initialization at the origin (see algorithm 8.7). RMSProp also incorporates an estimate of the  Algorithm 8.6 RMSProp algorithm with Nesterov momentum  Require: Global learning rate \u20ac, decay rate p, momentum coefficient a Require: Initial parameter 0, initial velocity v Initialize accumulation variable r = 0 while stopping criterion not met do Sample a minibatch of m examples from the training set {a),...,2(\u2122} with corresponding targets y @, Compute interim update: 0+ O+aw. Compute gradient: g + 1Vg >; L(f (a0), y). Accumulate gradient: r << pr +(1\u2014p)g Og. Compute velocity update: v + av Ti Og. ( Fi applied element-wise) Apply update: 0+ 6+ v", "d6d062fa-c7d4-4551-b056-ae9cce3a8f4a": "In this chapter we explore the convergence problems, take a closer look at the theory of linear function approximation, introduce a notion of learnability, and then discuss new algorithms with stronger convergence guarantees for the o\u21b5-policy case. In the end we will have improved methods, but the theoretical results will not be as strong, nor the empirical results as satisfying, as they are for on-policy learning. Along the way, we will gain a deeper understanding of approximation in reinforcement learning for on-policy learning as well as o\u21b5-policy learning. Recall that in o\u21b5-policy learning we seek to learn a value function for a target policy \u21e1, given data due to a di\u21b5erent behavior policy b.\n\nIn the prediction case, both policies are static and given, and we seek to learn either state values \u02c6v \u21e1 v\u21e1 or action values \u02c6q \u21e1 q\u21e1. In the control case, action values are learned, and both policies typically change during learning\u2014\u21e1 being the greedy policy with respect to \u02c6q, and b being something more exploratory such as the \"-greedy policy with respect to \u02c6q", "17f58820-1b6d-4348-bcd2-74e7a55225df": "Dzmitry Bahdanau, Philemon Brakel, Kelvin Xu, Anirudh Goyal, Ryan Lowe, Joelle Pineau, Aaron Courville, and Yoshua Bengio. 2016. An actor-critic algorithm for sequence prediction. arXiv preprint arXiv:1607.07086. Samuel Bowman, Gabor Angeli, Christopher Potts, and Christopher D Manning. 2015. A large annotated corpus for learning natural language inference. In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 632\u2013642. Yen-Chun Chen and Mohit Bansal. 2018. Fast abstractive summarization with reinforce-selected sentence rewriting. In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 675\u2013686. Leshem Choshen, Lior Fox, Zohar Aizenbud, and Omri Abend. 2020. On the weaknesses of reinforcement learning for neural machine translation. In International Conference on Learning Representations", "18742ad4-9695-47b7-bb88-381ef1c6c4a6": "The former kind of probability, related directly to the rates at which events occur, is known as frequentist probability, while the latter, related to  newalitadiven lavenln AL nantaintee fA lene 24 Daeernntianwn nnn LaLilti.--  https://www.deeplearningbook.org/contents/prob.html    YUALMLALIVE 1CVCID VL COL Lally, ib KLUWILI ad bDayvcsiall pL UuvaWViIlivy.\n\nIf we list several properties that we expect common sense reasoning about uncertainty to have, then the only way to satisfy those properties is to treat Bayesian probabilities as behaving exactly the same as frequentist probabilities. For example, if we want to compute the probability that a player will win a poker game given that she has a certain set of cards, we use exactly the same formulas as when we compute the probability that a patient has a disease given that she has certain symptoms. For more details about why a small set of common sense  53  CHAPTER 3. PROBABILITY AND INFORMATION THEORY  assumptions implies that the same axioms must control both kinds of probability, see Ramsey", "0b05a974-f1d5-4214-b702-d71911746ab7": "An estimator 6, is said to be asymptotically unbiased if  lim mann hinc(Am\\ A Wt tennltan ahd Ite min R/Am\\ a  https://www.deeplearningbook.org/contents/ml.html  quae PN aay ry) = UL WILE LIP Ues Ullal LL oN uy =O, Example: Bernoulli Distribution Consider a set of samples {a pene al\u201d) that are independently and identically distributed according to a Bernoulli distri-  122  CHAPTER 5", "318ee19b-52ef-45ff-89fe-07da238992cf": "If the sign of the covariance is positive, then both variables tend to take on relatively high values simultaneously. If the sign of the covariance is negative, then one variable tends to take on a relatively high value at the times that the other takes on a relatively low value and vice versa. Other measures such as correlation normalize the contribution of each variable in order to measure only how much the variables are related, rather than also being affected by the scale of the separate variables. The notions of covariance and dependence are related but distinct concepts. They are related because two variables that are independent have zero covariance, and two variables that have nonzero covariance are dependent. Independence, however, is a distinct property from covariance. For two variables to have zero covariance, there must be no linear dependence between them. Independence is a stronger requirement than zero covariance, because independence also excludes nonlinear relationships. It is possible for two variables to be dependent but have zero covariance. For example, suppose we first sample a real number x from a uniform distribution over the interval .\n\nWe next sample a random variable s.  59  CHAPTER 3", "52954f49-aba6-4543-b0c9-b3ba600cdbfa": "Global con\ufb01gurations that have a relatively high probability are those that \ufb01nd a good balance in satisfying the (possibly con\ufb02icting) in\ufb02uences of the clique potentials. We turn now to a speci\ufb01c example to illustrate the use of undirected graphs. We can illustrate the application of undirected graphs using an example of noise removal from a binary image . Although a very simple example, this is typical of more sophisticated applications. Let the observed noisy image be described by an array of binary pixel values yi \u2208 {\u22121, +1}, where the index i = 1, . , D runs over all pixels. We shall suppose that the image is obtained by taking an unknown noise-free image, described by binary pixel values xi \u2208 {\u22121, +1} and randomly \ufb02ipping the sign of pixels with some small probability. An example binary image, together with a noise corrupted image obtained by \ufb02ipping the sign of the pixels with probability 10%, is shown in Figure 8.30.\n\nGiven the noisy image, our goal is to recover the original noise-free image. Because the noise level is small, we know that there will be a strong correlation between xi and yi", "ebf766b6-89a5-4464-a568-cfc613425eac": "The design process consists of trial and error, intuiting that a kind of hidden unit may work well, and then training a network with that kind of hidden unit and evaluating its performance on a validation set. Some of the hidden units included in this list are not actually differentiable at all input points. For example, the rectified linear function g(z) = max{0, z} is not differentiable at z = 0. This may seem like it invalidates g for use with a gradient-based learning algorithm. In practice, gradient descent still performs well enough for these models to be used for machine learning tasks. This is in part because neural network training algorithms do not usually arrive at a local minimum of the cost function, but instead merely reduce its value significantly, as shown in figure 4.3. (These ideas are described further in chapter 8.) Because we do not expect training to actually reach a point where the gradient is 0, it is acceptable for the minima of the cost function to correspond to points with undefined gradient", "10e6d565-b922-4441-8de4-18c4b872a269": "Let's see how it works in an action-value actor-critic algorithm.\n\nInitialize s, 8, w at random; sample a ~ 7(a|s; 0). For t = 1... T: Sample reward r; ~ R(s, a) and next state s\u2019 ~ P(s'|s, a). Then sample the next action a\u2019 ~ 7(s\u2019, a\u2019; 8). Update policy parameters: 0 ~\u2014 6 + agQ(s, a; w) Vo ln x(als; 6). Compute the correction for action-value at time t: Gru =T + Q(s','; w) \u2014 Q(s, a; w) and use it to update value function parameters: we wt ay,Gir.1Vy~Q(s, a; w). https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log  Update a + a\u2019 ands \u00a2 3\u2019", "d0e546f3-ae56-4b09-8bc4-785d790be14c": "NUMERICAL COMPUTATION  solution where the constraint is active. By differentiating the Lagrangian with respect to 2, we obtain the equation  A\u2019 Ax \u2014A\u2018b+2\\\" = 0. (4.25) This tells us that the solution will take the form x =(A'A+2\\1) 1A 'b. (4.26)  The magnitude of A must be chosen such that the result obeys the constraint. We can find this value by performing gradient ascent on 4. To do so, observe  (a)  _ Tt Hy L(#:A) aw \u00ab2-1. (4.27)  When the norm of x exceeds 1, this derivative is positive, so to follow the derivative uphill and increase the Lagrangian with respect to , we increase A. Because the coefficient on the \u00ab!' a penalty has increased, solving the linear equation for \u00ab will now yield a solution with a smaller norm. The process of solving the linear equation and adjusting A continues until a has the correct norm and the derivative on A is 0. This concludes the mathematical preliminaries that we use to develop machine learning algorithms. We are now ready to build and analyze some full-fledged learning systems", "3fda57ff-73c4-4fb7-ac11-30c092559610": "can resoh'e this problem as foIl\",\",'\" Fir;l. let us define X to be the (N \" DJ\u00b7 dimensional centred data matrix, whose nth row is given by (xn - X)T. The covariance matrix (12.3) can then be written as S = N- 1XTX, and the corresponding eigenvector equation becomes Now pre-multiply both sides by X to give which is an eigenvector equation for the N x N matrix N- 1XXT . We see that this has the same N -1 eigenvalues as the original covariance matrix (which itself has an additional D - N + 1 eigenvalues of value zero). Thus we can solve the eigenvector problem in spaces of lower dimensionality with computational cost O(N3 ) instead of O(D3 ). In order to determine the eigenvectors, we multiply both sides of (12.28) by X T to give from which we see that (XTVi) is an eigenvector of S with eigenvalue Ai", "30b7bdd9-e789-4d16-b43f-bd1c0219cea0": "For large D, the total number of parameters therefore grows quadratically with D, and the computational task of manipulating and inverting large matrices can become prohibitive. One way to address this problem is to use restricted forms of the covariance matrix. If we consider covariance matrices that are diagonal, so that \u03a3 = diag(\u03c32 pendent parameters in the density model.\n\nThe corresponding contours of constant density are given by axis-aligned ellipsoids. We could further restrict the covariance matrix to be proportional to the identity matrix, \u03a3 = \u03c32I, known as an isotropic covariance, giving D + 1 independent parameters in the model and spherical surfaces of constant density. The three possibilities of general, diagonal, and isotropic covariance matrices are illustrated in Figure 2.8. Unfortunately, whereas such approaches limit the number of degrees of freedom in the distribution and make inversion of the covariance matrix a much faster operation, they also greatly restrict the form of the probability density and limit its ability to capture interesting correlations in the data", "b463aee7-038d-4b1d-b677-8a0cba08d7cf": "Intuitively, we can think of the distribution p(x) as being defined by taking an isotropic Gaussian 'spray can' and moving it across the principal subspace spraying Gaussian ink with density determined by 0-2 and weighted by the prior distribution. The accumulated ink density gives rise to a 'pancake' shaped distribution representing the marginal density p(x).\n\nThe predictive distribution p(x) is governed by the parameters JL, W, and 0-2 \u2022 However, there is redundancy in this parameterization corresponding to rotations of the latent space coordinates. To see this, consider a matrix W = WR where R is an orthogonal matrix. Using the orthogonality property RRT = I, we see that the quantity WWT that appears in the covariance matrix C takes the form and hence is independent of R. Thus there is a whole family of matrices W all of which give rise to the same predictive distribution. This invariance can be understood in terms of rotations within the latent space. We shall return to a discussion of the number of independent parameters in this model later", "9ad85320-0bc0-4331-b1d6-f55fc09b7ce8": "This matrix can be singular whenever the data-generating distribution truly has no variance in some direction, or when no variance is observed in some direction because there are fewer examples (rows of X ) than input features (columns of X). In this case, many forms of regularization correspond to inverting X'X+al instead. This regularized matrix is guaranteed to be invertible. These linear problems have closed form solutions when the relevant matrix is invertible. It is also possible for a problem with no closed form solution to be underdetermined. An example is logistic regression applied to a problem where the classes are linearly separable. If a weight vector w is able to achieve perfect classification, then 2w will also achieve perfect classification and higher likelihood.\n\nAn iterative optimization procedure like stochastic gradient descent will continually increase the magnitude of w and, in theory, will never halt", "a45d0d74-d40e-4a6a-a0b8-56a954abbf23": "Now suppose that we observe the fuel gauge and discover that it reads empty, i.e., G = 0, corresponding to the middle graph in Figure 8.21. We can use Bayes\u2019 theorem to evaluate the posterior probability of the fuel tank being empty. First we evaluate the denominator for Bayes\u2019 theorem given by p(F = 0|G = 0) = p(G = 0|F = 0)p(F = 0) and so p(F = 0|G = 0) > p(F = 0). Thus observing that the gauge reads empty makes it more likely that the tank is indeed empty, as we would intuitively expect.\n\nNext suppose that we also check the state of the battery and \ufb01nd that it is \ufb02at, i.e., B = 0. We have now observed the states of both the fuel gauge and the battery, as shown by the right-hand graph in Figure 8.21. The posterior probability that the fuel tank is empty given the observations of both the fuel gauge and the battery state is then given by where the prior probability p(B = 0) has cancelled between numerator and denominator", "0a965551-d8cb-4410-95b7-f7bed3212532": "Note that the value of the blue curve at any point, such as that indicated by the vertical green line, corresponds to the slope of the red curve at the same point. Conversely, the value of the red curve at this point corresponds to the area under the blue curve indicated by the shaded green region. In the stochastic threshold model, the class label takes the value t = 1 if the value of a = wT\u03c6 exceeds a threshold, otherwise it takes the value t = 0. This is equivalent to an activation function given by the cumulative distribution function f(a). If the value of \u03b8 is drawn from a probability density p(\u03b8), then the corresponding activation function will be given by the cumulative distribution function As a speci\ufb01c example, suppose that the density p(\u03b8) is given by a zero mean, unit variance Gaussian.\n\nThe corresponding cumulative distribution function is given by which is known as the probit function. It has a sigmoidal shape and is compared with the logistic sigmoid function in Figure 4.9. Note that the use of a more general Gaussian distribution does not change the model because this is equivalent to a re-scaling of the linear coef\ufb01cients w", "b15ba92a-6663-42e6-803a-c54ea7347927": "The support set is part of the model input. The final optimization uses the mini-batch B* to compute the loss and update the model parameters through backpropagation, in the same way as how we use it in the supervised learning.\n\nYou may consider each pair of sampled dataset (S\u00a5, Bt) as one data point. The model is trained such that it can generalize to other datasets. Symbols in red are added for meta-learning in addition to the supervised learning objective. O= argmax Ercc|Estcp,ptcol SS P,(z,y,S\u201d)]]| (z,y)e BE  The idea is to some extent similar to using a pre-trained model in image classification (ImageNet) or language modeling (big text corpora) when only a limited set of task-specific data samples are available. Meta-learning takes this idea one step further, rather than fine-tuning according to one down-steam task, it optimizes the model to be good at many, if not all", "7e2b1c7d-af5b-4b9d-aca2-efdcc31adc0f": "Maayan F-A, Eyal K, Jacob G, Hayit G.GAN-based data augmentation for improved liver lesion classification. arXiv preprint. 2018. Joseph R, Santosh D, Ross G, Ali F. You only look once: unified, real-time object detection. In: CVPR'16. 2016. Ross G, Jeff D, Trevor D, Jitendra M. Rich feature hierarchies for accurate object detection and semantic segmenta- tion. In: CVPR'14. 2014. Ross G. Fast R-CNN. CoRR, abs/1504.08083. 2015. Shaoging R, Kaiming H, Ross G, Jian S. Faster R-CNN: towards real-time object detection with region proposal networks. In: NIPS, 2015. Jonathan L, Evan S, Trevor D. Fully convolutional networks for semantic segmentation. CoRR, abs/1411.4038. 2014", "8474afb4-c6cc-4377-a0da-55df44e78c0f": "\u201cLearning a Nonlinear Embedding by Preserving Class Neighbourhood Structure\u201d AISTATS 2007. 5. Michael Gutmann and Aapo Hyvarinen. \u201cNoise-contrastive estimation: A new estimation principle for unnormalized statistical models.\" AISTATS 2010. 6] Kihyuk Sohn et al. \u201cImproved Deep Metric Learning with Multi-class N-pair Loss Objective\" NIPS 2016. 7] Nicholas Frosst, Nicolas Papernot and Geoffrey Hinton. \u201cAnalyzing and Improving Representations with the Soft Nearest Neighbor Loss.\" ICML 2019  8] Tongzhou Wang and Phillip Isola.\n\n\u201cUnderstanding Contrastive Representation Learning through Alignment and Uniformity on the Hypersphere.\" ICML 2020. 9] Zhirong Wu et al. \u201cUnsupervised feature learning via non-parametric instance-level discrimination.\" CVPR 2018. 10] Ekin D. Cubuk et al", "fc3a3d1b-f896-412b-9bbe-f825b5e0f1a3": "By considering any performance that scored at or above 75% of the human score to be comparable to, or better than, human-level play, Mnih et al. concluded that the levels of play DQN learned reached or exceeded human level on 29 of the 46 games. See Mnih et al. for a more detailed account of these results. For an arti\ufb01cial learning system to achieve these levels of play would be impressive enough, but what makes these results remarkable\u2014and what many at the time considered to be breakthrough results for arti\ufb01cial intelligence\u2014is that the very same learning system achieved these levels of play on widely varying games without relying on any game-speci\ufb01c modi\ufb01cations. A human playing any of these 49 Atari games sees 210\u21e5160 pixel image frames with 128 colors at 60Hz. In principle, exactly these images could have formed the raw input to DQN, but to reduce memory and processing requirements, Mnih et al. preprocessed each frame to produce an 84\u21e584 array of luminance values. Because the full states of many of the Atari games are not completely observable from the image frames, Mnih et al", "81c47ac6-cddb-4620-83fb-5052ed04d36f": ", xD)T. This is often simply known as linear regression. The key property of this model is that it is a linear function of the parameters w0, . , wD. It is also, however, a linear function of the input variables xi, and this imposes signi\ufb01cant limitations on the model. We therefore extend the class of models by considering linear combinations of \ufb01xed nonlinear functions of the input variables, of the form where \u03c6j(x) are known as basis functions. By denoting the maximum value of the index j by M \u2212 1, the total number of parameters in this model will be M. The parameter w0 allows for any \ufb01xed offset in the data and is sometimes called a bias parameter (not to be confused with \u2018bias\u2019 in a statistical sense). It is often convenient to de\ufb01ne an additional dummy \u2018basis function\u2019 \u03c60(x) = 1 so that where w = (w0, . , wM\u22121)T and \u03c6 = (\u03c60, . , \u03c6M\u22121)T", "75e9058a-193b-437d-af03-9f5e60270d57": "We can extend the Laplace method to approximate a distribution p(z) = f(z)/Z de\ufb01ned over an M-dimensional space z. At a stationary point z0 the gradient \u2207f(z) will vanish. Expanding around this stationary point we have where the M \u00d7 M Hessian matrix A is de\ufb01ned by and \u2207 is the gradient operator. Taking the exponential of both sides we obtain The distribution q(z) is proportional to f(z) and the appropriate normalization coef\ufb01cient can be found by inspection, using the standard result (2.43) for a normalized multivariate Gaussian, giving where |A| denotes the determinant of A. This Gaussian distribution will be well de\ufb01ned provided its precision matrix, given by A, is positive de\ufb01nite, which implies that the stationary point z0 must be a local maximum, not a minimum or a saddle point. In order to apply the Laplace approximation we \ufb01rst need to \ufb01nd the mode z0, and then evaluate the Hessian matrix at that mode", "c975c226-c1ad-46fb-8765-98a34b3d42d7": "Freund, Y., & Schapire, R. E. A decision-theoretic generalization of on-line learning and an application to boosting. Journal of computer and system sciences, 55(1), 119\u2013139. Ganchev, K., Gillenwater, J., Taskar, B., et al. Posterior regularization for structured latent variable models. Journal of Machine Learning Research, 11(Jul), 2001\u20132049. Gebru, I. D., Alameda-Pineda, X., Forbes, F., & Horaud, R. EM algorithms for weighteddata clustering with application to audio-visual scene analysis. IEEE transactions on pattern analysis and machine intelligence, 38(12), 2402\u20132415. Goodfellow, I. J., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., Courville, A., & Bengio, Y", "aa3ddb8b-3615-4a7a-9ff2-93a8e4ba7541": "Fr\u00b4emaux, Sprekeler, and Gerstner  proposed theoretical conditions for successful learning by rules based on reward-modulated STDP. 15.9 Klopf\u2019s hedonistic neuron hypothesis  inspired our actor\u2013critic algorithm implemented as an ANN with a single neuron-like unit, called the actor unit, implementing a Law-of-E\u21b5ect-like learning rule . Ideas related to Klopf\u2019s synaptically-local eligibility have been proposed by others. Crow  proposed that changes in the synapses of cortical neurons are sensitive to the consequences of neural activity. Emphasizing the need to address the time delay between neural activity and its consequences in a reward-modulated form of synaptic plasticity, he proposed a contingent form of eligibility, but associated with entire neurons instead of individual synapses.\n\nAccording to his hypothesis, a wave of neuronal activity leads to a short-term change in the cells involved in the wave such that they are picked out from a background of cells not so activated. ... such cells are rendered sensitive by the short-term change to a reward signal ..", "5f8f2305-2d29-441b-9729-c324c5c5958c": "Chapter 7  Regularization for Deep Learning  A central problem in machine learning is how to make an algorithm that will perform well not just on the training data, but also on new inputs. Many strategies used in machine learning are explicitly designed to reduce the test error, possibly at the expense of increased training error. These strategies are known collectively as regularization. A great many forms of regularization are available to the deep learning practitioner. In fact, developing more effective regularization strategies has been one of the major research efforts in the field. Chapter 5 introduced the basic concepts of generalization, underfitting, overfit- ting, bias, variance and regularization. If you are not already familiar with these notions, please refer to that chapter before continuing with this one. In this chapter, we describe regularization in more detail, focusing on regular- ization strategies for deep models or models that may be used as building blocks to form deep models. Some sections of this chapter deal with standard concepts in machine learning. If you are already familiar with these concepts, feel free to skip the relevant sections", "1a4cf483-b010-4630-b12f-cbf07cdc92ff": "Thermal soaring, as this behavior is called, is a complex skill requiring responding to subtle environmental cues to increase altitude by exploiting a rising column of air for as long as possible. Reddy, Celani, Sejnowski, and Vergassola  used reinforcement learning to investigate thermal soaring policies that are e\u21b5ective in the strong atmospheric turbulence usually accompanying rising air currents.\n\nTheir primary goal was to provide insight into the cues birds sense and how they use them to achieve their impressive thermal soaring performance, but the results also contribute to technology relevant to autonomous gliders. Reinforcement learning had previously been applied to the problem of navigating e\ufb03ciently to the vicinity of a thermal updraft  but not to the more challenging problem of soaring within the turbulence of the updraft itself. Reddy et al. modeled the soaring problem as a continuing MDP with discounting. The agent interacted with a detailed model of a glider \ufb02ying in turbulent air. They devoted signi\ufb01cant e\u21b5ort toward making the model generate realistic thermal soaring conditions, including investigating several di\u21b5erent approaches to atmospheric modeling", "f43dec00-80fd-4041-85f2-c1a5f1bdf6b7": "Salakhutdinov and Larochelle  showed that a single pass in a  learned inference network could yield faster inference than iterating the mean field fixed-point equations in a DBM.\n\nThe training procedure is based on running the inference network, then applying one step of mean field to improve its estimates, and training the inference network to output this refined estimate instead of its original estimate. We have already seen in section 14.8 that the predictive sparse decomposition model trains a shallow encoder network to predict a sparse code for the input. This can be seen as a hybrid between an autoencoder and sparse coding. It is possible to devise probabilistic semantics for the model, under which the encoder may be viewed as performing learned approximate MAP inference. Due to its shallow encoder, PSD is not able to implement the kind of competition between units that we have seen in mean field inference. However, that problem can be remedied by training a deep encoder to perform learned approximate inference, as in the ISTA technique . Learned approximate inference has recently become one of the dominant approaches to generative modeling, in the form of the variational autoencoder", "e3fd4e0f-4ccf-4ccd-b1b2-5eb86093f51f": "Taking the logarithm, we obtain Comparison with the log likelihood function (9.14) for the incomplete data shows that the summation over k and the logarithm have been interchanged. The logarithm now acts directly on the Gaussian distribution, which itself is a member of the exponential family. Not surprisingly, this leads to a much simpler solution to the maximum likelihood problem, as we now show. Consider \ufb01rst the maximization with respect to the means and covariances. Because zn is a K-dimensional vector with all elements equal to 0 except for a single element having the value 1, the complete-data log likelihood function is simply a sum of K independent contributions, one for each mixture component. Thus the maximization with respect to a mean or a covariance is exactly as for a single Gaussian, except that it involves only the subset of data points that are \u2018assigned\u2019 to that component. For the maximization with respect to the mixing coef\ufb01cients, we note that these are coupled for different values of k by virtue of the summation constraint (9.9)", "c84e1dc2-17ff-4c4b-b11e-4dc62946bc10": "Contrastive learning needs stronger data augmentation than supervised learning To further demonstrate the importance of the color augmentation, we adjust the strength of color augmentation as 5Supervised models are trained for 90 epochs; longer training improves performance of stronger augmentation by \u223c 0.5%. shown in Table 1. Stronger color augmentation substantially improves the linear evaluation of the learned unsupervised models. In this context, AutoAugment , a sophisticated augmentation policy found using supervised learning, does not work better than simple cropping + (stronger) color distortion. When training supervised models with the same set of augmentations, we observe that stronger color augmentation does not improve or even hurts their performance. Thus, our experiments show that unsupervised contrastive learning bene\ufb01ts from stronger (color) data augmentation than supervised learning.\n\nAlthough previous work has reported that data augmentation is useful for self-supervised learning , we show that data augmentation that does not yield accuracy bene\ufb01ts for supervised learning can still help considerably with contrastive learning. 4. Architectures for Encoder and Head A Simple Framework for Contrastive Learning of Visual Representations 4.2", "22a900ee-ea74-418d-b11d-95b264b5d2a7": "Furthermore, let one of the basis functions be constant, say \u03c60(x) = 1.\n\nBy taking suitable linear combinations of these basis functions, we can construct a new basis set \u03c8j(x) spanning the same space but that are orthonormal, so that where Ijk is de\ufb01ned to be 1 if j = k and 0 otherwise, and we take \u03c80(x) = 1. Show that for \u03b1 = 0, the equivalent kernel can be written as k(x, x\u2032) = \u03c8(x)T\u03c8(x\u2032) where \u03c8 = (\u03c81, . , \u03c8M)T. Use this result to show that the kernel satis\ufb01es the summation constraint N \ufffd 3.15 (\u22c6) www Consider a linear basis function model for regression in which the parameters \u03b1 and \u03b2 are set using the evidence framework. Show that the function E(mN) de\ufb01ned by (3.82) satis\ufb01es the relation 2E(mN) = N. 3.16 (\u22c6 \u22c6) Derive the result (3.86) for the log evidence function p(t|\u03b1, \u03b2) of the linear regression model by making use of (2.115) to evaluate the integral (3.77) directly", "c74017dc-5d53-49a7-9ae3-6da4628161ea": "Adversarial search to add noise has been shown to improve performance on adversarial examples, but it is unclear if this is useful for the objective of reducing overfitting.\n\nFuture work seeks to expand on the relationship between resistance to adversarial attacks and actual  performance on test datasets. GAN-based Data Augmentation  Another exciting strategy for Data Augmentation is generative modeling. Genera- tive modeling refers to the practice of creating artificial instances from a dataset such that they retain similar characteristics to the original set. The principles of adversarial training discussed above have led to the very interesting and massively popular genera- tive modeling framework known as GANs. Bowles et al. describe GANs as a way  to \u201cunlock\u201d additional information from a dataset. GANs are not the only generative Shorten and Khoshgoftaar J Big Data  6:60   Generator G(z) Discriminator D(x)  content source  Fig. 16 Illustration of GAN concept provided by Mikolajczyk and Grochowski   modeling technique that exists; however they are dramatically leading the way in com- putation speed and quality of results", "b76ebd36-7cf6-49fd-a40a-7ad830e5d1b2": "Words represented by one-hot vectors are not very informative because every two distinct one-hot vectors are the same distance from each other (squared L? distance of 2). Learned word embeddings naturally encode similarity between words by their distance from each other. Because of this, unsupervised pretraining is especially useful when processing words. It is less useful when processing images, perhaps because images already lie in a rich vector space where distances provide a low-quality similarity metric.\n\nFrom the point of view of unsupervised pretraining as a regularizer, we can expect unsupervised pretraining to be most helpful when the number of labeled  https://www.deeplearningbook.org/contents/representation.html    examples 18 very small. Because the source ot intormation added by unsupervised pretraining is the unlabeled data, we may also expect unsupervised pretraining to perform best when the number of unlabeled examples is very large", "d9417b97-38aa-4682-a05b-8ee6a42b5ece": "Note that the same solution, w = 1, is optimal for both MRPs above (assuming \u00b5 is the same for the two indistinguishable states in the right MRP). Is this a coincidence, or could it be generally true that all MDPs with the same data distribution also have the same optimal parameter vector? If this is true\u2014and we will show next that it is\u2014then the VE remains a usable objective. The VE is not learnable, but the parameter that optimizes it is! To understand this, it is useful to bring in another natural objective function, this time one that is clearly learnable. One error that is always observable is that between the value estimate at each time and the return from that time. The Mean Square Return Error, denoted RE, is the expectation, under \u00b5, of the square of this error. In the on-policy case the RE can be written Thus, the two objectives are the same except for a variance term that does not depend on the parameter vector. The two objectives must therefore have the same optimal parameter value w\u21e4. The overall relationships are summarized in the left side of Figure 11.4", "a645154d-9b08-4598-a8aa-98bafe204cab": "When A has more rows than columns, it is possible for there to be no solution. In this case, using the pseudoinverse gives us the \u00ab for which Az is as close as possible to y in terms of Euclidean norm || Aa \u2014 y||2. 2.10 The Trace Operator  The trace operator gives the sum of all the diagonal entries of a matrix:  https://www.deeplearningbook.org/contents/linear_algebra.html   Tr(A) = S. Ai, (2.48)  The trace operator is useful for a variety of reasons. Some operations that are difficult to specify without resorting to summation notation can be specified using matrix products and the trace operator. For example, the trace operator provides an alternative way of writing the Frobenius norm of a matrix:  |Allp = Tr(AA\u2018). (2.49) 44  CHAPTER 2. LINEAR ALGEBRA  Writing an expression in terms of the trace operator opens up opportunities to manipulate the expression using many useful identities. For example, the trace operator is invariant to the transpose operator:  Tr(A) = Tr(A\u2018)", "a2d5d519-943b-4f95-adf3-be3597421d0a": "Derivatives with respect to vectors and matrices can also be de\ufb01ned, for instance \ufffd\u2202x The following is easily proven by writing out the components The derivative of the inverse of a matrix can be expressed as as can be shown by differentiating the equation A\u22121A = I using (C.20) and then right multiplying by A\u22121. Also which we shall prove later. If we choose x to be one of the elements of A, we have as can be seen by writing out the matrices using index notation. We can write this result more compactly in the form With this notation, we have the following properties which can again be proven by writing out the matrix indices.\n\nWe also have For a square matrix A of size M \u00d7 M, the eigenvector equation is de\ufb01ned by for i = 1, . , M, where ui is an eigenvector and \u03bbi is the corresponding eigenvalue. This can be viewed as a set of M simultaneous homogeneous linear equations, and the condition for a solution is that which is known as the characteristic equation", "9574f4e9-1801-49f5-aee5-239e32a6dfcf": "This equation says that the \u03bb-return is the \ufb01rst reward, undiscounted and una\u21b5ected by bootstrapping, plus possibly a second term to the extent that we are not discounting at the next state (that is, according to \u03b3t+1; recall that this is zero if the next state is terminal). To the extent that we aren\u2019t terminating at the next state, we have a second term which is itself divided into two cases depending on the degree of bootstrapping in the state. To the extent we are bootstrapping, this term is the estimated value at the state, whereas, to the extent that we not bootstrapping, the term is the \u03bb-return for the next time step. The action-based \u03bb-return is either the Sarsa form where (7.8) is generalized to function approximation as The \ufb01nal step is to incorporate importance sampling. For non-truncated \u03bb-returns, there is not a practical option in which the importance sampling is done outside the target return (as there is for n-step methods as explained in Section 7.3).\n\nInstead, we move directly to the bootstrapping generalization of per-decision importance sampling with control variates (Section 7.4)", "d81c7f89-d604-44f9-8570-e4062f8c197b": "Consider letting the constants be of the form P(z|X, \u03b8n). Since P(z|X, \u03b8n) is a probability measure, we have that P(z|X, \u03b8n) \u2265 0 and that \ufffd z P(z|X, \u03b8n) = 1 as required. Then starting with Equation (11) the constants P(z|X, \u03b8n) are introduced as, Equivalently we may write, and for convenience de\ufb01ne, so that the relationship in Equation (13) can be made explicit as, We have now a function, l(\u03b8|\u03b8n) which is bounded above by the likelihood function L(\u03b8). Additionally, observe that, so for \u03b8 = \u03b8n the functions l(\u03b8|\u03b8n) and L(\u03b8) are equal. Our objective is to choose a values of \u03b8 so that L(\u03b8) is maximized. We have shown that the function l(\u03b8|\u03b8n) is bounded above by the likelihood function L(\u03b8) and that the value of the functions l(\u03b8|\u03b8n) and L(\u03b8) are equal at the current estimate for \u03b8 = \u03b8n", "1109da20-a2ce-47da-bcb8-7d76d30d0ec3": "He developed the idea of \u201cgeneralized reinforcement,\u201d whereby every component (nominally, every neuron) views all of its inputs in reinforcement terms: excitatory inputs as rewards and inhibitory inputs as punishments.\n\nThis is not the same idea as what we now know as temporal-di\u21b5erence learning, and in retrospect it is farther from it than was Samuel\u2019s work. On the other hand, Klopf linked the idea with trial-and-error learning and related it to the massive empirical database of animal learning psychology. Sutton (1978a,b,c) developed Klopf\u2019s ideas further, particularly the links to animal learning theories, describing learning rules driven by changes in temporally successive predictions. He and Barto re\ufb01ned these ideas and developed a psychological model of classical conditioning based on temporal-di\u21b5erence learning . There followed several other in\ufb02uential psychological models of classical conditioning based on temporal-di\u21b5erence learning", "65d9931c-1c5e-4b29-ae7e-a4ee71852b4a": "For example, by marginal- izing out the slab variables s, the conditional distribution over the observations given the binary spike variables h is given by  1 ol Pss(a | h) Pik) Z [owt E(a,s,h)} ds (20.52) = N #03, W.imihi, CSp (20.53)  i where CS, = A+ {Bihi\u2014 50% \u201cay Wra \\, 1 The last equality holds only if the covariance matrix Ooh is positive definite. Gating by (the spike variables means that dhe true marginal distribution over  https://www.deeplearningbook.org/contents/generative_models.html    WS Is sparse. J is 1s different trom sparse coding, where samples trom the model 6, 1) ; + ; ; / \u2018almost never\u201d (in the measure theoretic sense) contain zeros in the code, and MAP inference is required to impose sparsity", "512a506c-0241-42f7-aad8-1b532f63ad01": "By using probabilistic PCA it is straightforward to define a fully probabilistic model simply by considering a mixture distribution in which the components are probabilistic PCA models . Such a model has both discrete latent variables, corresponding to the discrete mixture, as well as continuous latent variables, and the likelihood function can be maximized using the EM algorithm. A fully Bayesian treatment, based on variational inference , allows the number of components in the mixture, as well as the effective dimensionalities of the individual models, to be inferred from the data. There are many variants of this model in which parameters such as the W matrix or the noise variances are tied across components in the mixture, or in which the isotropic noise distributions are replaced by diagonal ones, giving rise to a mixture of factor analysers . The mixture of probabilistic PCA models can also be extended hierarchically to produce an interactive data visualization algorithm .\n\nAn alternative to considering a mixture of linear models is to consider a single nonlinear model. Recall that conventional PCA finds a linear subspace that passes close to the data in a least-squares sense. This concept can be extended to onedimensional nonlinear surfaces in the form of principal curves", "44636dea-a8c4-400e-865d-ea162fd45286": "By the time of Silver et al.\u2019s 2016 publication, AlphaGo had been shown to be decisively stronger than other current Go programs, and it had defeated the European Go champion Fan Hui 5 games to 0. These were the \ufb01rst victories of a Go program over a professional human Go player without handicap in full Go games.\n\nShortly thereafter, a similar version of AlphaGo won stunning victories over the 18-time world champion Lee Sedol, winning 4 out of a 5 games in a challenge match, making worldwide headline news. Arti\ufb01cial intelligence researchers thought that it would be many more years, perhaps decades, before a program reached this level of play. Here we describe AlphaGo and a successor program called AlphaGo Zero (Silver et al. 2017a). Where in addition to reinforcement learning, AlphaGo relied on supervised learning from a large database of expert human moves, AlphaGo Zero used only reinforcement learning and no human data or guidance beyond the basic rules of the game (hence the Zero in its name). We \ufb01rst describe AlphaGo in some detail in order to highlight the relative simplicity of AlphaGo Zero, which is both higher-performing and more of a pure reinforcement learning program", "597909b4-677f-4319-ace8-885111ba0110": "We formalize the problem of reinforcement learning using ideas from dynamical systems theory, speci\ufb01cally, as the optimal control of incompletely-known Markov decision processes.\n\nThe details of this formalization must wait until Chapter 3, but the basic idea is simply to capture the most important aspects of the real problem facing a learning agent interacting over time with its environment to achieve a goal. A learning agent must be able to sense the state of its environment to some extent and must be able to take actions that a\u21b5ect the state. The agent also must have a goal or goals relating to the state of the environment. Markov decision processes are intended to include just these three aspects\u2014sensation, action, and goal\u2014in their simplest possible forms without trivializing any of them. Any method that is well suited to solving such problems we consider to be a reinforcement learning method. Reinforcement learning is di\u21b5erent from supervised learning, the kind of learning studied in most current research in the \ufb01eld of machine learning. Supervised learning is learning from a training set of labeled examples provided by a knowledgable external supervisor", "585768f9-295a-418b-81d0-78b59c76a8ff": "Traditionally, people refer to regression, classification  p(y | x) =  and structured output problems as supervised learning. Density estimation in  https://www.deeplearningbook.org/contents/ml.html    support of other tasks 1s uSually considered unsupervised learning. Other variants of the learning paradigm are possible. For example, in semi- supervised learning, some examples include a supervision target but others do not. In multi-instance learning. an entire collection of examples is labeled as  containing or not containing an example of a class, but the individual members of the collection are not labeled. For a recent example of multi-instance learning with deep models, see Kotzias et al. Some machine learning algorithms do not just experience a fixed dataset. For example, reinforcement learning algorithms interact with an environment, so there is a feedback loop between the learning system and its experiences. Such algorithms are beyond the scope of this book. Please see Sutton and Barto  or Bertsekas and Tsitsiklis  for information about reinforcement learning, and Mnih et al. for the deep learning approach to reinforcement learning", "69236cb3-5abb-441d-9c3e-9c0b5dff6f0e": "In Bishop and James , statistical machine learning techniques were used to predict the volume fractions and also the geometrical con\ufb01guration of the phases shown in Figure A.2, from the 12-dimensional vector of measurements. The 12dimensional observation vectors can also be used to test data visualization algorithms. This data set has a rich and interesting structure, as follows. For any given con\ufb01guration there are two degrees of freedom corresponding to the fractions of oil and water, and so for in\ufb01nite integration time the data will locally live on a twodimensional manifold.\n\nFor a \ufb01nite integration time, the individual data points will be perturbed away from the manifold by the photon noise. In the homogeneous phase con\ufb01guration, the path lengths in oil and water are linearly related to the fractions of oil and water, and so the data points lie close to a linear manifold. For the annular con\ufb01guration, the relationship between phase fraction and path length is nonlinear and so the manifold will be nonlinear. In the case of the laminar con\ufb01guration the situation is even more complex because small variations in the phase fractions can cause one of the horizontal phase boundaries to move across one of the horizontal beam lines leading to a discontinuous jump in the 12-dimensional observation space", "604324ea-34b9-46ac-8b8b-9fb2752bac73": "For example, for rectifiers, how often are they off? Are there units that are always off? For tanh units, the average of the absolute value of the preactivations tells us how saturated the unit is. In a deep network where the propagated gradients quickly grow or quickly vanish, optimization may be hampered. Finally, it is useful to compare the magnitude of parameter gradients to the magnitude of the parameters themselves.\n\nAs suggested by Bottou , we would like the magnitude of parameter updates over a minibatch to represent something like 1 percent of the magnitude of the parameter, not 50 percent or 0.001 percent (which would make the parameters move too slowly). It may be that some groups of parameters are moving at a good pace while others are stalled. When the data is sparse (like in natural language),  434  CHAPTER 11. PRACTICAL METHODOLOGY  some parameters may be very rarely updated, and this should be kept in mind when monitoring their evolution. Finally, many deep learning algorithms provide some sort of guarantee about the results produced at each step. For example, in part III, we will see some approx- imate inference algorithms that work by using algebraic solutions to optimization problems", "537562b7-008f-4085-8bed-3fdf300dada1": "We see that (3.57) involves the convolution of two Gaussian distributions, and so making use of the result (2.115) from Section 8.1.4, we see that the predictive distribution takes the form Exercise 3.10 The \ufb01rst term in (3.59) represents the noise on the data whereas the second term re\ufb02ects the uncertainty associated with the parameters w. Because the noise process and the distribution of w are independent Gaussians, their variances are additive. Note that, as additional data points are observed, the posterior distribution becomes narrower. As a consequence it can be shown  that \u03c32 N+1(x) \u2a7d \u03c32 N(x). In the limit N \u2192 \u221e, the second term in (3.59) goes to zero, and the variance Exercise 3.11 of the predictive distribution arises solely from the additive noise governed by the parameter \u03b2. As an illustration of the predictive distribution for Bayesian linear regression models, let us return to the synthetic sinusoidal data set of Section 1.1.\n\nIn Figure 3.8, of the form (3.4) using the synthetic sinusoidal data set of Section 1.1. See the text for a detailed discussion", "c07dd5d7-13ac-4e46-99e5-9832dd12d984": "Advances in Neural Information Processing Systems, 33. Ziang Xie, Sida I. Wang, Jiwei Li, Daniel L\u00b4evy, Aiming Nie, Dan Jurafsky, and Andrew Y. Ng. 2017. Data noising as smoothing in neural network language models. CoRR, abs/1703.02573. Jingjing Xu, Xuancheng Ren, Junyang Lin, and Xu Sun. 2018. Dp-gan: Diversity-promoting generative adversarial network for generating informative and diversi\ufb01ed text. Weidi Xu, Haoze Sun, Chao Deng, and Ying Tan. 2017. Variational autoencoder for semi-supervised text classi\ufb01cation. In Proceedings of the AAAI Conference on Arti\ufb01cial Intelligence, volume 31. Diyi Yang, William Yang Wang. 2015. That\u2019s so annoying!!! : A lexical and frame-semantic embedding based data augmentation approach to automatic categorization of annoying behaviors using #petpeeve tweets", "833701a7-6d98-43ef-8092-1478507fe858": "Because the size of the vocabulary rarely exceeds a million words and logs( 10\u00b0) ~ 20, it is possible to reduce np to about 20, but np, is often much larger, around 10? or more.\n\nRather than carefully optimizing a tree with a branching factor of 2, one can instead define a tree with depth two and a branching factor of JV . Such a tree corresponds to simply defining a set of mutually exclusive word classes. The simple approach based on a tree of depth two captures most of the computational benefit of the hierarchical strategy. One question that remains somewhat open is how to best define these word classes, or how to define the word hierarchy in general. Early work used existing hierarchies , but the hierarchy can also be learned, ideally jointly with the neural language model. Learning the hierarchy is difficult. An exact optimization of the log-likelihood appears intractable because the choice of a word hierarchy is a discrete one, not amenable to gradient-based optimization. However, one could use discrete optimization to approximately optimize the partition of words into word classes", "f6552b5e-cea0-4e0b-8450-d0b246cbc1d9": "They clipped the error term Rt+1 + \u03b3 maxa \u02dcq(St+1, a, wt) \u2212 \u02c6q(St, At, wt) so that it remained in the interval . Mnih et al. conducted a large number of learning runs on 5 of the games to gain insight into the e\u21b5ect that various of DQN\u2019s design features had on its performance. They ran DQN with the four combinations of experience replay and the duplicate target network being included or not included. Although the results varied from game to game, each of these features alone signi\ufb01cantly improved performance, and very dramatically improved performance when used together. Mnih et al. also studied the role played by the deep convolutional ANN in DQN\u2019s learning ability by comparing the deep convolutional version of DQN with a version having a network of just one linear layer, both receiving the same stacked preprocessed video frames. Here, the improvement of the deep convolutional version over the linear version was particularly striking across all 5 of the test games.\n\nCreating arti\ufb01cial agents that excel over a diverse collection of challenging tasks has been an enduring goal of arti\ufb01cial intelligence", "0fb28a34-1034-4ff1-864d-9c0c576c1f5a": "Table 6 compares our results with previous approaches (Zhuang et al., 2019; He et al., 2019; Misra & van der Maaten, 2019; H\u00e9naff et al., 2019; Kolesnikov et al., 2019; Donahue & Simonyan, 2019; Bachman et al., A Simple Framework for Contrastive Learning of Visual Representations Food CIFAR10 CIFAR100 Birdsnap SUN397 Cars Aircraft VOC2007 DTD Pets Caltech-101 Flowers 2019; Tian et al., 2019) in the linear evaluation setting (see Appendix B.6). Table 1 shows more numerical comparisons among different methods. We are able to use standard networks to obtain substantially better results compared to previous methods that require speci\ufb01cally designed architectures. The best result obtained with our ResNet-50 (4\u00d7) can match the supervised pretrained ResNet-50. Semi-supervised learning. We follow Zhai et al.\n\nand sample 1% or 10% of the labeled ILSVRC-12 training datasets in a class-balanced way (\u223c12.8 and \u223c128 images per class respectively)", "3d30cca1-33e8-431f-8d6c-871b678bcb75": "Linear options. In Proceedings of the 9th International Conference on Sorg, J., Singh, S., Lewis, R. Internal rewards mitigate agent boundedness. In Proceedings of the 27th International Conference on Machine Learning , pp. 1007\u20131014. Spence, K. W. The role of secondary reinforcement in delayed reward learning. PsychoSrivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I., Salakhutdinov, R. Dropout: A simple way to prevent neural networks from over\ufb01tting. Journal of Machine Learning Research, 15(1):1929\u20131958. Staddon, J. E. R. Adaptive Behavior and Learning. Cambridge University Press. Stan\ufb01ll, C., Waltz, D. Toward memory-based reasoning. Communications of the ACM, Steinberg, E. E., Kei\ufb02in, R., Boivin, J. R., Witten, I", "3929232a-d1eb-4bf7-a809-024c6dc11411": "is a V\u00b7dimensi\"nal ,ero-mean Gau..ian-distributed noi.., \"ariable witb co'-ariance ,,21. This generative process is illustrated in Figure 12.9. NOIe that this frame\".-orl< is based on a mapping from latent ,pace 10 data space.\n\nin contrast 10 the nl()l'(: C(\"\"'cnti,,,,\"1 \"iew \"f I'CA dis.cus\"'d alx\",e, 11Ie \",,'e= mapping, from data space to the latent space. ,,-ill he OOlained ,honly using Haycs\u00b7 lhwn:m. SUf!ll'OSC we wish 10 deten\"ine the \"alues ofll>o parameters \\V", "2c933da8-7cc8-4fc1-8b30-5131f7bfc1aa": "The forward recursions, analogous to the \u03b1 messages of the hidden Markov model, are known as the Kalman \ufb01lter equations , and the backward recursions, analogous to the \u03b2 messages, are known as the Kalman smoother equations, or the Rauch-Tung-Striebel (RTS) equations . The Kalman \ufb01lter is widely used in many real-time tracking applications. Because the linear dynamical system is a linear-Gaussian model, the joint distribution over all variables, as well as all marginals and conditionals, will be Gaussian. It follows that the sequence of individually most probable latent variable values is the same as the most probable latent sequence. There is thus no need to consider the Exercise 13.19 analogue of the Viterbi algorithm for the linear dynamical system. Because the model has linear-Gaussian conditional distributions, we can write the transition and emission distributions in the general form The initial latent variable also has a Gaussian distribution which we write as Note that in order to simplify the notation, we have omitted additive constant terms from the means of the Gaussians.\n\nIn fact, it is straightforward to include them if desired", "6923f87d-173b-4292-9cc3-994eb460258a": "Slight rotations such as between 1 and 20 or \u20141 to \u201420 could be useful on digit recognition tasks such as MNIST, but as the rotation  degree increases, the label of the data is no longer preserved post-transformation. Translation  Shifting images left, right, up, or down can be a very useful transformation to avoid positional bias in the data.\n\nFor example, if all the images in a dataset are centered, which is common in face recognition datasets, this would require the model to be tested on perfectly centered images as well. As the original image is translated in a direction, the remaining space can be filled with either a constant value such as 0 s or 255 s, or it can be filled with random or Gaussian noise. This padding preserves the  spatial dimensions of the image post-augmentation. Noise injection Noise injection consists of injecting a matrix of random values usually drawn from a Gaussian distribution. Noise injection is tested by Moreno-Barea et al. on nine datasets from the UCI repository . Adding noise to images can help CNNs learn more robust features. Geometric transformations are very good solutions for positional biases present in  the training data", "ff40943b-61fe-44a0-83b7-b6d970b7744c": "Because the logistic regression model de\ufb01nes a conditional distribution for the target variable, given the input vector, it is straightforward to use it as the component distribution in a mixture model, thereby giving rise to a richer family of conditional distributions compared to a single logistic regression model. This example involves a straightforward combination of ideas encountered in earlier sections of the book and will help consolidate these for the reader. The conditional distribution of the target variable, for a probabilistic mixture of K logistic regression models, is given by denotes the adjustable parameters namely {\u03c0k} and {wk}. Now suppose we are given a data set {\u03c6n, tn}. The corresponding likelihood where ynk = \u03c3(wT k \u03c6n) and t = (t1, . , tN)T. We can maximize this likelihood function iteratively by making use of the EM algorithm.\n\nThis involves introducing latent variables znk that correspond to a 1-of-K coded binary indicator variable for each data point n. The complete-data likelihood function is then given by where Z is the matrix of latent variables with elements znk", "0b61e802-6c81-4e4e-82f1-4123d02f214a": "could convincingly argue on the basis of their simulation results that a memory controller that learns online via reinforcement learning has the potential to improve performance to levels that would otherwise require more complex and more expensive memory systems, while removing from human designers some of the burden required to manually design e\ufb03cient scheduling policies. Mukundan and Mart\u00b4\u0131nez  took this project forward by investigating learning controllers with additional actions, other performance criteria, and more complex reward functions derived using genetic algorithms. They considered additional performance criteria related to energy e\ufb03ciency. The results of these studies surpassed the earlier results described above and signi\ufb01cantly surpassed the 2012 state-of-the-art for all of the performance criteria they considered. The approach is especially promising for developing sophisticated power-aware DRAM interfaces. One of the greatest challenges in applying reinforcement learning to real-world problems is deciding how to represent and store value functions and/or policies. Unless the state set is \ufb01nite and small enough to allow exhaustive representation by a lookup table\u2014as in many of our illustrative examples\u2014one must use a parameterized function approximation scheme.\n\nWhether linear or nonlinear, function approximation relies on features that have to be readily accessible to the learning system and able to convey the information necessary for skilled performance", "d9192a04-c5a9-4a97-b0dd-821fc6fc12cb": "The agent always learns to maximize its reward. If we want it to do something for us, we must provide rewards to it in such a way that in maximizing them the agent will also achieve our goals. It is thus critical that the rewards we set up truly indicate what we want accomplished. In particular, the reward signal is not the place to impart to the agent prior knowledge about how to achieve what we want it to do.5 For example, a chess-playing agent should be rewarded only for actually winning, not for achieving subgoals such as taking its opponent\u2019s pieces or gaining control of the center of the board. If achieving these sorts of subgoals were rewarded, then the agent might \ufb01nd a way to achieve them without achieving the real goal. For example, it might \ufb01nd a way to take the opponent\u2019s pieces even at the cost of losing the game. The reward signal is your way of communicating to the robot what you want it to achieve, not how you want it achieved.6 So far we have discussed the objective of learning informally. We have said that the agent\u2019s goal is to maximize the cumulative reward it receives in the long run", "800fc4a3-2bc0-42ad-825b-0659410fcdb5": "We see that the only factors in q(x) that change when we update \ufffdfb(x2, x3) are those that involve the variables in fb namely x2 and x3.\n\nTo obtain the re\ufb01ned factor \ufffdfb(x2, x3) = \ufffdfb2(x2)\ufffdfb3(x3) we simply divide qnew(x) by q\\b(x), which gives These are precisely the messages obtained using belief propagation in which mesSection 8.4.4 sages from variable nodes to factor nodes have been folded into the messages from factor nodes to variable nodes. In particular, \ufffdfb2(x2) corresponds to the message \u00b5fb\u2192x2(x2) sent by factor node fb to variable node x2 and is given by (8.81). Similarly, if we substitute (8.78) into (8.79), we obtain (10.235) in which \ufffdfa2(x2) corresponds to \u00b5fa\u2192x2(x2) and \ufffdfc2(x2) corresponds to \u00b5fc\u2192x2(x2), giving the message \ufffdfb3(x3) which corresponds to \u00b5fb\u2192x3(x3)", "0ba27b5a-a679-4ec4-b388-d480a3d04586": "Consider a general directed graph in which A, B, and C are arbitrary nonintersecting sets of nodes (whose union may be smaller than the complete set of nodes in the graph).\n\nWe wish to ascertain whether a particular conditional independence statement A \u22a5\u22a5 B | C is implied by a given directed acyclic graph. To do so, we consider all possible paths from any node in A to any node in B. Any such path is said to be blocked if it includes a node such that either (a) the arrows on the path meet either head-to-tail or tail-to-tail at the node, and the node is in the set C, or (b) the arrows meet head-to-head at the node, and neither the node, nor any of its descendants, is in the set C. If all paths are blocked, then A is said to be d-separated from B by C, and the joint distribution over all of the variables in the graph will satisfy A \u22a5\u22a5 B | C. The concept of d-separation is illustrated in Figure 8.22", "460e6d84-f210-47c5-8122-8b16fef74699": "arXiv preprint arXiv:1611.03852, 2016. Y. Freund and R. E. Schapire. A decision-theoretic generalization of on-line learning and an application to boosting. Journal of computer and system sciences, 55(1):119\u2013139, 1997. K. Ganchev, J. Gillenwater, B. Taskar, et al. Posterior regularization for structured latent variable models. Journal of Machine Learning Research, 11(Jul):2001\u20132049, 2010. P. K. B. Giridhara, M. Chinmaya, R. K. M. Venkataramana, S. S. Bukhari, and A. Dengel. A study of various text augmentation techniques for relation classi\ufb01cation in free text. In ICPRAM, 2019.\n\nI. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D", "f783a300-e78c-419f-9e09-a1eeeb7d69bb": "Pseudolikelihood has a much greater cost per gradient step than SML, due to its explicit computation of all the conditionals. But generalized pseudolikelihood and similar criteria can still perform well if only one randomly selected condi- tional is computed per example , thereby bringing the computational cost down to match that of SML. Though the pseudolikelihood estimator does not explicitly minimize log Z, it can still be thought of as having something resembling a negative phase. The denominators of each conditional distribution result in the learning algorithm suppressing the probability of all states that have only one variable differing from a training example. See Marlin and de Freitas  for a theoretical analysis of the asymptotic efficiency of pseudolikelihood. 18.4 Score Matching and Ratio Matching  Score matching  provides another consistent means of training a model without estimating Z or its derivatives", "a35ae79a-920d-4943-a091-084b393135e6": "For each task, we simply plug in the taskspeci\ufb01c inputs and outputs into BERT and \ufb01netune all the parameters end-to-end. At the input, sentence A and sentence B from pre-training are analogous to (1) sentence pairs in paraphrasing, (2) hypothesis-premise pairs in entailment, (3) question-passage pairs in question answering, and (4) a degenerate text-\u2205 pair in text classi\ufb01cation or sequence tagging. At the output, the token representations are fed into an output layer for tokenlevel tasks, such as sequence tagging or question answering, and the  representation is fed into an output layer for classi\ufb01cation, such as entailment or sentiment analysis. Compared to pre-training, \ufb01ne-tuning is relatively inexpensive. All of the results in the paper can be replicated in at most 1 hour on a single Cloud TPU, or a few hours on a GPU, starting from the exact same pre-trained model.7 We describe the task-speci\ufb01c details in the corresponding subsections of Section 4. More details can be found in Appendix A.5", "e8a65afc-3f76-4e35-a19e-f031b1525895": "2.44 (\u22c6 \u22c6) Consider a univariate Gaussian distribution N(x|\u00b5, \u03c4 \u22121) having conjugate Gaussian-gamma prior given by (2.154), and a data set x = {x1, . , xN} of i.i.d. observations.\n\nShow that the posterior distribution is also a Gaussian-gamma distribution of the same functional form as the prior, and write down expressions for the parameters of this posterior distribution. 2.48 (\u22c6) By following analogous steps to those used to derive the univariate Student\u2019s t-distribution (2.159), verify the result (2.162) for the multivariate form of the Student\u2019s t-distribution, by marginalizing over the variable \u03b7 in (2.161). Using the de\ufb01nition (2.161), show by exchanging integration variables that the multivariate t-distribution is correctly normalized", "5a3cb206-e6c0-407a-b34e-1f0f69364714": "AUTOENCODERS  A one-dimensional example is illustrated in figure 14.7, showing that, by making the reconstruction function insensitive to perturbations of the input around the data points, we cause the autoencoder to recover the manifold structure. To understand why autoencoders are useful for manifold learning, it is in- structive to compare them to other approaches. What is most commonly learned o characterize a manifold is a representation of the data points on (or near) he manifold.\n\nSuch a representation for a particular example is also called its embedding. It is typically given by a low-dimensional vector, with fewer dimensions han the \u201cambient\u201d space of which the manifold is a low-dimensional subset. Some algorithms (nonparametric manifold learning algorithms, discussed below) directly earn an embedding for each training example, while others learn a more general mapping, sometimes called an encoder, or representation function, that maps any point in the ambient space (the input space) to its embedding", "1d214e8f-0bc7-4a6b-a5c0-6b49b091f710": "Once this message propagation is complete, we can then propagate messages from the root node out to the leaf nodes, and these are given by From the leaf nodes x1 and x4 towards the root node x3. (b) From the root node towards the leaf nodes. One message has now passed in each direction across each link, and we can now evaluate the marginals. As a simple check, let us verify that the marginal p(x2) is given by the correct expression. Using (8.63) and substituting for the messages using the above results, we have So far, we have assumed that all of the variables in the graph are hidden.\n\nIn most practical applications, a subset of the variables will be observed, and we wish to calculate posterior distributions conditioned on these observations. Observed nodes are easily handled within the sum-product algorithm as follows. Suppose we partition x into hidden variables h and observed variables v, and that the observed value of v is denoted \ufffdv. Then we simply multiply the joint distribution p(x) by \ufffd where I(v,\ufffdv) = 1 if v = \ufffdv and I(v,\ufffdv) = 0 otherwise", "6bd1d71d-1622-4737-b0bd-a512810cec9d": "To \ufb01nd an invariant measure of the mean, we note that the observations can be viewed as points on the unit circle and can therefore be described instead by two-dimensional unit vectors x1, . , xN where \u2225xn\u2225 = 1 for n = 1, . , N, as illustrated in Figure 2.17. We can average the vectors {xn} and then \ufb01nd the corresponding angle \u03b8 of this average. Clearly, this de\ufb01nition will ensure that the location of the mean is independent of the origin of the angular coordinate. Note that x will typically lie inside the unit circle. The Cartesian coordinates of the observations are given by xn = (cos \u03b8n, sin \u03b8n), and we can write the Cartesian coordinates of the sample mean in the form x = (r cos \u03b8, r sin \u03b8).\n\nSubstituting into (2.167) and equating the x1 and x2 components then gives Taking the ratio, and using the identity tan \u03b8 = sin \u03b8/ cos \u03b8, we can solve for \u03b8 to give Shortly, we shall see how this result arises naturally as the maximum likelihood estimator for an appropriately de\ufb01ned distribution over a periodic variable", "bf87b07e-cc7a-44f1-a081-938186e1d16a": "Chapter 6  Deep Feedforward Networks  Deep feedforward networks, also called feedforward neural networks, or multilayer perceptrons (MLPs), are the quintessential deep learning models. The goal of a feedforward network is to approximate some function f*. For example, for a classifier, y = f*(a) maps an input x to a category y. A feedforward network defines a mapping y = f(a; @) and learns the value of the parameters @ that result in the best function approximation. These models are called feedforward because information flows through the function being evaluated from a, through the intermediate computations used to define f, and finally to the output y. There are no feedback connections in which outputs of the model are fed back into itself. When feedforward neural networks are extended to include feedback connections, they are called recurrent neural networks, as presented in chapter 10. Feedforward networks are of extreme importance to machine learning practi- tioners. They form the basis of many important commercial applications. For example, the convolutional networks used for object recognition from photos are a specialized kind of feedforward network", "062f5c56-ed20-4ed2-95f7-9c820bc9e67f": "The images should be standardized so that their pixels all lie in the same reasonable range, like  or . Mixing images that lie in  with images that lie in  will usually result in failure. Formatting images to have the same scale is the only kind of preprocessing that is strictly necessary.\n\nMany computer vision architectures require images of a standard size, so images must be cropped or scaled to fit that size. Even this rescaling is not always strictly necessary. Some convolutional models accept variably sized inputs and dynamically adjust the size of their pooling regions to keep the output size constant . Other convolutional models have variably sized output that automatically scales in size with the input, such as models that denoise or label each pixel in an image . Dataset augmentation may be seen as a way of preprocessing the training set only. Dataset augmentation is an excellent way to reduce the generalization error of most computer vision models. A related idea applicable at test time is to show the model many different versions of the same input (for example, the same image cropped at slightly different locations) and have the different instantiations of the model vote to determine the output", "8fa4efca-3f2b-4b83-8d69-9f43a45f6cb2": "It tells us the functional form that the optimal solution will take, whether we arrive there by fixed-point equations or not. This means we can take the functional form from that equation but regard some of the values that appear in it as parameters, which we can optimize with any optimization algorithm we like. As an example, consider a simple probabilistic model, with latent variables h \u00a2 R and just one visible variable, v. Suppose that p(h) = N(h;0,I) and p(v | h) = N(v;w'h;1).\n\nWe could actually simplify this model by integrating out h; the result is just a Gaussian distribution over v. The model itself is not interesting; we have constructed it only to provide a simple demonstration of how calculus of variations can be applied to probabilistic modeling. The true posterior is given, up to a normalizing constant, by p(h |v) (19.57) 646  CHAPTER 19. APPROXIMATE INFERENCE  op(h, v) (19.58) = p(hi)p(ha)p(v | h) (19.59) exp (-3  )", "fa079311-6621-47c9-be4e-6a115bd0662e": "To achieve this, any of a broad range of existing methods for supervised-learning function approximation can be used simply by treating each update as a training example. Perhaps the most suitable supervised learning methods are those using parameterized function approximation, in which the policy is parameterized by a weight vector w. Although the weight vector has many components, the state space is much larger still, and we must settle for an approximate solution.\n\nWe de\ufb01ned the mean squared value error, VE(w), as a measure of the error in the values v\u21e1w(s) for a weight vector w under the on-policy distribution, \u00b5. The VE gives us a clear way to rank di\u21b5erent value-function approximations in the on-policy case. To \ufb01nd a good weight vector, the most popular methods are variations of stochastic gradient descent (SGD). In this chapter we have focused on the on-policy case with a \ufb01xed policy, also known as policy evaluation or prediction; a natural learning algorithm for this case is n-step semi-gradient TD, which includes gradient Monte Carlo and semi-gradient TD(0) algorithms as the special cases when n=1 and n=1 respectively", "bc650f08-ec32-4048-9473-a31701a0a135": "Note that the max-sum algorithm works with log probabilities and so there is no need to use re-scaled variables as was done with the forward-backward algorithm. Figure 13.16 shows a fragment of the hidden Markov model expanded as lattice diagram. As we have already noted, the number of possible paths through the lattice grows exponentially with the length of the chain. The Viterbi algorithm searches this space of paths ef\ufb01ciently to \ufb01nd the most probable path with a computational cost that grows only linearly with the length of the chain. As with the sum-product algorithm, we \ufb01rst represent the hidden Markov model as a factor graph, as shown in Figure 13.15. Again, we treat the variable node zN as the root, and pass messages to the root starting with the leaf nodes. Using the results (8.93) and (8.94), we see that the messages passed in the max-sum algorithm are given by showing two possible paths.\n\nThe Viterbi algorithm ef\ufb01ciently determines the most probable path from amongst the exponentially many possibilities", "3ee9ec50-bee4-4e15-90c6-1115888904fd": "First note that, for any episode ending with the right action, the importance sampling ratio is zero, because the target policy would never take this action; these episodes thus contribute nothing to the expectation (the quantity in parenthesis will be zero) and can be ignored. We need only consider episodes that involve some number (possibly zero) of left actions that transition back to the nonterminal state, followed by a left action transitioning to termination.\n\nAll of these episodes have a return of 1, so the G0 factor can be ignored. To get the expected square we need only consider each length of episode, multiplying the probability of the episode\u2019s occurrence by the square of its importance-sampling ratio, and add these up: Exercise 5.7 In learning curves such as those shown in Figure 5.3 error generally decreases with training, as indeed happened for the ordinary importance-sampling method. But for the weighted importance-sampling method error \ufb01rst increased and then decreased. Why do you think this happened? \u21e4 Exercise 5.8 The results with Example 5.5 and shown in Figure 5.4 used a \ufb01rst-visit MC method. Suppose that instead an every-visit MC method was used on the same problem", "a7ef4409-cc9f-4dc5-9634-a84d368c68b0": "Formally, a matrix D is diagonal if and only if D;,; = 0 for all i 4 7.\n\nWe have already seen one example of a diagonal matrix: the identity  38  CHAPTER 2. LINEAR ALGEBRA  matrix, where all the diagonal entries are 1. We write diag(v) to denote a square diagonal matrix whose diagonal entries are given by the entries of the vector v. Diagonal matrices are of interest in part because multiplying by a diagonal matrix is computationally efficient. To compute diag(v)a, we only need to scale each  https://www.deeplearningbook.org/contents/linear_algebra.html    element 2 by v'. In other words, diag(v)# = v \u00a9 a. Inverting a square diagonal matrix is also efficient. The, inverse exists only if every diagonal entry is nonzero, and in that case, diag(v) *\u00b0 = diag({L/v1,..\u00b0, L/onl)", "1f359a21-f3b8-40e9-91cd-46bd73b2492d": "Although the resulting integral over w is no longer analytically tractable, it might be thought that approximating this integral, for example using the Laplace approximation discussed (Section 4.4) which is based on a local Gaussian approximation centred on the mode of the posterior distribution, might provide a practical alternative to the evidence framework .\n\nHowever, the integrand as a function of w typically has a strongly skewed mode so that the Laplace approximation fails to capture the bulk of the probability mass, leading to poorer results than those obtained by maximizing the evidence . Returning to the evidence framework, we note that there are two approaches that we can take to the maximization of the log evidence. We can evaluate the evidence function analytically and then set its derivative equal to zero to obtain re-estimation equations for \u03b1 and \u03b2, which we shall do in Section 3.5.2. Alternatively we use a technique called the expectation maximization (EM) algorithm, which will be discussed in Section 9.3.4 where we shall also show that these two approaches converge to the same solution", "54caf014-de61-4acc-a33d-2c319b7e7c5c": "Examples include:  e aand b are d-separated given the empty set  e aande are d-separated given c  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    e dand e are d-separated given c We can also see that some variables are no longer d-separated when we observe some variables:  e aand b are not d-separated given c  e aand b are not d-separated given d  572  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  Figure 16.10: Examples of complete graphs, which can describe any probability distribution. Here we show examples with four random variables. (Left) The complete undirected graph. In the undirected case, the complete graph is unique. (Right) A complete directed graph. In the directed case, there is not a unique complete graph.\n\nWe choose an ordering of the variables and draw an arc from each variable to every variable that comes after it in the ordering", "83935891-30f2-4dd8-b8db-d4ab61ef3f52": "Threads are divided into small groups called warps. Each thread in a warp executes the same instruction during each cycle, so if different threads within the same warp need to execute different code paths, these different code paths must be traversed sequentially rather than in parallel. Because of the difficulty of writing high-performance GPU code, researchers should structure their workflow to avoid needing to write new GPU code to test new models or algorithms. Typically, one can do this by building a software library of high-performance operations like convolution and matrix multiplication, then specifying models in terms of calls to this library of operations. For example, the machine learning library Pylearn2  specifies all its  https://www.deeplearningbook.org/contents/applications.html    machine learning algorithms in terms of calls to Theano  and cuda-convnet , which provide these high-performance operations. This factored approach can also ease support for multiple kinds of hardware. For example, the same Theano program can run on either CPU or GPU, without needing to change any of the calls to Theano itself. Other libraries like TensorFlow  and Torch (Collobert et ai.,  201 1b) provide similar features", "ba165fe0-b6c6-4b32-879a-f64c6170803c": "APV-MCTS\u2019s rollouts in AlphaGo were simulated games with both players using a fast rollout policy provided by a simple linear network, also trained by supervised learning before play. Throughout its execution, APV-MCTS kept track of how many simulations passed through each edge of the search tree, and when its execution completed, the most-visited edge from the root node was selected as the action to take, here the move AlphaGo actually made in a game. The value network had the same structure as the deep convolutional SL policy network except that it had a single output unit that gave estimated values of game positions instead of the SL policy network\u2019s probability distributions over legal actions. Ideally, the value network would output optimal state values, and it might have been possible to approximate the optimal value function along the lines of TD-Gammon described above: self-play with nonlinear TD(\u03bb) coupled to a deep convolutional ANN. But the DeepMind team took a di\u21b5erent approach that held more promise for a game as complex as Go. They divided the process of training the value network into two stages.\n\nIn the \ufb01rst stage, they created the best policy they could by using reinforcement learning to train an RL policy network", "4a4db636-a2fc-4b35-b4a9-6cf47ca1541e": "Casella . Monte Carlo Statistical Methods. Springer. Roth, V. and V. Steinhage . Nonlinear discriminant analysis using kernel functions. In S. A. Solla, T. K. Leen, and K. R. M\u00a8uller (Eds. ), Advances in Neural Information Processing Systems, Volume 12. MIT Press. Roweis, S. EM algorithms for PCA and SPCA. In M. I. Jordan, M. J. Kearns, and S. A. Solla (Eds. ), Advances in Neural Information Processing Systems, Volume 10, pp. 626\u2013632. MIT Press. Roweis, S. and Z. Ghahramani . A unifying review of linear Gaussian models. Neural Computation 11(2), 305\u2013345. Roweis, S", "28bc466e-27d5-4422-9aff-57d5c2adf297": "Verify that this reduces to the reject criterion discussed in Section 1.5.3 when the loss matrix is given by Lkj = 1 \u2212 Ikj.\n\nWhat is the relationship between \u03bb and the rejection threshold \u03b8? Using the calculus of variations, show that the function y(x) for which this expected loss is minimized is given by y(x) = Et. Show that this result reduces to (1.89) for the case of a single target variable t. 1.26 (\u22c6) By expansion of the square in (1.151), derive a result analogous to (1.90) and hence show that the function y(x) that minimizes the expected squared loss for the case of a vector t of target variables is again given by the conditional expectation of t. 1.27 (\u22c6 \u22c6) www Consider the expected loss for regression problems under the Lq loss function given by (1.91). Write down the condition that y(x) must satisfy in order to minimize E. Show that, for q = 1, this solution represents the conditional median, i.e., the function y(x) such that the probability mass for t < y(x) is the same as for t \u2a7e y(x)", "0bf9459b-b14c-4b2a-9d79-9df855d3b1d1": "The total number of parameters that must be speci\ufb01ed in the joint distribution is therefore (K \u2212 1) + K(K \u2212 1) = K2 \u2212 1 as before. Now suppose that the variables x1 and x2 were independent, corresponding to the graphical model shown in Figure 8.9(b). Each variable is then described by having K states, requires the speci\ufb01cation of K \u2212 1 + (M \u2212 1)K(K \u2212 1) parameters, which grows linearly with the length M of the chain. In contrast, a fully connected graph of M nodes would have KM \u2212 1 parameters, which grows exponentially with M. a separate multinomial distribution, and the total number of parameters would be 2(K \u2212 1). For a distribution over M independent discrete variables, each having K states, the total number of parameters would be M(K \u2212 1), which therefore grows linearly with the number of variables.\n\nFrom a graphical perspective, we have reduced the number of parameters by dropping links in the graph, at the expense of having a restricted class of distributions. More generally, if we have M discrete variables x1,", "b69c55ec-e9fe-4a2b-9538-3e6e60693347": "Because of this, all the results obtained for the parameterized case apply to partial observability without change. In this sense, the case of parameterized function approximation includes the case of partial observability. Nevertheless, there are many issues that cannot be investigated without a more explicit treatment of partial observability. Although we cannot give them a full treatment here, we can outline the changes that would be needed to do so. There are four steps. First, we would change the problem. The environment would emit not its states, but only observations\u2014signals that depend on its state but, like a robot\u2019s sensors, provide only partial information about it. For convenience, without loss of generality, we assume that the reward is a direct, known function of the observation (perhaps the observation is a vector, and the reward is one of is components). The environmental interaction would then have no explicit states or rewards, but would simply be an alternating sequence of actions At 2 A and observations Ot 2 O: Second, we can recover the idea of state as used in this book from the sequence of observations and actions", "3fc4630c-23d3-4a59-9d7d-643b24fdbb14": "Tangent propagation and dataset augmentation using manually specified transformations both require that the model be invariant to certain specified directions of change in the input. Double backprop and adversarial training both require that the model should be invariant to all directions of change in the input as long as the change is small. Just as dataset augmentation is the non-infinitesimal version of tangent propagation, adversarial training is the non-infinitesimal version of double backprop.\n\nThe manifold tangent classifier , eliminates the need to know the tangent vectors a priori. As we will see in chapter 14, autoencoders can estimate the manifold tangent vectors. The manifold tangent classifier makes use of this technique to avoid needing user-specified tangent vectors. As illustrated in figure 14.10, these estimated tangent vectors go beyond the classical invariants that arise out of the geometry of images (such as translation, rotation, and scaling) and include factors that must be learned because they are object-specific (such as  269  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  moving body parts)", "3228ab67-85a8-49c4-bd74-0ca44dc45262": ", xM, we can model the joint distribution using a directed graph with one variable corresponding to each node. The conditional distribution at each node is given by a set of nonnegative parameters subject to the usual normalization constraint. If the graph is fully connected then we have a completely general distribution having KM \u2212 1 parameters, whereas if there are no links in the graph the joint distribution factorizes into the product of the marginals, and the total number of parameters is M(K \u2212 1). Graphs having intermediate levels of connectivity allow for more general distributions than the fully factorized one while requiring fewer parameters than the general joint distribution. As an illustration, consider the chain of nodes shown in Figure 8.10. The marginal distribution p(x1) requires K \u2212 1 parameters, whereas each of the M \u2212 1 conditional distributions p(xi|xi\u22121), for i = 2, . , M, requires K(K \u2212 1) parameters. This gives a total parameter count of K \u22121+(M \u22121)K(K \u22121), which is quadratic in K and which grows linearly (rather than exponentially) with the length M of the chain", "30f50f0d-9a9a-4f5e-96bb-0ac70bea64c8": "This approach is complicated by the fact that no scaling factor can change the contrast of a zero-contrast image (one whose pixels all have equal intensity). Images with very low but nonzero contrast often have little information content. Dividing by the true standard deviation usually accomplishes nothing more than amplifying sensor noise or compression artifacts in such cases. This  449  https://www.deeplearningbook.org/contents/applications.html    Raw input GCN, A =0 GCN, A = 10-? me CFay,  ({ ye:  NL || ees  \u20141.5 0.0 1.5 \u20141.5 0.0 1.5 \u20141.5 0.0 1.5  xO zo xO  Figure 12.1: GCN maps examples onto a sphere. (Left)Raw input data may have any norm. (Center)GCN with \\ = 0 maps all nonzero examples perfectly onto a sphere. Here we use s =1ande=10-\u00ae. Because we use GCN based on normalizing the standard deviation rather than the L? norm, the resulting sphere is not the unit sphere", "69edb928-b9d6-427d-a0b6-2d384a537502": "Humans can bene\ufb01t from various experience\u2014by observing examples through reading and hearing, studying abstract de\ufb01nitions and grammar, making mistakes and getting correction from teachers, interacting with others and observing implicit feedback, and so on. Knowledge of a prior language can also accelerate the acquisition of a new one. How can we build arti\ufb01cial intelligence (AI) agents that are similarly capable of learning from all types of experience?\n\nWe refer to the capability of \ufb02exibly integrating all available experience in learning as panoramic learning. In handling di\ufb00erent experience ranging from data instances, knowledge, constraints, to rewards, adversaries, and lifelong interplay in an ever-growing spectrum of tasks, contemporary ML and AI research has resulted in a large multitude of learning paradigms (e.g., supervised, unsupervised, active, reinforcement, adversarial learning), models, optimization techniques, not mentioning countless approximation heuristics and tuning tricks, plus combinations of all the above. While pushing the \ufb01eld forward rapidly, these results also make mastering existing ML techniques very di\ufb03cult, and fall short of reusable, repeatable, and composable development of ML approaches to diverse problems with distinct available experience", "5602250b-12de-4871-8296-3a5b288341d6": "Of course there are also double versions of Sarsa and Expected Sarsa.\n\nAlgorithm parameters: step size \u21b5 2 (0, 1], small \" > 0 Initialize Q1(s, a) and Q2(s, a), for all s 2 S+, a 2 A(s), such that Q(terminal, \u00b7) = 0 In this book we try to present a uniform approach to a wide class of tasks, but of course there are always exceptional tasks that are better treated in a specialized way. For example, our general approach involves learning an action-value function, but in Chapter 1 we presented a TD method for learning to play tic-tac-toe that learned something much more like a state-value function. If we look closely at that example, it becomes apparent that the function learned there is neither an action-value function nor a state-value function in the usual sense. A conventional state-value function evaluates states in which the agent has the option of selecting an action, but the state-value function used in tic-tac-toe evaluates board positions after the agent has made its move. Let us call these afterstates, and value functions over these, afterstate value functions", "a95e0710-80f3-4096-855a-39933c32b8bc": "For the purposes of this data set, two speci\ufb01c idealizations are considered. In the annular con\ufb01guration the oil, water, and gas form concentric cylinders with the water around the outside and the gas in the centre, whereas in the homogeneous con\ufb01guration the oil, water and gas are assumed to be intimately mixed as might occur at high \ufb02ow velocities under turbulent conditions. These con\ufb01gurations are also illustrated in Figure A.2. We have seen that a single dual-energy beam gives the oil and water fractions measured along the path length, whereas we are interested in the volume fractions of oil and water. This can be addressed by using multiple dual-energy gamma densitometers whose beams pass through different regions of the pipe. For this particular data set, there are six such beams, and their spatial arrangement is shown in Figure A.3. A single observation is therefore represented by a 12-dimensional vector comprising the fractions of oil and water measured along the paths of each of the beams. We are, however, interested in obtaining the overall volume fractions of the three phases in the pipe", "1440bfa9-260c-482c-a3aa-064aa55a1246": "843-52.\n\nEsteva A, Kuprel B, Novoa RA, Ko J, Swetter SM, Blau HM, Thrun S. Dermatologist-level classification of skin cancer with deep neural networks. Nature. 2017;542:115-8. Geert L, Thijs K, Babak EB, Arnaud AAS, Francesco C, Mohsen G, Jeroen AWM, van Bram G, Clara IS. A survey on deep learning in medical image analysis. Med Image Anal. 2017;42:60-88. Joffrey LL, Taghi MK, Richard AB, Naeem S. A survey on addressing high-class imbalance in big data. Springer J Big Data. 2018;5:42. LeCun Y, Bottou L, Bengio Y, Haffner P. Gradient-based learning applied to document recognition. Proc IEEE. 1998;86(1 1):2278-324. Nitesh VC, Kevin WB, Lawrence OH, Kegelmeyer W", "9785ad1a-1d8b-47a9-8eb5-9301bc777fd6": "Because the logarithm function is monotonically increasing, the inequality A \u2a7e B implies ln A \u2a7e ln B.\n\nThis gives a lower bound on the log of the joint distribution of t and w of the form Substituting for the prior p(w), the right-hand side of this inequality becomes, as a function of w This is a quadratic function of w, and so we can obtain the corresponding variational approximation to the posterior distribution by identifying the linear and quadratic terms in w, giving a Gaussian variational posterior of the form As with the Laplace framework, we have again obtained a Gaussian approximation to the posterior distribution. However, the additional \ufb02exibility provided by the variational parameters {\u03ben} leads to improved accuracy in the approximation . Here we have considered a batch learning context in which all of the training data is available at once. However, Bayesian methods are intrinsically well suited to sequential learning in which the data points are processed one at a time and then discarded. The formulation of this variational approach for the sequential case is straightforward", "d9042201-7ccf-4a00-a0b7-497dc796d071": "One of the earliest related works is by Aleksandrov, Sysoyev, and Shemeneva . Thomas  \ufb01rst realized that the factor of \u03b3t, as speci\ufb01ed in the boxed algorithms of this chapter, was needed in the case of discounted episodic problems. 13.2 The policy gradient theorem here and on page 334 was \ufb01rst obtained by Marbach and Tsitsiklis  and then independently by Sutton et al. A similar expression was obtained by Cao and Chen .\n\nOther early results are due to Konda and Tsitsiklis , Baxter and Bartlett , and Baxter, Bartlett, and Weaver . Some additional results are developed by Sutton, Singh, and McAllester . The all-actions algorithm was \ufb01rst presented in an unpublished but widely circulated incomplete paper  and then developed further by Ciosek and Whiteson , who termed it \u201cexpected policy gradients,\u201d and by Asadi, Allen, Roderick, Mohamed, Konidaris, and Littman  who called it \u201cmean actor critic.\u201d 13.4 The baseline was introduced in Williams\u2019s  original work. Greensmith, Bartlett, and Baxter  analyzed an arguably better baseline", "13844515-1a92-42ce-9b36-6373ac840719": "thesis, University of Alberta, Hallak, A., Tamar, A., Mannor, S. Emphatic TD Bellman operator is a contraction. Hallak, A., Tamar, A., Munos, R., Mannor, S. Generalized emphatic temporal di\u21b5erence Arti\ufb01cial Intelligence (AAAI-16), pp. 1631\u20131637. AAAI Press, Menlo Park, CA. Hammer, M. The neural basis of associative reward learning in honeybees. Trends in Hampson, S. E. Connectionist Problem Solving: Computational Aspects of Biological Hare, T. A., O\u2019Doherty, J., Camerer, C. F., Schultz, W., Rangel, A. Dissociating the role of the orbitofrontal cortex and the striatum in the computation of goal values and prediction errors. The Journal of Neuroscience, 28(22):5623\u20135630. Harth, E., Tzanakou, E", "fd63d66d-6718-4e35-a198-fc105db68dd5": "MACHINE LEARNING BASICS  Training error  Underfitting zone} Overfitting zone . 6 8 \u2014 Generalization error  Error  0 Optimal Capacity Capacity  Figure 5.3: Typical relationship between capacity and error. Training and test error behave differently. At the left end of the graph, training error and generalization error are both high. This is the underfitting regime. As we increase capacity, training error decreases, but the gap between training and generalization error increases. Eventually, the size of this gap outweighs the decrease in training error, and we enter the overfitting regime, where capacity is too large, above the optimal capacity. generalization error has a U-shaped curve as a function of model capacity. This is illustrated in figure 5.3. To reach the most extreme case of arbitrarily high capacity, we introduce the concept of nonparametric models. So far, we have seen only parametric  https://www.deeplearningbook.org/contents/ml.html    models, such as linear regression.\n\nParametric models learn a function described by a parameter vector whose size is finite and fixed before any data is observed. onparametric models have no such limitation", "e9810546-b463-4043-b47a-e9923e315352": "APPLICATIONS  Input image GCN LCN  Figure 12.2: A comparison of global and local contrast normalization.\n\nVisually, the effects of global contrast normalization are subtle. It places all images on roughly the same scale, which reduces the burden on the learning algorithm to handle multiple scales. Local contrast normalization modifies the image much more, discarding all regions of constant intensity. This allows the model to focus on just the edges. Regions of fine texture, such as the houses in the second row, may lose some detail due to the bandwidth of the normalization kernel being too high. normalize each pixel . Local contrast normalization can usually be implemented efficiently by using separable convolution (see section 9.8) to compute feature maps of local means and local standard deviations, then using element-wise subtraction and element-wise division on different feature maps. Local contrast normalization is a differentiable operation and can also be used as a nonlinearity applied to the hidden layers of a network, as well as a preprocessing operation applied to the input. As with global contrast normalization, we typically need to regularize local contrast normalization to avoid division by zero", "817537d0-affa-4da2-b664-65fb0610d409": "n--n A mn nnn bine 2A wn nnn btn 4 Lee de (6-42 TNOEN AA LA  https://www.deeplearningbook.org/contents/regularization.html    JIU PLOVEU BCUCLAUZALIOM ALLU BECLICL alZavlou CLLUL VUULLUS (DaAALCL, 1ygg9V) Call VE achieved because of the shared parameters, for which statistical strength can be greatly improved (in proportion with the increased number of examples for the shared parameters, compared to the scenario of single-task models).\n\nOf course this  will happen only if some assumptions about the statistical relationship between the different tasks are valid, meaning that there is something shared across some of the tasks. From the point of view of deep learning, the underlying prior belief is the following: among the factors that explain the variations observed in the data associated with the different tasks, some are shared across two or more tasks. 7.8 Early Stopping  When training large models with sufficient representational capacity to overfit the task, we often observe that training error decreases steadily over time, but  241  CHAPTER 7", "b4fd2b81-3a4e-4b89-89d9-9f0e3aa3722c": "Thomas and Brunskill  argue that an action-dependent baseline can be used without incurring bias. 13.5\u20136 Actor\u2013critic methods were among the earliest to be investigated in reinforcement learning . The algorithms presented here are based on the work of Degris, White, and Sutton . Actor\u2013critic methods are sometimes referred to as advantage actor\u2013critic (\u201cA2C\u201d) methods in the literature. In this last part of the book we look beyond the standard reinforcement learning ideas presented in the \ufb01rst two parts of the book to brie\ufb02y survey their relationships with psychology and neuroscience, a sampling of reinforcement learning applications, and some of the active frontiers for future reinforcement learning research. In previous chapters we developed ideas for algorithms based on computational considerations alone.\n\nIn this chapter we look at some of these algorithms from another perspective: the perspective of psychology and its study of how animals learn. The goals of this chapter are, \ufb01rst, to discuss ways that reinforcement learning ideas and algorithms correspond to what psychologists have discovered about animal learning, and second, to explain the in\ufb02uence reinforcement learning is having on the study of animal learning", "110d07c3-5b11-4a7b-a7df-e30d9db648a8": "There is one important result that is common to all such criteria, which is worth emphasizing.\n\nWe \ufb01rst note from (4.46) that SB is composed of the sum of K matrices, each of which is an outer product of two vectors and therefore of rank 1. In addition, only (K \u2212 1) of these matrices are independent as a result of the constraint (4.44). Thus, SB has rank at most equal to (K \u2212 1) and so there are at most (K \u2212 1) nonzero eigenvalues. This shows that the projection onto the (K \u2212 1)-dimensional subspace spanned by the eigenvectors of SB does not alter the value of J(w), and so we are therefore unable to \ufb01nd more than (K \u2212 1) linear \u2018features\u2019 by this means . Another example of a linear discriminant model is the perceptron of Rosenblatt , which occupies an important place in the history of pattern recognition algorithms", "46bc3b0e-cfaf-4f56-89d0-11e6af2bdf71": "SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  sub-RNN that moves forward through time and g\u00ae standing for the state of the sub-RNN that moves backward through time.\n\nThis allows the output units o)  https://www.deeplearningbook.org/contents/rnn.html    to compute a representation that depends on both the past and the future but is most sensitive to the input values around time \u00a2, without, having to specify a fixed-size window around \u00a3 (as one would have to do with a feedforward network, a convolutional network, or a regular RNN with a fixed-size look-ahead buffer). This idea can be naturally extended to two-dimensional input, such as images, by having four RNNs, each one going in one of the four directions: up, down, left, right. At each point (i,j) of a 2-D grid, an output O;, could then compute a representation that would capture mostly local information but could also depend on long-range inputs, if the RNN is able to learn to carry that information", "32001c5c-a0fa-4eef-b4f5-320d6abeb5da": "Chapter 13  Linear Factor Models  Many of the research frontiers in deep learning involve building a probabilistic model of the input, Pmoge(Z). Such a model can, in principle, use probabilis- tic inference to predict any of the variables in its environment given any of the other variables. Many of these models also have latent variables h, with Pmodel(Z) = Enpmodei(x | h). These latent variables provide another means of rep- resenting the data. Distributed representations based on latent variables can obtain all the advantages of representation learning that we have seen with deep  feedforward and recurrent networks. In this chapter, we describe some of the simplest probabilistic models with latent variables: linear factor models. These models are sometimes used as building blocks of mixture models  or of larger, deep probabilistic models . They also show many of the basic approaches necessary to building generative models that the more advanced deep models will extend further. A linear factor model is defined by the use of a stochastic linear decoder function that generates a by adding noise to a linear transformation of h.  These models are interesting because they allow us to discover explanatory factors that have a simple joint distribution", "6516db42-b841-4728-808b-e9a47cc87761": "For example, let T(x\u2217; \u03b8) be a feature vector of data instance x\u2217 \u2208 D, the constraint posterior set Q can be de\ufb01ned as: Max-margin constraint is another expectation constraint that has shown to be widely e\ufb00ective in classi\ufb01cation and regression . The maximum entropy discrimination (MED) by Jaakkola et al. regularizes linear regression models with the max-margin constraints, which is latter generalized to more complex models p(x|\u03b8), such as Markov networks  and latent variable models . Formally, let y\u2217 \u2208 R be the observed label associated with x\u2217. The margin-based constraint says that a classi\ufb01cation/regression function h(x; \u03b8) should make at most \u03f5 deviation from the true label y\u2217", "8ba04799-100a-47fc-99c1-d97ec8e75d70": "To produce each successive approximation, vk+1 from vk, iterative policy evaluation applies the same operation to each state s: it replaces the old value of s with a new value obtained from the old values of the successor states of s, and the expected immediate rewards, along all the one-step transitions possible under the policy being evaluated. We call this kind of operation an expected update. Each iteration of iterative policy evaluation updates the value of every state once to produce the new approximate value function vk+1. There are several di\u21b5erent kinds of expected updates, depending on whether a state (as here) or a state\u2013action pair is being updated, and depending on the precise way the estimated values of the successor states are combined. All the updates done in DP algorithms are called expected updates because they are based on an expectation over all possible next states rather than on a sample next state.\n\nThe nature of an update can be expressed in an equation, as above, or in a backup diagram like those introduced in Chapter 3. For example, the backup diagram corresponding to the expected update used in iterative policy evaluation is shown on page 59", "6819bf63-d901-4994-81af-0b700beaf9b5": "Recall that in the continuing case J(\u2713) = r(\u21e1) (13.15) and that v\u21e1 and q\u21e1 denote values with respect to the di\u21b5erential return (13.17).\n\nThe gradient of the state-value function can be written, for any s 2 S, as Notice that the left-hand side can be written rJ(\u2713), and that it does not depend on s. Thus the right-hand side does not depend on s either, and we can safely sum it over all s 2 S, weighted by \u00b5(s), without changing it (because P Policy-based methods o\u21b5er practical ways of dealing with large actions spaces, even continuous spaces with an in\ufb01nite number of actions. Instead of computing learned probabilities for each of the many actions, we instead learn statistics of the probability distribution. For example, the action set might be the real numbers, with actions chosen from a normal (Gaussian) distribution. The probability density function for the normal distribution is conventionally written To produce a policy parameterization, the policy can be de\ufb01ned as the normal probability density over a real-valued scalar action, with mean and standard deviation given by parametric function approximators that depend on the state", "038f4227-73fc-4faf-88b7-46f1ccceb781": "After these gradients have been computed, the gradient descent algorithm, or another optimization algorithm, uses these gradients to update the parameters.\n\nhttps://www.deeplearningbook.org/contents/mlp.html    For the MLP, the computational cost is dominated by the cost of matrix multiplication. During the forward propagation stage, we multiply by each weight matrix, resulting in O(w) multiply-adds, where w is the number of weights. During  the backward propagation stage, we multiply by the transpose of each weight matrix, which has the same computational cost. The main memory cost of the algorithm is that we need to store the input to the nonlinearity of the hidden layer. 216  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  This value is stored from the time it is computed until the backward pass has returned to the same point. The memory cost is thus O(mmnp,), where m is the number of examples in the minibatch and np is the number of hidden units. 6.5.8 Complications  Our description of the back-propagation algorithm here is simpler than the imple- mentations actually used in practice", "2014405c-e7f4-4a0b-8d0a-44050453594e": "If it did, then the value function would eventually converge to the value function for that policy, and that in turn would cause the policy to change. Stability is achieved only when both the policy and the value function are optimal. Convergence to this optimal \ufb01xed point seems inevitable as the changes to the action-value function decrease over time, but has not yet been formally proved.\n\nIn our opinion, this is one of the most fundamental open theoretical questions in reinforcement learning . Example 5.3: Solving Blackjack It is straightforward to apply Monte Carlo ES to blackjack. Because the episodes are all simulated games, it is easy to arrange for exploring starts that include all possibilities. In this case one simply picks the dealer\u2019s cards, the player\u2019s sum, and whether or not the player has a usable ace, all at random with equal probability. As the initial policy we use the policy evaluated in the previous blackjack example, that which sticks only on 20 or 21. The initial action-value function can be zero for all state\u2013action pairs. Figure 5.2 shows the optimal policy for blackjack found by Monte Carlo ES", "6ddc9fbc-b921-4ce4-a720-9d6da3cf2f61": "By the same token, when learning is complete, a transition from the latest reward-predicting state to the rewarding state produces a zero TD error because the latest reward-predicting state\u2019s value, being correct, cancels the reward. This parallels the observation that fewer dopamine neurons generate a phasic response to a fully predicted reward than to an unpredicted reward. After learning, if the reward is suddenly omitted, the TD error goes negative at the usual time of reward because the value of the latest reward-predicting state is then too high: \u03b4t\u22121 = Rt + Vt \u2212 Vt\u22121 = 0 + 0 \u2212 R? = \u2212R?, as shown at the right end of the \u2018R omitted\u2019 graph of \u03b4 in Figure 15.4. This is like dopamine neuron activity decreasing below baseline at the time an expected reward is omitted as seen in the experiment of Schultz et al. described above and shown in Figure 15.3. The idea of an earliest reward-predicting state deserves more attention.\n\nIn the scenario described above, because experience is divided into trials, and we assumed that predictions are con\ufb01ned to individual trials, the earliest reward-predicting state is always the \ufb01rst state of a trial", "d9a87059-39b5-411e-99db-ae1ab3874c9d": "We see that the mean \u00b5k for the kth Gaussian component is obtained by taking a weighted mean of all of the points in the data set, in which the weighting factor for data point xn is given by the posterior probability \u03b3(znk) that component k was responsible for generating xn. If we set the derivative of ln p(X|\u03c0, \u00b5, \u03a3) with respect to \u03a3k to zero, and follow a similar line of reasoning, making use of the result for the maximum likelihood solution for the covariance matrix of a single Gaussian, we obtain Section 2.3.4 which has the same form as the corresponding result for a single Gaussian \ufb01tted to the data set, but again with each data point weighted by the corresponding posterior probability and with the denominator given by the effective number of points associated with the corresponding component. Finally, we maximize ln p(X|\u03c0, \u00b5, \u03a3) with respect to the mixing coef\ufb01cients \u03c0k. Here we must take account of the constraint (9.9), which requires the mixing coef\ufb01cients to sum to one.\n\nThis can be achieved using a Lagrange multiplier and Appendix E where again we see the appearance of the responsibilities", "12301043-d247-4e2f-a989-37f32872e888": "Diagnostic tests for convergence of Markov chain Monte Carlo algorithms are summarized in Robert and Casella , and some practical guidance on the use of sampling methods in the context of machine learning is given in Bishop and Nabney . In this section, we consider some simple strategies for generating random samples from a given distribution. Because the samples will be generated by a computer algorithm they will in fact be pseudo-random numbers, that is, they will be deterministically calculated, but must nevertheless pass appropriate tests for randomness. Generating such numbers raises several subtleties  that lie outside the scope of this book. Here we shall assume that an algorithm has been provided that generates pseudo-random numbers distributed uniformly over (0, 1), and indeed most software environments have such a facility built in. We \ufb01rst consider how to generate random numbers from simple nonuniform distributions, assuming that we already have available a source of uniformly distributed random numbers. Suppose that z is uniformly distributed over the interval (0, 1), and that we transform the values of z using some function f(\u00b7) so that y = f(z)", "26b62163-fd1c-44cb-b001-912b131566ce": "Fast Weights  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log  The rapid generalization of MetaNet relies on \u201cfast weights\u201d. There are a handful of papers on this  topic, but | haven't read all of them in detail and | failed to find a very concrete definition, only a  vague agreement on the concept. Normally weights in the neural networks are updated by  stochastic gradient descent in an objective function and this process is known to be slow. One  faster way to learn is to utilize one neural network to predict the parameters of another neural  network and the generated weights are called fast weights. In comparison, the ordinary SGD-based  weights are named s/ow weights.\n\nIn MetaNet, loss gradients are used as meta information to populate models that learn fast weights. Slow and fast weights are combined to make predictions in neural networks. Input  Fast weight layer  ReLU  Slow weight layer  ReLU  Fast weight layer  ReLU  Slow weight layer  ReLU  Fast weight layer Slow weight layer  Softmax  Output  Model Components  Disclaimer: Below you will find my annotations are different from those in the paper", "50edd1e6-d948-4c88-b547-2dd2db9e41d9": "To transition from Rescorla and Wagner\u2019s model to the TD model of classical conditioning (which we just call the TD model), we \ufb01rst recast their model in terms of the concepts that we are using throughout this book.\n\nSpeci\ufb01cally, we match the notation we use for learning with linear function approximation (Section 9.4), and we think of the conditioning process as one of learning to predict the \u201cmagnitude of the US\u201d on a trial on the basis of the compound CS presented on that trial, where the magnitude of a US Y is the RY of the Rescorla\u2013Wagner model as given above. We also introduce states. Because the Rescorla\u2013Wagner model is a trial-level model, meaning that it deals with how associative strengths change from trial to trial without considering any details about what happens within and between trials, we do not have to consider how states change during a trial until we present the full TD model in the following section. Instead, here we simply think of a state as a way of labeling a trial in terms of the collection of component CSs that are present on the trial", "bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59": "Because the KL divergence is non-negative and measures the difference between two distributions, it is often conceptualized as measuring some sort of distance between these distributions. It is not a true distance measure because it is not symmetric: Dxi(P||Q) 4 Dki(Q||P) for some P and Q. This asymmetry means that there are important consequences to the choice of whether to use Dy (P||Q) or D xp (Q||P). See figure 3.6 for more detail. 72  CHAPTER 3.\n\nPROBABILITY AND INFORMATION THEORY  0.7  0.6  0.5  0.4  entropy in nats  https://www.deeplearningbook.org/contents/prob.html    Shannon  0.0 0.0 0.2 0.4 0.6 0.8 1.0  Figure 3.5: Shannon entropy of a binary random variable. This plot shows how distri- butions that are closer to deterministic have low Shannon entropy while distributions that are close to uniform have high Shannon entropy. On the horizontal axis, we plot p, the probability of a binary random variable being equal to 1", "a388b53f-28ab-4c21-a85e-2b7be23af15b": "The weights of the network were set initially to small random values. The initial evaluations were thus entirely arbitrary. Since the moves were selected on the basis of these evaluations, the initial moves were inevitably poor, and the initial games often lasted hundreds or thousands of moves before one side or the other won, almost by accident. After a few dozen games however, After playing about 300,000 games against itself, TD-Gammon 0.0 as described above learned to play approximately as well as the best previous backgammon computer programs. This was a striking result because all the previous high-performance computer programs had used extensive backgammon knowledge. For example, the reigning champion program at the time was, arguably, Neurogammon, another program written by Tesauro that used a neural network but not TD learning.\n\nNeurogammon\u2019s network was trained on a large training corpus of exemplary moves provided by backgammon experts, and, in addition, started with a set of features specially crafted for TD-Gammon 0.0, backgammon positions were represented to the network in a relatively direct way that involved little backgammon knowledge. It did, however, involve substantial knowledge of how ANNs work and how information is best presented to them", "82632d28-918b-4788-b171-7941c4a4d64a": "We would like to compute the log-probability of the observed data, log p(v; @). Sometimes it is too difficult to compute log p(v; @) if it is costly to marginalize out h. Instead, we can compute a lower bound L(v, 6, q) on log p(v; 8). This bound is called the evidence lower bound (ELBO). Another commonly used name for this lower bound is the negative variational free energy.\n\nSpecifically, the evidence lower bound is defined to be  L(v, 6,4) = log p(v; 0) \u2014 Dx (q(h | v)||p(h | v; 4), (19.1)  where q is an arbitrary probability distribution over h.  Because the difference between log p(v) and L(v,0,q) is given by the KL divergence, and because the KL divergence is always nonnegative, we can see that \u00a3 always has at most the same value as the desired log-probability. The two are equal if and only if qg is the same distribution as p(h | v)", "348eb488-17b9-4651-9a94-3e40765a6fe4": "Vasudevan, and Q. V. Le. Autoaugment: Learning augmentation policies from data. In CVPR, 2019. P. Dayan and G. E. Hinton. Using expectation-maximization for reinforcement learning. Neural Computation, 9(2):271\u2013278, 1997. J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova. BERT: Pre-training of deep bidirectional transformers for language understanding. In NAACL, 2019. Y. Fan, F. Tian, T. Qin, X.-Y. Li, and T.-Y. Liu. Learning to teach. In ICLR, 2018. C. Finn, P. Christiano, P. Abbeel, and S. Levine. A connection between generative adversarial networks, inverse reinforcement learning, and energy-based models", "997e57b4-0e6b-4a1e-943f-a988aa254a38": "Consider a D-dimensional variable x with components x1, . , xD. The constraint equation g(x) = 0 then represents a (D\u22121)-dimensional surface in x-space as indicated in Figure E.1.\n\nWe \ufb01rst note that at any point on the constraint surface the gradient \u2207g(x) of the constraint function will be orthogonal to the surface. To see this, consider a point x that lies on the constraint surface, and consider a nearby point x + \u03f5 that also lies on the surface. If we make a Taylor expansion around x, we have Because both x and x+\u03f5 lie on the constraint surface, we have g(x) = g(x+\u03f5) and hence \u03f5T\u2207g(x) \u2243 0. In the limit \u2225\u03f5\u2225 \u2192 0 we have \u03f5T\u2207g(x) = 0, and because \u03f5 is then parallel to the constraint surface g(x) = 0, we see that the vector \u2207g is normal to the surface. Next we seek a point x\u22c6 on the constraint surface such that f(x) is maximized", "bb6999c8-4b30-425d-b4ad-1c69c9be40cd": "Instead, we must search for them by maximizing the log-likelihood.\n\nWe can do this by minimizing the negative log-likelihood using gradient descent. This same strategy can be applied to essentially any supervised learning problem, by writing down a parametric family of conditional probability distributions over the right kind of input and output variables. 138  CHAPTER 5. MACHINE LEARNING BASICS  5.7.2. Support Vector Machines  One of the most influential approaches to supervised learning is the support vector machine . This model is similar to logistic regression in that it is driven by a linear function wx +b. Unlike logistic regression, the support vector machine does not provide probabilities, but only outputs a class identity. The SVM predicts that the positive class is present when w!x-+b is positive. Likewise, it predicts that the negative class is present when  w \u00ab+b is negative. One key innovation associated with support vector machines is the kernel trick. The kernel trick consists of observing that many machine learning algorithms can be written exclusively in terms of dot products between examples", "b1c6f38b-6a0c-45fc-ac62-d02f11b88c16": "This produced TD-Gammon 1.0. TD-Gammon 1.0 was clearly substantially better than all previous backgammon programs and found serious competition only among human experts. Later versions of the program, TD-Gammon 2.0 (40 hidden units) and TD-Gammon 2.1 (80 hidden units), were augmented with a selective two-ply search procedure.\n\nTo select moves, these programs looked ahead not just to the positions that would immediately result, but also to the opponent\u2019s possible dice rolls and moves. Assuming the opponent always took the move that appeared immediately best for him, the expected value of each candidate move was computed and the best was selected. To save computer time, the second ply of search was conducted only for candidate moves that were ranked highly after the \ufb01rst ply, about four or \ufb01ve moves on average. Two-ply search a\u21b5ected only the moves selected; the learning process proceeded exactly as before. The \ufb01nal versions of the program, TD-Gammon 3.0 and 3.1, used 160 hidden units and a selective three-ply search. TD-Gammon illustrates the combination of learned value functions and decision-time search as in heuristic search and MCTS methods", "17e3b1bc-e5b8-4130-b3ab-e4411898f166": "We will want to find some encoding function that produces the code for an input, f(a) = c, and a decoding function that produces the reconstructed input given its code, x \u00a5 g(f(x)). PCA is defined by our choice of the decoding function. Specifically, to make the decoder very simple, we choose to use matrix multiplication to map the code back into R\". Let g(c) = De, where D \u20ac R\"*! is the matrix defining the decoding. Computing the optimal code for this decoder could be a difficult problem. To keep the encoding problem easy, PCA constrains the columns of D to be orthogonal to each other. (Note that D is still not technically \u201can orthogonal matrix\u201d unless l=n.) With the problem as described so far, many solutions are possible, because we can increase the scale of D,; if we decrease c; proportionally for all points. To give the problem a unique solution, we constrain all the columns of D to have unit norm", "2e7b3dc7-ff91-4e5b-ade2-a5ad24e43b55": "For a graphical depiction ot how parameter sharing works, see figure 9.5. As an example of both of these first two principles in action, figure 9.6 shows how sparse connectivity and parameter sharing can dramatically improve the  \u00b0 \u00a9 \u00a9  OOO  Figure 9.5: Parameter sharing. Black arrows indicate the connections that use a particular parameter in two different models. (Top)The black arrows indicate uses of the central element of a 3-element kernel in a convolutional model. Because of parameter sharing, this single parameter is used at all input locations. (Bottom)The single black arrow indicates the use of the central element of the weight matrix in a fully connected model. This model has no parameter sharing, so the parameter is used only once. \u00a9 O-O OQ O-O\u00a9  OO O-O OO OO \u00a9)  333  CHAPTER 9. CONVOLUTIONAL NETWORKS  Figure 9.6: Efficiency of edge detection", "ba543b74-5ac6-40d3-a2b3-38426a61758c": "Compositional generalization and natural language variation: Can a semantic parsing approach handle both? Dinghan Shen, Mingzhi Zheng, Yelong Shen, Yanru Qu, and Weizhu Chen. 2020. A simple but toughto-beat data augmentation approach for natural language understanding and generation. arXiv preprint arXiv:2009.13818. Sam Shleifer. 2019. Low resource text classi\ufb01cation with ulm\ufb01t and backtranslation. Patrice Y. Simard, David Steinkraus, and John C. Platt. 2003.\n\nBest practices for convolutional neural networks applied to visual document analysis. Seventh International Conference on Document Analysis and Recognition, 2003. Proceedings., pages 958\u2013963. Kihyuk Sohn, David Berthelot, Nicholas Carlini, Zizhao Zhang, Han Zhang, Colin A Raffel, Ekin Dogus Cubuk, Alexey Kurakin, and Chun-Liang Li. 2020. Fixmatch: Simplifying semi-supervised learning with consistency and con\ufb01dence. Advances in Neural Information Processing Systems, 33", "d158600e-bd7a-4075-bbdf-98d7b316ad2c": "Exercise 11.3 The generalization to multiple variables is straightforward and involves the Jacobian of the change of variables, so that As a \ufb01nal example of the transformation method we consider the Box-Muller method for generating samples from a Gaussian distribution. First, suppose we generate pairs of uniformly distributed random numbers z1, z2 \u2208 (\u22121, 1), which we can do by transforming a variable distributed uniformly over (0, 1) using z \u2192 2z \u2212 1.\n\nNext we discard each pair unless it satis\ufb01es z2 distribution of points inside the unit circle with p(z1, z2) = 1/\u03c0, as illustrated in Figure 11.3. Then, for each pair z1, z2 we evaluate the quantities and so y1 and y2 are independent and each has a Gaussian distribution with zero mean and unit variance. If y has a Gaussian distribution with zero mean and unit variance, then \u03c3y + \u00b5 will have a Gaussian distribution with mean \u00b5 and variance \u03c32. To generate vectorvalued variables having a multivariate Gaussian distribution with mean \u00b5 and covariance \u03a3, we can make use of the Cholesky decomposition, which takes the form \u03a3 = LLT", "61fa5b8e-9ff7-400d-a281-d10b042bb8a3": "The distribution given by (13.119) is a mixture distribution, and samples can be drawn by choosing a component l with probability given by the mixing coef\ufb01cients w(l) and then drawing a sample from the corresponding component. In summary, we can view each step of the particle \ufb01lter algorithm as comprising two stages. At time step n, we have a sample representation of the posterior distribution p(zn|Xn) expressed as samples {z(l) n } with corresponding weights {w(l) n }. This can be viewed as a mixture representation of the form (13.119). To obtain the corresponding representation for the next time step, we \ufb01rst draw L samples from the mixture distribution (13.119), and then for each sample we use the new observation xn+1 to evaluate the corresponding weights w(l) n+1 \u221d p(xn+1|z(l) n+1). This is illustrated, for the case of a single variable z, in Figure 13.23", "800ed08d-1eb3-48ca-b8c3-d94bb508a6d9": "To do this, we \ufb01rst de\ufb01ne the kinetic energy by The total energy of the system is then the sum of its potential and kinetic energies where H is the Hamiltonian function.\n\nUsing (11.53), (11.55), (11.56), and (11.57), we can now express the dynamics of the system in terms of the Hamiltonian equations given by Exercise 11.15 William Rowan Hamilton was an Irish mathematician and physicist, and child prodigy, who was appointed Professor of Astronomy at Trinity College, Dublin, in 1827, before he had even graduated. One of Hamilton\u2019s most important contributions was a new formulation of dynamics, which played a signi\ufb01cant role in the later development of quantum mechanics. His other great achievement was the development of quaternions, which generalize the concept of complex numbers by introducing three distinct square roots of minus one, which satisfy i2 = j2 = k2 = ijk = \u22121. It is said that these equations occurred to him while walking along the Royal Canal in Dublin with his wife, on 16 October 1843, and he promptly carved the equations into the side of Broome bridge", "6878e708-fdc6-4fa0-b4bf-41cd28fefb16": "Show that this cannot be represented by a single-level mixture of 3 components having mixing coef\ufb01cients determined by a linear-softmax model. In this appendix, we give a brief introduction to the data sets used to illustrate some of the algorithms described in this book.\n\nDetailed information on \ufb01le formats for these data sets, as well as the data \ufb01les themselves, can be obtained from the book web site: http://research.microsoft.com/\u223ccmbishop/PRML The digits data used in this book is taken from the MNIST data set , which itself was constructed by modifying a subset of the much larger data set produced by NIST (the National Institute of Standards and Technology). It comprises a training set of 60, 000 examples and a test set of 10, 000 examples. Some of the data was collected from Census Bureau employees and the rest was collected from high-school children, and care was taken to ensure that the test examples were written by different individuals to the training examples. The original NIST data had binary (black or white) pixels. To create MNIST, these images were size normalized to \ufb01t in a 20\u00d720 pixel box while preserving their aspect ratio", "c67414dc-f631-4291-b7f8-1e0903b78f46": "Therefore, any \u03b8 which increases l(\u03b8|\u03b8n) in turn increase the L(\u03b8). In order to achieve the greatest possible increase in the value of L(\u03b8), the EM algorithm calls for selecting \u03b8 such that l(\u03b8|\u03b8n) is maximized. We denote this updated value as \u03b8n+1. This process is illustrated in Figure (2). Formally we have, Now drop terms which are constant w.r.t. \u03b8 In Equation (15) the expectation and maximization steps are apparent. The EM algorithm thus consists of iterating the: 1. E-step: Determine the conditional expectation EZ|X,\u03b8n{ln P(X, z|\u03b8)} 2.\n\nM-step: Maximize this expression with respect to \u03b8. At this point it is fair to ask what has been gained given that we have simply traded the maximization of L(\u03b8) for the maximization of l(\u03b8|\u03b8n). The answer lies in the fact that l(\u03b8|\u03b8n) takes into account the unobserved or missing data Z. In the case where we wish to estimate these variables the EM algorithms provides a framework for doing so", "cc2e63ae-679e-4329-aed7-8aaeb7c56831": "With a true SGD method such divergence would not be possible. The appeal of SGD is so strong that great e\u21b5ort has gone into \ufb01nding a practical way of harnessing it for reinforcement learning. The starting place of all such e\u21b5orts is the choice of an error or objective function to optimize. In this and the next section we explore the origins and limits of the most popular proposed objective function, that based on the Bellman error introduced in the previous section. Although this has been a popular and in\ufb02uential approach, the conclusion that we reach here is that it is a misstep and yields no good learning algorithms.\n\nOn the other hand, this approach fails in an interesting way that o\u21b5ers insight into what might constitute a good approach. To begin, let us consider not the Bellman error, but something more immediate and naive. Temporal di\u21b5erence learning is driven by the TD error", "4afb48d1-ec2e-4ec5-9018-d674c44aba23": "Similarly, we can de\ufb01ne UF to be the set of such distributions that can be expressed as a factorization of the form (8.39) with respect to the maximal cliques of the graph. The Hammersley-Clifford theorem  states that the sets UI and UF are identical. Because we are restricted to potential functions which are strictly positive it is convenient to express them as exponentials, so that where E(xC) is called an energy function, and the exponential representation is called the Boltzmann distribution. The joint distribution is de\ufb01ned as the product of potentials, and so the total energy is obtained by adding the energies of each of the maximal cliques.\n\nIn contrast to the factors in the joint distribution for a directed graph, the potentials in an undirected graph do not have a speci\ufb01c probabilistic interpretation. Although this gives greater \ufb02exibility in choosing the potential functions, because there is no normalization constraint, it does raise the question of how to motivate a choice of potential function for a particular application. This can be done by viewing the potential function as expressing which con\ufb01gurations of the local variables are preferred to others", "77838fce-9af9-44d3-8dfb-133dda73d880": "From these two relationships, it is easily shown that h(x) must be given by the logarithm of p(x) and so we have Exercise 1.28 where the negative sign ensures that information is positive or zero. Note that low probability events x correspond to high information content. The choice of basis for the logarithm is arbitrary, and for the moment we shall adopt the convention prevalent in information theory of using logarithms to the base of 2. In this case, as we shall see shortly, the units of h(x) are bits (\u2018binary digits\u2019). Now suppose that a sender wishes to transmit the value of a random variable to a receiver. The average amount of information that they transmit in the process is obtained by taking the expectation of (1.92) with respect to the distribution p(x) and is given by This important quantity is called the entropy of the random variable x.\n\nNote that limp\u21920 p ln p = 0 and so we shall take p(x) ln p(x) = 0 whenever we encounter a value for x such that p(x) = 0", "878f36a2-a7a0-4d18-a7b1-770ac6e6495c": "The behavior of populations of reinforcement learning agents is deeply relevant to the study of social and economic systems, and if anything like Klopf\u2019s hedonistic neuron hypothesis is correct, to neuroscience as well.\n\nThe hypothesis described above about how an actor\u2013critic algorithm might be implemented in the brain only narrowly addresses the implications of the fact that the dorsal and ventral subdivisions of the striatum, the respective locations of the actor and the critic according to the hypothesis, each contain millions of medium spiny neurons whose synapses undergo change modulated by phasic bursts of dopamine neuron activity. The actor in Figure 15.5a is a single-layer network of k actor units. The actions produced by this network are vectors (A1, A2, \u00b7 \u00b7 \u00b7 , Ak)> presumed to drive the animal\u2019s behavior. Changes in the e\ufb03cacies of the synapses of all of these units depend on the reinforcement signal \u03b4. Because actor units attempt to make \u03b4 as large as possible, \u03b4 e\u21b5ectively acts as a reward signal for them (so in this case reinforcement is the same as reward)", "dfce28ab-2568-4479-a850-03cdfb7670f0": "Because of the complexity of the learning task, however, contingent eligibility is merely a preliminary step in the credit assignment process: the relationship between a single team member\u2019s action and changes in the team\u2019s reward signal is a statistical correlation that has to be estimated over many trials. Contingent eligibility is an essential but preliminary step in this process. Learning with non-contingent eligibility traces does not work at all in the team setting because it does not provide a way to correlate actions with consequent changes in the reward signal. Non-contingent eligibility traces are adequate for learning to predict, as the critic component of the actor\u2013critic algorithm does, but they do not support learning to control, as the actor component must do.\n\nThe members of a population of critic-like agents may still receive a common reinforcement signal, but they would all learn to predict the same quantity (which in the case of an actor\u2013critic method, would be the expected return for the current policy). How successful each member of the population would be in learning to predict the expected return would depend on the information it receives, which could be very di\u21b5erent for di\u21b5erent members of the population. There would be no need for the population to produce di\u21b5erentiated patterns of activity", "a52154a9-d7b2-49de-b5f5-0e24b3ec9710": "The latter noise level should correspond to the mean squared error of reconstructions, whereas the injected noise is a hyperparameter that controls the mixing speed as well as the extent to which the estimator smooths the empirical distribution . In the example illustrated here, only the C and p conditionals are stochastic steps (f and g are deterministic computations), although noise can also be injected inside the autoencoder, as in generative stochastic networks . 708  CHAPTER 20. DEEP GENERATIVE MODELS  2. Encode # into h = f(z). 3. Decode h to obtain the parameters w = g(h) of p(x | w = g(h)) = p(x| @). 4. Sample the next state x from p(x | w = g(h)) = p(x | #). Bengio et al", "73ed83a1-00f1-4619-ab63-c32180076f54": "Theano  is an example of a software package that automatically detects and stabilizes many common numerically unstable expressions that arise in the context of deep learning. 4.2 Poor Conditioning  Conditioning refers to how rapidly a function changes with respect to small changes in its inputs. Functions that change rapidly when their inputs are perturbed slightly can be problematic for scientific computation because rounding errors in the inputs can result in large changes in the output. Consider the function f(a) = Ata. When A \u20ac R\u201d*\u201d has an eigenvalue decomposition, its condition number is  i  max (4.2)  ij  This is the ratio of the magnitude of the largest and smallest eigenvalue. When this number is large, matrix inversion is particularly sensitive to error in the input. This sensitivity is an intrinsic property of the matrix itself, not the result of rounding error during matrix inversion. Poorly conditioned matrices amplify pre-existing errors when we multiply by the true matrix inverse. In practice, the error will be compounded further by numerical errors in the inversion process itself. 4.3", "a238b989-6749-401f-a164-f6d819188f37": "Many NLP applications are based on language models that define a probability distribution over sequences of words, characters, or bytes in a natural language. As with the other applications discussed in this chapter, very generic neural network techniques can be successfully applied to natural language processing. To achieve excellent performance and to scale well to large applications, however, some domain-specific strategies become important. To build an efficient model of natural language, we must usually use techniques that are specialized for processing sequential data. In many cases, we choose to regard natural language as a sequence of words, rather than a sequence of individual characters or bytes. Because the total number of possible words is so large, word-based language models must operate on  Powaow : 1 1 4 a tou 4 : 1  https://www.deeplearningbook.org/contents/applications.html    all CXLICILIELY LIS U-CAMNEISLONAL ALL Sparse AISCreLe Space. O\u20acVELal SLIALERICS Lave been developed to make models of such a space efficient, in both a computational and a statistical sense", "1f9fec28-be1c-418c-89dd-004adcf82c27": "Erhan ef al.\n\nmade  a linear projection to high-dimensional space by concatenating the y for many specific x  points. They then made a further nonlinear projection to 2-D by Isomap . Color indicates time. All networks are initialized near the center of the plot (corresponding to the region of functions that produce approximately uniform distributions over the class y for most inputs). Over time, learning moves the function outward, to points that make strong predictions. Training consistently terminates in one region when using pretraining and in another, nonoverlapping region when not using pretraining. Isomap tries to preserve global relative distances (and hence volumes) so the small region corresponding to pretrained models may indicate that the pretraining-based estimator has reduced variance. 532  CHAPTER 15. REPRESENTATION LEARNING  many hyperparameters, whose effect may be measured after the fact but is often difficult to predict ahead of time. When we perform unsupervised and supervised learning simultaneously, instead of using the pretraining strategy, there is a single hyperparameter, usually a coefficient attached to the unsupervised cost, that determines how strongly the unsupervised objective will regularize the supervised model", "0f36c8a4-1c71-4bfd-923e-d099c4a0b828": "As As SARSA  Q-learning  Deep Q-Network  Theoretically, we can memorize Q..(. ) for all state-action pairs in Q-learning, like in a gigantic table. However, it quickly becomes computationally infeasible when the state and action space are large. Thus people use functions (i.e. a machine learning model) to approximate Q values and this is called function approximation. For example, if we use a function with parameter 0 to calculate Q values, we can label Q value function as Q(s, a; 9). Unfortunately Q-learning may suffer from instability and divergence when combined with an nonlinear Q-value function approximation and bootstrapping (See Problems #2). Deep Q-Network  aims to greatly improve and stabilize the training procedure of Q-learning by two innovative mechanisms:  Experience Replay: All the episode steps e, = (.5;, A;, Ri, Sti1) are stored in one replay memory D; = {e,,..., e;}. D; has experience tuples over many episodes", "6d4e12a9-2dcc-4191-9e68-7f0b038dddf4": "Each basis function \u03c6j(xn), evaluated at the N data points, can also be represented as a vector in the same space, denoted by \u03d5j, as illustrated in Figure 3.2. Note that \u03d5j corresponds to the jth column of \u03a6, whereas \u03c6(xn) corresponds to the nth row of \u03a6. If the number M of basis functions is smaller than the number N of data points, then the M vectors \u03c6j(xn) will span a linear subspace S of dimensionality M. We de\ufb01ne y to be an N-dimensional vector whose nth element is given by y(xn, w), where n = 1, . , N. Because y is an arbitrary linear combination of the vectors \u03d5j, it can live anywhere in the M-dimensional subspace.\n\nThe sum-of-squares error (3.12) is then equal (up to a factor of 1/2) to the squared Euclidean distance between y and t. Thus the least-squares solution for w corresponds to that choice of y that lies in subspace S and that is closest to t", "4913902f-4fee-4bde-aac0-2699deac00c2": "Of course, there are many MS representations depending on the nature of the microstimuli, and a number of examples of MS representations have been studied in the literature, in some cases along with proposals for how an animal\u2019s brain might generate them (see the Bibliographic and Historical Comments at the end of this chapter). MS representations are more realistic than the presence or CSC representations as hypotheses about neural representations of stimuli, and they allow the behavior of the TD model to be related to a broader collection of phenomena observed in animal experiments. In particular, by assuming that cascades of microstimuli are initiated by USs as well as by CSs, and by studying the signi\ufb01cant e\u21b5ects on learning of interactions between microstimuli, eligibility traces, and discounting, the TD model is helping to frame hypotheses to account for many of the subtle phenomena of classical conditioning and how an animal\u2019s brain might produce them.\n\nWe say more about this below, particularly in Chapter 15 where we discuss reinforcement learning and neuroscience. Even with the simple presence representation, however, the TD model produces all the basic properties of classical conditioning that are accounted for by the Rescorla\u2013Wagner model, plus features of conditioning that are beyond the scope of trial-level models", "72849358-35e8-4a8b-af03-2ffd3f32c7c8": "All of this makes optimization difficult, especially when the input to the function is multidimensional. We therefore usually settle for finding a value of f that is very  low but not necessarily minimal in any formal sense. See figure 4.3 for an example. We often minimize functions that have multiple inputs: f : R\u201d \u2014 R. For the concept of \u201cminimization\u201d to make sense, there must still be only one (scalar) output. For functions with multiple inputs, we must make use of the concept of partial derivatives.\n\nThe partial derivative ro f(z) measures how f changes as only the variable x; increases at point a. The gradient generalizes the notion of derivative to the case where the derivative is with respect to a vector: the gradient of f is the vector containing all the partial derivatives, denoted V_ f(a). Element 7 of the gradient is the partial derivative of f with respect to z;. In multiple dimensions,  82  CHAPTER 4. NUMERICAL COMPUTATION  This local minimum performs nearly as well as the global one,  so it is an acceptable halting point", "01c57e3f-745d-48b2-b0f7-8b73d6b71acc": "For each bandit problem, such as the one shown in Figure 2.1, the action values, q\u21e4(a), a = 1, . , 10, were selected according to a normal (Gaussian) distribution with mean 0 and variance 1. Then, when a learning method applied to that problem selected action At at time step t, the actual reward, Rt, was selected from a normal distribution with mean q\u21e4(At) and variance 1. These distributions are shown in gray in Figure 2.1. We call this suite of test tasks the 10-armed testbed.\n\nFor any learning method, we can measure its performance and behavior as it improves with experience over 1000 time steps when applied to one of the bandit problems. This makes up one run. Repeating this for 2000 independent runs, each with a di\u21b5erent bandit problem, we obtained measures of the learning algorithm\u2019s average behavior. as described above, on the 10-armed testbed. All the methods formed their action-value estimates using the sample-average technique. The upper graph shows the increase in expected reward with experience. The greedy method improved slightly faster than the other methods at the very beginning, but then leveled o\u21b5 at a lower level", "908cf3e9-f017-4f5f-8ef8-229339f7252b": "For example, the  274  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  most commonly used property is the gradient:  VoJ(@) = Ux,y~Paata V log Dmodel(, YS 0). (8.6)  Computing this expectation exactly is very expensive because it requires evaluating the model on every example in the entire dataset. In practice, we can compute these expectations by randomly sampling a small number of examples from the dataset, then taking the average over only those examples. Recall that the standard error of the mean (equation 5.46) estimated from n samples is given by a/./n, where o is the true standard deviation of the value of the samples.\n\nThe denominator of ,/n shows that there are less than linear returns to using more examples to estimate the gradient. Compare two hypothetical estimates of the gradient, one based on 100 examples and another based on 10,000 examples. The latter requires 100 times more computation than the former but reduces the standard error of the mean only by a factor of 10", "fe860d96-3b18-4b67-93fd-bb75b00ea75f": "Peters, J., B\u00a8uchel, C. Neural representations of subjective reward value. Behavioral Peters, J., Schaal, S. Natural actor\u2013critic. Neurocomputing, 71(7):1180\u20131190. Peters, J., Vijayakumar, S., Schaal, S. Natural actor\u2013critic. In European Conference on Machine Learning, pp. 280\u2013291. Springer Berlin Heidelberg. Pezzulo, G., van der Meer, M. A. A., Lansink, C. S., Pennartz, C. M. A. Internally generated sequences in learning and executing goal-directed behavior. Trends in Cognitive Science, 18(12):647\u2013657. Pfei\u21b5er, B. E., Foster, D. J. Hippocampal place-cell sequences depict future paths to Phansalkar, V. V., Thathachar, M. A. L", "7b65980a-37e1-466b-8610-7852bf7b0aa6": "But what happens over the entire course of training? We will further simplify the analysis by making a quadratic approximation to the objective function in the neighborhood of the value of the weights that obtains minimal unregularized training cost, w* = arg min, J(w). If the objective function is truly quadratic, as in the case of fitting a linear regression model with  \u2018More generally, we could regularize the parameters to be near any specific point in space and, surprisingly, still get a regularization effect, but better results will be obtained for a value closer to the true one, with zero being a default value that makes sense when we do not know if the correct value should be positive or negative. Since it is far more common to regularize the model parameters toward zero, we will focus on this special case in our exposition. 227  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  mean squared error, then the approximation is perfect", "87d6fd7d-97c9-4a3b-8113-64db5717b5f7": "Hint: Start by writing out \u03b4a Exercise 12.11 The truncated version of the general o\u21b5-policy return is denoted G\u03bba Using steps entirely analogous to those for the state case, one can write a forward-view update based on (12.27), transform the sum of the updates using the summation rule, and \ufb01nally derive the following form for the eligibility trace for action values: This eligibility trace, together with the expectation-based TD error (12.28) and the usual semi-gradient parameter-update rule (12.7), forms an elegant, e\ufb03cient Expected Sarsa(\u03bb) algorithm that can be applied to either on-policy or o\u21b5-policy data. It is probably the best algorithm of this type at the current time (though of course it is not guaranteed to be stable until combined in some way with one of the methods presented in the following sections). In the on-policy case with constant \u03bb and \u03b3, and the usual state-action TD error (12.16), the algorithm would be identical to the Sarsa(\u03bb) algorithm presented in Section 12.7", "8bd4f7ec-02d8-4f6d-954c-84f03ec63c51": "Applying the analysis again, we will be able to obtain a special case of the same results, but with the solution now phrased in terms of the training data. For linear regression, the cost function is the sum of squared errors:  (Xw \u2014 y)\"(Xw\u2014y). (7.14)  When we add L? regularization, the objective function changes to  https://www.deeplearningbook.org/contents/regularization.html    (Xw-\u2014y)' (Xw\u2014y)+ jaw! w. 7.15)  This changes the normal equations for the solution from w=(X'X)txTy 7.16)  to  w=(X'X+oar)txly. 7.17) The matrix X 'X in equation 7.16 is proportional to the covariance matrix 4 XTX. Using L? regularization replaces this matrix with (XTX + al) ' in equation 7.17. The new matrix is the same as the original one, but with the addition of a to the  diagonal.\n\nThe diagonal entries of this matrix correspond to the variance of each input feature", "2a2a11ab-6642-4ca3-bc3b-68ad18091921": "The relationship that we are looking for is that the forward-view update, summed over time, is approximately equal to a backward-view update, summed over time (this relationship is only approximate because again we ignore changes in the value function).\n\nThe sum of the forward-view update over time is which would be in the form of the sum of a backward-view TD update if the entire expression from the second sum left could be written and updated incrementally as an eligibility trace, which we now show can be done. That is, we show that if this expression was the trace at time k, then we could update it from its value at time k \u2212 1 by: This eligibility trace, together with the usual semi-gradient parameter-update rule for TD(\u03bb) (12.7), forms a general TD(\u03bb) algorithm that can be applied to either on-policy or o\u21b5-policy data. In the on-policy case, the algorithm is exactly TD(\u03bb) because \u21e2t is alway 1 and (12.25) becomes the usual accumulating trace (12.5) (extended to variable \u03bb and \u03b3). In the o\u21b5-policy case, the algorithm often works well but, as a semi-gradient method, is not guaranteed to be stable", "df1881ce-68ee-4399-935e-20c4efa97d36": "Kearns, M., Singh, S. Near-optimal reinforcement learning in polynomial time. Machine Keerthi, S. S., Ravindran, B. Reinforcement learning. In E. Fieslerm and R. Beale (Eds.\n\n), Handbook of Neural Computation, C3. Oxford University Press, New York. Kehoe, E. J. Conditioning with serial compound stimuli: Theoretical and empirical Kehoe, E. J., Schreurs, B. G., Graham, P. Temporal primacy overrides prior training Kei\ufb02in, R., Janak, P. H. Dopamine prediction errors in reward learning and addiction: Ffrom theory to neural circuitry. Neuron, 88(2):247\u2013 263. Kimble, G. A. Hilgard and Marquis\u2019 Conditioning and Learning. Appleton-CenturyKimble, G. A. Foundations of Conditioning and Learning", "cb3b224b-888a-4e84-9334-682d93eb6d28": "It follows that the samples from the previous model\u2019s distribution will be very close to being fair samples from the current model\u2019s distribution, so a Markov chain initialized with these samples will not require much time to mix. Because each Markov chain is continually updated throughout the learning process, rather than restarted at each gradient step, the chains are free to wander far enough to find all the model\u2019s modes. SML is thus considerably more resistant to forming models with spurious modes than CD is. Moreover, because it is possible to store the state of all the sampled variables, whether visible or latent, SML provides an initialization point for both the hidden and the visible units. CD is only able to provide an initialization for the visible units, and therefore requires  610  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  Algorithm 18.3 The stochastic maximum likelihood / persistent contrastive divergence algorithm using gradient ascent as the optimization procedure  Set \u20ac, the step size, to a small positive number. Set k, the number of Gibbs steps, high enough to allow a Markov chain sampling from p(x;@ + eg) to burn in, starting from samples from p(x;@)", "5d7f79e6-8f00-4280-ac0d-204678b34dd0": "In the case of binary variables, we wished to produce a single number \u00a7=Ply=1|2).\n\n(6.27)  Because this number needed to lie between 0 and 1, and because we wanted the logarithm of the number to be well behaved for gradient-based optimization of the log-likelihood, we chose to instead predict a number z = log P(y = 1 | \u00ab). Exponentiating and normalizing gave us a Bernoulli distribution controlled by the sigmoid function. To generalize to the case of a discrete variable with n values, we now need to produce a vector y, with 7; = P(y =i| a). We require not only that each element of 4; be between 0 and 1, but also that the entire vector sums to 1 so that it represents a valid probability distribution. The same approach that worked for the Bernoulli distribution generalizes to the multinoulli distribution. First, a linear layer predicts unnormalized log probabilities:  z=W'h+b, (6.28)  where 2 = log P(y = %| a). The softmax function can then exponentiate and normalize z to obtain the desired y", "281392b1-29a4-47a7-bde5-1a45dfec28ee": "For the purposes of this simple illustration, we have \ufb01xed the parameters to be \u03b2 = 1.0, \u03b7 = 2.1 and h = 0. Note that leaving h = 0 simply means that the prior probabilities of the two states of xi are equal. Starting with the observed noisy image as the initial con\ufb01guration, we run ICM until convergence, leading to the de-noised image shown in the lower left panel of Figure 8.30. Note that if we set \u03b2 = 0, which effectively removes the links between neighbouring pixels, then the global most probable solution is given by xi = yi for all i, corresponding to the observed noisy image. Exercise 8.14 Later we shall discuss a more effective algorithm for \ufb01nding high probability solutions called the max-product algorithm, which typically leads to better solutions, Section 8.4 although this is still not guaranteed to \ufb01nd the global maximum of the posterior distribution. However, for certain classes of model, including the one given by (8.42), there exist ef\ufb01cient algorithms based on graph cuts that are guaranteed to \ufb01nd the global maximum .\n\nThe lower right panel of Figure 8.30 shows the result of applying a graph-cut algorithm to the de-noising problem", "d99f09d4-bf22-4068-a4d2-e9a3f6816f7a": "Linear SFA modules may then be composed to learn deep nonlinear slow feature extractors by repeatedly learning a linear SFA feature extractor, applying  https://www.deeplearningbook.org/contents/linear_factors.html    a nonlinear basis expansion to its output, and then learning another linear SFA eature extractor on top of that expansion.\n\nWhen trained on small spatial patches of videos of natural scenes, SFA with quadratic basis expansions learns features that share many characteristics with hose of complex cells in V1 cortex . When trained on videos of random motion within 3-D computer-rendered environments, deep SFA learns features that share many characteristics with the features represented by neurons in rat brains that are used for navigation . SFA chus seems to be a reasonably biologically plausible model. A major advantage of SFA is that it is possible to theoretically predict which eatures SFA will learn, even in the deep nonlinear setting. To make such theoretical predictions, one must know about the dynamics of the environment in terms of configuration space (e.g., in the case of random motion in the 3-D rendered  environment, the theoretical analysis proceeds from knowledge of the probability distribution over position and velocity of the camera)", "e17dfd00-21de-41ff-9b15-aee7552f6954": "Section 10.4.1 the complexity penalty arises from components whose parameters are pushed away from their prior values. Components that take essentially no responsibility for explaining the data points have rnk \u2243 0 and hence Nk \u2243 0. From (10.58), we see that \u03b1k \u2243 \u03b10 and from (10.60)\u2013(10.63) we see that the other parameters revert to their prior values. In principle such components are \ufb01tted slightly to the data points, but for broad priors this effect is too small to be seen numerically. For the variational Gaussian mixture model the expected values of the mixing coef\ufb01cients in the posterior distribution are given by Exercise 10.15 Consider a component for which Nk \u2243 0 and \u03b1k \u2243 \u03b10.\n\nIf the prior is broad so that \u03b10 \u2192 0, then E \u2192 0 and the component plays no role in the model, whereas if the prior tightly constrains the mixing coef\ufb01cients so that \u03b10 \u2192 \u221e, then E \u2192 1/K. In Figure 10.6, the prior over the mixing coef\ufb01cients is a Dirichlet of the form (10.39)", "619b4022-e684-4e54-a2ae-7c5ac339ccb6": "Generalized polynomial approximations in Markovian decision processes. Journal of Mathematical Analysis and Applications, 110(2):568\u2013582. Selfridge, O. G. Tracking and trailing: Adaptation in movement strategies. Technical report, Bolt Beranek and Newman, Inc. Unpublished report. Selfridge, O. G. Some themes and primitives in ill-de\ufb01ned systems. In O. G. Selfridge, E. L. Rissland, and M. A. Arbib (Eds. ), Adaptive Control of Ill-De\ufb01ned Systems, pp. 21\u201326. Plenum Press, NY. Proceedings of the NATO Advanced Research Institute on Adaptive Control of Ill-de\ufb01ned Systems, NATO Conference Series II, Systems Science, Vol. 16.\n\nSelfridge, O. J., Sutton, R. S., Barto, A. G. Training and tracking in robotics. In A", "d05eeb23-0cf8-4f07-96b6-6f56a5592c0b": "This example suggests that search might be usefully focused by working backward from goal states. Of course, we do not really want to use any methods speci\ufb01c to the idea of \u201cgoal state.\u201d We want methods that work for general reward functions. Goal states are just a special case, convenient for stimulating intuition. In general, we want to work back not just from goal states but from any state whose value has changed. Suppose that the values are initially correct given the model, as they were in the maze example prior to discovering the goal. Suppose now that the agent discovers a change in the environment and changes its estimated value of one state, either up or down.\n\nTypically, this will imply that the values of many other states should also be changed, but the only useful one-step updates are those of actions that lead directly into the one state whose value has been changed. If the values of these actions are updated, then the values of the predecessor states may change in turn. If so, then actions leading into them need to be updated, and then their predecessor states may have changed. In this way one can work backward from arbitrary states that have changed in value, either performing useful updates or terminating the propagation", "0d64fe3a-d541-4f57-8f58-84dfc8213c57": "We begin by generalizing the n-step return (7.4) to its di\u21b5erential form, with function approximation: where \u00afR is an estimate of r(\u21e1), n \u2265 1, and t + n < T. If t + n \u2265 T, then we de\ufb01ne Gt:t+n .= Gt as usual. The n-step TD error is then after which we can apply our usual semi-gradient Sarsa update (10.12). Pseudocode for the complete algorithm is given in the box", "61274911-56d4-40b6-8e41-06aaca6a8b4e": ", xN) of the observed data for the state space model represented by the directed graph in Figure 13.5 does not satisfy any conditional independence properties and hence does not exhibit the Markov property at any \ufb01nite order. represented by a parametric model p(x|z, w), such as a linear regression model or a neural network, in which w is a vector of adaptive parameters. Describe how the parameters w can be learned from data using maximum likelihood.\n\n13.5 (\u22c6 \u22c6) Verify the M-step equations (13.18) and (13.19) for the initial state probabilities and transition probability parameters of the hidden Markov model by maximization of the expected complete-data log likelihood function (13.17), using appropriate Lagrange multipliers to enforce the summation constraints on the components of \u03c0 and A. 13.6 (\u22c6) Show that if any elements of the parameters \u03c0 or A for a hidden Markov model are initially set to zero, then those elements will remain zero in all subsequent updates of the EM algorithm. 13.7 (\u22c6) Consider a hidden Markov model with Gaussian emission densities", "23efc706-9e75-46d0-a4a5-a361ca10814d": "But contrastive methods have a major issue: They are very inefficient to train. In high-dimensional spaces such as images, there are many ways one image can be different from another. Finding a set of contrastive images that cover all the ways they can differ from a given image is a nearly impossible task.\n\nTo paraphrase Leo Tolstoy\u2019s Anna Karenina: \u201cHappy families are all alike; every unhappy family is unhappy in its own way.\u201d This applies to any family of high-dimensional objects, it seems. What if it were possible to make sure the energy of incompatible pairs is higher than that of compatible pairs without explicitly pushing up on the energy of many incompatible pairs? Non-contrastive energy- based SSL  Non-contrastive methods applied to joint embedding architectures is possibly the hottest topic in SSL for  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   vision at the moment. The domain is still largely unexplored, but it seems very promising", "d731604e-e872-456b-b186-c44d7e8c4dab": "In the latter case, it is not clear that the hard assignment to the nearest cluster is the most appropriate. We shall see in the next section that by adopting a probabilistic approach, we obtain \u2018soft\u2019 assignments of data points to clusters in a way that re\ufb02ects the level of uncertainty over the most appropriate assignment. This probabilistic formulation brings with it numerous bene\ufb01ts. As an illustration of the application of the K-means algorithm, we consider the related problems of image segmentation and image compression.\n\nThe goal of segmentation is to partition an image into regions each of which has a reasonably homogeneous visual appearance or which corresponds to objects or parts of objects . Each pixel in an image is a point in a 3-dimensional space comprising the intensities of the red, blue, and green channels, and our segmentation algorithm simply treats each pixel in the image as a separate data point. Note that strictly this space is not Euclidean because the channel intensities are bounded by the interval . Nevertheless, we can apply the K-means algorithm without dif\ufb01culty", "e5a137c7-bdfe-4b39-9392-2cf5c1b6fcc9": "If you are already familiar with probability theory and information theory, you may wish to skip this chapter except for section 3.14, which describes the graphs we use to describe structured probabilistic models for machine learning.\n\nIf you have absolutely no prior experience with these subjects, this chapter should be sufficient to successfully carry out deep learning research projects, but we do suggest that you consult an additional resource, such as Jaynes . https://www.deeplearningbook.org/contents/prob.html    51  CHAPTER 3. PROBABILITY AND INFORMATION THEORY  3.1 Why Probability? Many branches of computer science deal mostly with entities that are entirely deterministic and certain. A programmer can usually safely assume that a CPU will execute each machine instruction flawlessly. Errors in hardware do occur but are rare enough that most software applications do not need to be designed to account for them. Given that many computer scientists and software engineers work in a relatively clean and certain environment, it can be surprising that machine learning makes heavy use of probability theory. Machine learning must always deal with uncertain quantities and sometimes stochastic (nondeterministic) quantities. Uncertainty and stochasticity can arise from many sources. Researchers have made compelling arguments for quantifying uncertainty using probability since at least the 1980s", "cbc329fd-9b52-4f8b-a9f5-4982e4a9552d": "In a general feed-forward network, each unit computes a weighted sum of its inputs of the form aj = \ufffd where zi is the activation of a unit, or input, that sends a connection to unit j, and wji is the weight associated with that connection. In Section 5.1, we saw that biases can be included in this sum by introducing an extra unit, or input, with activation \ufb01xed at +1. We therefore do not need to deal with biases explicitly. The sum in (5.48) is transformed by a nonlinear activation function h(\u00b7) to give the activation zj of unit j in the form zj = h(aj). (5.49) Note that one or more of the variables zi in the sum in (5.48) could be an input, and similarly, the unit j in (5.49) could be an output. For each pattern in the training set, we shall suppose that we have supplied the corresponding input vector to the network and calculated the activations of all of the hidden and output units in the network by successive application of (5.48) and (5.49). This process is often called forward propagation because it can be regarded as a forward \ufb02ow of information through the network", "e52781e9-216f-45eb-a189-4690dacf0024": ", but the system has improved substantially after publication.\n\ntuning data, we only lose 0.1-0.4 F1, still outperforming all existing systems by a wide margin.12 The SQuAD 2.0 task extends the SQuAD 1.1 problem de\ufb01nition by allowing for the possibility that no short answer exists in the provided paragraph, making the problem more realistic. We use a simple approach to extend the SQuAD v1.1 BERT model for this task. We treat questions that do not have an answer as having an answer span with start and end at the  token. The probability space for the start and end answer span positions is extended to include the position of the  token. For prediction, we compare the score of the no-answer span: snull = S\u00b7C + E\u00b7C to the score of the best non-null span 12The TriviaQA data we used consists of paragraphs from TriviaQA-Wiki formed of the \ufb01rst 400 tokens in documents, that contain at least one of the provided possible answers. \u02c6 si,j = maxj\u2265iS\u00b7Ti + E\u00b7Tj", "80e29c94-3f32-492c-ac67-a7210792ef95": "5.1 Learning Algorithms  A machine learning algorithm is an algorithm that is able to learn from data. But what do we mean by learning?\n\nMitchell  provides a succinct definition: \u201cA computer program is said to learn from experience F with respect to some class of tasks T and performance measure P, if its performance at tasks in T\u2019, as measured by P, improves with experience EF.\u201d One can imagine a wide variety of experiences E, tasks T\u2019, and performance measures P, and we do not attempt in this book to formally define what may be used for each of these entities. Instead, in the following sections, we provide intuitive descriptions and examples of the different kinds of tasks, performance measures, and experiences that can be used to construct machine learning algorithms. 5.1.1 The Task, T  Machine learning enables us to tackle tasks that are too difficult to solve with fixed programs written and designed by human beings. From a scientific and philosophical point of view, machine learning is interesting because developing our understanding of it entails developing our understanding of the principles that underlie intelligence. In this relatively formal definition of the word \u201ctask,\u201d the process of learning itself is not the task. Learning is our means of attaining the ability to perform the task", "c8697001-4d7a-4ce6-878e-1276e7cd8bdd": "Dropout thus regularizes each hidden unit to be not merely a good feature but a feature that is good in many contexts. Warde-Farley ef al. compared dropout training to training of large ensembles and concluded that dropout offers additional improvements to generalization error beyond those obtained by ensembles of independent models. It is important to understand that a large portion of the power of dropout arises from the fact that the masking noise is applied to the hidden units.\n\nThis can be seen as a form of highly intelligent, adaptive destruction of the information content of the input rather than destruction of the raw values of the input. For example, if the model learns a hidden unit h; that detects a face by finding the nose, then dropping h; corresponds to erasing the information that there is a nose in the image. The model must learn another h;, that either redundantly encodes  https://www.deeplearningbook.org/contents/regularization.html    the presence ot a nose or detects the tace by another feature, such as the mouth", "bd4df9df-3cec-46c9-bab3-86e6d940345a": "For example, in card games with imperfect information the optimal play is often to do two di\u21b5erent things with speci\ufb01c probabilities, such as when blu\ufb03ng in Poker. Action-value methods have no natural way of \ufb01nding stochastic optimal policies, whereas policy approximating methods can, as shown in Example 13.1. Consider the small corridor gridworld shown inset in the graph below. The reward is \u22121 per step, as usual. In each of the three nonterminal states there are only two actions, right and left.\n\nThese actions have their usual consequences in the \ufb01rst and third states (left causes no movement in the \ufb01rst state), but in the second state they are reversed, so that right moves to the left and left moves to the right. The problem is di\ufb03cult because all the states appear identical under the function approximation. In particular, we de\ufb01ne x(s, right) = > and x(s, left) = >, for all s. An action-value method with \"-greedy action selection is forced to choose between just two policies: choosing right with high probability 1 \u2212 \"/2 on all steps or choosing left with the same high probability on all time steps", "f458fdcb-db6e-4dfa-a400-9ae82a0dd0bc": "Some singular values remain above 1, however, because the reconstruction error penalty encourages the CAE to encode the directions with the most local variance. The directions corresponding to the largest singular values are interpreted as the tangent directions that the contractive autoencoder has learned. Ideally, these tangent directions should correspond to real variations in the data. For example, a CAE applied to images should learn tangent vectors that show how the image changes as objects in the image gradually change pose, as shown in figure 14.6. Visualizations of the experimentally obtained singular vectors do seem to correspond to meaningful transformations of the input image, as shown in figure 14.10. One practical issue with the CAE regularization criterion is that although it is cheap to compute in the case of a single hidden layer autoencoder, it becomes much more expensive in the case of deeper autoencoders. The strategy followed by Rifai et al. (201 1a) is to separately train a series of single-layer autoencoders, each trained to reconstruct the previous autoencoder\u2019s hidden layer", "bf8be646-6fe9-461d-b64a-eec5dab53397": "PROBABILITY AND INFORMATION THEORY  1.0 0.8 0.6 0.4 0.2 0.0  \u201410 \u20145 0 5 10  Figure 3.3: The logistic sigmoid function. 10  https://www.deeplearningbook.org/contents/prob.html    \u201410 \u20145 0 5 10  Figure 3.4: The softplus function. 67  CHAPTER 3.\n\nPROBABILITY AND INFORMATION THEORY  them: o(a) = ETO (3.33) \u00a3 a(x) = 0(2)(1 ~o(2)) (3.34) 1 = o(x) = o(\u2014\u00ab) 3.35 log a(\u00ab) = \u2014\u00a2(\u20142) (3.36) car) = 0(0) (3.37) Vx \u20ac (0,1), 0 '(e) = tox (>=) (3.38) Va > 0, \u00a2~1(x) = log (exp(a) \u2014 1) (3.39) cn) =f oway (3.40) ((@) \u2014\u00a2(\u20142) =x (3.41)  The function g~! (z) is called the logit in statistics, but this term is rarely used in machine learning", "2ee0030d-650c-4d21-ab7b-f9339e8538a8": "(Though in this discussion, we will use the term trial instead of episode to relate better to the experiments.) As usual, we also need to make an assumption about how states are represented as inputs to the learning algorithm, an assumption that in\ufb02uences how closely the TD error corresponds to dopamine neuron activity. We discuss this issue later, but for now we assume the same CSC representation used by Montague et al. in which there is a separate internal stimulus for each state visited at each time step in a trial. This reduces the process to the tabular case covered in the \ufb01rst part of this book.\n\nFinally, we assume that the agent uses TD(0) to learn a value function, V , stored in a lookup table initialized to be zero for all the states. We also assume that this is a deterministic task and that the discount factor, \u03b3, is very nearly one so that we can ignore it. policy-evaluation task. The time axes represent the time interval over which a sequence of states is visited in a trial (where for clarity we omit showing individual states)", "4b07b2ee-66e5-4097-ad84-c3871c9fe7fd": "Using parallel computers or special purpose hardware is one approach; another is the use of special multi-dimensional data structures to store the training data. One data structure studied for this application is the k-d tree (short for k-dimensional tree), which recursively splits a k-dimensional space into regions arranged as nodes of a binary tree. Depending on the amount of data and how it is distributed over the state space, nearest-neighbor search using k-d trees can quickly eliminate large regions of the space in the search for neighbors, making the searches feasible in some problems where naive searches would take too long.\n\nLocally weighted regression additionally requires fast ways to do the local regression computations which have to be repeated to answer each query. Researchers have developed many ways to address these problems, including methods for forgetting entries in order to keep the size of the database within bounds. The Bibliographic and Historical Comments section at the end of this chapter points to some of the relevant literature, including a selection of papers describing applications of memory-based learning to reinforcement learning", "f603b1d0-22bf-4a33-866e-b7fba5cfab3e": "Training with a supervised criterion naturally leads to the representation at every hidden layer (but more so near the top hidden layer) taking on properties that make the classification ask easier.\n\nFor example, classes that were not linearly separable in the input features may become linearly separable in the last hidden layer. In principle, the last layer could be another kind of model, such as a nearest neighbor classifier Salakhutdinov and Hinton, 2007a). The features in the penultimate layer should earn different properties depending on the type of the last layer. Supervised training of feedforward networks does not involve explicitly imposing any condition on the learned intermediate features. Other kinds of representation learning algorithms are often explicitly designed to shape the representation in some particular way. For example, suppose we want to learn a representation that makes density estimation easier. Distributions with more independences are easier to model, so we could design an objective function that encourages the elements of the representation vector h to be independent. Just like supervised networks, unsupervised deep learning algorithms have a main training objective but also learn a representation as a side effect. Regardless of how a representation was obtained, it can be used for another task", "dadd184b-15e4-4718-b5c8-462439a18056": "Classical DP methods operate in sweeps through the state set, performing an expected update operation on each state. Each such operation updates the value of one state based on the values of all possible successor states and their probabilities of occurring. Expected updates are closely related to Bellman equations: they are little more than these equations turned into assignment statements. When the updates no longer result in any changes in value, convergence has occurred to values that satisfy the corresponding Bellman equation. Just as there are four primary value functions (v\u21e1, v\u21e4, q\u21e1, and q\u21e4), there are four corresponding Bellman equations and four corresponding expected updates. An intuitive view of the operation of DP updates is given by their backup diagrams.\n\nInsight into DP methods and, in fact, into almost all reinforcement learning methods, can be gained by viewing them as generalized policy iteration (GPI). GPI is the general idea of two interacting processes revolving around an approximate policy and an approximate value function. One process takes the policy as given and performs some form of policy evaluation, changing the value function to be more like the true value function for the policy", "f2184569-4dbc-487d-878d-e723965dc118": "The distribution of y will be governed by where, in this case, p(z) = 1.\n\nOur goal is to choose the function f(z) such that the resulting values of y have some speci\ufb01c desired distribution p(y). Integrating (11.5) we obtain which is the inde\ufb01nite integral of p(y). Thus, y = h\u22121(z), and so we have to Exercise 11.2 transform the uniformly distributed random numbers using a function which is the inverse of the inde\ufb01nite integral of the desired distribution. This is illustrated in Figure 11.2. Consider for example the exponential distribution where 0 \u2a7d y < \u221e. In this case the lower limit of the integral in (11.6) is 0, and so h(y) = 1 \u2212 exp(\u2212\u03bby). Thus, if we transform our uniformly distributed variable z using y = \u2212\u03bb\u22121 ln(1 \u2212 z), then y will have an exponential distribution. Another example of a distribution to which the transformation method can be applied is given by the Cauchy distribution In this case, the inverse of the inde\ufb01nite integral can be expressed in terms of the \u2018tan\u2019 function", "cf290279-6aeb-4795-b848-d9f13c7bcfca": "In this way, the two-dimensional nonlinear manifold for the laminar con\ufb01guration is broken into six distinct segments. Note also that some of the manifolds for different phase con\ufb01gurations meet at speci\ufb01c points, for example if the pipe is \ufb01lled entirely with oil, it corresponds to speci\ufb01c instances of the laminar, annular, and homogeneous con\ufb01gurations. Old Faithful, shown in Figure A.4, is a hydrothermal geyser in Yellowstone National Park in the state of Wyoming, U.S.A., and is a popular tourist attraction. Its name stems from the supposed regularity of its eruptions.\n\nThe data set comprises 272 observations, each of which represents a single eruption and contains two variables corresponding to the duration in minutes of the eruption, and the time until the next eruption, also in minutes. Figure A.5 shows a plot of the time to the next eruption versus the duration of the eruptions. It can be seen that the time to the next eruption varies considerably, although knowledge of the duration of the current eruption allows it to be predicted more accurately. Note that there exist several other data sets relating to the eruptions of Old Faithful", "26db7921-4e60-457d-bdee-c42353af18e5": "Related are also encoder-decoder architectures such as the predictive sparse decomposition (PSD) , from which we drew some inspiration.\n\nAlso relevant are the recently introduced Generative Stochastic Networks  where noisy auto-encoders learn the transition operator of a Markov chain that samples from the data distribution. In  a recognition model was employed for ef\ufb01cient learning with Deep Boltzmann Machines. These methods are targeted at either unnormalized models (i.e. undirected models like Boltzmann machines) or limited to sparse coding models, in contrast to our proposed algorithm for learning a general class of directed probabilistic models. The recently proposed DARN method , also learns a directed probabilistic model using an auto-encoding structure, however their method applies to binary latent variables. Even more recently,  also make the connection between auto-encoders, directed proabilistic models and stochastic variational inference using the reparameterization trick we describe in this paper. Their work was developed independently of ours and provides an additional perspective on AEVB", "f04e2b2c-a2fc-4453-b168-8292f85c3795": "If the action space is discrete and not too large, then a natural and common kind of parameterization is to form parameterized numerical preferences h(s, a, \u2713) 2 R for each state\u2013action pair.\n\nThe actions with the highest preferences in each state are given the highest probabilities of being selected, for example, according to an exponential soft-max distribution: where e \u21e1 2.71828 is the base of the natural logarithm. Note that the denominator here is just what is required so that the action probabilities in each state sum to one. We call this kind of policy parameterization soft-max in action preferences. The action preferences themselves can be parameterized arbitrarily. For example, they might be computed by a deep arti\ufb01cial neural network (ANN), where \u2713 is the vector of all the connection weights of the network (as in the AlphaGo system described in Section 16.6). Or the preferences could simply be linear in features, One advantage of parameterizing policies according to the soft-max in action preferences is that the approximate policy can approach a deterministic policy, whereas with \"-greedy action selection over action values there is always an \" probability of selecting a random action", "f36e9d8f-50bd-4dab-926b-ec68f8aa0d8f": "Klopf\u2019s idea of eligibility is that synapses are temporarily marked as eligible for modi\ufb01cation if they participated in the neuron\u2019s \ufb01ring (making this the contingent form of eligibility trace). A synapse\u2019s e\ufb03cacy is modi\ufb01ed if a reinforcing signal arrives while the synapse is eligible. We alluded to the chemotactic behavior of a bacterium as an example of a single cell that directs its movements in order to seek some molecules and to avoid others. A conspicuous feature of the dopamine system is that \ufb01bers releasing dopamine project widely to multiple parts of the brain. Although it is likely that only some populations of dopamine neurons broadcast the same reinforcement signal, if this signal reaches the synapses of many neurons involved in actor-type learning, then the situation can be modeled as a team problem", "e452ff0a-c551-476d-ad9c-4f7fb0023367": "(19.37)  Oh We can then iteratively apply the solution to the equation for i = 1,...,m,  and repeat the cycle until we satisfy a convergence criterion.\n\nCommon convergence criteria include stopping when a full cycle of updates does not improve \u00a3 by more than some tolerance amount, or when the cycle does not change h by more than some amount. Iterating mean field fixed-point equations is a general technique that can provide fast variational inference in a broad variety of models. To make this more concrete, we show how to derive the updates for the binary sparse coding model in particular. First, we must write an expression for the derivatives with respect to hj. To do so, we substitute equation 19.36 into the left side of equation 19.37:  a", "99082d1f-72f9-4629-a159-ad8896f95633": "Appendix B If we substitute (10.64), (10.65), and (10.66) into (10.46) and make use of (10.49), we obtain the following result for the responsibilities Notice the similarity to the corresponding result for the responsibilities in maximum likelihood EM, which from (9.13) can be written in the form where we have used the precision in place of the covariance to highlight the similarity to (10.67).\n\nThus the optimization of the variational posterior distribution involves cycling between two stages analogous to the E and M steps of the maximum likelihood EM algorithm. In the variational equivalent of the E step, we use the current distributions over the model parameters to evaluate the moments in (10.64), (10.65), and (10.66) and hence evaluate E = rnk. Then in the subsequent variational equivalent of the M step, we keep these responsibilities \ufb01xed and use them to re-compute the variational distribution over the parameters using (10.57) and (10.59). In each case, we see that the variational posterior distribution has the same functional form as the corresponding factor in the joint distribution (10.41). This is a general result and is a consequence of the choice of conjugate distributions", "c8537ed5-fb1a-437e-8f27-a3b9718bc579": "Daw and Shohamy  proposed that while dopamine signaling connects well to habitual, or model-free, behavior, other processes are involved in goal-directed, or model-based, behavior. Data from experiments by Bromberg-Martin, Matsumoto, Hong, and Hikosaka  indicate that dopamine signals contain information pertinent to both habitual and goal-directed behavior. Doll, Simon, and Daw  argued that there may not a clear separation in the brain between mechanisms that subserve habitual and goal-directed learning and choice. 15.12 Kei\ufb02in and Janak  reviewed connections between TD errors and addiction. Nutt, Lingford-Hughes, Erritzoe, and Stokes  critically evaluated the hypothesis that addiction is due to a disorder of the dopamine system.\n\nMontague, Dolan, Friston, and Dayan  outlined the goals and early e\u21b5orts in the \ufb01eld of computational psychiatry, and Adams, Huys, and Roiser  reviewed more recent progress. In this chapter we present a few case studies of reinforcement learning. Several of these are substantial applications of potential economic signi\ufb01cance. One, Samuel\u2019s checkers player, is primarily of historical interest", "273cdcaa-be49-4b15-8a4d-9ec0b3595175": "Rather than outputtingY in a single shot, the recurrent network iteratively refines its estimate Y by using a previous estimate of Y as input for creating a new estimate. The same parameters are used for each updated estimate, and the estimate can be refined as many times as we wish. The tensor of convolution kernels U is used on each step to compute the hidden representation given the input image. The kernel tensor V is used to produce an estimate of the labels given the hidden values.\n\nOn all but the first step, the kernels W are convolved over Y to provide input to the hidden layer. On the first time step, this term is replaced by zero. Because the same parameters are used on each step, this is an example of a recurrent network, as described in chapter 10.  kind of recurrent network . Figure 9.17 shows the architecture of such a recurrent convolutional network. Once a prediction for each pixel is made, various methods can be used to further process these predictions to obtain a segmentation of the image into regions . The general idea is to assume that large groups of contiguous pixels tend to be associated with the same label", "12638450-fa07-423a-a44a-b5360d1217c3": "\u2022 In Section 2, we provide a comprehensive theoretical analysis of how the Earth Mover (EM) distance behaves in comparison to popular probability distances and divergences used in the context of learning distributions. \u2022 In Section 3, we de\ufb01ne a form of GAN called Wasserstein-GAN that minimizes a reasonable and e\ufb03cient approximation of the EM distance, and we theoretically show that the corresponding optimization problem is sound.\n\nIn Section 4, we empirically show that WGANs cure the main training problems of GANs. In particular, training WGANs does not require maintaining a careful balance in training of the discriminator and the generator, and does not require a careful design of the network architecture either. The mode dropping phenomenon that is typical in GANs is also drastically reduced. One of the most compelling practical bene\ufb01ts of WGANs is the ability to continuously estimate the EM distance by training the discriminator to optimality. Plotting these learning curves is not only useful for debugging and hyperparameter searches, but also correlate remarkably well with the observed sample quality. We now introduce our notation", "115fdbe5-ee1c-46e5-8d0d-7f3ccccb2a22": "We refer the reader to  for more details on these tricks.\n\nTo provide a quantitative comparison of the DA methods we have surveyed, we experiment with 10 of the most commonly used and model-agnostic augmentation techniques from different levels in Table 1, including: (i) Token-level augmentation: Synonym Replacement (SR) (Kolomiyets et al., 2011; Yang, 2015), Word Replacement based on Language Model , Random Insertion (RI) , Random Deletion (RD) , Random Swapping (RS) , and Word Replacement (WR) based on TF-IDF in Vocabulary Set ; (ii) Sentence-level augmentation: Roundtrip Translation (RT) ; (iii) Hidden-space Augmentation: Adversarial training (ADV) , Cutoff , and Mixup in the embedding space . Most aforementioned techniques are not label-dependent (except mixup), thus can be applied directly to unlabeled data", "dd71b353-ea22-4b4b-8add-7e12eb3a7e5d": "Taking the transpose of the second of these equations, and using AT = A, we see that the left-hand sides of the two equations are equal, and hence that \u03bb\u22c6 i = \u03bbi and so \u03bbi must be real.\n\nThe eigenvectors ui of a real symmetric matrix can be chosen to be orthonormal (i.e., orthogonal and of unit length) so that and hence, by exchange of indices, we have We now take the transpose of the second equation and make use of the symmetry property AT = A, and then subtract the two equations to give Hence, for \u03bbi \u0338= \u03bbj, we have uT i uj = 0, and hence ui and uj are orthogonal. If the two eigenvalues are equal, then any linear combination \u03b1ui + \u03b2uj is also an eigenvector with the same eigenvalue, so we can select one linear combination arbitrarily, and then choose the second to be orthogonal to the \ufb01rst (it can be shown that the degenerate eigenvectors are never linearly dependent)", "57ce51ce-170d-438d-b169-f911f015da86": "Fortunately, GPI does not require that the policy be taken all the way to a greedy policy, only that it be moved toward a greedy policy. In our on-policy method we will move it only to an \"-greedy policy. For any \"-soft policy, \u21e1, any \"-greedy policy with respect to q\u21e1 is guaranteed to be better than or equal to \u21e1. The complete algorithm is given in the box below. On-policy \ufb01rst-visit MC control (for \"-soft policies), estimates \u21e1 \u21e1 \u21e1\u21e4 That any \"-greedy policy with respect to q\u21e1 is an improvement over any \"-soft policy \u21e1 is assured by the policy improvement theorem. Let \u21e10 be the \"-greedy policy. The conditions of the policy improvement theorem apply because for any s 2 S: (the sum is a weighted average with nonnegative weights summing to 1, and as such it must be less than or equal to the largest number averaged) Thus, by the policy improvement theorem, \u21e10 \u2265 \u21e1 (i.e., v\u21e10(s) \u2265 v\u21e1(s), for all s 2 S)", "4c0190eb-b028-49c2-8ec3-2021f2cedfef": "This is sometimes desirable, but it is problematic if the target policy \u21e1 changes as it does in reinforcement learning and GPI. In control applications, LSTD typically has to be combined with some other mechanism to induce forgetting, mooting any initial advantage of not requiring a step-size parameter. Choose and take action A \u21e0 \u21e1(\u00b7|S), observe R, S0; x0  x(S0) So far we have discussed the parametric approach to approximating value functions. In this approach, a learning algorithm adjusts the parameters of a functional form intended to approximate the value function over a problem\u2019s entire state space. Each update, s 7! g, is a training example used by the learning algorithm to change the parameters with the aim of reducing the approximation error. After the update, the training example can be discarded (although it might be saved to be used again).\n\nWhen an approximate value of a state (which we will call the query state) is needed, the function is simply evaluated at that state using the latest parameters produced by the learning algorithm. Memory-based function approximation methods are very di\u21b5erent", "60212576-b568-411b-b82b-b51e175a56b8": "Semi-supervised learning methods further reduce the dependency on labeled data and enhance the models when there is only limited labeled data available. These methods use large amounts of unlabeled data in the training process, as unlabeled data is usually cheap and easy to obtain compared to labeled data.\n\nIn this paper, we focus on consistency regularization, while there are also other widely-used methods for NLP including self-training , generative methods , and cotraining . unlabeled data as additional information, few-shot learning leverages various kinds of prior knowledge such as pre-trained models or supervised data from other domains and modalities . While most work on few-shot focuses on computer vision, few-shot learning has recently seen increasing adoption in NLP . To better leverage pre-trained models, PET (Schick and Sch\u00a8utze, 2021a,b) converts the text and label in an example into a \ufb02uent sentence, and then uses the probability of generating the label text as the class logit, outperforming GPT3 for few shot learning . How to better model and incorporate prior knowledge to handle few-shot learning for NLP remains an open challenge and has the potential to signi\ufb01cantly improve model performance with less labeled data", "ba890434-287e-45eb-aa14-2f7c825ed792": "Speci\ufb01cally, we always \ufb01rst randomly crop images and resize them to the same resolution, and we then apply the targeted transformation(s) only to one branch of the framework in Figure 2, while leaving the other branch as the identity (i.e. t(xi) = xi). Note that this asymmetA Simple Framework for Contrastive Learning of Visual Representations ric data augmentation hurts the performance. Nonetheless, this setup should not substantively change the impact of individual data augmentations or their compositions. One composition of augmentations stands out: random cropping and random color distortion.\n\nWe conjecture that one serious issue when using only random cropping as data augmentation is that most patches from an image share a similar color distribution. Figure 6 shows that color histograms alone suf\ufb01ce to distinguish images. Neural nets may exploit this shortcut to solve the predictive task. Therefore, it is critical to compose cropping with color distortion in order to learn generalizable features. 3.2", "7bdaec8d-94d2-4751-99e4-d9fceec25c76": "By selecting the order in which small updates are done it is possible to greatly improve planning e\ufb03ciency beyond that possible with prioritized sweeping. We have suggested in this chapter that all kinds of state-space planning can be viewed as sequences of value updates, varying only in the type of update, expected or sample, large or small, and in the order in which the updates are done.\n\nIn this section we have emphasized backward focusing, but this is just one strategy. For example, another would be to focus on states according to how easily they can be reached from the states that are visited frequently under the current policy, which might be called forward focusing. Peng and Williams  and Barto, Bradtke and Singh  have explored versions of forward focusing, and the methods introduced in the next few sections take it to an extreme form. The examples in the previous sections give some idea of the range of possibilities for combining methods of learning and planning. In the rest of this chapter, we analyze some of the component ideas involved, starting with the relative advantages of expected and sample updates. Much of this book has been about di\u21b5erent kinds of value-function updates, and we have considered a great many varieties. Focusing for the moment on one-step updates, they vary primarily along three binary dimensions", "da9561e1-c988-4713-90f8-8cf46b166a2d": "Until recently, most work on deep generative models focused on models that provided a parametric speci\ufb01cation of a probability distribution function. The model can then be trained by maximizing the log likelihood. In this family of model, perhaps the most succesful is the deep Boltzmann machine . Such models generally have intractable likelihood functions and therefore require numerous approximations to the likelihood gradient. These dif\ufb01culties motivated the development of \u201cgenerative machines\u201d\u2013models that do not explicitly represent the likelihood, yet are able to generate samples from the desired distribution.\n\nGenerative stochastic networks  are an example of a generative machine that can be trained with exact backpropagation rather than the numerous approximations required for Boltzmann machines. This work extends the idea of a generative machine by eliminating the Markov chains used in generative stochastic networks. Our work backpropagates derivatives through generative processes by using the observation that We were unaware at the time we developed this work that Kingma and Welling  and Rezende et al. had developed more general stochastic backpropagation rules, allowing one to backpropagate through Gaussian distributions with \ufb01nite variance, and to backpropagate to the covariance parameter as well as the mean", "5defdd3f-fd34-46cb-a6e0-65f67263e60f": "For now, we seek merely to illustrate the ideas and stimulate your intuition. Within a planning agent, there are at least two roles for real experience: it can be used to improve the model (to make it more accurately match the real environment) and it can be used to directly improve the value function and policy using the kinds of Both direct and indirect methods have advantages and disadvantages. Indirect methods often make fuller use of a limited amount of experience and thus achieve a better policy with fewer environmental interactions. On the other hand, direct methods are much simpler and are not a\u21b5ected by biases in the design of the model. Some have argued that indirect methods are always superior to direct ones, while others have argued that direct methods are responsible for most human and animal learning.\n\nRelated debates in psychology and arti\ufb01cial intelligence concern the relative importance of cognition as opposed to trial-and-error learning, and of deliberative planning as opposed to reactive decision making (see Chapter 14 for discussion of some of these issues from the perspective of psychology). Our view is that the contrast between the alternatives in all these debates has been exaggerated, that more insight can be gained by recognizing the similarities between these two sides than by opposing them", "31313ad0-aa55-448d-b1dc-cf579958faa8": "If the denominator is zero, then we instead de\ufb01ne Qt(a) as some default value, such as 0. As the denominator goes to in\ufb01nity, by the law of large numbers, Qt(a) converges to q\u21e4(a). We call this the sample-average method for estimating action values because each estimate is an average of the sample of relevant rewards. Of course this is just one way to estimate action values, and not necessarily the best one. Nevertheless, for now let us stay with this simple estimation method and turn to the question of how the estimates might be used to select actions. The simplest action selection rule is to select one of the actions with the highest estimated value, that is, one of the greedy actions as de\ufb01ned in the previous section. If there is more than one greedy action, then a selection is made among them in some arbitrary way, perhaps randomly. We write this greedy action selection method as where argmaxa denotes the action a for which the expression that follows is maximized (again, with ties broken arbitrarily)", "bbcf5737-d4b6-4298-8f23-d29ea2750f2d": "Animal experiments showed that if conditions favor the development of conditioned reinforcement during a delay period, learning does not decrease with increased delay as much as it does under conditions that obstruct secondary reinforcement. Conditioned reinforcement is favored if there are stimuli that regularly occur during the delay interval. Then it is as if reward is not actually delayed because there is more immediate conditioned reinforcement. Hull therefore envisioned that there is a primary gradient based on the delay of the primary reinforcement mediated by stimulus traces, and that this is progressively modi\ufb01ed, and lengthened, by conditioned reinforcement.\n\nAlgorithms presented in this book that use both eligibility traces and value functions to enable learning with delayed reinforcement correspond to Hull\u2019s hypothesis about how animals are able to learn under these conditions. The actor\u2013critic architecture discussed in Sections 13.5, 15.7, and 15.8 illustrates this correspondence most clearly. The critic uses a TD algorithm to learn a value function associated with the system\u2019s current behavior, that is, to predict the current policy\u2019s return. The actor updates the current policy based on the critic\u2019s predictions, or more exactly, on changes in the critic\u2019s predictions", "4c12e185-0b06-483f-a77b-6c977a6362b4": "\u21e4 Exercise 7.2 (programming) With an n-step method, the value estimates do change from step to step, so an algorithm that used the sum of TD errors (see previous exercise) in The n-step return uses the value function Vt+n\u22121 to correct for the missing rewards beyond Rt+n. An important property of n-step returns is that their expectation is guaranteed to be a better estimate of v\u21e1 than Vt+n\u22121 is, in a worst-state sense. That is, the worst error of the expected n-step return is guaranteed to be less than or equal to \u03b3n for all n \u2265 1. This is called the error reduction property of n-step returns. Because of the error reduction property, one can show formally that all n-step TD methods converge to the correct predictions under appropriate technical conditions.\n\nThe n-step TD methods thus form a family of sound methods, with one-step TD methods and Monte Carlo methods as extreme members. TD methods on the 5-state random walk task described in Example 6.2 (page 125)", "631ea8dc-1d2e-4e43-93dd-eab7d7f806d1": "In this case, we select aq that has low probability where p has low probability. When p has multiple modes that are sufficiently widely separated, as in this figure, the KL divergence is minimized by choosing a single mode, to avoid putting probability mass in the low-probability areas between modes ofp. Here, we illustrate the outcome when q is chosen to emphasize the left mode. We could also have achieved an equal value of the KL divergence by choosing the right mode. If the modes are not separated by a sufficiently strong low-probability region, then this direction of the KL divergence can still choose to blur the modes. 74  CHAPTER 3. PROBABILITY AND INFORMATION THEORY  https://www.deeplearningbook.org/contents/prob.html    Instead of using a single function to represent a probability distribution, we can split a probability distribution into many factors that we multiply together. For example, suppose we have three random variables: a, b and c", "a7d191d4-2117-4584-8187-7da15bf132b6": "To maintain the expressive  power of the network, it is common to replace the batch of hidden unit activations H with yH\u2019 + @ rather than simply the normalized H\u2019. The variables y and 3 are learned parameters that allow the new variable to have any mean and standard deviation. At first glance, this may seem useless\u2014why did we set the mean to 0, and then introduce a parameter that allows it to be set back to any arbitrary value B?\n\nThe answer is that the new parametrization can represent the same family of functions of the input as the old parametrization, but the new parametrization has different learning dynamics. In the old parametrization, the mean of H was determined by a complicated interaction between the parameters in the layers below H. In the new parametrization, the mean of yH'+ @ is determined solely by @. The new parametrization is much easier to learn with gradient descent. Most neural network layers take the form of \u00a2(XW +b), where \u00a2 is some fixed nonlinear activation function such as the rectified linear transformation. It is natural to wonder whether we should apply batch normalization to the input X, or to the transformed value XW +", "6b26aede-a99d-41f3-8141-bd424dab19e8": "When comparing networks having different numbers of hidden units, this can be taken into account by multiplying the evidence by a factor of M!2M. So far, we have used the Laplace approximation to develop a Bayesian treatment of neural network regression models. We now discuss the modi\ufb01cations to this framework that arise when it is applied to classi\ufb01cation. Here we shall consider a network having a single logistic sigmoid output corresponding to a two-class classi\ufb01cation problem.\n\nThe extension to networks with multiclass softmax outputs is straightforward. We shall build extensively on the analogous results for linear Exercise 5.40 classi\ufb01cation models discussed in Section 4.5, and so we encourage the reader to familiarize themselves with that material before studying this section. The log likelihood function for this model is given by where tn \u2208 {0, 1} are the target values, and yn \u2261 y(xn, w). Note that there is no hyperparameter \u03b2, because the data points are assumed to be correctly labelled. As before, the prior is taken to be an isotropic Gaussian of the form (5.162)", "8747de2e-8151-44df-8bc0-e23e88a48c2e": "Regardless of which of these problems are most significant, all of them might be avoided if there exists a region of space connected reasonably directly to a solution by a path that local descent can follow, and if we are able to initialize learning within that well-behaved region. This last view suggests research into choosing good initial points for traditional optimization algorithms to use. 8.2.8 Theoretical Limits of Optimization  Several theoretical results show that there are limits on the performance of any optimization algorithm we might design for neural networks . Typically these results have little bearing on the use of neural networks in practice. 289  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  Some theoretical results apply only when the units of a neural network output discrete values. Most neural network units output smoothly increasing values that make optimization via local search feasible. Some theoretical results show that there exist problem classes that are intractable, but it can be difficult to tell whether a particular problem falls into that class.\n\nOther results show that finding a solution for a network of a given size is intractable, but in practice we can find a solution easily by using a larger network for which many more parameter settings correspond to an acceptable solution", "6590be85-1ceb-4b22-91aa-91fe02c76683": "e Karma point: Any other act that improves the class, which the TA or instructor notices and deems worthy 1%. Homework Assignments  There will be 2 homework assignments over the course of the quarter.\n\nThe students are required to typeset homework solutions using I{T\u2014:X the provided template. DSC291-Winter2023  Logistics Lectures Homework Project  sure you personally unaerstana tne SOIUUON arising Irom SUCN COllabOralion. YOU alSO MUST indicate on each homework with whom you have collaborated. Late Policy  You will be allowed 3 total homework late days without penalty for the entire quarter. You may be late by up to 3 days on any homework assignment. Once those days are used, you will be penalized according to the following policy:  e Homework is worth full credit at the due time on the due date. e The allowed late days are counted by day (i.e., each new late day starts at 12:00 am PT). e The homeword is worth 80% credit 0-24 hours after exceeding the late day limit. e The homework is worth 50% credit 24-48 hours after exceeding the late day limit", "2d622efe-16a7-4dc8-ae23-c34bdecaaaad": "We may concatenate all the eigenvectors to form a matrix V with one eigenvector per column: V = fo, weey ov], Likewise, we can concatenate the eigenvalues to form a vector A = [A\\y,...,  40  https://www.deeplearningbook.org/contents/linear_algebra.html    CHAPTER 2, LINEAR ALGEBRA  An] '. The eigendecomposition of A is then given by A=Vdiag(A)V 1. (2.40)  We have seen that constructing matrices with specific eigenvalues and eigen- vectors enables us to stretch space in desired directions. Yet we often want to decompose matrices into their eigenvalues and eigenvectors. Doing so can help us analyze certain properties of the matrix, much as decomposing an integer into its prime factors can help us understand the behavior of that integer. Not every matrix can be decomposed into eigenvalues and eigenvectors. In some cases, the decomposition exists but involves complex rather than real numbers", "0ae9c115-f23d-497a-a3f1-054cf96fe60e": "In: Meeting of the Association for Computational Linguistics (ACL)  4.\n\nBach, S., Rodriguez, D., Liu, Y., Luo, C., Shao, H., Xia, C., Sen, S., Ratner, A., Hancock, B., Alborzi, H., Kuchhal, R., R\u00e9 C, Snorkel, Malkin, R.: drybell: A case study in deploying weak supervision at industrial scale. Arxiv  5. Bach, S.H., He, B., Ratner, A., R\u00e9, C.: Learning the structure of generative models without labeled data. In: International Conference on Machine Learning (ICML)  6. Blum, A., Mitchell, T.: Combining labeled and unlabeled data with co-training. In: Workshop on Computational Learning Theory (COLT)  7. Bunescu, R.C., Mooney, R.J.: Learning to extract relations from the Web using minimal supervision. In: Meeting of the Association for Computational Linguistics (ACL)  8", "411033cd-a977-415d-9f0b-a386a53fc7ac": "distribution by multiplying by the likelihood function for the new observation and then normalizing to obtain the new, revised posterior distribution.\n\nAt each stage, the posterior is a beta distribution with some total number of (prior and actual) observed values for x = 1 and x = 0 given by the parameters a and b. Incorporation of an additional observation of x = 1 simply corresponds to incrementing the value of a by 1, whereas for an observation of x = 0 we increment b by 1. Figure 2.3 illustrates one step in this process. We see that this sequential approach to learning arises naturally when we adopt a Bayesian viewpoint. It is independent of the choice of prior and of the likelihood function and depends only on the assumption of i.i.d. data. Sequential methods make use of observations one at a time, or in small batches, and then discard them before the next observations are used. They can be used, for example, in real-time learning scenarios where a steady stream of data is arriving, and predictions must be made before all of the data is seen. Because they do not require the whole data set to be stored or loaded into memory, sequential methods are also useful for large data sets", "4df8b67f-e1ff-4f43-861d-7cd208793eea": "There are L = 100 data sets, each having N = 25 data points, and there are 24 Gaussian basis functions in the model so that the total number of parameters is M = 25 including the bias parameter. The left column shows the result of \ufb01tting the model to the data sets for various values of ln \u03bb (for clarity, only 20 of the 100 \ufb01ts are shown). The right column shows the corresponding average of the 100 \ufb01ts (red) along with the sinusoidal function from which the data sets were generated (green).\n\n\ufb01t a model with 24 Gaussian basis functions by minimizing the regularized error function (3.27) to give a prediction function y(l)(x) as shown in Figure 3.5. The top row corresponds to a large value of the regularization coef\ufb01cient \u03bb that gives low variance (because the red curves in the left plot look similar) but high bias (because the two curves in the right plot are very different). Conversely on the bottom row, for which \u03bb is small, there is large variance (shown by the high variability between the red curves in the left plot) but low bias (shown by the good \ufb01t between the average model \ufb01t and the original sinusoidal function)", "e773572d-8494-4112-bc42-6174cb53ef1b": "The active supervision experience function is then de\ufb01ned as: where the \ufb01rst term is essentially the same as the supervised data experience function (Equation 4.2) with the only di\ufb00erence that now the label y\u2217 is from the oracle rather than pre-given in D; \u03bb > 0 is a trade-o\ufb00 parameter. The formulation of the active supervision is interesting as it is simply a combination of the common supervision experience and the informativeness measure in an additive manner.\n\nWe plug factive into the SE and obtain the algorithm to carry out learning. The result turns out to recover classical active learning algorithms. If the pool D is large, the update can be carried out by the following procedure: we \ufb01rst pick a random subset Dsub from D, and select a sample from Dsub according to the informativeness distribution proportional to exp{\u03bbu(x)} over Dsub. The sample is then labeled by the oracle, which is \ufb01nally used to update the target model. By setting \u03bb to a very large value (i.e., a near-zero 4.2. Knowledge-Based Experience. Many aspects of problem structures and human knowledge are di\ufb03cult if not impossible to be expressed through individual data instances", "a24e918f-785c-4ee3-8200-0d38f3ecb0d6": "More speci\ufb01cally, if we denote the probability C\u03c6(t) = exp f\u03c6(t), then the equation reduces to the familiar GAN objective in Equation 5.6. The results can be extended to the more general case of f-GAN : if we set D to an f-divergence and do not restrict the form (e.g., classi\ufb01er) of the experience function f\u03c6, then with mild conditions, the equation recovers the f-GAN algorithm. Now consider D as the \ufb01rst-order Wasserstein distance and suppose the f\u03c6-space F is a convex subset of 1-Lipschitz functions. It can be shown that Equation 6.4 reduces to the Wasserstein GAN algorithm as shown in Equation 5.8 where \u03d5 now corresponds to f\u03c6", "22039ae4-a4d3-42a2-afd6-9838b7c4f009": "+ xN, and for each observation the mean and variance are given by (2.3) and (2.4), respectively, we have We have seen in (2.8) that the maximum likelihood setting for the parameter \u00b5 in the Bernoulli distribution, and hence in the binomial distribution, is given by the fraction of the observations in the data set having x = 1. As we have already noted, this can give severely over-\ufb01tted results for small data sets. In order to develop a Bayesian treatment for this problem, we need to introduce a prior distribution p(\u00b5) over the parameter \u00b5. Here we consider a form of prior distribution that has a simple interpretation as well as some useful analytical properties. To motivate this prior, we note that the likelihood function takes the form of the product of factors of the form \u00b5x(1 \u2212 \u00b5)1\u2212x.\n\nIf we choose a prior to be proportional to powers of \u00b5 and (1 \u2212 \u00b5), then the posterior distribution, which is proportional to the product of the prior and the likelihood function, will have the same functional form as the prior. This property is called conjugacy and we will see several examples of it later in this chapter", "ebb9d934-7d4f-4044-b3b8-2408f7fb7f80": "Initially we restrict attention to on-policy training, treating in Chapter 9 the prediction case, in which the policy is given and only its value function is approximated, and then in Chapter 10 the control case, in which an approximation to the optimal policy is found. The challenging problem of o\u21b5-policy learning with function approximation is treated in Chapter 11. In each of these three chapters we will have to return to \ufb01rst principles and re-examine the objectives of the learning to take into account function approximation. Chapter 12 introduces and analyzes the algorithmic mechanism of eligibility traces, which dramatically improves the computational properties of multi-step reinforcement learning methods in many cases.\n\nThe \ufb01nal chapter of this part explores a di\u21b5erent approach to control, policy-gradient methods, which approximate the optimal policy directly and need never form an approximate value function (although they may be much more e\ufb03cient if they do approximate a value function as well the policy). In this chapter, we begin our study of function approximation in reinforcement learning by considering its use in estimating the state-value function from on-policy data, that is, in approximating v\u21e1 from experience generated using a known policy \u21e1", "c0310d2c-cc0a-4e8e-886e-15f1770bfe9e": "\u21e4 Exercise 4.7 (programming) Write a program for policy iteration and re-solve Jack\u2019s car rental problem with the following changes.\n\nOne of Jack\u2019s employees at the \ufb01rst location rides a bus home each night and lives near the second location. She is happy to shuttle one car to the second location for free. Each additional car still costs $2, as do all cars moved in the other direction. In addition, Jack has limited parking space at each location. If more than 10 cars are kept overnight at a location (after any moving of cars), then an additional cost of $4 must be incurred to use a second parking lot (independent of how many cars are kept there). These sorts of nonlinearities and arbitrary dynamics often occur in real problems and cannot easily be handled by optimization methods other than dynamic programming. To check your program, \ufb01rst replicate the results given for the original problem. \u21e4 One drawback to policy iteration is that each of its iterations involves policy evaluation, which may itself be a protracted iterative computation requiring multiple sweeps through the state set. If policy evaluation is done iteratively, then convergence exactly to v\u21e1 occurs only in the limit", "b657a56b-363d-4c81-ad06-83ea03ae2e5b": "These factors are just functions, not  75  https://www.deeplearningbook.org/contents/prob.html    CHAPTER 3. PROBABILITY AND INFORMATION THEORY  3.0 @)  O  Figure 3.7: A directed graphical model over random variablesa, b, c, dand e. This graph corresponds to probability distributions that can be factored as  pla, b,c, d,e) = p(a)p(b | a)p(c | a, b)p(d | b)p(e | c). (3.54)  This graphical model enables us to quickly see some properties of the distribution. For example, a and c interact directly, but a and e interact only indirectly via c.  probability distributions. The output of each factor must be non-negative, but here is no constraint that the factor must sum or integrate to 1 like a probability distribution.\n\nThe probability of a configuration of random variables is proportional to the product of all these factors\u2014assignments that result in larger factor values are more likely. Of course, there is no guarantee that this product will sum to 1", "3d37e183-bcf7-4986-8b89-97f8124cce76": "Compute a loss for representation learning; i.e., cross entropy for the verification task:  Lemb = 1 yy) log Py + (1 \u2014 1,y) log(1 \u2014 P:), where P; = o(W| fo(X(1)) \u2014 fo(X,2))|)  Compute the task-level fast weights: 0+ = F,,(VoLs\u2122, Lee La)  Next go through examples in the support set S and compute the example-level fast weights. Meanwhile, update the memory with learned representations. fori =1,...,K: a.\n\nThe base learner outputs a probability distribution: P(g;|x;) = g\u00a2(x;) and the loss can be cross-entropy or MSE: Lik = y' log gg(x/) + (1 \u2014 yj) log(1 \u2014 go(x})) b. Extract meta information (loss gradients) of the task and compute the example-level fast weights: \u00a27 = G,(V L's)  Then store \u00a2;\" into j-th location of the \u201cvalue\u201d memory M.  d", "924e4028-9619-45eb-8692-4d38d3cfa838": "We study on two tasks, E2E  and CommonGEN , and use the respective datasets pre-processed by  which allow sequence-tosequence modeling with standard transformers.\n\nWe run four sets of methods: the standard MLE training (MLE); PG training from scratch (PG); joint MLE and PG training, with MLE initialization (MLE+PG); and our SQL training from scratch with both off-policy and on-policy updates (SQL). We use the standard BLEU as reward. We additionally investigate the training stability and sensitivity w.r.t hyperparameters, in particular the scale of reward. To this end, for MLE+PG and SQL, we vary the reward scale in {1, 10, 50, 100, 500, 1000} and evaluate the respective performance under different scales. the proposed SQL that trains models from scratch achieves competitive results with the common MLE and MLE+PG. In contrast, the PG algorithm alone without MLE fails the training. Figure A.2 (left) shows the respective training curves (on the validation set), demonstrating that SQL converges in an ef\ufb01cient and stable way as MLE", "9823a2c3-55be-4182-a3c8-c565870417ca": "Compared to a convolutional network, RNNs applied to images are typically more expensive but allow for long-range lateral interactions between features in the same feature map . Indeed, the forward propagation equations for such RNNs may be written in a form that shows they use a convolution that computes the bottom-up input to each layer, prior to the recurrent propagation across the feature map that incorporates the lateral interactions. 10.4 Encoder-Decoder Sequence-to-Sequence Architectures  We have seen in figure 10.5 how an RNN can map an input sequence to a fixed-size vector. We have seen in figure 10.9 how an RNN can map a fixed-size vector to a sequence.\n\nWe have seen in figures 10.3, 10.4, 10.10 and 10.11 how an RNN can map an input sequence to an output sequence of the same length. Here we discuss how an RNN can be trained to map an input sequence to an output sequence which is not necessarily of the same length. This comes up in many applications, such as speech recognition, machine translation and question answering, where the input and output sequences in the training set are generally not of the same length (although their lengths might be related)", "43743173-5205-496c-821d-978b319a46cc": "Local and global optimization algorithms for generalized learning automata. Neural Computation, 7(5):950\u2013973. Poggio, T., Girosi, F. A theory of networks for approximation and learning. A.I. Memo Polyak, B. T. New stochastic approximation type procedures. Automat. i Telemekh, Polyak, B. T., Juditsky, A. B. Acceleration of stochastic approximation by averaging. SIAM Journal on Control and Optimization, 30(4):838\u2013855. Powell, M. J. D. Radial basis functions for multivariate interpolation: A review. In Powell, W. B. Approximate Dynamic Programming: Solving the Curses of Dimensionality, Powers, W. T. Behavior: The Control of Perception. Aldine de Gruyter, Chicago. 2nd Precup, D. Temporal Abstraction in Reinforcement Learning", "96277654-4aaf-4e20-b089-ca44ae1c33da": "Visualisation of high-dimensional data If we choose a low-dimensional latent space (e.g.\n\n2D), we can use the learned encoders (recognition model) to project high-dimensional data to a lowdimensional manifold. See appendix A for visualisations of the 2D latent manifolds for the MNIST and Frey Face datasets. We have introduced a novel estimator of the variational lower bound, Stochastic Gradient VB (SGVB), for ef\ufb01cient approximate inference with continuous latent variables. The proposed estimator can be straightforwardly differentiated and optimized using standard stochastic gradient methods. For the case of i.i.d. datasets and continuous latent variables per datapoint we introduce an ef\ufb01cient algorithm for ef\ufb01cient inference and learning, Auto-Encoding VB (AEVB), that learns an approximate inference model using the SGVB estimator. The theoretical advantages are re\ufb02ected in experimental results. Since the SGVB estimator and the AEVB algorithm can be applied to almost any inference and learning problem with continuous latent variables, there are plenty of future directions: (i) learning hierarchical generative architectures with deep neural networks (e.g", "8d20f9fb-d843-47de-8540-4e15ca1804a9": "This is true for RTDP as well: for episodic tasks with exploring starts, RTDP is an asynchronous value-iteration algorithm that converges to optimal policies for discounted \ufb01nite MDPs (and for the undiscounted case under certain conditions). Unlike the situation for a prediction problem, it is generally not possible to stop updating any state or state\u2013action pair if convergence to an optimal policy is important.\n\nThe most interesting result for RTDP is that for certain types of problems satisfying reasonable conditions, RTDP is guaranteed to \ufb01nd a policy that is optimal on the relevant states without visiting every state in\ufb01nitely often, or even without visiting some states at all. Indeed, in some problems, only a small fraction of the states need to be visited. This can be a great advantage for problems with very large state sets, where even a single sweep may not be feasible. The tasks for which this result holds are undiscounted episodic tasks for MDPs with absorbing goal states that generate zero rewards, as described in Section 3.4. At every step of a real or simulated trajectory, RTDP selects a greedy action (breaking ties randomly) and applies the expected value-iteration update operation to the current state", "f5cee849-6773-494d-abe6-4c1fe711b520": "At one extreme we have a fully connected graph that exhibits no conditional independence properties at all, and which can represent any possible joint probability distribution over the given variables. The set DF will contain all possible distributions p(x). At the other extreme, we have the fully disconnected graph, i.e., one having no links at all. This corresponds to joint distributions which factorize into the product of the marginal distributions over the variables comprising the nodes of the graph. Note that for any given graph, the set of distributions DF will include any distributions that have additional independence properties beyond those described by the graph. For instance, a fully factorized distribution will always be passed through the \ufb01lter implied by any graph over the corresponding set of variables. We end our discussion of conditional independence properties by exploring the concept of a Markov blanket or Markov boundary. Consider a joint distribution p(x1,", "2177dbb1-2b5f-44dc-bb2f-7fd22f456f18": "The unsupervised numbers on SentEval with IS-BERT outperforms most of the unsupervised baselines , but unsurprisingly weaker than supervised runs. When using labelled NLI datasets, IS-BERT produces results comparable with SBERT (See Fig. 25 & 30). Model MR CR_ SUBJ MPQA SST TREC MRPC | Avg. Using unlabeled data (unsupervised methods)  Unigram-TFIDFt 73.7 79.2 90.3 82.4 - 85.0 73.6 - SDAEt 74.6 78.0 90.8 86.9 - 78.4 73.7 - ParagraphVec DBOWt 60.2 669 763 70.7 - 59.4 72.9 - SkipThought? 76.5 80.1 93.6 87.1 82.0 92.2 73.0 | 83.50 FastSentt 70.8 78.4 88.7 80.6 76.8 72.2  Avg. GloVe embeddings? | 77.25 78.30 91.17 87.85 80.18 83.0 72.87 | 81.52 Avg", "ea4e2d1c-89ca-4870-b86e-5a543c581d61": "2.49 (\u22c6 \u22c6) By using the de\ufb01nition (2.161) of the multivariate Student\u2019s t-distribution as a convolution of a Gaussian with a gamma distribution, verify the properties (2.164), (2.165), and (2.166) for the multivariate t-distribution de\ufb01ned by (2.162). 2.50 (\u22c6) Show that in the limit \u03bd \u2192 \u221e, the multivariate Student\u2019s t-distribution (2.162) reduces to a Gaussian with mean \u00b5 and precision \u039b. in which i is the square root of minus one. By considering the identity prove the result (2.177). Similarly, using the identity where \u211c denotes the real part, prove (2.178). Finally, by using sin(A \u2212 B) = \u2111 exp{i(A \u2212 B)}, where \u2111 denotes the imaginary part, prove the result (2.183)", "9758205d-c2cd-4ec4-a1e6-4d1c0d6c2fa3": "The remaining \ufb01gures show histogram estimates of the marginal distributions p(X) and p(Y ), as well as the conditional distribution p(X|Y = 1) corresponding to the bottom row in the top left \ufb01gure. Again, note that these probabilities are normalized so that We can now use the sum and product rules of probability to evaluate the overall from which it follows, using the sum rule, that p(F = o) = 1 \u2212 11/20 = 9/20. Suppose instead we are told that a piece of fruit has been selected and it is an orange, and we would like to know which box it came from. This requires that we evaluate the probability distribution over boxes conditioned on the identity of the fruit, whereas the probabilities in (1.16)\u2013(1.19) give the probability distribution over the fruit conditioned on the identity of the box. We can solve the problem of reversing the conditional probability by using Bayes\u2019 theorem to give p(B = r|F = o) = p(F = o|B = r)p(B = r) From the sum rule, it then follows that p(B = b|F = o) = 1 \u2212 2/3 = 1/3", "3fd07d49-cec3-4aa2-8ca8-39c1bdb475cb": "The individual conditionals are simple to compute as well.\n\nFor the binary RBM we obtain  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    P(hi=1|v)=0 (v W:,i + ci (16.13)  P(hi=0|v)=1-0 (VWs + c) (16.14) Together these properties allow for efficient block Gibbs sampling, which alter- nates between sampling all of h simultaneously and sampling all of v simultane- ously. Samples generated by Gibbs sampling from an RBM model are shown in figure 16.15. Since the energy function itself is just a linear function of the parameters, it is easy to take its derivatives. For example,  E(v,h) = \u2014vihyj. (16.15)  fe) OwWi5  These two properties\u2014efficient Gibbs sampling and efficient derivatives\u2014make training convenient. In chapter 18, we will see that undirected models may be trained by computing such derivatives applied to samples from the model. Training the model induces a representation h of the data v", "0f2b9afb-bbce-44dc-be79-8422a4707c7d": "While almost any function thus qualifies as an estimator,  https://www.deeplearningbook.org/contents/ml.html    121  CHAPTER 5. MACHINE LEARNING BASICS  a good estimator is a function whose output is close to the true underlying @ that generated the training data.\n\nFor now, we take the frequentist perspective on statistics. That is, we assume that the true parameter value @ is fixed but unknown, while the point estimate 6 is a function of the data. Since the data is drawn from a random process, any function of the data is random. Therefore @ is a random variable. Point estimation can also refer to the estimation of the relationship between input and target variables. We refer to these types of point estimates as function estimators. Function Estimation \u2018Sometimes we are interested in performing function estimation (or function approximation). Here, we are trying to predict a variable y given an input vector 2. We assume that there is a function f(a) that describes the approximate relationship between y and x", "f754c7de-9d5b-438b-b309-43c32118344c": "This can be done using prior beliefs about the nature of the function to be approximated, and some automated selection methods developed for polynomial regression can be adapted to deal with the incremental and nonstationary nature of reinforcement learning. Exercise 9.3 What n and ci,j produce the feature vectors x(s) = (1, s1, s2, s1s2, s2 Another linear function approximation method is based on the time-honored Fourier series, which expresses periodic functions as weighted sums of sine and cosine basis functions (features) of di\u21b5erent frequencies. (A function f is periodic if f(x) = f(x + \u2327) for all x and some period \u2327.)\n\nThe Fourier series and the more general Fourier transform are widely used in applied sciences in part because if a function to be approximated is known, then the basis function weights are given by simple formulae and, further, with enough basis functions essentially any function can be approximated as accurately as desired. In reinforcement learning, where the functions to be approximated are unknown, Fourier basis functions are of interest because they are easy to use and can perform well in a range of reinforcement learning problems. First consider the one-dimensional case", "81e3531d-e2ff-4f86-bf69-34687ed34f4d": "First bring the integral over y inside the integrand of the integral over x, next make the change of variable t = y + x where x is \ufb01xed, then interchange the order of the x and t integrations, and \ufb01nally make the change of variable x = t\u00b5 where t is \ufb01xed.\n\n2.6 (\u22c6) Make use of the result (2.265) to show that the mean, variance, and mode of the beta distribution (2.13) are given respectively by 2.7 (\u22c6 \u22c6) Consider a binomial random variable x given by (2.9), with prior distribution for \u00b5 given by the beta distribution (2.13), and suppose we have observed m occurrences of x = 1 and l occurrences of x = 0. Show that the posterior mean value of x lies between the prior mean and the maximum likelihood estimate for \u00b5. To do this, show that the posterior mean can be written as \u03bb times the prior mean plus (1 \u2212 \u03bb) times the maximum likelihood estimate, where 0 \u2a7d \u03bb \u2a7d 1. This illustrates the concept of the posterior distribution being a compromise between the prior distribution and the maximum likelihood solution", "87cac61a-4885-4805-9980-932150a2ab7f": "We then run the mean field inference process, with arrows indicating which variables influence which other variables in the process. In practical applications, we unroll mean field for several steps. In this illustration, we unroll for only two steps. Dashed arrows indicate how the process could be unrolled for more steps. The data variables that were not used as inputs to the inference process become targets, shaded in gray. We can view the inference process for each example as a recurrent network. We use gradient descent and back-propagation to train these recurrent networks to produce the correct targets given their inputs. This trains the mean field process for the MP-DBM to produce accurate estimates. Figure adapted from Goodfellow et al. 672  CHAPTER 20. DEEP GENERATIVE MODELS  each graph being whether it includes or excludes each unit. The MP-DBM also shares parameters across many computational graphs.\n\nIn the case of the MP-DBM, the difference between the graphs is whether each input unit is observed or not. When a unit is not observed, the MP-DBM does not delete it entirely as dropout does", "b68ce2a0-e627-48f6-b678-016d11182cd5": "Shorten and Khoshgoftaar J Big Data  6:60   Signs of Overfitting (Training Error and Testing Error) Desired convergence of Training and Testing Error \u2018= Tiaring or = Testing Exor = Trang Eo = Testhg ror 10 a Fy 0 | i a & 5 ba i 20 2 i gz 0 2 0 \u00b0 2 4 6 8 10 \u00b0 2 4 6 8 10 epoch Epoch Fig. 1 The plot on the left shows an inflection point where the validation error starts to increase as the training rate continues to decrease. The increased training has caused the model to overfit to the training data and perform poorly on the testing set relative to the training set. In contrast, the plot on the right shows a model with the desired relationship between training and testing error  There are many branches of study that hope to improve current benchmarks by apply- ing deep convolutional networks to Computer Vision tasks. Improving the generaliza- tion ability of these models is one of the most difficult challenges.\n\nGeneralizability refers to the performance difference of a model when evaluated on previously seen data (train- ing data) versus data it has never seen before (testing data)", "0f41d7d6-7784-4925-adca-871ef6c9fffb": "In graph (a), the path from a to b is not blocked by node f because it is a tail-to-tail node for this path and is not observed, nor is it blocked by node e because, although the latter is a head-to-head node, it has a descendant c because is in the conditioning set. Thus the conditional independence statement a \u22a5\u22a5 b | c does not follow from this graph. In graph (b), the path from a to b is blocked by node f because this is a tail-to-tail node that is observed, and so the conditional independence property a \u22a5\u22a5 b | f will be satis\ufb01ed by any distribution that factorizes according to this graph. Note that this path is also blocked by node e because e is a head-to-head node and neither it nor its descendant are in the conditioning set.\n\nFor the purposes of d-separation, parameters such as \u03b1 and \u03c32 in Figure 8.5, indicated by small \ufb01lled circles, behave in the same was as observed nodes. However, there are no marginal distributions associated with such nodes", "7f78f912-6c2b-453a-a4c0-e75af3278008": "9.14 (\u22c6) Consider the joint distribution of latent and observed variables for the Bernoulli distribution obtained by forming the product of p(x|z, \u00b5) given by (9.52) and p(z|\u03c0) given by (9.53). Show that if we marginalize this joint distribution with respect to z, then we obtain (9.47).\n\n9.15 (\u22c6) www Show that if we maximize the expected complete-data log likelihood function (9.55) for a mixture of Bernoulli distributions with respect to \u00b5k, we obtain the M step equation (9.59). 9.16 (\u22c6) Show that if we maximize the expected complete-data log likelihood function (9.55) for a mixture of Bernoulli distributions with respect to the mixing coef\ufb01cients \u03c0k, using a Lagrange multiplier to enforce the summation constraint, we obtain the M step equation (9.60). 9.17 (\u22c6) www Show that as a consequence of the constraint 0 \u2a7d p(xn|\u00b5k) \u2a7d 1 for the discrete variable xn, the incomplete-data log likelihood function for a mixture of Bernoulli distributions is bounded above, and hence that there are no singularities for which the likelihood goes to in\ufb01nity", "5ec71f48-bf88-40e6-8488-3186b9b0a163": "Make use of the matrix identity (Appendix C) 3.12 (\u22c6 \u22c6) We saw in Section 2.3.6 that the conjugate prior for a Gaussian distribution with unknown mean and unknown precision (inverse variance) is a normal-gamma distribution. This property also holds for the case of the conditional Gaussian distribution p(t|x, w, \u03b2) of the linear regression model. If we consider the likelihood function (3.10), then the conjugate prior for w and \u03b2 is given by and \ufb01nd expressions for the posterior parameters mN, SN, aN, and bN. 3.13 (\u22c6 \u22c6) Show that the predictive distribution p(t|x, t) for the model discussed in Exercise 3.12 is given by a Student\u2019s t-distribution of the form and obtain expressions for \u00b5, \u03bb and \u03bd. 3.14 (\u22c6 \u22c6) In this exercise, we explore in more detail the properties of the equivalent kernel de\ufb01ned by (3.62), where SN is de\ufb01ned by (3.54). Suppose that the basis functions \u03c6j(x) are linearly independent and that the number N of data points is greater than the number M of basis functions", "2e7b0a2c-f599-45a0-9e28-addcf144bdd3": "It is rare to learn a covariance or precision matrix with richer structure than diagonal. If the covariance is full and conditional, then a parametrization must be chosen that guarantees positive definiteness of the predicted covariance matrix. This can be achieved by writing E(x) = B(x) B' (x), where B is an unconstrained square matrix. One practical issue if the matrix is full rank is that computing the likelihood is expensive, with a d x d matrix requiring O(d 3) computation for the determinant and inverse of (a) (or equivalently, and more commonly done, its eigendecomposition or that of B(a)).\n\nWe often want to perform multimodal regression, that is, to predict real values from a conditional distribution p(y | 2) that can have several different peaks in y space for the same value of x. In this case, a Gaussian mixture is a natural representation for the output . Neural networks with Gaussian mixtures as their output are often called mixture density networks", "605248df-7e8d-4097-9c5d-1e9e7fd4326d": "For example, as we have already mentioned, a conspicuous feature of classical conditioning is that the US generally must begin after the onset of a neutral stimulus for conditioning to occur, and that after conditioning, the CR begins before the appearance of the US. In other words, conditioning generally requires a positive ISI, and the CR generally anticipates the US. How the strength of conditioning (e.g., the percentage of CRs elicited by a CS) depends on the ISI varies substantially across species and response systems, but it typically has the following properties: it is negligible for a zero or negative ISI, i.e., when the US onset occurs simultaneously with, or earlier than, the CS onset (although research has found that associative strengths sometimes increase slightly or become negative with 5In our formalism, for each CS component CSi present on a trial, and for each time step t during a i(St0) = 1 if t = t0 for any t0 at which CSi is present, and equals 0 otherwise.\n\nThis is di\u21b5erent from the CSC representation in Sutton and Barto  in which there are the same distinct features for each time step but no reference to external stimuli; hence the name complete serial compound", "7d28b9f6-5260-44b0-8dac-c87fee943e1a": "Similarly, maximizing (2.181) with respect to m, and making use of I\u2032 I1(m) , we have where we have substituted for the maximum likelihood solution for \u03b8ML that we are performing a joint optimization over \u03b8 and m), and we have de\ufb01ned The function A(m) is plotted in Figure 2.20. Making use of the trigonometric identity (2.178), we can write (2.185) in the form The right-hand side of (2.187) is easily evaluated, and the function A(m) can be inverted numerically. For completeness, we mention brie\ufb02y some alternative techniques for the construction of periodic distributions. The simplest approach is to use a histogram of observations in which the angular coordinate is divided into \ufb01xed bins. This has the virtue of simplicity and \ufb02exibility but also suffers from signi\ufb01cant limitations, as we shall see when we discuss histogram methods in more detail in Section 2.5. Another approach starts, like the von Mises distribution, from a Gaussian distribution over a Euclidean space but now marginalizes onto the unit circle rather than conditioning .\n\nHowever, this leads to more complex forms of distribution and will not be discussed further", "9f76e3ae-5c4f-4ac3-9bbc-f662b8294ce6": "Sometimes local information provides us no guide, such as when the function has a wide flat region, or if we manage to land exactly on a critical point (usually this  Tadd canennntan 21 Lanne be tn de thd 2A n nee ata lee fa Aetetand 7 ata. https://www.deeplearningbook.org/contents/optimization.html    AALLEL SCCMALIO VILLY HapPels LU HICLILOUS Lilal SULVE CXAPLICILLyY LOL CLILICAL PULLLLS, such as Newton\u2019s method). In these cases, local descent does not define a path to a solution at all.\n\nIn other cases, local moves can be too greedy and lead us along a path that moves downhill but away from any solution, as in figure 8.4, or along an  unnecessarily long trajectory to the solution, as in figure 8.2. Currently, we do not understand which of these problems are most relevant to making neural network optimization difficult, and this is an active area of research", "ecb0e8b1-5380-4f02-a396-b144d0cb26bd": "), Intrinsically Motivated Learning in Natural and Arti\ufb01cial Systems, pp. 17\u201347. Springer-Verlag, Berlin Heidelberg. Barto, A. G., Anandan, P. Pattern recognizing stochastic learning automata. IEEE Transactions on Systems, Man, and Cybernetics, 15(3):360\u2013375. Barto, A. G., Anderson, C. W. Structural learning in connectionist systems. In Program of the Seventh Annual Conference of the Cognitive Science Society, pp. 43\u201354. Barto, A. G., Anderson, C. W., Sutton, R. S. Synthesis of nonlinear control surfaces by a layered associative search network. Biological Cybernetics, 43(3):175\u2013185. asynchronous dynamic programming. Technical Report 91-57. Department of Computer and Information Science, University of Massachusetts, Amherst. Barto, A. G., Du\u21b5, M", "6b3c702f-56f3-4bbf-9ca9-ff6cec65c96c": "We show that many of the wellknown algorithms of the above paradigms are all instantiations of the general formulation.\n\nMore concretely, the SE, based on the maximum entropy and variational principles, consists of three principled terms, including the experience term that o\ufb00ers a uni\ufb01ed language to express arbitrary relevant information to supervise the learning, the divergence term that measures the \ufb01tness of the target model to be learned, and the uncertainty term that regularizes the complexity of the system. The single succinct formula re-derives the objective functions of a large diversity of learning algorithms, reducing them to di\ufb00erent choices of the components. The formulation thus shed new light on the fundamental relationships between the diverse algorithms that were each originally designed to deal with a speci\ufb01c type of experience. The modularity and generality of the framework is particularly appealing not only from the theoretical point of view, but also because it o\ufb00ers guiding principles for designing algorithmic approaches to new problems in a mechanical way. Speci\ufb01cally, the SE by its nature allows combining together all di\ufb00erent experience to learn a model of interest", "977f058a-7931-4c27-96fa-80c100084c2f": "Watch Soap Operas R=0.5  Read Twitter R=2  Go Back to Bed R=5  Surf Some More R=1  Go Home and  Call in Sick Get Back Go to Bed R=0 to Work Surf R=5 R=-1 Facebook  R=1  Wake Up R=-1  Go to Work R=-2  Work Hard on Project R=-4  R=-1  Hit Snooze Get Back R=1 to Work R=-1  Get Termination | Promotion State R=50  Ask for Promotion R=-5  https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log   Bellman Equations  Bellman equations refer to a set of equations that decompose the value function into the immediate reward plus the discounted future values. V(s) = E  e(Risi + yRive 4 7 Res3 +..", "04b2671b-2109-4077-a7c1-e8c170649091": "A related idea is the use of convolution across a 1-D temporal sequence. This convolutional approach is the basis for time-delay neural networks . The convolution operation allows a network to share parameters across time but is shallow. The output of convolution is a sequence where each member of the output is a function of a small number of neighboring members of the input. The idea of parameter sharing manifests in the application of the same convolution kernel at each time step.\n\nRecurrent networks share parameters in a different way. Each member of the output is a function of the previous members of the output. Each member of the output is produced using the same update rule applied to the previous outputs. This recurrent formulation results in the sharing of parameters through a very deep computational graph. For the simplicity of exposition, we refer to RNNs as operating on a sequence that contains vectors \u00a2 with the time step index \u00a2 ranging from 1 to 7. In practice, recurrent networks usually operate on minibatches of such sequences, with a different sequence length + for each member of the minibatch. We have omitted the minibatch indices to simplify notation", "b47aeefc-ecb7-4732-ad0b-4c1185474c7c": "Let's say, our classifier f with parameter 6 outputs a probability of a data point belonging to the class y given the feature vector x, Ps (y|x). The optimal parameters should maximize the probability of true labels across multiple training batches B C D:  = arg maxgE(xy)eD  6*  arg max,Excp| > Po(y|x)] ; trained with mini-batches. (x,y)\u20acB  In few-shot classification, the goal is to reduce the prediction error on data samples with unknown labels given a small support set for \u201cfast learning\u201d (think of how \u201cfine-tuning\u201d works). To make the training process mimics what happens during inference, we would like to \u201cfake\u201d datasets with a subset of labels to avoid exposing all the labels to the model and modify the optimization procedure accordingly to encourage fast learning:  Sample a subset of labels, L Cc \u00a3#>e!,  Sample a support set S\u2019 CDanda training batch BY\" CD. Both of them only contain data points with labels belonging to the sampled label set L, y \u20ac L, V(x, y) \u20ac S*, BY", "098ec315-29e6-43d5-8d4a-8bc03cb6994a": "from which we \ufb01nd that all of the p(xi) are equal and are given by p(xi) = 1/M where M is the total number of states xi. The corresponding value of the entropy is then H = ln M. This result can also be derived from Jensen\u2019s inequality (to be discussed shortly). To verify that the stationary point is indeed a maximum, we can Exercise 1.29 evaluate the second derivative of the entropy, which gives where Iij are the elements of the identity matrix. We can extend the de\ufb01nition of entropy to include distributions p(x) over continuous variables x as follows. First divide x into bins of width \u2206.\n\nThen, assuming p(x) is continuous, the mean value theorem  tells us that, for each such bin, there must exist a value xi such that We can now quantize the continuous variable x by assigning any value x to the value xi whenever x falls in the ith bin. The probability of observing the value xi is then p(xi)\u2206", "d89fe513-5306-441b-8b4b-7763c162f9f2": "If we inspect the P(v) represented by the Boltzmann machine learned by the MP-DBM, it tends to be somewhat defective,  in the sense that Gibbs sampling yields poor samples. Back-propagation through the inference graph has two main advantages. First, it trains the model as it is really used\u2014with approximate inference.\n\nThis means that approximate inference, for example, to fill in missing inputs or to perform classification despite the presence of missing inputs, is more accurate in the MP- DBM than in the original DBM. The original DBM does not make an accurate classifier on its own; the best classification results with the original DBM were based on training a separate classifier to use features extracted by the DBM, rather than by using inference in the DBM to compute the distribution over the class labels. Mean field inference in the MP-DBM performs well as a classifier without special modifications. The other advantage of back-propagating through approximate inference is that back-propagation computes the exact gradient of he loss. This is better for optimization than the approximate gradients of SML raining, which suffer from both bias and variance", "f461acdf-ae32-48b0-9589-de27e62a6ca0": "(See our comments at the end of this chapter that explain how our terminology sometimes di\u21b5ers, as it does here, from terminology used in psychology.) Conditioned reinforcement is a key phenomenon that explains, for instance, why we work for the conditioned reinforcer money, whose worth derives solely from what is predicted by having it. In actor\u2013critic methods described in Section 13.5 (and discussed in the context of neuroscience in Sections 15.7 and 15.8), the critic uses a TD method to evaluate the actor\u2019s policy, and its value estimates provide conditioned reinforcement to the actor, allowing the actor to improve its policy. This analog of higher-order instrumental conditioning helps address the credit-assignment problem mentioned in Section 1.7 because the critic gives moment-by-moment reinforcement to the actor when the primary reward signal is delayed.\n\nWe discuss this more below in Section 14.4. Rescorla and Wagner created their model mainly to account for blocking. The core idea of the Rescorla\u2013Wagner model is that an animal only learns when events violate its expectations, in other words, only when the animal is surprised (although without necessarily implying any conscious expectation or emotion)", "cbb549e4-b846-4e2c-a5cd-c55d88169db7": "We shall provide some intuition to support these de\ufb01nitions shortly when we consider a simple example. So far, we have considered a single input value x.\n\nIf we substitute this expansion back into (3.37), we obtain the following decomposition of the expected squared loss and the bias and variance terms now refer to integrated quantities. Our goal is to minimize the expected loss, which we have decomposed into the sum of a (squared) bias, a variance, and a constant noise term. As we shall see, there is a trade-off between bias and variance, with very \ufb02exible models having low bias and high variance, and relatively rigid models having high bias and low variance. The model with the optimal predictive capability is the one that leads to the best balance between bias and variance. This is illustrated by considering the sinusoidal data set from Chapter 1. Here we generate 100 data sets, each containing N = 25 Appendix A data points, independently from the sinusoidal curve h(x) = sin(2\u03c0x). The data sets are indexed by l = 1, . , L, where L = 100, and for each data set D(l) we tion parameter \u03bb, using the sinusoidal data set from Chapter 1", "4b5ac405-c3d3-447d-aa5a-4c6ccd0214a0": "So far we have assumed that the projected data set given by \u00a2(xn ) has zero mean, which in general will not be the case. We cannot simply compute and then subtract off the mean, since we wish to avoid working directly in feature space, and so again, we formulate the algorithm purely in-!erms of the kernel function. The projected data points after centralizing, denoted \u00a2(xn ), are given by and the corresponding elements of the Gram matrix are given by This can be expressed in matrix notation as where IN denotes the N x N matrix in which every element takes the value l/N. ~ ~ Thus we can evaluate K using only the kernel function and then use K to determine the eigenvalues and eigenvectors. Note that the standard PCA algorithm is recovered as a special case if we use a linear kernel k(x, x') = xTx/. Figure 12.17 shows an example of kernel PCA applied to a synthetic data set", "d444d342-fac1-478d-8e37-f38833728651": "Note that each of the messages comprises a set of K values, one for each choice of xn, and so the product of two messages should be interpreted as the point-wise multiplication of the elements of the two messages to give another set of K values. The message \u00b5\u03b1(xn) can be evaluated recursively because and then apply (8.55) repeatedly until we reach the desired node. Note carefully the structure of the message passing equation.\n\nThe outgoing message \u00b5\u03b1(xn) in (8.55) is obtained by multiplying the incoming message \u00b5\u03b1(xn\u22121) by the local potential involving the node variable and the outgoing variable and then summing over the node variable. Similarly, the message \u00b5\u03b2(xn) can be evaluated recursively by starting with This recursive message passing is illustrated in Figure 8.38. The normalization constant Z is easily evaluated by summing the right-hand side of (8.54) over all states of xn, an operation that requires only O(K) computation. Graphs of the form shown in Figure 8.38 are called Markov chains, and the corresponding message passing equations represent an example of the ChapmanKolmogorov equations for Markov processes", "2a9a8c7a-79db-41b2-869b-e7e95b611bb9": "The overall architecture of Dyna agents, of which the Dyna-Q algorithm is one example, is shown in Figure 8.1. The central column represents the basic interaction between agent and environment, giving rise to a trajectory of real experience. The arrow on the left of the \ufb01gure represents direct reinforcement learning operating on real experience to improve the value function and the policy. On the right are model-based processes. The model is learned from real experience and gives rise to simulated experience. We use the term search control to refer to the process that selects the starting states and actions for the simulated experiences generated by the model. Finally, planning is achieved by applying reinforcement learning methods to the simulated experiences just as if they had really happened. Typically, as in Dyna-Q, the same reinforcement learning method is used both for learning from real experience and for planning from simulated experience. The reinforcement learning method is thus the \u201c\ufb01nal common path\u201d for both learning and planning. Learning and planning are deeply integrated in the sense that they share almost all the same machinery, di\u21b5ering only in the source of their experience.\n\nConceptually, planning, acting, model-learning, and direct RL occur simultaneously and in parallel in Dyna agents", "1bcd107b-e3b3-4361-b6d1-5e766495c595": "In fact, this feature of the TD algorithm is one of the major reasons for its development, which we now understand through its connection to dynamic programming as described in Chapter 6. Bootstrapping values is intimately related to second-order, and higher-order, conditioning.\n\nIn the examples of the TD model\u2019s behavior described above, we examined only the changes in the associative strengths of the CS components; we did not look at what the model predicts about properties of an animal\u2019s conditioned responses (CRs): their timing, shape, and how they develop over conditioning trials. These properties depend on the species, the response system being observed, and parameters of the conditioning trials, but in many experiments with di\u21b5erent animals and di\u21b5erent response systems, the magnitude of the CR, or the probability of a CR, increases as the expected time of the US approaches. For example, in classical conditioning of a rabbit\u2019s nictitating membrane response that we mentioned above, over conditioning trials the delay from CS onset to when the nictitating membrane begins to move across the eye decreases over trials, and the amplitude of this anticipatory closure gradually increases over the interval between the CS and the US until the membrane reaches maximal closure at the expected time of the US", "4f6f046c-010e-415e-863f-7d9a82485d52": "It consists of a linear string of sample actions and states, just as in n-step Sarsa, except that its last element is a branch over all action possibilities weighted, as always, by their probability under \u21e1.\n\nThis algorithm can be described by the same equation as n-step Sarsa (above) except with the n-step return rede\ufb01ned as (with Gt:t+n .=Gt for t + n \u2265 T) where \u00afVt(s) is the expected approximate value of state s, using the estimated action values at time t, under the target policy: Expected approximate values are used in developing many of the action-value methods in the rest of this book. If s is terminal, then its expected approximate value is de\ufb01ned to be 0. Recall that o\u21b5-policy learning is learning the value function for one policy, \u21e1, while following another policy, b. Often, \u21e1 is the greedy policy for the current action-valuefunction estimate, and b is a more exploratory policy, perhaps \"-greedy", "5b6acea8-e920-437b-ac4a-79ef20f67551": "Compared to many of the divergence metrics (e.g., KL divergence), Wasserstein distance has the desirable properties as a distance metric, such as symmetry and the triangle inequality.\n\nBased on the Kantorovich duality (Santambrogio, 2015, Section 1.2), the \ufb01rstorder Wasserstein distance between the two distributions q and p can be written as: where \u2225\u03d5\u2225L \u2264 1 is the constraint of \u03d5 : T \u2192 R being a 1-Lipschitz function. Wasserstein GAN. Setting the divergence function in Equation 5.1 to the Wasserstein distance W1, we thus recover the Wasserstein GAN algorithm : The standard equation Equation 3.1 so far has played the role of the ultimate learning objective that fully de\ufb01nes the learning problem in an analytical form. As seen in Sections 4 and 5, many of the known algorithms are special cases of the SE objective. On the other hand, in a dynamic or online setting, the learning objective itself may be evolving over time", "6adbe0ba-1a1d-406c-bede-f47025670f7f": "Contours of the true posterior distribution p(\u00b5, \u03c4|D) are shown in green. (a) Contours of the initial factorized approximation q\u00b5(\u00b5)q\u03c4(\u03c4) are shown in blue. (b) After re-estimating the factor q\u00b5(\u00b5). (c) After re-estimating the factor q\u03c4(\u03c4). (d) Contours of the optimal factorized approximation, to which the iterative scheme converges, are shown in red. In general, we will need to use an iterative approach such as this in order to solve for the optimal factorized posterior distribution.\n\nFor the very simple example we are considering here, however, we can \ufb01nd an explicit solution by solving the simultaneous equations for the optimal factors q\u00b5(\u00b5) and q\u03c4(\u03c4). Before doing this, we can simplify these expressions by considering broad, noninformative priors in which \u00b50 = a0 = b0 = \u03bb0 = 0. Although these parameter settings correspond to improper priors, we see that the posterior distribution is still well de\ufb01ned", "04db78d2-fa8d-4861-93f2-02ead663f3c0": "The composition of these autoencoders then forms a deep autoencoder.\n\nBecause each layer was separately trained to be locally contractive, the deep autoencoder is contractive as well. The result is not the same as what would be obtained by jointly training the entire architecture with a penalty on the Jacobian of the deep model, but it  520  CHAPTER 14. AUTOENCODERS  captures many of the desirable qualitative characteristics. Another practical issue is that the contraction penalty can obtain useless results if we do not impose some sort of scale on the decoder. For example, the encoder could consist of multiplying the input by a small constant \u20ac, and the decoder could consist of dividing the code by \u00a2\u00ab. As \u20ac approaches 0, the encoder drives the  we othy. toa ad od . 1 1 sae 1 aout  https://www.deeplearningbook.org/contents/autoencoders.html    contractive penalty \\4(14) to approach U Without naving learned anything about the ecoder m:  distribution, Meanwhile, the aintains perfect reconstruction. In Rifai  et al", "2424e668-a431-40f0-bde3-552c25898ff6": "If we train the model with a unimodal approximate posterior, we will obtain a model with a true posterior that is far closer to unimodal than we would have obtained by training the model with exact inference.\n\nhttps://www.deeplearningbook.org/contents/inference.html    Computing the true amount of harm imposed on a model by a variational approximation is thus very difficult. There exist several methods for estimating log p(v). We often estimate log p(v; @) after training the model and find that  the gap with \u00a3(v, 6,q) is small. From this, we can conclude that our variational approximation is accurate for the specific value of @ that we obtained from the learning process. We should not conclude that our variational approximation is accurate in general or that the variational approximation did little harm to the learning process. To measure the true amount of harm induced by the variational approximation, we would need to know @* = maxg log p(v;@). It is possible for L(v,0,q) \u00a9 log p(v; 8) and logp(v;@) < log p(v;6*) to hold simultaneously", "00786ac7-8090-4fa2-9002-7a6619a01d55": "Given the knowledge of how the underlying factors actually change, it is possible to analytically solve for the optimal functions expressing these factors. In practice, experiments with deep SFA applied to simulated data seem to recover the theoretically predicted functions. This is in comparison to other learning algorithms, where the cost function depends highly on specific pixel values, making it much more difficult to determine what features the model will learn. 491  CHAPTER 13.\n\nLINEAR FACTOR MODELS  Deep SFA has also been used to learn features for object recognition and pose estimation . So far, the slowness principle has not become the basis for any state-of-the-art applications. It is unclear what factor has limited its performance. We speculate that perhaps the slowness prior is too strong, and that, rather than imposing a prior that features should be approximately constant, it would be better to impose a prior that features should be easy to predict from one time step to the next. The position of an object is a useful feature regardless of whether the object\u2019s velocity is high or low, but the slowness principle encourages the model to ignore the position of objects that have high velocity", "e9832108-1cbd-475b-bce5-f7f73cec601d": "Formally, a Markov chain is defined by a random state x and a transition distribution T(a\u2019 | x) specifying the probability that a random update will go to state a\u2019 if it starts in state a.\n\nRunning the Markov chain means repeatedly updating the state a to a value a\u2019 sampled from T(x\u2019 | a). To gain some theoretical understanding of how MCMC methods work, it is useful to reparametrize the problem. First, we restrict our attention to the case where the random variable x has countably many states. We can then represent the state as just a positive integer x. Different integer values of x map back to different states a in the original problem. Consider what happens when we run infinitely many Markov chains in parallel. All the states of the different Markov chains are drawn from some distribution  ay. https://www.deeplearningbook.org/contents/monte_carlo.html    gq\u2019? (x), wher, | t indicates the number of time steps that have elapsed. At the beginning, \u00a2\u2019 is some (lstribution that we used to arbitrarily initialize for each Markov chain", "9352657a-b7d8-4467-aaec-b5e7a4daf95f": "One of the most striking results found in this competition is that as an architecture makes use of deeper and deeper representations (learned in a purely unsupervised way from data collected in the first setting, P,), the learning curve on the new categories of the second (transfer) setting P: becomes much better. For deep representations, fewer labeled examples of the transfer tasks are necessary to achieve the apparently asymptotic generalization performance. Two extreme forms of transfer learning are one-shot learning and zero-shot learning, sometimes also called zero-data learning. Only one labeled example of the transfer task is given for one-shot learning, while no labeled examples are given at all for the zero-shot learning task.\n\nOne-shot learning  is possible because the representation learns to cleanly separate the underlying classes during the first stage. During the transfer learning stage, only one labeled example is needed to infer the label of many possible test examples that all cluster around the same point in representation space. This works to the extent that the factors of variation corresponding to these invariances have been cleanly separated from the other factors, in the learned representation space, and that we have somehow learned which factors do and do not matter when discriminating objects of certain categories", "676f11f8-d07e-47d4-9da1-4e13111d2c25": "Note that the approach of \ufb01tting Exercise 4.10 Gaussian distributions to the classes is not robust to outliers, because the maximum likelihood estimation of a Gaussian is not robust. Section 2.3.7 Let us now consider the case of discrete feature values xi. For simplicity, we begin by looking at binary feature values xi \u2208 {0, 1} and discuss the extension to more general discrete features shortly. If there are D inputs, then a general distribution would correspond to a table of 2D numbers for each class, containing 2D \u2212 1 independent variables (due to the summation constraint). Because this grows exponentially with the number of features, we might seek a more restricted representation. Here we will make the naive Bayes assumption in which the feature values are Section 8.2.2 treated as independent, conditioned on the class Ck.\n\nThus we have class-conditional distributions of the form which contain D independent parameters for each class. Substituting into (4.63) then gives which again are linear functions of the input values xi. For the case of K = 2 classes, we can alternatively consider the logistic sigmoid formulation given by (4.57)", "da637e6c-f0a1-4f83-a8ee-78bcbbe87d53": "A hierarchical latent variable model for data visualization. IEEE Transactions on Pattern Analysis and Machine Intelligence 20(3), 281\u2013293. Blei, D. M., M. I. Jordan, and A. Y. Ng . Hierarchical Bayesian models for applications in information retrieval. In J. M. B. et al. (Ed. ), Bayesian Statistics, 7, pp. 25\u201343.\n\nOxford University Press. Blum, J. A. Multidimensional stochastic approximation methods. Annals of Mathematical Statistics 25, 737\u2013744. Bodlaender, H. A tourist guide through treewidth. Acta Cybernetica 11, 1\u201321. Boser, B. E., I. M. Guyon, and V. N. Vapnik . A training algorithm for optimal margin classi\ufb01ers. In D", "c0dbf3d5-363b-4e0f-9685-02279a49fc30": "However, most of this chapter is concerned with the extension of these basic concepts to the particular case of neural networks.\n\nIn section 5.2.2, we defined regularization as \u201cany modification we make to a learning algorithm that is intended to reduce its generalization error but not its training error.\u201d There are many regularization strategies. Some put extra con- straints on a machine learning model, such as adding restrictions on the parameter values. Some add extra terms in the objective function that can be thought of as corresponding to a soft constraint on the parameter values. If chosen carefully, these extra constraints and penalties can lead to improved performance on the  https://www.deeplearningbook.org/contents/regularization.html    224  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  test set. Sometimes these constraints and penalties are designed to encode specific kinds of prior knowledge. Other times, these constraints and penalties are designed to express a generic preference for a simpler model class in order to promote generalization. Sometimes penalties and constraints are necessary to make an underdetermined problem determined. Other forms of regularization, known as ensemble methods, combine multiple hypotheses that explain the training data. In the context of deep learning, most regularization strategies are based on regularizing estimators", "d765a83b-b81b-4ddc-b3af-770e08e332c3": "Note that our aim in this example is to illustrate the K-means algorithm.\n\nIf we had been aiming to produce a good image compressor, then it would be more fruitful to consider small blocks of adjacent pixels, for instance 5\u00d75, and thereby exploit the correlations that exist in natural images between nearby pixels. In Section 2.3.9 we motivated the Gaussian mixture model as a simple linear superposition of Gaussian components, aimed at providing a richer class of density models than the single Gaussian. We now turn to a formulation of Gaussian mixtures in terms of discrete latent variables. This will provide us with a deeper insight into this important distribution, and will also serve to motivate the expectation-maximization algorithm. Recall from (2.188) that the Gaussian mixture distribution can be written as a linear superposition of Gaussians in the form Let us introduce a K-dimensional binary random variable z having a 1-of-K representation in which a particular element zk is equal to 1 and all other elements are equal to 0", "122d4688-6114-4a80-8dc3-60805c91972f": "where L is a D x D diagonal matrix with elements Ai, and U is a D x D orthogonal matrix with columns given by Ui. Then we define, for each data point X n , a transformed value given by where x is the sample mean defined by (12.1). Clearly, the set {Yn} has zero mean, and its covariance is given by the identity matrix because This operation is known as whitening or sphereing the data and is illustrated for the Old Faithful data set in Figure 12.6. It is interesting to compare PCA with the Fisher linear discriminant which was discussed in Section 4.1.4. Both methods can be viewed as techniques for linear dimensionality reduction. However, PCA is unsupervised and depends only on the values X n whereas Fisher linear discriminant also uses class-label information. This difference is highlighted by the example in Figure 12.7.\n\nAnother common application of principal component analysis is to data visualization. Here each data point is projected onto a two-dimensional (M = 2) principal subspace, so that a data point X n is plotted at Cartesian coordinates given by x'J. U1 and x'J", "75e217a3-06c4-4cd2-9750-df39d7379477": "Barto, A. G., Sutton, R. S. Landmark learning: An illustration of associative search. Barto, A. G., Sutton, R. S. Simulation of anticipatory responses in classical conditioning by a neuron-like adaptive element. Behavioural Brain Research, 4(3):221\u2013235. di\ufb03cult learning control problems. IEEE Transactions on Systems, Man, and Cybernetics, 13(5):835\u2013846. Reprinted in J. A. Anderson and E. Rosenfeld (Eds. ), Neurocomputing: Foundations of Research, pp. 535\u2013549. MIT Press, Cambridge, MA, 1988. Barto, A. G., Sutton, R. S., Brouwer, P. S. Associative search network: A reinforcement learning associative memory. Biological Cybernetics, 40(3):201\u2013211. Barto, A. G., Sutton, R", "66bff2ea-9361-413b-a860-2a30b147acb2": "These can be addressed through a closely related algorithm called max-sum, which can be viewed as an application of dynamic programming in the context of graphical models . A simple approach to \ufb01nding latent variable values having high probability would be to run the sum-product algorithm to obtain the marginals p(xi) for every variable, and then, for each marginal in turn, to \ufb01nd the value x\u22c6 i that maximizes that marginal. However, this would give the set of values that are individually the most probable. In practice, we typically wish to \ufb01nd the set of values that jointly have the largest probability, in other words the vector xmax that maximizes the joint distribution, so that xmax = arg max x p(x) (8.87) for which the corresponding value of the joint probability will be given by In general, xmax is not the same as the set of x\u22c6 i values, as we can easily show using a simple example. Consider the joint distribution p(x, y) over two binary variables x, y \u2208 {0, 1} given in Table 8.1", "17f5b19b-9a46-4cc5-adc8-62cb4ed6f33c": "=35 Lr) = 551 =o (20.65)  which means that  By | (Sy) \u2014 O(w)) 282 w) = Exy) [yyy | \u2014 bw) E yy) [Peetu  Ow Ow Ow (20.66) = Exy) [yyy ere | (20.67)  Furthermore, we can obtain the optimal 6(w) by computing the variance of (J(y) \u2014 b(w)) 2egrw) under p(y) and minimizing with respect to b(w).\n\nWhat we find is that this optimal baseline b*(w), is different for each element w,; of the vector w:  Egy) [J (y) ge\")  PY Ow;  Enty)  687  [| |  bY (w); = (20.68)  Alog p(y) ? Ow;  https://www.deeplearningbook.org/contents/generative_models.html    CGHAPFER-20\u2014DEEP-GENERAFIVE MODELS:  The gradient estimator with respect to w; then becomes  J log p(y) (J(y) \u2014 b(w) 8), (20.69) ar where b(w); estimates the above b*(w);", "6c0abb3b-07f5-4991-aea4-4c248268c676": "It is similar to MAML in many ways, given that both rely on meta-optimization through gradient descent and both are model-agnostic. The Reptile works by repeatedly: sampling a task, training on it by multiple gradient descent steps, and then moving the model weights towards the new parameters. See the algorithm below: SGD(ZL,,,, 9, k) performs stochastic gradient update for k steps on the loss \u00a3,, starting with initial parameter @ and returns the final parameter vector. The batch version samples multiple tasks instead of one within each iteration.\n\nThe reptile gradient is defined as  (9 \u2014 W)/a, where a is the stepsize used by the SGD operation. Algorithm 2 Reptile, batched version  Initialize 6 for iteration = 1,2,... do Sample tasks 71, 72,...,T for i= 1,2,...,n do Compute W; = SGD(L,,, 6, k)  end for 12 Update 0+ 0+ B\u2014 ) (W; \u2014 6) n\u00a2 end for i=1  At a glance, the algorithm looks a lot like an ordinary SGD. However, because the task-specific optimization can take more than one step", "98da1bc6-9fea-4744-94fe-1c20059494eb": "We have observed this occurring, for example, in the early stages of application development.\n\nWe see that with non-adversarial labeling functions (w\u2217 > 0), even an optimal generative model (WMV*) can only disagree with MV when there are disagreeing labels, which will occur infrequently. We see that the expected optimal advantage will have an upper bound that falls quadratically with label density: High Label Density In this setting, the majority of the data points have a large number of labels. For example, we might be working in an extremely high-volume crowdsourcing setting, or an application with many high-coverage knowledge bases as distant supervision", "68574c95-5806-4b72-ac1f-a6fc43be0828": "On the other hand, such information can be estimated from experience, in this case by playing many games against the opponent. About the best one can do on this problem is \ufb01rst to learn a model of the opponent\u2019s behavior, up to some level of con\ufb01dence, and then apply dynamic programming to compute an optimal solution given the approximate opponent model. In the end, this is not that di\u21b5erent from some of the reinforcement learning methods we examine later in this book. An evolutionary method applied to this problem would directly search the space of possible policies for one with a high probability of winning against the opponent. Here, a policy is a rule that tells the player what move to make for every state of the game\u2014every possible con\ufb01guration of Xs and Os on the three-by-three board.\n\nFor each policy considered, an estimate of its winning probability would be obtained by playing some number of games against the opponent. This evaluation would then direct which policy or policies were considered next. A typical evolutionary method would hill-climb in policy space, successively generating and evaluating policies in an attempt to obtain incremental improvements. Or, perhaps, a genetic-style algorithm could be used that would maintain and evaluate a population of policies. Literally hundreds of di\u21b5erent optimization methods could be applied", "2b4fe9b3-a882-48dd-9d11-8fe7d3a5094d": "Tasks with episodes of this kind are called episodic tasks. In episodic tasks we sometimes need to distinguish the set of all nonterminal states, denoted S, from the set of all states plus the terminal state, denoted S+. The time of termination, T, is a random variable that normally varies from episode to episode.\n\nOn the other hand, in many cases the agent\u2013environment interaction does not break naturally into identi\ufb01able episodes, but goes on continually without limit. For example, this would be the natural way to formulate an on-going process-control task, or an application to a robot with a long life span. We call these continuing tasks. The return formulation (3.7) is problematic for continuing tasks because the \ufb01nal time step would 5Better places for imparting this kind of prior knowledge are the initial policy or initial value function, 6Section 17.4 delves further into the issue of designing e\u21b5ective reward signals. 7Episodes are sometimes called \u201ctrials\u201d in the literature. be T = 1, and the return, which is what we are trying to maximize, could itself easily be in\ufb01nite", "a85d41b2-9ca1-4d88-9f72-dfd3d3deaf16": "Even when planning is only done at decision time, we can still view it, as we did in Section 8.1, as proceeding from simulated experience to updates and values, and ultimately to a policy. It is just that now the values and policy are speci\ufb01c to the current state and the action choices available there, so much so that the values and policy created by the planning process are typically discarded after being used to select the current action. In many applications this is not a great loss because there are very many states and we are unlikely to return to the same state for a long time. In general, one may want to do a mix of both: focus planning on the current state and store the results of planning so as to be that much farther along should one return to the same state later.\n\nDecision-time planning is most useful in applications in which fast responses are not required. In chess playing programs, for example, one may be permitted seconds or minutes of computation for each move, and strong programs may plan dozens of moves ahead within this time. On the other hand, if low latency action selection is the priority, then one is generally better o\u21b5 doing planning in the background to compute a policy that can then be rapidly applied to each newly encountered state", "69869dea-5435-4f55-bd38-036ef84d54b5": "The new variables h also provide an alternative representation for v. For example, as discussed in section 3.9.6, the mixture of Gaussians model learns a latent variable that corresponds to the category of examples the input was drawn from. This means that the latent variable in a mixture of Gaussians model can be used to do classification. In chapter 14 we saw how simple probabilistic models like sparse coding learn latent variables that can be used as input features for a classifier, or as coordinates along a manifold. Other models can be used in this same way, but deeper models and models with different kinds of interactions can create even richer descriptions of the input. Many approaches accomplish feature learning by learning latent variables. Often, given some model of v and h, experimental observations show that E or argmax,p(h, v) is a good feature mapping for v.  16.6 Inference and Approximate Inference  One of the main ways we can use a probabilistic model is to ask questions about how variables are related to each other. Given a set of medical tests, we can ask what disease a patient might have", "b50efe77-7963-4912-a02a-1ae1aa09e204": "Rawlik, K., Toussaint, M., & Vijayakumar, S. On stochastic optimal control and reinforcement learning by approximate inference. Proceedings of Robotics: Science and Systems VIII. Real, E., Liang, C., So, D., & Le, Q. AutoML-zero: Evolving machine learning algorithms from scratch. International Conference on Machine Learning, 8007\u20138019. Richardson, M., & Domingos, P. Markov logic networks. Machine learning, 62(1), 107\u2013136. Roth, D. Incidental supervision: Moving beyond supervised learning. Thirty-First AAAI Conference on Arti\ufb01cial Intelligence.\n\nSamdani, R., Chang, M.-W., & Roth, D. Uni\ufb01ed expectation maximization. Proceedings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, 688\u2013698. Schmidhuber, J. Formal theory of creativity, fun, and intrinsic motivation . IEEE Transactions on Autonomous Mental Development", "97667c73-0dc9-4f2d-8ddc-d0ebbd8a7e28": "The critic and actor learning rules share with Hebb\u2019s proposal the idea that changes in a synapse\u2019s e\ufb03cacy depend on the interaction of several factors. In the critic learning rule the interaction is between the reinforcement signal \u03b4 and eligibility traces that depend only on presynaptic signals. Neuroscientists call this a two-factor learning rule because the interaction is between two signals or quantities. The actor learning rule, on the other hand, is a three-factor learning rule because, in addition to depending on \u03b4, its eligibility traces depend on both presynaptic and postsynaptic activity. Unlike Hebb\u2019s proposal, however, the relative timing of the factors is critical to how synaptic e\ufb03cacies change, with eligibility traces intervening to allow the reinforcement signal to a\u21b5ect synapses that were active in the recent past. Some subtleties about signal timing for the actor and critic learning rules deserve closer attention", "9401b770-7090-49e2-92eb-f120b20acc1b": "4.6 (N@is = Feag f\u00ae) (4.6) Equivalently, the Hessian is the Jacobian of the gradient. Anywhere that the second partial derivatives are continuous, the differential operators are commutative; that is, their order can be swapped: O? &  0x4, Ox; 7) = Ox ;0x; v)-  (4.7)  This implies that H;; = Hj;, so the Hessian matrix is symmetric at such points. Most of the functions we encounter in the context of deep learning have a symmetric Hessian almost everywhere. Because the Hessian matrix is real and symmetric, we can decompose it into a set of real eigenvalues and an orthogonal basis of  85  CHAPTER 4. NUMERICAL COMPUTATION  eigenvectors. The second derivative in a specific direction represented by a unit vector d is given by d' Hd", "399ec477-dbdd-4f3b-bc46-09b8e7d32c72": "This is called a heteroscedastic model.\n\nIn the heteroscedastic case, we simply make the specification of the variance be one of he values output by f(x;0@). A typical way to do this is to formulate the Gaussian distribution using precision, rather than variance, as described in equation 3.22. In the multivariate case, it is most common to use a diagonal precision matrix diag(@). (6.34) This formulation works well with gradient descent because the formula for the  log-likelihood of the Gaussian distribution parametrized by @ involves only mul- tiplication by 8; and addition of log B;. The gradient of multiplication, addition,  184  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  and logarithm operations is well behaved. By comparison, if we parametrized the output in terms of variance, we would need to use division. The division function becomes arbitrarily steep near zero. While large gradients can help learning, arbi- trarily large gradients usually result in instability", "3aa99f42-1957-4090-ba96-cc8464ec58ce": "., ak) )  p(@| 2, ...,a0\") (5.67)  133  https://www.deeplearningbook.org/contents/ml.html    CHAPTER 5. MACHINE LEARNING BASICS  In the scenarios where Bayesian estimation is typically used, the prior begins as a relatively uniform or Gaussian distribution with high entropy, and the observation of the data usually causes the posterior to lose entropy and concentrate around a few highly likely values of the parameters. Relative to maximum likelihood estimation, Bayesian estimation offers two important differences. First, unlike the maximum likelihood approach that makes predictions using a point estimate of 8, the Bayesian approach is to make predictions using a full distribution over @. For example, after observing m examples, the predicted distribution over the next data sample, 2(\u2122+)), is given by  pia) | o\u2122 2 al\u2122)) = / pal) | A)p(O | aM ,...,a0) dd.\n\n(5.68)  Here each value of @ with positive probability density contributes to the prediction of the next example, with the contribution weighted by the posterior density itself", "d35792fd-fca8-43dc-ba04-d69f09216547": "Let us denote a clique by C and the set of variables in that clique by xC.\n\nThen the joint distribution is written as a product of potential functions \u03c8C(xC) over the maximal cliques of the graph which ensures that the distribution p(x) given by (8.39) is correctly normalized. By considering only potential functions which satisfy \u03c8C(xC) \u2a7e 0 we ensure that p(x) \u2a7e 0. In (8.40) we have assumed that x comprises discrete variables, but the framework is equally applicable to continuous variables, or a combination of the two, in which the summation is replaced by the appropriate combination of summation and integration. Note that we do not restrict the choice of potential functions to those that have a speci\ufb01c probabilistic interpretation as marginal or conditional distributions. This is in contrast to directed graphs in which each factor represents the conditional distribution of the corresponding variable, conditioned on the state of its parents. However, in special cases, for instance where the undirected graph is constructed by starting with a directed graph, the potential functions may indeed have such an interpretation, as we shall see shortly", "fa7b008f-d85f-4df0-9840-b1067fe8ed82": "When the norm of reconstruction error (shown by the length of the arrows) is large, probability can be significantly increased by moving in the direction of the arrow, and that is mostly the case in places of low probability. The autoencoder maps these low probability points to higher probability reconstructions. Where probability is maximal, the arrows shrink because the reconstruction becomes more accurate. Figure reproduced with permission from Alain and Bengio . https://www.deeplearningbook.org/contents/autoencoders.html    512  CHAPTER 14.\n\nAUTOENCODERS  14.6 Learning Manifolds with Autoencoders  Like many other machine learning algorithms, autoencoders exploit the idea that data concentrates around a low-dimensional manifold or a small set of such manifolds, as described in section 5.11.3. Some machine learning algorithms exploit this idea only insofar as they learn a function that behaves correctly on the manifold but that may have unusual behavior if given an input that is off the manifold. Autoencoders take this idea further and aim to learn the structure of the manifold. To understand how autoencoders do this, we must present some important characteristics of manifolds", "c88525b5-a569-4211-8a22-73fd0e9b35b2": "In Chapter 7 we described a variety of tabular o\u21b5-policy algorithms.\n\nTo convert them to semi-gradient form, we simply replace the update to an array (V or Q) to an update to a weight vector (w), using the approximate value function (\u02c6v or \u02c6q) and its gradient. Many of these algorithms use the per-step importance sampling ratio: For example, the one-step, state-value algorithm is semi-gradient o\u21b5-policy TD(0), which is just like the corresponding on-policy algorithm (page 203) except for the addition of \u21e2t: where \u03b4t is de\ufb01ned appropriately depending on whether the problem is episodic and discounted, or continuing and undiscounted using average reward: For action values, the one-step algorithm is semi-gradient Expected Sarsa: Note that this algorithm does not use importance sampling. In the tabular case it is clear that this is appropriate because the only sample action is At, and in learning its value we do not have to consider any other actions. With function approximation it is less clear because we might want to weight di\u21b5erent state\u2013action pairs di\u21b5erently once they all contribute to the same overall approximation", "dad090db-4058-46aa-9e70-813419f5fb7e": "Gibbs block 2: ~() ~() ( ~ (@) }) ~ Q) Wi fc ceeded fee DIE 1) \u2014 a Pars ot. war 2)T \\  https://www.deeplearningbook.org/contents/generative_models.html    Ves Jp t4bJ SALUIPICU LOL D (446s Ay TUL ergy 1 ee OTe . end for det wll \\ ) Awa + Awa \u20144V' AY Aw.) \u2014 Awe) _ FAO! AH) Wh) \u2014_w) + ceAw) (this is a cartoon illustration, in practice use a more effective algorithm, such as momentum with a decaying learning rate) WA \u2014-_ WO + Awe  end while  RBMs have been trained in this way, they can be combined to form a DBM. The DBM may then be trained with PCD. Typically PCD training will make only a small change in the model\u2019s parameters and in its performance as measured by the  667  CHAPTER 20", "3a1dda36-29b5-45bf-bff1-5479c1ad2ae1": "3.19 (\u22c6 \u22c6) Show that the integration over w in the Bayesian linear regression model gives the result (3.85). Hence show that the log marginal likelihood is given by (3.86). 3.20 (\u22c6 \u22c6) www Starting from (3.86) verify all of the steps needed to show that maximization of the log marginal likelihood function (3.86) with respect to \u03b1 leads to the re-estimation equation (3.92).\n\n3.21 (\u22c6 \u22c6) An alternative way to derive the result (3.92) for the optimal value of \u03b1 in the evidence framework is to make use of the identity Prove this identity by considering the eigenvalue expansion of a real, symmetric matrix A, and making use of the standard results for the determinant and trace of A expressed in terms of its eigenvalues (Appendix C). Then make use of (3.117) to derive (3.92) starting from (3.86). 3.22 (\u22c6 \u22c6) Starting from (3.86) verify all of the steps needed to show that maximization of the log marginal likelihood function (3.86) with respect to \u03b2 leads to the re-estimation equation (3.95). by \ufb01rst marginalizing with respect to w and then with respect to \u03b2", "146915fd-35ed-4643-8766-d77548fed2e5": "This was simply the idea of a learning system that wants something, that adapts its behavior in order to maximize a special signal from its environment.\n\nThis was the idea of a \u201chedonistic\u201d learning system, or, as we would say now, the idea of reinforcement learning. Like others, we had a sense that reinforcement learning had been thoroughly explored in the early days of cybernetics and arti\ufb01cial intelligence. On closer inspection, though, we found that it had been explored only slightly. While reinforcement learning had clearly motivated some of the earliest computational studies of learning, most of these researchers had gone on to other things, such as pattern classi\ufb01cation, supervised learning, and adaptive control, or they had abandoned the study of learning altogether. As a result, the special issues involved in learning how to get something from the environment received relatively little attention. In retrospect, focusing on this idea was the critical step that set this branch of research in motion. Little progress could be made in the computational study of reinforcement learning until it was recognized that such a fundamental idea had not yet been thoroughly explored. The \ufb01eld has come a long way since then, evolving and maturing in several directions. Reinforcement learning has gradually become one of the most active research areas in machine learning, arti\ufb01cial intelligence, and neural network research", "62c93d57-4053-4bc1-9b00-baf34bdfa304": "The n-step methods of Chapter 7 also enabled this, but eligibility trace methods are more general, often faster to learn, and o\u21b5er di\u21b5erent computational complexity tradeo\u21b5s. This chapter has o\u21b5ered an introduction to the elegant, emerging theoretical understanding of eligibility traces for onand o\u21b5-policy learning and for variable bootstrapping and discounting. One aspect of this elegant theory is true online methods, which exactly reproduce the behavior of expensive ideal methods while retaining the computational congeniality of conventional TD methods. Another aspect is the possibility of derivations that automatically convert from intuitive forward-view methods to more e\ufb03cient incremental backward-view algorithms. We illustrated this general idea in a derivation that started with a classical, expensive Monte Carlo algorithm and ended with a cheap incremental non-TD implementation using the same novel eligibility trace used in true online TD methods. As we mentioned in Chapter 5, Monte Carlo methods may have advantages in nonMarkov tasks because they do not bootstrap.\n\nBecause eligibility traces make TD methods more like Monte Carlo methods, they also can have advantages in these cases. If one wants to use TD methods because of their other advantages, but the task is at least partially non-Markov, then the use of an eligibility trace method is indicated", "3b4a9ed6-4ec0-439e-91de-be431ec5cdbf": "To do this requires methods that are able to learn e\ufb03ciently from incrementally acquired data. In addition, reinforcement learning generally requires function approximation methods able to handle nonstationary target functions (target functions that change over time). For example, in control methods based on GPI (generalized policy iteration) we often seek to learn q\u21e1 while \u21e1 changes. Even if the policy remains the same, the target values of training examples are nonstationary if they are generated by bootstrapping methods (DP and TD learning). Methods that cannot easily handle such nonstationarity are less suitable for reinforcement learning. Up to now we have not speci\ufb01ed an explicit objective for prediction.\n\nIn the tabular case a continuous measure of prediction quality was not necessary because the learned value function could come to equal the true value function exactly. Moreover, the learned values at each state were decoupled\u2014an update at one state a\u21b5ected no other. But with genuine approximation, an update at one state a\u21b5ects many others, and it is not possible to get the values of all states exactly correct. By assumption we have far more states than weights, so making one state\u2019s estimate more accurate invariably means making others\u2019 less accurate", "9687d209-738c-435c-8796-f06b7ff4d610": "18.7.1 Annealed Importance Sampling  In situations where Dxz(pol|p1) is large (i-e., where there is little overlap between po and p;), a strategy called annealed importance sampling (AIS) attempts to bridge the gap by introducing intermediate distributions .\n\nConsider a sequence of distributions py,...,Py,, With O = no <m <-+-< Nn-1 <n = 1 so that the first and last distributions in the sequence are py) and Pp, respectively. 623  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  This approach enables us to estimate the partition function of a multimodal distribution defined over a high-dimensional space (such as the distribution defined by a trained RBM). We begin with a simpler model with a known partition function (such as an RBM with zeros for weights) and estimate the ratio between the two model\u2019s partition functions. The estimate of this ratio is based on the estimate of the ratios of a sequence of many similar distributions, such as the sequence of RBMs with weights interpolating between zero and the learned weights", "03a6b7a0-5439-4cdc-915b-1730dda12bf1": "We can conveniently group these together using vector notation so that where \ufffd W is a matrix whose kth column comprises the D + 1-dimensional vector \ufffdwk = (wk0, wT k )T and \ufffdx is the corresponding augmented input vector (1, xT)T with a dummy input x0 = 1. This representation was discussed in detail in Section 3.1. A new input x is then assigned to the class for which the output yk = \ufffdwT k \ufffdx is largest. We now determine the parameter matrix \ufffd W by minimizing a sum-of-squares error function, as we did for regression in Chapter 3. Consider a training data set {xn, tn} where n = 1, . , N, and de\ufb01ne a matrix T whose nth row is the vector tT n, together with a matrix \ufffdX whose nth row is \ufffdxT n. The sum-of-squares error function can then be written as where \ufffdX\u2020 is the pseudo-inverse of the matrix \ufffdX, as discussed in Section 3.1.1", "467ceee0-037b-4a7a-8cde-d32014f06ffa": "The graph structure allows us to represent complicated, high-dimensional distributions with a reasonable number of parameters, but the graphs used for deep learning are usually not restrictive enough to also allow efficient inference. It is straightforward to see that computing the marginal probability of a general graphical model is ##P hard. The complexity class #P is a generalization of the complexity class NP. Problems in NP require determining only whether a problem has a solution and finding a solution if one exists. Problems in #P require counting the number of solutions. To construct a worst-case graphical model, imagine that we define a graphical model over the binary variables in a 3-SAT problem. We can impose a uniform distribution over these variables.\n\nWe can then add one binary latent variable per clause that indicates whether each clause is satisfied. We can then add another latent variable indicating whether all the clauses are satisfied. This can be done without making a large clique, by building a reduction tree of latent variables, with each node in the tree reporting whether two other variables are satisfied. The leaves of this tree are the variables for each clause. The root of the tree reports whether the entire problem is satisfied", "739a8ee1-3a93-464c-8ea0-766f65e73bfc": "This can be achieved by transforming a uniform random variable y using z = b tan y + c, which gives random numbers distributed according to. Exercise 11.7 The minimum reject rate is obtained by setting c = a \u2212 1, b2 = 2a \u2212 1 and choosing the constant k to be as small as possible while still satisfying the requirement kq(z) \u2a7e \ufffdp(z).\n\nThe resulting comparison function is also illustrated in Figure 11.5. In many instances where we might wish to apply rejection sampling, it proves dif\ufb01cult to determine a suitable analytic form for the envelope distribution q(z). An alternative approach is to construct the envelope function on the \ufb02y based on measured values of the distribution p(z) . Construction of an envelope function is particularly straightforward for cases in which p(z) is log concave, in other words when ln p(z) has derivatives that are nonincreasing functions of z. The construction of a suitable envelope function is illustrated graphically in Figure 11.6. The function ln p(z) and its gradient are evaluated at some initial set of grid points, and the intersections of the resulting tangent lines are used to construct the envelope function", "0fb8daf5-c4a1-4d8e-81c0-32fe560b5993": "The challenge of o\u21b5-policy learning can be divided into two parts, one that arises in the tabular case and one that arises only with function approximation. The \ufb01rst part of the challenge has to do with the target of the update (not to be confused with the target policy), and the second part has to do with the distribution of the updates. The techniques related to importance sampling developed in Chapters 5 and 7 deal with the \ufb01rst part; these may increase variance but are needed in all successful algorithms, tabular and approximate. The extension of these techniques to function approximation are quickly dealt with in the \ufb01rst section of this chapter. Something more is needed for the second part of the challenge of o\u21b5-policy learning with function approximation because the distribution of updates in the o\u21b5-policy case is not according to the on-policy distribution. The on-policy distribution is important to the stability of semi-gradient methods. Two general approaches have been explored to deal with this.\n\nOne is to use importance sampling methods again, this time to warp the update distribution back to the on-policy distribution, so that semi-gradient methods are guaranteed to converge (in the linear case)", "b8a37319-817b-4410-9663-431b17c26279": "A commonly used variation of REINFORCE is to subtract a baseline value from the return G; to reduce the variance of gradient estimation while keeping the bias unchanged. For example, a common baseline is state-value, and if applied, we would use A(s,a) = Q(s,a) \u2014 V(s) inthe gradient ascent update. Initialize 8 at random Generate one episode S,, A,, Ry, 5, A5,...,S7 For t=1, 2, ..., T: Estimate the the return G_t since the time step t. 6< 0+ ay'GiV In7(Ai|S:, 9). Actor-Critic  If the value function is learned in addition to the policy, we would get Actor-Critic algorithm. Critic: updates value function parameters w and depending on the algorithm it could be action- value Q(a|s; w) or state-value V(s; w). Actor: updates policy parameters 6, in the direction suggested by the critic, m(a|s; )", "8586ae15-2837-4855-b471-98cbedd68be3": "Our goal is to choose the regions Rj in order to minimize the expected loss (1.80), which implies that for each x we should minimize \ufffd k Lkjp(x, Ck).\n\nAs before, we can use the product rule p(x, Ck) = p(Ck|x)p(x) to eliminate the common factor of p(x). Thus the decision rule that minimizes the expected loss is the one that assigns each new x to the class j for which the quantity is a minimum. This is clearly trivial to do, once we know the posterior class probabilities p(Ck|x). We have seen that classi\ufb01cation errors arise from the regions of input space where the largest of the posterior probabilities p(Ck|x) is signi\ufb01cantly less than unity, or equivalently where the joint distributions p(x, Ck) have comparable values. These are the regions where we are relatively uncertain about class membership. In some applications, it will be appropriate to avoid making decisions on the dif\ufb01cult cases in anticipation of a lower error rate on those examples for which a classi\ufb01cation decision is made. This is known as the reject option", "338bdb62-3d7e-4c69-86fa-566ae242c46d": "Such generalization makes the learning potentially more powerful but also potentially more di\ufb03cult to manage and understand. Perhaps surprisingly, extending reinforcement learning to function approximation also makes it applicable to partially observable problems, in which the full state is not available to the agent. If the parameterized function form for \u02c6v does not allow the estimated value to depend on certain aspects of the state, then it is just as if those aspects are unobservable. In fact, all the theoretical results for methods using function approximation presented in this part of the book apply equally well to cases of partial observability. What function approximation can\u2019t do, however, is augment the state representation with memories of past observations. Some such possible further extensions are discussed brie\ufb02y in Section 17.3. All of the prediction methods covered in this book have been described as updates to an estimated value function that shift its value at particular states toward a \u201cbacked-up value,\u201d or update target, for that state. Let us refer to an individual update by the notation s 7! u, where s is the state updated and u is the update target that s\u2019s estimated value is shifted toward", "e0869097-20ed-4b51-8f7e-1ad080ef589b": "This suggests a different approach to solving the optimization problem for the RVM, in which we make explicit all of the dependence of the marginal likelihood (7.85) on a particular \u03b1i and then determine its stationary points explicitly . To do this, we \ufb01rst pull out the contribution from \u03b1i in the matrix C de\ufb01ned by (7.86) to give where \u03d5i denotes the ith column of \u03a6, in other words the N-dimensional vector with elements (\u03c6i(x1), . , \u03c6i(xN)), in contrast to \u03c6n, which denotes the nth row of \u03a6.\n\nThe matrix C\u2212i represents the matrix C with the contribution from basis function i removed. Using the matrix identities (C.7) and (C.15), the determinant and inverse of C can then be written where L(\u03b1\u2212i) is simply the log marginal likelihood with basis function \u03d5i omitted, and the quantity \u03bb(\u03b1i) is de\ufb01ned by and contains all of the dependence on \u03b1i", "96b74f3e-6766-41bf-960f-64cf0e7706a0": "Now the question becomes what is the best n? Which Gg) gives us the best return approximation?\n\nA common yet smart solution is to apply a weighted sum of all possible n-step TD targets rather than to pick a single best n. The weights decay by a factor A with n, A\u201d~! ; the intuition is similar to why we want to discount future rewards  https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log   when computing the return: the more future we look into the less confident we would be. To make all the weight (n > co) sum up to 1, we multiply every weight by (1-A), because:  let S=1+A+A? 4+... S=14+A1+A+4A? +...) S=1+A8 S=1/(1-A)  This weighted sum of many n-step returns is called A-return GS = (1 \u2014 A) S3\u00b0\u00b0, dr-ig), TD learning that adopts A-return for value updating is labeled as TD(A)", "5240da88-6461-4346-bea8-af0b4055a8f0": "These assumptions are that the examples in each dataset are independent from each other, and that the training set and test set are identically distributed , drawn from the same probability distribution as each other. This assumption enables us to describe the data-generating process with a probability distribution over a single example. The same distribution is then used to generate every train example and every test example. We call that shared underlying distribution the data-generating dis- tribution, denoted pgata. This probabilistic framework and the i.i.d.\n\nassumptions enables us to mathematically study the relationship between training error and test error. One immediate connection we can observe between training error and test error is that the expected training error of a randomly selected model is equal to the expected test error of that model. Suppose we have a probability distribution p(x, y) and we sample from it repeatedly to generate the training set and the test set. For some fixed value w, the expected training set error is exactly the same as the expected test set error, because both expectations are formed using the same dataset sampling process. The only difference between the two conditions is the name we assign to the dataset we sample", "2d76053e-5304-4eab-bfbe-6509911a5e37": "(20.37)  Typically y is a hyperparameter fixed at the beginning of training. It is usu- ally chosen to make sure that # \u2014 w & O when the model is initialized. This reparametrization does not change the set of probability distributions that the model can represent, but it does change the dynamics of stochastic gradient descent applied to the likelihood. Specifically, in many cases, this reparametrization results in a Hessian matrix that is better conditioned. Melchior et al. experimentally confirmed that the conditioning of the Hessian matrix improves, and observed that the centering trick is equivalent to another Boltzmann machine learning technique, the enhanced gradient . The improved conditioning of the Hessian matrix enables learning to succeed, even in difficult cases like training a deep Boltzmann machine with multiple layers. The other approach to jointly training deep Boltzmann machines is the multi- prediction deep Boltzmann machine (MP-DBM), which works by viewing the mean  670  CHAPTER 20.\n\nDEEP GENERATIVE MODELS  field equations as defining a family of recurrent networks for approximately solving every possible inference problem", "2598605c-b132-4831-8a00-13e1122a1757": "\u2022 GPT uses a sentence separator () and classi\ufb01er token () which are only introduced at \ufb01ne-tuning time; BERT learns ,  and sentence A/B embeddings during pre-training. \u2022 GPT was trained for 1M steps with a batch size of 32,000 words; BERT was trained for 1M steps with a batch size of 128,000 words.\n\nGPT used the same learning rate of 5e-5 for all \ufb01ne-tuning experiments; BERT chooses a task-speci\ufb01c \ufb01ne-tuning learning rate which performs the best on the development set. To isolate the effect of these differences, we perform ablation experiments in Section 5.1 which demonstrate that the majority of the improvements are in fact coming from the two pre-training tasks and the bidirectionality they enable. The illustration of \ufb01ne-tuning BERT on different tasks can be seen in Figure 4. Our task-speci\ufb01c models are formed by incorporating BERT with one additional output layer, so a minimal number of parameters need to be learned from scratch. Among the tasks, (a) and (b) are sequence-level tasks while (c) and (d) are token-level tasks", "65fa1d50-39e9-4714-b178-92d15f74b3d4": "Because the logarithm is a monotonically increasing function of its argument, maximization of the log of a function is equivalent to maximization of the function itself. Taking the log not only simpli\ufb01es the subsequent mathematical analysis, but it also helps numerically because the product of a large number of small probabilities can easily under\ufb02ow the numerical precision of the computer, and this is resolved by computing instead the sum of the log probabilities.\n\nFrom (1.46) and (1.53), the log likelihood which is the sample mean, i.e., the mean of the observed values {xn}. Similarly, maximizing (1.54) with respect to \u03c32, we obtain the maximum likelihood solution for the variance in the form which is the sample variance measured with respect to the sample mean \u00b5ML. Note that we are performing a joint maximization of (1.54) with respect to \u00b5 and \u03c32, but in the case of the Gaussian distribution the solution for \u00b5 decouples from that for \u03c32 so that we can \ufb01rst evaluate (1.55) and then subsequently use this result to evaluate (1.56). Later in this chapter, and also in subsequent chapters, we shall highlight the signi\ufb01cant limitations of the maximum likelihood approach", "795fe842-b274-4078-8f22-9378f0a23d1b": "Since ratio matching applies specifically to binary data, this means that it acts on all fantasy states within Hamming distance 1 of the data. Ratio matching can also be useful as the basis for dealing with high-dimensional sparse data, such as word count vectors.\n\nThis kind of data poses a challenge for MCMC-based methods because the data is extremely expensive to represent in dense format, yet the MCMC sampler does not yield sparse values until the model has learned to represent the sparsity in the data distribution. Dauphin and Bengio  overcame this issue by designing an unbiased stochastic approximation to ratio matching. The approximation evaluates only a randomly selected subset of the terms of the objective and does not require the model to generate complete fantasy samples. See Marlin and de Freitas  for a theoretical analysis of the asymptotic efficiency of ratio matching", "57ba9a13-0619-4e49-914b-82b03f231302": "We have chosen this loss function to simplify the math for this example as much as possible. In practical applications, MSE is usually not an  167  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  appropriate cost function for modeling binary data. More appropriate approaches are described in section 6.2.2.2. Evaluated on our whole training set, the MSE loss function is  J(8) = 5 0 (Fw) ~ Fas)? - (6.1)  weEX  Now we must choose the form of our model, f(a;0). Suppose that we choose a linear model, with 6 consisting of w and b. Our model is defined to be  f(a; w,b) =a 'w +b. (6.2)  We can minimize J(@) in closed form with respect to w and 6 using the normal equations. After solving the normal equations, we obtain w = 0 and b = 3. The linear model simply outputs 0.5 everywhere. Why does this happen? Figure 6.1 shows how a linear model is not able to represent the XOR function", "cdeb9605-f2a1-40e7-a88f-db726d2b2891": "valL>ll$ Ewrrise /2,/7 subspace to minimize !he squared reoonslruCtioo error in 'oIhich the proje<:tion, are C.,N. We ean gh'e a ,imple physical analogy for this EM algorithm. which is easily visualized for D = 2 and M = 1. Coo,ider a collectioo nf data point' ,n tWI) dimension', aod let tile u\"\"'-dimensiunal principal subspace be represented by a <ohd rod. Now atlaCh each data point to the nxI via a ,pring oo<:)\"ing HooI;:e', law (\"umJ energy i, propol1ional 10 ,lie square of lile spring\". length)", "432ee0ab-2539-4800-90ba-a39b220492a1": "E4879, 2016, Reddy, Celani, Sejnowski, and Vergassola, Learning to Soar in Turbulent Environments. The interface between the agent and the environment required de\ufb01ning the agent\u2019s actions, the state information the agent receives from the environment, and the reward signal. By experimenting with various possibilities, Reddy et al. decided that three actions each for the angle of attack and the bank angle were enough for their purposes: increment or decrement the current bank angle and angle of attack by 5\u25e6 and 2.5\u25e6, respectively, or leave them unchanged. This resulted in 32 possible actions. The bank angle was bounded to remain between \u221215\u25e6 and +15\u25e6", "383c1cbb-a675-499e-b8de-f529f678a017": "A fourth issue that needs to be addressed in future research is that of automating the choice of tasks on which an agent works and uses to structure its developing competence. It is usual in machine learning for human designers to set the tasks that the learning agent is expected to master. Because these tasks are known in advance and remain \ufb01xed, they can be built into the learning algorithm code. However, looking ahead, we will want the agent to make its own choices about what tasks it should try to master. These might be subtasks of a speci\ufb01c overall task that is already known, or they might be intended to create building blocks that permit more e\ufb03cient learning of many di\u21b5erent tasks that the agent is likely to face in the future but which are currently unknown. These tasks may be like the auxiliary tasks or the GVFs discussed in Section 17.1, or tasks solved by options as discussed in Section 17.2", "1fcecc21-ec0b-4c8a-9783-e359e121b0fb": "As an example of how we can control a model\u2019s tendency to overfit or underfit via weight decay, we can train a high-degree polynomial regression model with different values of A. See figure 5.5 for the results. More generally, we can regularize a model that learns a function f(a; 0) by adding a penalty called a regularizer to the cost function. In the case of weight decay, the regularizer is Q(w) = w !w. In chapter 7, we will see that many other regularizers are possible. Expressing preferences for one function over another is a more general way of controlling a model\u2019s capacity than including or excluding members from the hypothesis space. We can think of excluding a function from a hypothesis space as expressing an infinitely strong preference against that function. In our weight decay example, we expressed our preference for linear functions defined with smaller weights explicitly, via an extra term in the criterion we minimize. There are many other ways of expressing preferences for different solutions, both implicitly and explicitly. Together, these different approaches are known as regularization", "6a1dca82-9095-4188-bd65-6e9771ccda98": "After applying batch normalization, we obtain the normalized hy that restores the zero mean and unit variance properties. For almost any update to the lower layers, hia will remain a unit Gaussian.\n\nThe output y may then be learned as a simple linear function y = whit. Learning in this model is now very simple because the parameters at the lower layers do not have an effect in most cases; their output is always renormalized to a unit Gaussian. In some  315  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  corner cases, the lower layers can have an effect. Changing one of the lower layer weights to 0 can make the output become degenerate, and changing the sign of one of the lower weights can flip the relationship between hy, and y. These situations are very rare. Without normalization, nearly every update would have an extreme effect on the statistics of hj_;. Batch normalization has thus made this model significantly easier to learn. In this example, the ease of learning of course came at the cost of making the lower layers useless", "5d78ec00-70c4-4332-ae1c-ebd2ea6a7aff": "RNNs are useful when we believe that the distribution over y may depend on a value of y  from the distant past in a way that is not captured by the effect of y on y ed),  One way to interpret an RNN as a graphical model is to view the RNN as defining a graphical model whose structure is the complete graph, able to represent direct dependencies between any pair of y values. The graphical model over the y  https://www.deeplearningbook.org/contents/rnn.html    values with the complete graphs structure is shown in figure 10.7. The cone graph interpretation of the is based on ignoring the hidden units h marginalizing them out of the model. It is more interesting to consider the graphical model structure of RNNs that results from regarding the hidden units h as random variables.! Including the  'The conditional distribution over these variables given their parents is deterministic. This is perfectly legitimate, though it is somewhat rare to design a graphical model with such deterministic hidden units", "cc679bed-9216-4d51-8033-768edad4c3ae": "A kernel two-sample test. J. Mach. Learn. Res., 13:723\u2013 773, 2012. Ferenc Huszar. How (not) to train your generative model: Scheduled sampling, likelihood, adversary? CoRR, abs/1511.05101, 2015. Shizuo Kakutani. Concrete representation of abstract (m)-spaces (a characterization of the space of continuous functions). Annals of Mathematics, 42(4):994\u2013 1024, 1941. Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. CoRR, abs/1412.6980, 2014. Diederik P. Kingma and Max Welling. Auto-encoding variational bayes. CoRR, abs/1312.6114, 2013. Yujia Li, Kevin Swersky, and Rich Zemel. Generative moment matching networks. In Proceedings of the 32nd International Conference on Machine Learning (ICML-15), pages 1718\u20131727", "533ac279-7f6e-46d6-85e0-80f8394ce836": "Images are high dimensional and include  236  https://www.deeplearningbook.org/contents/regularization.html    CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  an enormous range of factors of variation, many of which can be easily simulated.\n\nOperations like translating the training images a few pixels in each direction can often greatly improve generalization, even if the model has already been designed to be partially translation invariant by using the convolution and pooling techniques described in chapter 9. Many other operations, such as rotating the image or scaling the image, have also proved quite effective. One must be careful not to apply transformations that would change the correct class. For example, optical character recognition tasks require recognizing the difference between \u201cb\u201d and \u201cd\u201d and the difference between \u201c6\u201d and \u201c9,\u201d so horizontal flips and 180\u00b0 rotations are not appropriate ways of augmenting datasets for these tasks. There are also transformations that we would like our classifiers to be invariant to but that are not easy to perform. For example, out-of-plane rotation cannot be implemented as a simple geometric operation on the input pixels. Dataset augmentation is effective for speech recognition tasks as well", "ddbec8f0-ad79-474a-81b3-272368802ff1": ".\n\nReinforcement learning in continuous state and action spaces. In M. Wiering and M. van Otterlo (Eds. ), Reinforcement Learning: State-of-the-Art, pp. 207\u2013251. Springer-Verlag Berlin Heidelberg. van Hasselt, H., Sutton, R. S. Learning to predict independent of span. ArXiv:1508.04582. Van Roy, B., Bertsekas, D. P., Lee, Y., Tsitsiklis, J. N. A neuro-dynamic programming approach to retailer inventory management. In Proceedings of the 36th IEEE Conference on Decision and Control, Vol. 4, pp. 4052\u20134057. van Seijen, H. Reinforcement Learning under Space and Time Constraints. University of van Seijen, H. E\u21b5ective multi-step temporal-di\u21b5erence learning for non-linear function van Seijen, H., Sutton, R. S", "89e24a0d-aedd-474a-ae0b-d6484ea29b01": "One can show, as Williams  did, that a team of Bernoulli-logistic REINFORCE units implements a policy gradient algorithm as a whole with respect to average rate of the team\u2019s common reward signal, where the actions are the collective actions of the team. Further, Williams  showed that a team of Bernoulli-logistic units using REINFORCE ascends the average reward gradient when the units in the team are interconnected to form a multilayer ANN. In this case, the reward signal is broadcast to all the units in the network, though reward may depend only on the collective actions of the network\u2019s output units. This means that a multilayer team of Bernoulli-logistic REINFORCE units learns like a multilayer network trained by the widely-used error backpropagation method, but in this case the backpropagation process is replaced by the broadcasted reward signal", "69d5ff44-a184-413e-aa3d-e3604a7dd99d": "\u21e4 In the maze example presented in the previous section, the changes in the model were relatively modest. The model started out empty, and was then \ufb01lled only with exactly correct information. In general, we cannot expect to be so fortunate. Models may be incorrect because the environment is stochastic and only a limited number of samples have been observed, or because the model was learned using function approximation that has generalized imperfectly, or simply because the environment has changed and its new behavior has not yet been observed. When the model is incorrect, the planning process is likely to compute a suboptimal policy. In some cases, the suboptimal policy computed by planning quickly leads to the discovery and correction of the modeling error. This tends to happen when the model is optimistic in the sense of predicting greater reward or better state transitions than are actually possible. The planned policy attempts to exploit these opportunities and in doing so discovers that they do not exist. kind of modeling error and recovery from it is shown in Figure 8.4.\n\nInitially, there is a short path from start to goal, to the right of the barrier, as shown in the upper left of the \ufb01gure", "21b0e836-5d14-4ec6-bc0b-dfbb6a66a006": "If we believe that the directions of sensitivity are somewhat axis aligned, it can make sense to use a separate learning rate for each parameter and automatically adapt these learning rates throughout the course of earning. The delta-bar-delta algorithm  is an early heuristic approach o adapting individual learning rates for model parameters during training. The approach is based on a simple idea: if the partial derivative of the loss, with respect o a given model parameter, remains the same sign, then the learning rate should increase. If that partial derivative changes sign, then the learning rate should decrease. Of course, this kind of rule can only be applied to full batch optimization.\n\nMore recently, a number of incremental (or mini batch-based) methods have  https://www.deeplearningbook.org/contents/optimization.html    been introduced that adapt the learning rates of model parameters. In this section, we briefly review a few of these algorithms. 8.5.1 AdaGrad  The AdaGrad algorithm, shown in algorithm 8.4, individually adapts the learning rates of all model parameters by scaling them inversely proportional to the square root of the sum of all the historical squared values of the gradient", "076cc6b7-0c4b-4cee-8bfa-9e9398ce54f0": "The corresponding log likelihood function is given, from (12.35), by Setting the derivative of the log likelihood with respect to JL equal to zero gives the expected result JL =xwhere xis the data mean defined by (12.1). Back-substituting we can then write the log likelihood function in the form where S is the data covariance matrix defined by (12.3). Because the log likelihood is a quadratic function of JL, this solution represents the unique maximum, as can be confirmed by computing second derivatives. Maximization with respect to W and 0'2 is more complex but nonetheless has an exact closed-form solution. It was shown by Tipping and Bishop  that all of the stationary points of the log likelihood function can be written as where U M is a D x M matrix whose columns are given by any subset (of size M) of the eigenvectors of the data covariance matrix S, the M x M diagonal matrix L M has elements given by the corresponding eigenvalues ..\\, and R is an arbitrary M x M orthogonal matrix", "a7e19b4d-98a8-4f6a-925b-cceb6fe6d115": "Such a function is called a discriminant function. In fact, we can identify three distinct approaches to solving decision problems, all of which have been used in practical applications. These are given, in decreasing order of complexity, by: (a) First solve the inference problem of determining the class-conditional densities p(x|Ck) for each class Ck individually. Also separately infer the prior class probabilities p(Ck). Then use Bayes\u2019 theorem in the form Equivalently, we can model the joint distribution p(x, Ck) directly and then normalize to obtain the posterior probabilities. Having found the posterior probabilities, we use decision theory to determine class membership for each new input x.\n\nApproaches that explicitly or implicitly model the distribution of inputs as well as outputs are known as generative models, because by sampling from them it is possible to generate synthetic data points in the input space. (b) First solve the inference problem of determining the posterior class probabilities p(Ck|x), and then subsequently use decision theory to assign each new x to one of the classes. Approaches that model the posterior probabilities directly are called discriminative models", "345f0157-089b-40fc-994c-663633439696": "The clear formalism provided by reinforcement learning that systemizes tasks, returns, and algorithms is proving to be enormously useful in making sense of experimental data, in suggesting new kinds of experiments, and in pointing to factors that may be critical to manipulate and to measure. The idea of optimizing return over the long term that is at the core of reinforcement learning is contributing to our understanding of otherwise puzzling features of animal learning and behavior. Some of the correspondences between reinforcement learning and psychological theories are not surprising because the development of reinforcement learning drew inspiration from psychological learning theories. However, as developed in this book, reinforcement learning explores idealized situations from the perspective of an arti\ufb01cial intelligence researcher or engineer, with the goal of solving computational problems with e\ufb03cient algorithms, rather than to replicate or explain in detail how animals learn.\n\nAs a result, some of the correspondences we describe connect ideas that arose independently in their respective \ufb01elds. We believe these points of contact are specially meaningful because they expose computational principles important to learning, whether it is learning by arti\ufb01cial or by natural systems. For the most part, we describe correspondences between reinforcement learning and learning theories developed to explain how animals like rats, pigeons, and rabbits learn in controlled laboratory experiments. Thousands of these experiments were conducted throughout the 20th century, and many are still being conducted today", "857f46a2-6f45-43f3-8f2e-b6a1495f7ab9": "We can represent the unfolded recurrence after \u00a2 steps with a function g: hn) =g (a), 2) al) ae?) aD) (10.6) =f(h\u2014) a; 8).\n\n(10.7) The function g\u00ae takes the whole past sequence (a), x) a9)... ea)  as input and produces the current state, but the unfolded recurrent structure allows us to factorize g into repeated application of a function f. The unfolding  a1 toa 1 4 + 1  https://www.deeplearningbook.org/contents/rnn.html    process LLLUS LWILFOGUCES LWO IlajJOL AAVALLLAXeS:  1. Regardless of the sequence length, the learned model always has the same input size, because it is specified in terms of transition from one state to another state, rather than specified in terms of a variable-length history of states. 2. It is possible to use the same transition function f with the same parameters at every time step", "cd43c722-8dd7-43ce-8009-ea3e4012152b": "This approach is based on using sigmoid output units combined with maximum likelihood. A sigmoid output unit is defined by j=o (wh + b) (6.19)  where g is the logistic sigmoid function described in section 3.10. We can think of the sigmoid output unit as having two components. First, it  uses a linear layer to compute z =w!h +b. Next, it uses the sigmoid activation function to convert z into a probability.\n\nWe omit the dependence on \u00abx for the moment to discuss how to define a probability distribution over y using the value z. The sigmoid can be motivated by constructing an unnormalized probability distribution P(y), which does not sum to 1. We can then divide by an appropriate constant to obtain a valid probability distribution. If we begin with the assumption that the unnormalized log probabilities are linear in y and z, we can exponentiate to obtain the unnormalized probabilities", "27ad1581-358c-43ed-9d75-ac8b0014cdf5": "During training, forward propagation can continue onward until it produces a scalar cost J(@). The back-propagation algorithm , often simply called backprop, allows the information from the cost to then flow backward through the network in order to compute the gradient. Computing an analytical expression for the gradient is straightforward, but numerically evaluating such an expression can be computationally expensive. The back-propagation algorithm does so using a simple and inexpensive procedure.\n\nThe term back-propagation is often misunderstood as meaning the whole learning algorithm for multi layer neural networks. Actually, back-propagation refers only to the method for computing the gradient, while another algorithm, such as stochastic gradient descent, is used to perform learning using this gradient. Furthermore, back-propagation is often misunderstood as being specific to multi- layer neural networks, but in principle it can compute derivatives of any function (for some functions, the correct response is to report that the derivative of the function is undefined)", "44c91198-f242-48b5-ae8b-152947949786": "This is achieved by expressing f(x) as a linear combination of radial basis functions, one centred on every data point The values of the coef\ufb01cients {wn} are found by least squares, and because there are the same number of coef\ufb01cients as there are constraints, the result is a function that \ufb01ts every target value exactly. In pattern recognition applications, however, the target values are generally noisy, and exact interpolation is undesirable because this corresponds to an over-\ufb01tted solution. Expansions in radial basis functions also arise from regularization theory .\n\nFor a sum-of-squares error function with a regularizer de\ufb01ned in terms of a differential operator, the optimal solution is given by an expansion in the Green\u2019s functions of the operator (which are analogous to the eigenvectors of a discrete matrix), again with one basis function centred on each data point. If the differential operator is isotropic then the Green\u2019s functions depend only on the radial distance from the corresponding data point. Due to the presence of the regularizer, the solution no longer interpolates the training data exactly. Another motivation for radial basis functions comes from a consideration of the interpolation problem when the input (rather than the target) variables are noisy", "8c35e32a-3706-448f-9ae4-791146781d4f": "The stationary point need not, however, be a local maximum. In  it is shown that it is possible for the algorithm to converge to local minima or saddle points in unusual cases.\n\nIn the formulation of the EM algorithm described above, \u03b8n+1 was chosen as the value of \u03b8 for which \u2206(\u03b8|\u03b8n) was maximized. While this ensures the greatest increase in L(\u03b8), it is however possible to relax the requirement of maximization to one of simply increasing \u2206(\u03b8|\u03b8n) so that \u2206(\u03b8n+1|\u03b8n) \u2265 \u2206(\u03b8n|\u03b8n). This approach, to simply increase and not necessarily maximize \u2206(\u03b8n+1|\u03b8n) is known as the Generalized Expectation Maximization (GEM) algorithm and is often useful in cases where the maximization is di\ufb03cult. The convergence of the GEM algorithm can be argued as above. A. P. Dempster, N. M. Laird, and D. B. Rubin. Maximum likelihood from incomplete data via the em algorithm. Journal of the Royal Statistical Society: Series B, 39(1):1\u201338, November 1977. R", "f120c9b9-2446-4116-b19e-8b36a07d0c16": "E., Berthier, N. E., Blazis, E. J., Sutton, R. S., Barto, A. G. Simulation of the classically conditioned nictitating membrane response by a neuron-like adaptive element: I. Response topography, neuronal \ufb01ring, and interstimulus intervals. Behavioural Brain Research, 21(2):143\u2013154. Moore, J. W., Marks, J. S., Castagna, V. E., Polewan, R. J. Parameter stability in the TD model of complex CR topographies. In Society for Neuroscience Abstracts, 27:642. Moore, J. W., Schmajuk, N. A. Kamin blocking. Scholarpedia, 3(5):3542. Moore, J. W., Stickney, K. J. Formation of attentional-associative networks in real Mukundan, J., Mart\u00b4\u0131nez, J. F", "4a8a91c3-b917-447d-8e75-946746720713": "In this chapter we show how DP can be used to compute the value functions de\ufb01ned in Chapter 3.\n\nAs discussed there, we can easily obtain optimal policies once we have found the optimal value functions, v\u21e4 or q\u21e4, which satisfy the Bellman optimality equations: for all s 2 S, a 2 A(s), and s0 2 S+. As we shall see, DP algorithms are obtained by turning Bellman equations such as these into assignments, that is, into update rules for improving approximations of the desired value functions. First we consider how to compute the state-value function v\u21e1 for an arbitrary policy \u21e1. This is called policy evaluation in the DP literature. We also refer to it as the prediction problem. Recall from Chapter 3 that, for all s 2 S, where \u21e1(a|s) is the probability of taking action a in state s under policy \u21e1, and the expectations are subscripted by \u21e1 to indicate that they are conditional on \u21e1 being followed. The existence and uniqueness of v\u21e1 are guaranteed as long as either \u03b3 < 1 or eventual termination is guaranteed from all states under the policy \u21e1", "d8e80cb6-9e64-4661-a162-1d7cf0c00b33": "In other words, J is contractive if its image of the unit sphere is completely encapsulated by the unit sphere. We can think of the CAE as penalizing the Frobenius norm of the local linear approximation of f(a) at every training point x in order to encourage each of these local linear operators to become a contraction. As described in section 14.6, regularized autoencoders learn manifolds by balancing two opposing forces. In the case of the CAE, these two forces are reconstruction error and the contractive penalty Q(h). Reconstruction error alone would encourage the CAE to learn an identity function.\n\nThe contractive penalty alone would encourage the CAE to learn features that are constant with respect to x. The compromise between these two forces yields an autoencoder whose derivatives Sis) are mostly tiny. Only a small number of hidden units, corresponding to a small number of directions in the input, may have significant derivatives. The goal of the CAE is to learn the manifold structure of the data. Directions x with large Jz rapidly change h, so these are likely to be directions that approximate the tangent planes of the manifold", "b872ff7d-d625-4cb1-a334-f723273c1505": "This is the conjugate prior distribution for a multivariate Gaussian N(x|\u00b5, \u039b) in which both the mean \u00b5 and the precision \u039b are unknown, and is also called the normal-Wishart distribution. It comprises the product of a Gaussian distribution for \u00b5, whose precision is proportional to \u039b, and a Wishart distribution over \u039b. For the particular case of a scalar x, this is equivalent to the Gaussian-gamma distribution. If we generalize the Bernoulli distribution to an K-dimensional binary variable x with components xk \u2208 {0, 1} such that \ufffd where Ijk is the j, k element of the identity matrix. Because p(xk = 1) = \u00b5k, the parameters must satisfy 0 \u2a7d \u00b5k \u2a7d 1 and \ufffd k \u00b5k = 1.\n\nThe multinomial distribution is a multivariate generalization of the binomial and gives the distribution over counts mk for a K-state discrete variable to be in state k given a total number of observations N. gives the number of ways of taking N identical objects and assigning mk of them to bin k for k = 1,", "e0826407-6dc5-4988-a2ab-33a76b028d02": "(1) In the next section, we present a theoretical analysis of adversarial nets, essentially showing that the training criterion allows one to recover the data generating distribution as G and D are given enough capacity, i.e., in the non-parametric limit. See Figure 1 for a less formal, more pedagogical explanation of the approach. In practice, we must implement the game using an iterative, numerical approach. Optimizing D to completion in the inner loop of training is computationally prohibitive, and on \ufb01nite datasets would result in over\ufb01tting. Instead, we alternate between k steps of optimizing D and one step of optimizing G. This results in D being maintained near its optimal solution, so long as G changes slowly enough.\n\nThe procedure is formally presented in Algorithm 1. In practice, equation 1 may not provide suf\ufb01cient gradient for G to learn well. Early in learning, when G is poor, D can reject samples with high con\ufb01dence because they are clearly different from the training data. In this case, log(1 \u2212 D(G(z))) saturates", "a20e8cf1-2012-46c9-b873-ce24867cfe54": "|t does demand access to supervised dataset in which we know which text matches which image. It is trained on 400 million (text, image) pairs, collected from the Internet. The query list contains all the words occurring at least 100 times in the English version of Wikipedia. Interestingly, they found that Transformer-based language models are 3x slower than a bag-of-words (BoW) text encoder at zero-shot ImageNet classification.\n\nUsing contrastive objective instead of trying to predict the exact words associated with images (i.e. a method commonly adopted by image caption prediction tasks)  can further improve the data efficiency another 4x. Nn wwe uo ons  Zero-Shot ImageNet Accuracy N o  \u2014\u00ae Bag of Words Contrastive (CLIP)  5 \u2014\u00ae- Bag of Words Prediction \u2014\u00ae- Transformer Language Model  i) 2M 33M 67M 134M 268M # of images processed  400M  CLIP produces good visual representation that can non-trivially transfer to many CV benchmark datasets, achieving results competitive with supervised baseline", "f020d922-82f9-4449-9283-41b051327e20": "), Learning and Computational Neuroscience: Foundations of Adaptive Networks, pp. 497\u2013537. MIT Press, Cambridge, MA.\n\nSutton, R. S., Maei, H. R., Precup, D., Bhatnagar, S., Silver, D., Szepesv\u00b4ari, Cs., Wiewiora, E. Fast gradient-descent methods for temporal-di\u21b5erence learning with linear function approximation. In Proceedings of the 26th International Conference on Machine Learning , pp. 993\u20131000. ACM, New York. Sutton, R. S., Szepesv\u00b4ari, Cs., Maei, H. R. A convergent O(d2) temporal-di\u21b5erence algorithm for o\u21b5-policy learning with linear function approximation. In Advances in Neural Information Processing Systems 21 , pp. 1609\u20131616. Curran Associates, Inc. Sutton, R", "b6595be5-fc03-43e4-8172-6e3a598a49dc": "For example, if you learn to predict and control your sensors over short time scales, say seconds, then you might plausibly come up with part of the idea of objects, which would then greatly help with the prediction and control of long-term reward. We might imagine an arti\ufb01cial neural network (ANN) in which the last layer is split into multiple parts, or heads, each working on a di\u21b5erent task. One head might produce the approximate value function for the main task (with reward as its cumulant) whereas the others would produce solutions to various auxiliary tasks.\n\nAll heads could propagate errors by stochastic gradient descent into the same body\u2014the shared preceding part of the network\u2014which would then try to form representations, in its next-to-last layer, to support all the heads. Researchers have experimented with auxiliary tasks such as predicting change in pixels, predicting the next time step\u2019s reward, and predicting the distribution of the return. In many cases this approach has been shown to greatly accelerate learning on the main task . Multiple predictions have similarly been repeatedly proposed as a way of directing the construction of state estimates (see Section 17.3)", "ebfbb0b6-3847-4574-bfad-121181d933c2": "In many situations this will not be the case, for instance if a sensor fails to return a value whenever the quantity it is measuring exceeds some threshold. We now consider the application of this latent variable view of EM to the speci\ufb01c case of a Gaussian mixture model. Recall that our goal is to maximize the log likelihood function (9.14), which is computed using the observed data set X, and we saw that this was more dif\ufb01cult than for the case of a single Gaussian distribution due to the presence of the summation over k that occurs inside the logarithm. Suppose then that in addition to the observed data set X, we were also given the values of the corresponding discrete variables Z. Recall that Figure 9.5(a) shows a \u2018complete\u2019 data set (i.e., one that includes labels showing which component generated each data point) while Figure 9.5(b) shows the corresponding \u2018incomplete\u2019 data set. The graphical model for the complete data is shown in Figure 9.9.\n\nNow consider the problem of maximizing the likelihood for the complete data set {X, Z}. From (9.10) and (9.11), this likelihood function takes the form where znk denotes the kth component of zn", "537c7d75-0459-4ab1-8d65-2f4a0c0d1d28": "Brie\ufb02y, the objective of \u03c6 is to maximize the ultimate measure of the performance of model p\u03b8(y|x), which, in the context of supervised learning, is the model performance on a held-out validation set. The algorithm optimizes \u03b8 and \u03c6 alternatingly, corresponding to Eq. (5) and Eq. (6), respectively. More concretely, in each iteration, we \ufb01rst update the model parameters \u03b8 in analogue to Eq. (5) which optimizes intrinsic reward-enriched objective. Here, we optimize the log-likelihood of the training set enriched with data manipulation. That is, we replace R\u03b4 with R\u03c6 in Eq. (4), and obtain the augmented M-step: By noticing that the new \u03b8\u2032 depends on \u03c6, we can write \u03b8\u2032 as a function of \u03c6, namely, \u03b8\u2032 = \u03b8\u2032(\u03c6). The practical implementation of the above update depends on the actual parameterization of manipulation R\u03c6, which we discuss in more details in the next section. The next step is to optimize \u03c6 in terms of the model validation performance, in analogue to Eq.(6)", "e1de5628-6838-4d90-b918-6fefc33f5fae": "For a particular starting pair, s, a, let b be the branching factor (i.e., the number of possible next states, s0, for which \u02c6p(s0|s, a) > 0). Then an expected update of this pair requires roughly b times as much computation as a sample update. If there is enough time to complete an expected update, then the resulting estimate is generally better than that of b sample updates because of the absence of sampling error. But if there is insu\ufb03cient time to complete an expected update, then sample updates are always preferable because they at least make some improvement in the value estimate with fewer than b updates. In a large problem with many state\u2013action pairs, we are often in the latter situation. With so many state\u2013action pairs, expected updates of all of them would take a very long time. Before that we may be much better o\u21b5 with a few sample updates at many state\u2013action pairs than with expected updates at a few pairs", "8e614565-757f-4b9d-8774-89d3fa8aaac9": "The RNN, when used as a Turing machine, takes a binary sequence as input, and its outputs must be discretized to provide a binary output. It is possible to compute all functions in this setting using a single specific RNN of finite size (Siegelmann and Sontag|1995] use 886 units). The \u201cinput\u201d of the Turing machine is  372  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  \u00a9)  2 994 \u00a9) w) &) &) C) oe) &) &)  \u2014_>> V Unfold Vv Vv Vv Ww -- -- \u00a2 N w w, N fo G)k () (+1) } Bet 6) 1 Ny 7] NN 4  https://www.deeplearningbook.org/contents/rnn.html    Figure 10.3: The computational graph to compute the training loss of a recurrent network that maps an input sequence of a values to a corresponding sequence of output o values. A loss [ measures how far each o is from the corresponding training target y. When using softmax outputs, we assume o is the unnormalized log probabilities", "3d5f6b26-3039-449d-bad8-5d5e916da4f0": "618  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  NCE works by reducing the unsupervised learning problem of estimating p(x) to that of learning a probabilistic binary classifier in which one of the categories corresponds to the data generated by the model. This supervised learning problem is constructed in such a way that maximum likelihood estimation defines an asymptotically consistent estimator of the original problem. Specifically, we introduce a second distribution, the noise distribution pyoise(X). The noise distribution should be tractable to evaluate and to sample from. We can now construct a model over both x and a new, binary class variable y. In the new joint model, we specify that  Pjoint(Y = 1) = 9?\n\n(18.29) Pjoint(X | y = 1) = Pmodel(X); (18.30)  and Pioint(X | y = 0) = Pnoise (X).- (18.31)  In other words, y is a switch variable that determines whether we will generate x from the model or from the noise distribution. We can construct a similar joint model of training data", "6da49a4b-afeb-4bd5-bad3-3f1c5354152d": "In the example of the world\u2019s surface as a manifold, one can walk north, south, east, or west.\n\nAlthough there is a formal mathematical meaning to the term \u201cmanifold,\u201d in machine learning it tends to be used more loosely to designate a connected set of points that can be approximated well by considering only a small number of  157  FARR OA FA DATA DOL  https://www.deeplearningbook.org/contents/ml.html    UAL LEU J. IVA LH AULT DALY  \u201c0.5 1.0 15 2.0 2.5 3.0 3.5 4.0  Figure 5.11: Data sampled from a distribution in a two-dimensional space that is actually concentrated near a one-dimensional manifold, like a twisted string. The solid line indicates the underlying manifold that the learner should infer. degrees of freedom, or dimensions, embedded in a higher-dimensional space. Each dimension corresponds to a local direction of variation. See figure 5.11 for an example of training data lying near a one-dimensional manifold embedded in two- dimensional space. In the context of machine learning, we allow the dimensionality of the manifold to vary from one point to another", "1b19cf6f-eabf-4359-8d62-31597d361b5f": "In a few minutes, the ball was caroming o\u21b5 the walls of the box as if the pigeon had been a champion squash player. (Skinner, 1958, p. 94) Not only did the pigeon learn a behavior that is unusual for pigeons, it learned quickly through an interactive process in which its behavior and the reinforcement contingencies changed in response to each other. Skinner compared the process of altering reinforcement contingencies to the work of a sculptor shaping clay into a desired form. Shaping is a powerful technique for computational reinforcement learning systems as well. When it is di\ufb03cult for an agent to receive any non-zero reward signal at all, either due to sparseness of rewarding situations or their inaccessibility given initial behavior, starting with an easier problem and incrementally increasing its di\ufb03culty as the agent learns can be an e\u21b5ective, and sometimes indispensable, strategy. A concept from psychology that is especially relevant in the context of instrumental conditioning is motivation, which refers to processes that in\ufb02uence the direction and strength, or vigor, of behavior.\n\nThorndike\u2019s cats, for example, were motivated to escape from puzzle boxes because they wanted the food that was sitting just outside", "04c0847e-8fcc-41ad-a180-8934d6987132": "Supervised learning provides a very strong clue: a label y, presented with each a, that usually specifies the value of at least one of the factors of variation directly. More generally, to make use of abundant unlabeled data, representation learning makes use of other, less direct hints about the underlying factors. These hints take the form of implicit prior beliefs that we, the designers of the learning algorithm, impose in order to guide the learner. Results such as the no free lunch theorem show that regularization strategies are necessary to obtain good generalization. While it is impossible to find a universally superior regularization strategy, one goal of deep learning is to find a set of fairly generic regularization strategies that are applicable  https://www.deeplearningbook.org/contents/representation.html    to a wide variety of AI tasks, similar to the tasks that people and animals are able  and has been partially expanded here. e Smoothness: This is the assumption that f(a + ed) \u00a9 f(a) for unit d and small \u00ab. This assumption allows the learner to generalize from training  552  CHAPTER 15", "a0938144-e325-4271-8988-695fd213b1b7": "The reduced CIFAR-10 results demonstrate the usefulness of the SamplePairing technique in limited data applications (Fig. 8). Another detail found in the study is that better results were obtained when mixing images from the entire training set rather than from instances exclusively belonging to the same class. Starting from a training set of size N, SamplePairing produces a dataset of size N\u2019-+N. In addition, Sample Pairing can be stacked on top of other  augmentation techniques", "8d481e2a-736d-455b-b1a1-b42e29f094cd": "A context vectorc is formed by taking a weighted average of feature vectors h) with weights a\u00ae .\n\nIn some applications, the feature vectorsh are hidden units of a neural network, but they may also be raw input to the model. The weights a are produced by the model itself. They are usually values in the interval  and are intended to concentrate around just one h\u00ae so that the weighted average approximates reading that one specific time step precisely. The weights a) are usually produced by applying a softmax function to relevance scores emitted by another portion of the model. The attention mechanism is more expensive computationally than directly indexing the desired h), but direct indexing cannot be trained with gradient descent. The attention mechanism based on weighted averages is a smooth, differentiable approximation that can be trained with existing optimization algorithms. 471  CHAPTER 12. APPLICATIONS  rates than traditional approaches based on the frequency counts in the phrase table. There is even earlier work on learning cross-lingual word vectors . Many extensions to this approach are possible. For example, more efficient cross-lingual alignment  allows training on larger datasets", "f503eaad-f37b-43ee-80ee-6bee2a8af2db": "Furthermore, the terms involving \u00b5 and \u039b themselves comprise a sum over k of terms involving \u00b5k and \u039bk leading to the further factorization Identifying the terms on the right-hand side of (10.54) that depend on \u03c0, we have where we have used (10.50). Taking the exponential of both sides, we recognize q\u22c6(\u03c0) as a Dirichlet distribution Finally, the variational posterior distribution q\u22c6(\u00b5k, \u039bk) does not factorize into the product of the marginals, but we can always use the product rule to write it in the form q\u22c6(\u00b5k, \u039bk) = q\u22c6(\u00b5k|\u039bk)q\u22c6(\u039bk). The two factors can be found by inspecting (10.54) and reading off those terms that involve \u00b5k and \u039bk.\n\nThe result, as expected, is a Gaussian-Wishart distribution and is given by Exercise 10.13 These update equations are analogous to the M-step equations of the EM algorithm for the maximum likelihood solution of the mixture of Gaussians", "1f212391-5d84-487b-8d06-07267c6af3c3": "After playing about 300,000 games against itself, TD-Gammon 0.0 as described above learned to play approximately as well as the best previous backgammon computer programs.\n\nThis was a striking result because all the previous high-performance computer programs had used extensive backgammon knowledge. For example, the reigning champion program at the time was, arguably, Neurogammon, another program written by Tesauro that used an ANN but not TD learning. Neurogammon\u2019s network was trained on a large training corpus of exemplary moves provided by backgammon experts, and, in addition, started with a set of features specially crafted for backgammon. Neurogammon was a highly tuned, highly e\u21b5ective backgammon program that decisively won the World Backgammon Olympiad in 1989. TD-Gammon 0.0, on the other hand, was constructed with essentially zero backgammon knowledge. That it was able to do as well as Neurogammon and all other approaches is striking testimony to the potential of self-play learning methods. The tournament success of TD-Gammon 0.0 with zero expert backgammon knowledge suggested an obvious modi\ufb01cation: add the specialized backgammon features but keep the self-play TD learning method", "75bd1499-3845-481b-a014-581a4c6ef223": "In principle, this approach could fail due to optimization difficulties, but for many  425  CHAPTER 11.\n\nPRACTICAL METHODOLOGY  Hyperparameter | Increases | Reason Caveats  capacity  when...  increased | Increasing the number of | Increasing the number  Number of hid-  https://www.deeplearningbook.org/contents/guidelines.html  den units  hidden units increases the representational capacity of the model. ot hidden, units increases both the time and memory cost of essentially every op- eration on the model. Learning rate  tuned op- timally  An improper learning rate, whether too high or too low, results in a model with low effective capac- ity due to optimization fail- ure. Convolution ker- nel width  increased  Increasing the kernel width increases the number of pa- rameters in the model. A wider kernel results in a narrower output di- mension, reducing model capacity unless you use implicit zero padding to reduce this effect. Wider kernels require more mem- ory for parameter storage and increase runtime, but a narrower output reduces memory cost. Implicit zero padding  increased  Adding implicit zeros be- fore convolution keeps the representation size large", "e2c8959c-4195-4b77-b08c-1509daef8fe5": "Curriculum learning, a term originally coined by Bengio et al. , is an applicable concept for all Deep Learning models, not just those constrained with limited data. Plot- ting out training accuracy over time across different initial training subsets could help reveal patterns in the data that dramatically speed up training time. Data Augmentation constructs massively inflated training from combinations such as flipping, translating, and randomly erasing. It is highly likely that a subset exists in this set such that training will be faster and more accurate. Resolution impact Another interesting discussion about Data Augmentation in images is the impact of res- olution.\n\nHigher resolution images such as HD (1920 x 1080 x 3) or 4 K (3840 x 2160 x 3) require much more processing and memory to train deep CNNs. However, it seems intuitive that next-generation models would be trained on higher resolution images. Many current models downsample images from their original resolution to make the classification problem computationally more feasible. However, sometimes this down- sampling causes information loss within the image, making image recognition more dif- ficult (Table 10)", "b0be4c36-b1b9-4011-8f93-75c873b31f3b": "Scienti\ufb01c Articles (Chem) With modern online repositories of scienti\ufb01c literature, such as PubMed13 for biomedical articles, research results are more accessible than ever before. However, actually extracting \ufb01ne-grained pieces of information in a structured format and using this data to answer speci\ufb01c questions at scale remains a signi\ufb01cant open challenge for researchers.\n\nTo address this challenge in the context of drug safety research, Stanford and US Food and Drug Administration (FDA) collaborators used Snorkel to develop a system for extracting chemical reagent and reaction product relations from PubMed abstracts. The goal was to build a database of chemical reactions that researchers at the FDA can use to predict unknown drug interactions. We used the chemical reactions described in the Metacyc database  for distant supervision. Electronic Health Records (EHR) As patients\u2019 clinical records increasingly become digitized, researchers hope to inform clinical decision making by retrospectively analyzing large patient cohorts, rather than conducting expensive randomized controlled studies. However, much of the valuable information in electronic health records (EHRs)\u2014such as \ufb01ne-grained clinical details, practitioner notes, etc.\u2014is not contained in standardized medical coding systems and is thus locked away in the unstructured text notes sections", "d85b2510-ec38-4ddc-bb4e-d31d2b1b8543": "Nevertheless, there are still reasons to think that the general idea outlined in this section applies to the approximate case. The general idea is that a state that is good for some predictions is also good for others (in particular, that a Markov state, su\ufb03cient for one-step predictions, is also su\ufb03cient for all others). If we step back from that speci\ufb01c result for the Markov case, the general idea is similar to what we discussed in Section 17.1 with multi-headed learning and auxiliary tasks. We discussed how representations that were good for the auxiliary tasks were often also good for the main task.\n\nTaken together, these suggest an approach to both partial observability and representation learning in which multiple predictions are pursued and used to direct the construction of state features. The guarantee provided by the perfect-but-impractical Markov property is replaced by the heuristic that what\u2019s good for some predictions may be good for others. This approach scales well with computational resources. With a large machine one could experiment with large numbers of predictions, perhaps favoring those that are most similar to the ones of ultimate interest or that are easiest to learn reliably, or according to some other criteria. It is important here to move beyond selecting the predictions manually. The agent should do it", "6725234b-c486-49fc-8e17-a3d3dbf50f6f": "Unfortunately, in most practical settings, this gradient is unavailable, either because of its high computation and memory cost, or because of hyperparameters that have intrinsically nondifferentiable interactions with the validation set error, as in the case of discrete-valued hyperparameters. To compensate for this lack of a gradient, we can build a model of the validation set error, then propose new hyperparameter guesses by performing optimization within this model. Most model-based algorithms for hyperparameter search use a Bayesian regression model to estimate both the expected value of the validation set error for each hyperparameter and the uncertainty around this expectation. Opti- mization thus involves a trade-off between exploration (proposing hyperparameters for that there is high uncertainty, which may lead to a large improvement but may also perform poorly) and exploitation (proposing hyperparameters that the model is confident will perform as well as any hyperparameters it has seen so far\u2014usually hyperparameters that are very similar to ones it has seen before).\n\nContemporary approaches to hyperparameter optimization include Spearmint , TPE  and SMAC", "6d272bd5-c641-4064-96d1-9c76052babbc": "Whether or not this is so depends critically on how the states are represented in terms of features, which we investigate in this large section. Choosing features appropriate to the task is an important way of adding prior domain knowledge to reinforcement learning systems. Intuitively, the features should correspond to the aspects of the state space along which generalization may be appropriate. If we are valuing geometric objects, for example, we might want to have features for each possible shape, color, size, or function. If we are valuing states of a mobile robot, then we might want to have features for locations, degrees of remaining battery power, recent sonar readings, and so on.\n\nA limitation of the linear form is that it cannot take into account any interactions between features, such as the presence of feature i being good only in the absence of feature j. For example, in the pole-balancing task (Example 3.4) high angular velocity can be either good or bad depending on the angle. If the angle is high, then high angular velocity means an imminent danger of falling\u2014a bad state\u2014whereas if the angle is low, then high angular velocity means the pole is righting itself\u2014a good state", "49e470fb-c9c4-488c-b14f-d6b73fe99393": "Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR) Workshop on Generative-Model Based Vision, 2004. Gidaris, S., Singh, P., and Komodakis, N. Unsupervised representation learning by predicting image rotations. arXiv preprint arXiv:1803.07728, 2018. Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., WardeFarley, D., Ozair, S., Courville, A., and Bengio, Y. Generative adversarial nets. In Advances in neural information processing systems, pp. 2672\u20132680, 2014. A Simple Framework for Contrastive Learning of Visual Representations Goyal, P., Doll\u00e1r, P., Girshick, R., Noordhuis, P., Wesolowski, L., Kyrola, A., Tulloch, A., Jia, Y., and He, K", "88bdab00-ef4c-4db1-890a-9ba58b1e1651": "The PFD approach  shows that minimizing J(p) w.r.t p can equivalently be done by solving the following saddle-point problem: where \u03d5 : T \u2192 R is a continuous function, and J\u2217(\u03d5) = suph Eh \u2212J(h) is the convex conjugate of J. In the case of J(p) being the JS divergence with pd, if we approximate the above optimization by parameterizing \u03d5(t) as \u03d5\u03c6 = 1 2 log 2 where C\u03c6 : T \u2192  is a binary classi\ufb01er (a.k.a., discriminator) and p as p\u03b8 (i.e., the target model), Equation 5.5 recovers the original GAN algorithm : 5.3. Wasserstein Distance. Another distance measure that is receiving increasingly interest is the Wasserstein distance, a member of the optimal transport distance family", "6fdbca83-7683-4bb0-8abe-4e6af041acaf": "MACHINE LEARNING BASICS  bution with mean @:  P(x: 6) = 9? (1 \u2014 ot), (5.21)  A common estimator for the @ parameter of this distribution is the mean of the  - 1a, m= \u2014 Sov, (5.22) m i=l  To determine whether this estimator is biased, we can substitute equation 5.22 into equation 5.20:  training samples:  bias(@m) = E \u2014 9 (5.23 _ |= se) _9 (5.24 i=l -1y  -0 (5.25 , , i=1 \u00a2=0  ll S|r Ms => S Ye | S ~ or i) a  Since bias(8) = 0, we say that our estimator is unbiased", "3909a7a2-1e6a-496d-b05c-22ea76f6b5b0": "Model averaging is an extremely powerful and reliable method for reducing generalization error. Its use is usually discouraged when benchmarking algorithms for scientific papers, because any machine learning algorithm can benefit substan- tially from model averaging at the price of increased computation and memory. 4 When both the original and the resampled dataset containm examples, the exact proportion of examples missing from the new dataset is (1 \u2014 3)\".\n\nThis is the chance that a particular example is not chosen among the m possible source examples for allm draws used to create the  new dataset. As m approaches infinity this quantity converges to Z, which is slightly larger than 1  3\u00b0  254  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  For this reason, benchmark comparisons are usually made using a single model. Machine learning contests are usually won by methods using model averag-  ing over dozens of models. A recent prominent example is the Netflix Grand Prize . Not all techniques for constructing ensembles are designed to make the ensemble more regularized than the individual models. For example, a technique called boosting (Freund and Schapire, 1996b,a) constructs an ensemble with higher capacity than the individual models", "7d5207e9-6dbf-4d86-b1aa-e0f92d00d591": "In the special unconstrained form, the interplay between the exogenous experience, divergence, and the endogenous uncertainty become more explicit. Optimization: Teacher-student mechanism.\n\nThe introduction of the auxiliary distribution q relaxes the learning problem of p\u03b8, originally only over \u03b8, to be now alternating between q and \u03b8. Here q acts as a conduit between the exogenous experience and the target model: it on the one hand subsumes the experience (by maximizing the expected f value), and on the other hand passes it incrementally to the target model (by minimizing the divergence D). The following \ufb01xed point iteration between q and \u03b8 illustrates this optimization strategy under the SE. Let us plug into Equation 3.2 the popular cross entropy (CE) as the divergence function, that is, D(q, p\u03b8) = \u2212Eq, and Shannon entropy as the uncertainty measure, that is, H(q) = \u2212Eq. We further assume the experience f is independent of the model parameters \u03b8 (the assumption is indeed not necessary for the teacher step). We have, at iteration n: where Z is the normalization factor", "420398dd-6b31-488d-8394-50f31e465a0f": "Otherwise, no estimator can recover Pdata-  e The true distribution p gata must correspond to exactly one value of 8. Oth- erwise, maximum likelihood can recover the correct pgata but will not be able to determine which value of 8 was used by the data-generating process.\n\nThere are other inductive principles besides the maximum likelihood estimator, many of which share the property of being consistent estimators. Consistent estimators can differ, however, in their statistical efficiency, meaning that one consistent estimator may obtain lower generalization error for a fixed number of samples m, or equivalently, may require fewer examples to obtain a fixed level of generalization error. Statistical efficiency is typically studied in the parametric case (as in linear regression), where our goal is to estimate the value of a parameter (assuming it is possible to identify the true parameter), not the value of a function. A way to measure how close we are to the true parameter is by the expected mean squared error, computing the squared difference between the estimated and true parameter  132  https://www.deeplearningbook.org/contents/ml.html    CHAPFER._ MACHINE EARNING BASIES:  values, where the expectation is over m training samples from the data-generating distribution", "76a34f41-d523-4367-8cd6-f4207d6435c5": "The TD error produced by the critic acts as a conditioned reinforcement signal for the actor, providing an immediate evaluation of performance even when the primary reward signal itself is considerably delayed. Algorithms that estimate action-value functions, such as Q-learning and Sarsa, similarly use TD learning principles to enable learning with delayed reinforcement by means of conditioned reinforcement. The close parallel between TD learning and the activity of dopamine producing neurons that we discuss in Chapter 15 lends additional support to links between reinforcement learning algorithms and this aspect of Hull\u2019s learning theory. Model-based reinforcement learning algorithms use environment models that have elements in common with what psychologists call cognitive maps.\n\nRecall from our discussion of planning and learning in Chapter 8 that by an environment model we mean anything an agent can use to predict how its environment will respond to its actions in terms of state transitions and rewards, and by planning we mean any process that computes a policy from such a model. Environment models consist of two parts: the state-transition part encodes knowledge about the e\u21b5ect of actions on state changes, and the rewardmodel part encodes knowledge about the reward signals expected for each state or each state\u2013action pair", "64fb71c2-18ec-4617-bdf5-467bd7f23180": "For the control problem (\ufb01nding an optimal policy), DP, TD, and Monte Carlo methods all use some variation of generalized policy iteration (GPI). The di\u21b5erences in the methods are primarily di\u21b5erences in their approaches to the prediction problem. Both TD and Monte Carlo methods use experience to solve the prediction problem. Given some experience following a policy \u21e1, both methods update their estimate V of v\u21e1 for the nonterminal states St occurring in that experience. Roughly speaking, Monte Carlo methods wait until the return following the visit is known, then use that return as a target for V (St). A simple every-visit Monte Carlo method suitable for nonstationary environments is where Gt is the actual return following time t, and \u21b5 is a constant step-size parameter (c.f., Equation 2.4). Let us call this method constant-\u21b5 MC. Whereas Monte Carlo methods must wait until the end of the episode to determine the increment to V (St) (only then is Gt known), TD methods need to wait only until the next time step", "6fb42a4a-6a91-4c84-845a-56ddae3f79c2": "The American Economic Review, 81(2):353\u2013359.\n\nAsadi, K., Allen, C., Roderick, M., Mohamed, A. R., Konidaris, G., Littman, M. Mean Atkeson, C. G. Memory-based approaches to approximating continuous functions. In Sante Fe Institute Studies in the Sciences of Complexity, Proceedings Vol. 12, pp. 521\u2013521. Addison-Wesley. Atkeson, C. G., Moore, A. W., Schaal, S. Locally weighted learning. Arti\ufb01cial Intelligence Auer, P., Cesa-Bianchi, N., Fischer, P. Finite-time analysis of the multiarmed bandit Bacon, P. L., Harb, J., Precup, D. The Option-Critic Architecture. In Proceedings of the Association for the Advancement of Arti\ufb01cial Intelligence, pp. 1726\u20131734. Baird, L. C", "c3202b2e-7e2a-4bd1-aff0-c672db09015a": "Next we introduce a distribution q(Z) de\ufb01ned over the latent variables, and we observe that, for any choice of q(Z), the following decomposition holds Note that L(q, \u03b8) is a functional (see Appendix D for a discussion of functionals) of the distribution q(Z), and a function of the parameters \u03b8. It is worth studying carefully the forms of the expressions (9.71) and (9.72), and in particular noting that they differ in sign and also that L(q, \u03b8) contains the joint distribution of X and Z while KL(q\u2225p) contains the conditional distribution of Z given X. To verify the decomposition (9.70), we \ufb01rst make use of the product rule of probability to give Exercise 9.24 which we then substitute into the expression for L(q, \u03b8)", "674188ca-2f4b-4395-87a0-de8ff8b8ede0": "From state A, all four actions yield a reward of +10 and take the agent to A0. From state B, all actions yield a reward of +5 and take the agent to B0. o\ufb00 the grid leave its location unchanged, but also result in a reward of \u22121. Other actions result in a reward of 0, except those that move the agent out of the special states A and B. From state A, all four actions yield a reward of +10 and take the agent to A\u2032. From state B, all actions yield a reward of +5 and take the agent to B\u2032. Suppose the agent selects all four actions with equal probability in all states. Figure 3.5b shows the value function, v\u21e1, for this policy, for the discounted reward case with \u03b3 = 0.9. This value function was computed by solving the system of equations (3.10). Notice the negative values near the lower edge; these are the result of the high probability of hitting the edge of the grid there under the random policy.\n\nState A is the best state to be in under this policy, but its expected return is less than 10, its immediate reward, because from A the agent is taken to A\u2032, from which it is likely to run into the edge of the grid", "129f1abf-b0a6-4263-ad82-9ce2868ea2ac": "In our linear example, the lower layers no longer have any harmful effect, but they also no longer have any beneficial effect. This is because we have normalized out the first- and second-order statistics, which is all that a linear network can influence. In a deep neural network with nonlinear activation functions, the lower layers can perform nonlinear transformations of the data, so they remain useful.\n\nBatch normalization acts to standardize only the mean and variance of each unit in order to stabilize learning, but it allows the  https://www.deeplearningbook.org/contents/optimization.html    relationships between units and the nonlinear statistics of a single unit to change. Because the final layer of the network is able to learn a linear transformation, we may actually wish to remove all linear relationships between units within a  ayer. Indeed, this is the approach taken by Desjardins et al. , who provided he inspiration for batch normalization. Unfortunately, eliminating all linear interactions is much more expensive than standardizing the mean and standard deviation of each individual unit, and so far batch normalization remains the most practical approach. Normalizing the mean and standard deviation of a unit can reduce the expressive power of the neural network containing that unit", "c587200b-00ee-4d01-8558-72adde83fb7d": "(Vo,_,9x) sae (Vo,91) . (Vo) ; following the chain rule  = VoL (64) . Il Vo,.6%) of i=l  k = VoL Ox) \u00ab  Vo. Gi-1 \u2014 eV o\u00a3 (6;-1))  i=1 k = VoL (Ox) - T]( \u2014 aVo,..(Vol (6;-1))) i=1 The MAML gradient is: k gmami = Vo,\u00a3 (6x) - )- [Te \u2014aVo,,(Vel (8,1)  i=1  The First-Order MAML ignores the second derivative part in red. It is simplified as follows, equivalent to the derivative of the last inner gradient update result. gromami = Vo,\u00a3\u2122 (6x)  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log   Reptile  Reptile  is a remarkably simple meta-learning optimization algorithm", "dc3fa35c-8ca2-4bed-8764-71763d463711": "By repeated application of the product rule of probability, this joint distribution can be written as a product of conditional distributions, one for each of the variables For a given choice of K, we can again represent this as a directed graph having K nodes, one for each conditional distribution on the right-hand side of (8.3), with each node having incoming links from all lower numbered nodes. We say that this graph is fully connected because there is a link between every pair of nodes. So far, we have worked with completely general joint distributions, so that the decompositions, and their representations as fully connected graphs, will be applicable to any choice of distribution. As we shall see shortly, it is the absence of links in the graph that conveys interesting information about the properties of the class of distributions that the graph represents. Consider the graph shown in Figure 8.2. This is not a fully connected graph because, for instance, there is no link from x1 to x2 or from x3 to x7. We shall now go from this graph to the corresponding representation of the joint probability distribution written in terms of the product of a set of conditional distributions, one for each node in the graph", "142a0d60-7eed-4fc8-8f73-f3de40e4264d": "In our example, the mini batches (0) and (1) are interchangeable since both are drawn at random. The expectation E,o1 is averaged over two data batches, ids (0) and (1), for task T.  Let  1  A=E,o1 (9) =E,o1 (9); it is the average gradient of task loss.\n\nWe expect to improve the  model parameter to achieve better task performance by following this direction pointed by A. ry 1) (0 1) (0 0) (4 0 ae  B= E, 91H gO] = SE ; itis the  direction (gradient) that increases the inner product of gradients of two different mini batches  for the same task. We expect to improve the model parameter to achieve better generalization over different data by following this direction pointed by B. To conclude, both MAML and Reptile aim to optimize for the same goal, better task performance (guided by A) and better generalization (guided by B), when the gradient update is approximated by first three leading terms", "116e15b9-a5d8-4b83-bcd2-8c9aaf16aa01": "Furthermore, the number of independent parameters to be learned from the data is much smaller still, due to the substantial numbers of constraints on the weights. One way to reduce the effective complexity of a network with a large number of weights is to constrain weights within certain groups to be equal. This is the technique of weight sharing that was discussed in Section 5.5.6 as a way of building translation invariance into networks used for image interpretation. It is only applicable, however, to particular problems in which the form of the constraints can be speci\ufb01ed in advance. Here we consider a form of soft weight sharing  in which the hard constraint of equal weights is replaced by a form of regularization in which groups of weights are encouraged to have similar values. Furthermore, the division of weights into groups, the mean weight value for each group, and the spread of values within the groups are all determined as part of the learning process. Recall that the simple weight decay regularizer, given in (5.112), can be viewed as the negative log of a Gaussian prior distribution over the weights.\n\nWe can encourage the weight values to form several groups, rather than just one group, by considering instead a probability distribution that is a mixture of Gaussians", "0c0a9d63-a1e0-49cf-8e99-d6355d498c1b": "Trace out the type prede\ufb01ned ORDER parameters, and write to /dev/tty with them.\\n\\n\\n\\n\\n\\n\\n\\n\\n Roundset sizes with mm(831x810 x870 x81f); space: In summary Space Station - Farm Station (1985 by Mike Lazarra) Here is an article developed by Maregnus Spirit Experimentator on WinViotrv - An exploration bene\ufb01t for compute-enriched array data densities (UPERS).This thesis home religion: In summary nice things about Android 6.1 Jelly Bean!\\n Searching for OP lag \ufb01xes one of my cllcs or some other improvements that\u2019s \ufb01xing a bug due to this nerf! (model causing Huge Frame Decay!) It also \ufb01xed an upper turret hook science: In summary Computer Age Experience Overview\\n\\n\\n\\n Networking skills are the most developed skill set for Internetthumb members at universities at this time. In computer science, we are introducing various gatekeepers to intellectual property ownership and cyberware acquisitions, entry program makers post a military: In summary Army Sgt.\n\nHarold Tolbard  Lt. Gen", "f1bae05b-863b-4a79-a9cd-31e51f027a1d": "If we use the random binarization, we might binarize the whole dataset once, or we might draw a different random example for each step of training and then draw multiple samples for evaluation. Each of these hree schemes yields wildly different likelihood numbers, and when comparing different models it is important that both models use the same binarization scheme for training and for evaluation. In fact, researchers who apply a single random binarization step share a file containing the results of the random binarization, so hat there is no difference in results based on different outcomes of the binarization  step.\n\nBecause being able to generate realistic samples from the data distribution is one of the goals of a generative model, practitioners often evaluate generative models by visually inspecting the samples. In the best case, this is done not by the researchers themselves, but by experimental subjects who do not know the source of the samples . Unfortunately, it is possible for a very poor probabilistic model to produce very good samples. A common practice to verify if the model only copies some of the training examples is illustrated in figure 16.1. The idea is to show for some of the generated samples their nearest neighbor in the training set, according to Euclidean distance in the space of x", "29a3b3bd-bf24-477e-96b9-7d7d12fb350c": "Another advantage of RTDP is that as the value function approaches the optimal value function v\u21e4, the policy used by the agent to generate trajectories approaches an optimal policy because it is always greedy with respect to the current value function. This is in contrast to the situation in conventional value iteration. In practice, value iteration terminates when the value function changes by only a small amount in a sweep, which is how we terminated it to obtain the results in the table above. At this point, the value function closely approximates v\u21e4, and a greedy policy is close to an optimal policy. However, it is possible that policies that are greedy with respect to the latest value function were optimal, or nearly so, long before value iteration terminates", "6c86edd5-8223-4c25-b7cc-d28d939c47bf": "This is a critical observation, as it is possible for an error perfectly satisfactory for use in learning settings because th from data. For example, this is what happens with the VE mple, POMDP-like examples, in which the observable s is identical in every respect, yet the BE is di\u21b5erent. data and thus cannot be learned from it. The other bootstrapping objectives that we have considered, the PBE and TDE, can be determined from data (are learnable) and determine optimal solutions that are in general di\u21b5erent from each other and the BE minimums. The general case is summarized in the right side of Figure 11.4. Thus, the BE is not learnable; it cannot be estimated from feature vectors and other observable data. This limits the BE to model-based settings. There can be no algorithm that minimizes the BE without access to the underlying MDP states beyond the feature vectors. The residual-gradient algorithm is only able to minimize BE because it is allowed to double sample from the same state\u2014not a state that has the same feature vector, but one that is guaranteed to be the same underlying state", "54952d96-6d3e-49d8-93fa-a96f32bb9c34": "To describe the TD model we begin with the formulation of the Rescorla\u2013Wagner model above, but t now labels time steps within or between trials instead of complete trials.\n\nThink of the time between t and t + 1 as a small time interval, say .01 second, and think of a trial as a sequences of states, one associated with each time step, where the state at step t now represents details of how stimuli are represented at t instead of just a label for the CS components present on a trial. In fact, we can completely abandon the idea of trials. From the point of view of the animal, a trial is just a fragment of its continuing experience interacting with its world. Following our usual view of an agent interacting with its environment, imagine that the animal is experiencing an endless sequence of states s, each represented by a feature vector x(s). That said, it is still often convenient to refer to trials as fragments of time during which patterns of stimuli repeat in an experiment", "4357a089-8714-4c17-b0dc-7af498a9e469": "The backup diagram for Sarsa is as shown to the right.\n\nIt is straightforward to design an on-policy control algorithm based on the Sarsa prediction method. As in all on-policy methods, we continually estimate q\u21e1 for the behavior policy \u21e1, and at the same time change \u21e1 toward greediness with respect to q\u21e1. The general form of the Sarsa control algorithm is given in the box on the next page. The convergence properties of the Sarsa algorithm depend on the nature of the policy\u2019s dependence on Q. For example, one could use \"-greedy or \"-soft policies. Sarsa converges with probability 1 to an optimal policy and action-value function as long as all state\u2013action pairs are visited an in\ufb01nite number of times and the policy converges in the limit to the greedy policy (which can be arranged, for example, with \"-greedy policies by setting \" = 1/t)", "6db6b1d3-944b-4584-882d-937363aacbc1": "In Proceedings of the 17th International Conference on Machine Learning , pp. 663\u2013670. tonic dopamine. In Advances in Neural Information Processing Systems 18 , pp. 1019\u20131026. MIT Press, Cambridge, MA. Niv, Y., Daw, N. D., Joel, D., Dayan, P. Tonic dopamine: opportunity costs and the control of response vigor. Psychopharmacology, 191(3):507\u2013520. Niv, Y., Joel, D., Dayan, P. A normative perspective on motivation. Trends in Cognitive Nouri, A., Littman, M. L. Multi-resolution exploration in continuous spaces. In Advances Now\u00b4e, A., Vrancx, P., Hauwere, Y.-M. D. Game theory and multi-agent reinforcement learning. In M. Wiering and M. van Otterlo (Eds", "e7b02dc5-cef1-4f4b-9f7a-8aec5604ab41": "This is a common dif\ufb01culty encountered when designing labeling functions, as writing heuristics for negative examples is sometimes counter-intuitive. Users with the highest overall F1 scores wrote 1-2 high-coverage negative labeling functions and several medium-to-high-accuracy positive labeling functions. We note that the best single participant\u2019s pipeline achieved an F1 score of 48.7, compared to the authors\u2019 score of 54.2. User study participants favored pattern-based labeling functions; the most common design was creating small positive and negative term sets. Author labeling functions were similar, but were more accurate overall p (e.g., better pattern matching). In this section, we brie\ufb02y discuss extensions and use cases of Snorkel that have been developed since its initial release, as well as next steps and future directions more broadly. Since its release, Snorkel has been used at organizations such as the Stanford Hospital, Google, Intel, Microsoft, Facebook, Alibaba, NEC, BASF, Toshiba, and Accenture; in the \ufb01ght against human traf\ufb01cking as part of DARPA\u2019s MEMEX program; and in production at several large technology companies.\n\nDeploying Snorkel in these real-world settings has often involved productionizing around various key aspects", "ff4f909b-d4fa-412b-bc1a-abd40fef5e85": "Bengio et al. observed that an approach called curriculum learning, or shaping, can be interpreted as a continuation method. Curriculum learning is based on the idea of planning a learning process to begin by learning simple concepts and progress to learning more complex concepts that depend on these simpler concepts. This basic strategy was previously known to accelerate progress in animal training  and in machine learning . Bengio et al. justified this strategy as a continuation method, where earlier J\u2018 are made easier by  https://www.deeplearningbook.org/contents/optimization.html    increasing the influence of simpler examples (either, by assigning their contributions to the cost function larger coefficients, or by samp ling them more frequently), and experimentally demonstrated that better results could be obtained by following a  curriculum on a large-scale neural language modeling task. Curriculum learning has been successful on a wide range of natural language  and computer vision  tasks.\n\nCurriculum learning was also verified as being consistent with the way in which humans teach : teachers start by showing easier and more prototypical examples and then help the learner refine the decision surface  324  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  with the less obvious cases", "1b0ac28e-b5f0-48a6-8336-b6cc9485838a": "The parameters with the largest partial derivative of the loss have a correspondingly rapid decrease in their learning rate, while parameters with small partial derivatives have a relatively small decrease in their learning rate. The net effect is greater progress in the more gently sloped directions of parameter space. In the context of convex optimization, the AdaGrad algorithm enjoys some desirable theoretical properties. Empirically, however, for training deep neural network models, the accumulation of squared gradients from the beginning of training can result in a premature and excessive decrease in the effective learning rate. AdaGrad performs well for some but not all deep learning models. 8.5.2 RMSProp  The RMSProp algorithm  modifies AdaGrad to perform better in the nonconvex setting by changing the gradient accumulation into an exponentially weighted moving average. AdaGrad is designed to converge rapidly when applied to a convex function.\n\nWhen applied to a nonconvex function to train a neural network,  303  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  the learning trajectory may pass through many different structures and eventually arrive at a region that is a locally convex bowl", "8f98649a-590d-4b94-a002-49187450e8a4": "signal that learns a spatial delayed response task. Neuroscience, 91(3):871\u2013890. Sutton, R. S. Single channel theory: A neuronal theory of learning. Brain Theory Sutton, R. S. A uni\ufb01ed theory of expectation in classical and instrumental conditioning. Sutton, R. S. Temporal Credit Assignment in Reinforcement Learning. Ph.D. thesis, Sutton, R. S. Integrated architectures for learning, planning, and reacting based on approximating dynamic programming. In Proceedings of the 7th International Workshop on Machine Learning, pp. 216\u2013224. Morgan Kaufmann. Sutton, R. S. Dyna, an integrated architecture for learning, planning, and reacting. Sutton, R. S. Planning by incremental dynamic programming. In Proceedings of the 8th International Workshop on Machine Learning, pp. 353\u2013357. Morgan Kaufmann. Sutton, R. S. (Ed.)", "02ac40db-40fc-4d87-b0e3-ecf78ffe340d": "Referring back to Figure 15.1, these axons make synaptic contact with the spines on the dendrites of medium spiny neurons, the main input/output neurons of both the dorsal and ventral divisions of the striatum. Axons of the cortical neurons that send input to the striatum make synaptic contact on the tips of these spines. According to the hypothesis, it is at these spines where changes in the e\ufb03cacies of the synapses from cortical regions to the striatum are governed by learning rules that critically depend on a reinforcement signal supplied by dopamine. An important implication of the hypothesis illustrated in Figure 15.5b is that the dopamine signal is not the \u2018master\u2019 reward signal like the scalar Rt of reinforcement learning. In fact, the hypothesis implies that one should not necessarily be able to probe the brain and record any signal like Rt in the activity of any single neuron.\n\nMany interconnected neural systems generate reward-related information, with di\u21b5erent structures being recruited depending on di\u21b5erent types of rewards", "10f163fe-77ae-481e-842a-1d27dcd4764b": "In this section, we present BERT \ufb01ne-tuning results on 11 NLP tasks.\n\nThe General Language Understanding Evaluation (GLUE) benchmark  is a collection of diverse natural language understanding tasks. Detailed descriptions of GLUE datasets are included in Appendix B.1. To \ufb01ne-tune on GLUE, we represent the input sequence (for single sentence or sentence pairs) as described in Section 3, and use the \ufb01nal hidden vector C \u2208 RH corresponding to the \ufb01rst input token () as the aggregate representation. The only new parameters introduced during \ufb01ne-tuning are classi\ufb01cation layer weights W \u2208 RK\u00d7H, where K is the number of labels. We compute a standard classi\ufb01cation loss with C and W, i.e., log(softmax(CW T )). 7For example, the BERT SQuAD model can be trained in around 30 minutes on a single Cloud TPU to achieve a Dev F1 score of 91.0%. 8See (10) in https://gluebenchmark.com/faq. We use a batch size of 32 and \ufb01ne-tune for 3 epochs over the data for all GLUE tasks", "2578438e-682b-45fe-8e82-8efcd873037c": "Two basic approaches are considered in this book. The first one is to derive T from a given learned pmode, described below with the case of  sampling from EBMs. The second one is to directly parametrize T and learn it, so that its stationary distribution implicitly defines the pmodei of interest. Examples of this second approach are discussed in sections 20.12 and 20.13. In the context of deep learning, we commonly use Markov chains to draw samples from an energy-based model defining a distribution Pmodgei(a). In this case, we want the g(a) for the Markov chain to be puogel(a). To obtain the desired q(x), we must choose an appropriate T(a\u2019 | x).\n\nA conceptually simple and effective approach to building a Markov chain that samples from pmodel(a) is to use Gibbs sampling, in which sampling from T(x\u2019 | x) is accomplished by selecting one variable x; and sampling it from pmodel conditioned on its neighbors in the undirected graph G defining the structure of the energy-based model. We can also sample several variables at the same time as long as they are conditionally independent given all their neighbors", "94964b5f-e5d6-4ed1-86f9-7f7e4635f2c2": "This article presents a standardized ML formalism, in particular a \u2018standard equation\u2019 of the learning objective, that o\ufb00ers a unifying understanding of many important ML algorithms in the supervised, unsupervised, knowledge-constrained, reinforcement, adversarial, and online learning paradigms, respectively\u2014those diverse algorithms are encompassed as special cases due to di\ufb00erent choices of modeling components.\n\nThe framework also provides guidance for mechanical design of new ML approaches and serves as a promising vehicle toward panoramic machine learning with all experience. This article is \u00a9 2023 by author(s) as listed above. The article is licensed under a Creative Commons Attribution (CC BY 4.0) International license (https://creativecommons.org/licenses/by/4.0/legalcode), except where otherwise indicated with respect to particular material included in the article. The article should be attributed to the author(s) identi\ufb01ed above. Humans learn from a range of experience, what about a computer? The past decades of AI and Machine Learning (ML) research has resulted in a multitude of paradigms and algorithms each specialized to train ML models with a certain type of information and experience in a certain type of problem", "3c6c7ccb-d338-4101-80a8-8586e4e0d935": "The semi-gradient TD(0) algorithm presented in the previous section also converges under linear function approximation, but this does not follow from general results on SGD; a separate theorem is necessary. The weight vector converged to is also not the global optimum, but rather a point near the local optimum. It is useful to consider this important case in more detail, speci\ufb01cally for the continuing case. The update at each time t is where here we have used the notational shorthand xt = x(St).\n\nOnce the system has reached steady state, for any given wt, the expected next weight vector can be written This quantity is called the TD \ufb01xed point. In fact linear semi-gradient TD(0) converges to this point. Some of the theory proving its convergence, and the existence of the inverse above, is given in the box. What properties assure convergence of the linear TD(0) algorithm (9.9)? Some insight can be gained by rewriting (9.10) as Note that the matrix A multiplies the weight vector wt and not b; only A is important to convergence. To develop intuition, consider the special case in which A is a diagonal matrix", "15f2d2b4-d7c9-434c-a2bf-30c2feb71a8f": "\u21e4Exercise 11.4 Prove (11.24).\n\nHint: Write the RE as an expectation over possible states s of the expectation of the squared error given that St = s. Then add and subtract the true value of state s from the error (before squaring), grouping the subtracted true value with the return and the added true value with the estimated value. Then, if you expand the square, the most complex term will end up being zero, leaving you with (11.24). \u21e4 Now let us return to the BE. The BE is like the VE in that it can be computed from knowledge of the MDP but is not learnable from data. But it is not like the VE in that its minimum solution is not learnable. The box on the next page presents a counterexample\u2014 two MRPs that generate the same data distribution but whose minimizing parameter vector is di\u21b5erent, proving that the optimal parameter vector is not a function of the Example 11.4: Counterexample to the learnability of the Bellman error To show the full range of possibilities we need a slightly more complex pair of Markov reward processes (MRPs) than those considered earlier", "452bd1ce-afc9-4417-9842-d0658277ffe2": "The Lagrangian functional for this optimization problem is  ep) (f pled \u20141) + ra le] \u2014 1) +22 (Ele ~ w)?] =o) + Hp (19.50)  = [Orr + A2p(x)x + Azp(x)(a \u2014 1)\u201d \u2014 p(w) log p(w) da \u2014 Ay \u2014 pA \u2014 07 ds. (19.51) 644  CHAPTER 19. APPROXIMATE INFERENCE  To minimize the Lagrangian with respect to p, we set the functional derivatives equal to 0:  6 Va,\u2014~L = ry + Apa + A3(a \u2014 p)? \u2014 1 \u2014 log p(x) = 0. (19.52) dp(x)  This condition now tells us the functional form of p(x). By algebraically rearranging the equation, we obtain  p(x) = exp(Ar + Age +.3(a \u2014 p)? 1).\n\n(19.53)  We never assumed directly that p(x) would take this functional form; we obtained the expression itself by analytically minimizing a functional", "288ba7bc-9704-4ad3-87ae-98efd3bfd06d": "Suppose that \u00ab \u20ac R\u2122, y \u20ac R\u201d, g maps from R\u2122 to R\u201d, and f maps from R\u201d to R. If y = g(a) and z= f(y), then  _ Oz Oy; = by, Da, (6.45)  =  In vector notation, this may be equivalently written as  Oy T Vez=(5 0) Vue (6.46)  where ou is the n x m Jacobian matrix of g.  From this we see that the gradient of a variable x can be obtained by multiplying a Jacobian matrix au by a gradient Vyz. The back-propagation algorithm consists of performing such a Jacobian-gradient product for each operation in the graph. Usually we apply the back-propagation algorithm to tensors of arbitrary di- mensionality, not merely to vectors. Conceptually, this is exactly the same as back-propagation with vectors", "8b860645-d930-4bb1-8eb4-4dee72891b27": "Input: two young boys in swimming trunks are in the water looking at each other . Generated: two boys are in the water . Input: a woman riding a bicycle past a car and a group of people on a sidewalk . Generated: a woman rides a bicycle .\n\nInput: a female sings and plays into a microphone and a male in green striped shorts plays a hand drum Generated: a woman is playing music . Input: a little girl wearing a cardboard diner hat is \ufb01nishing off some onion rings at a restaurant . Generated: a little girl is at a restaurant . Input: young woman celebrates getting a strike during a bowling game . Generated: a young woman is present Input: black greyhound dog racing down a track . Generated: a dog runs down a track . Input: several men on stage having a discussion . Generated: men are talking on stage . legal: legal space religion and space In summary, a good understanding of these concepts is that by giving an explicit understanding to a person, they provide an avenue to be studied and studied", "3c46217f-5e0a-44a5-8210-0ecd4f984998": "From the de\ufb01nition (8.69), we see that if a leaf node is a variable node, then the message that it sends along its one and only link is given by as illustrated in Figure 8.49(a).\n\nSimilarly, if the leaf node is a factor node, we see from (8.66) that the message sent should take the form node will have received messages from all of its neighbours, we can readily calculate the marginal distribution for every variable in the graph. The number of messages that have to be computed is given by twice the number of links in the graph and so involves only twice the computation involved in \ufb01nding a single marginal. By comparison, if we had run the sum-product algorithm separately for each node, the amount of computation would grow quadratically with the size of the graph. Note that this algorithm is in fact independent of which node was designated as the root, and indeed the notion of one node having a special status was introduced only as a convenient way to explain the message passing protocol. Next suppose we wish to \ufb01nd the marginal distributions p(xs) associated with the sets of variables belonging to each of the factors", "cb0921b5-184a-4516-a111-c52885413418": "In the extreme case of m = 1 and SC) =1,...,n, the generalized pseudolikelihood recovers the log-likelihood. In the extreme case of m= nand S\u00ae = {i}, the generalized pseudolikelihood recovers the pseudolikelihood. The generalized pseudolikelihood objective function is given by  m do log p(X g0 | xg): (18.21)  i=l The performance of pseudolikelihood-based approaches depends largely on how the model will be used. Pseudolikelihood tends to perform poorly on tasks that require a good model of the full joint p(x), such as density estimation and sampling.\n\nIt can perform better than maximum likelihood for tasks that require only the conditional distributions used during training, such as filling in small amounts of missing values. Generalized pseudolikelihood techniques are especially powerful if the data has regular structure that allows the S index sets to be designed to capture the most important correlations while leaving out groups of variables that have only negligible correlation", "3156a02b-d66a-4ec6-9a56-b6780df8d01d": "Yonatan Belinkov and Yonatan Bisk. 2017. Synthetic and natural noise both break neural machine translation.\n\nDavid Berthelot, Nicholas Carlini, Ian Goodfellow, Nicolas Papernot, Avital Oliver, and Colin A Raffel. 2019. Mixmatch: A holistic approach to semisupervised learning. In Advances in Neural Information Processing Systems, pages 5050\u20135060. Kevin Blissett and Heng Ji. 2019. Zero-shot crosslingual name retrieval for low-resource languages. In Proceedings of the 2nd Workshop on Deep Learning Approaches for Low-Resource NLP , pages 275\u2013280, Hong Kong, China. Association for Computational Linguistics. Avrim Blum and Tom Mitchell. 1998. Combining labeled and unlabeled data with co-training. In Proceedings of the eleventh annual conference on Computational learning theory, pages 92\u2013100. Samuel R. Bowman, Luke Vilnis, Oriol Vinyals, Andrew Dai, Rafal Jozefowicz, and Samy Bengio. 2016", "16717a5f-a299-422c-a5b5-2ce3ee7f9a24": "Exercises 9.1 (\u22c6) www Consider the K-means algorithm discussed in Section 9.1.\n\nShow that as a consequence of there being a \ufb01nite number of possible assignments for the set of discrete indicator variables rnk, and that for each such assignment there is a unique optimum for the {\u00b5k}, the K-means algorithm must converge after a \ufb01nite number of iterations. 9.2 (\u22c6) Apply the Robbins-Monro sequential estimation procedure described in Section 2.3.5 to the problem of \ufb01nding the roots of the regression function given by the derivatives of J in (9.1) with respect to \u00b5k. Show that this leads to a stochastic K-means algorithm in which, for each data point xn, the nearest prototype \u00b5k is updated using (9.5). 9.3 (\u22c6) www Consider a Gaussian mixture model in which the marginal distribution p(z) for the latent variable is given by (9.10), and the conditional distribution p(x|z) for the observed variable is given by (9.11). Show that the marginal distribution p(x), obtained by summing p(z)p(x|z) over all possible values of z, is a Gaussian mixture of the form (9.7)", "a3505f08-474d-4b82-ac5f-705db81e9b10": "Dong, R. Socher, L.-J. Li, K. Li, and L. FeiFei. 2009. ImageNet: A Large-Scale Hierarchical Image Database. In CVPR09. William B Dolan and Chris Brockett. 2005. Automatically constructing a corpus of sentential paraphrases. In Proceedings of the Third International Workshop on Paraphrasing . William Fedus, Ian Goodfellow, and Andrew M Dai. 2018. Maskgan: Better text generation via \ufb01lling in the . arXiv preprint arXiv:1801.07736. Dan Hendrycks and Kevin Gimpel. 2016. Bridging nonlinearities and stochastic regularizers with gaussian error linear units. CoRR, abs/1606.08415. Felix Hill, Kyunghyun Cho, and Anna Korhonen. 2016. Learning distributed representations of sentences from unlabelled data", "d5be59db-6a58-4265-822d-7346026b86e3": "The \ufb01rst simple way to use the reward signals as the experience is by de\ufb01ning the experience function as the logarithm of the expected future reward: which leads to the classical policy gradient algorithm . Policy gradient. With \u03b1 = \u03b2 = 1, we arrive at policy gradient. To see this, consider the teacherstudent optimization procedure in Equation 3.3, where the teacher-step yields the q solution: Here the \ufb01rst equation is due to the log-derivative trick g\u2207 log g = \u2207g; and the second equation is due to the policy gradient theorem , where \u00b5\u03b8(x) = \ufffd\u221e t=0 \u03b3tp(xt = x) is the unnormalized discounted state visitation measure. The \ufb01nal form is exactly the policy gradient up to a multiplication factor 1/Z.\n\nThis turns out to connect to the known RL-as-inference approach that has a long history of research . RL as inference. We set \u03b1 = \u03b2 := \u03c1 > 0. The con\ufb01guration corresponds to the approach that casts RL as a probabilistic inference problem", "cbb40bce-06ad-4e18-af5b-48156c38b58e": "We \ufb01rst initialize the variational parameters \u03beold. In the E step, we evaluate the posterior distribution over w given by (10.156), in which the mean and covariance are de\ufb01ned by (10.157) and (10.158). In the M step, we then use this variational posterior to compute a new value for \u03be given by (10.163). The E and M steps are repeated until a suitable convergence criterion is satis\ufb01ed, which in practice typically requires only a few iterations. An alternative approach to obtaining re-estimation equations for \u03be is to note that in the integral over w in the de\ufb01nition (10.159) of the lower bound L(\u03be), the integrand has a Gaussian-like form and so the integral can be evaluated analytically. Having evaluated the integral, we can then differentiate with respect to \u03ben. It turns out that this gives rise to exactly the same re-estimation equations as does the EM approach given by (10.163).\n\nExercise 10.34 As we have emphasized already, in the application of variational methods it is useful to be able to evaluate the lower bound L(\u03be) given by (10.159)", "a1112a98-3c26-43db-b203-fd0b11ed23cc": "equivariant to trequency, so that the same melody played in a dif- ferent octave produces the same representation but at a different  height in the network\u2019s output. 3-D | Volumetric data: A common | Color video data: One axis corre- source of this kind of data is med- | sponds to time, one to the height ical imaging technology, such as | of the video frame, and one to CT scans. the width of the video frame. Table 9.1: Examples of different formats of data that can be used with convolutional networks. 355  CHAPTER 9. CONVOLUTIONAL NETWORKS  corresponding to the test scores. 9.8 Efficient Convolution Algorithms  Modern convolutional network applications often involve networks containing more than one million units.\n\nPowerful implementations exploiting parallel computation resources, as discussed in section 12.1, are essential. In many cases, however, it is also possible to speed up convolution by selecting an appropriate convolution algorithm", "489b6113-8830-4f28-9ebf-8aeaa9933113": "2018.\n\nMartin A, Paul B, Jianmin C, Zhifeng C, Andy D, Jeffrey D, Matthieu D, Sanjay G, Geoffrey |, Michael |, Manjunath  K, Josh L, Rajat M, Sherry M, Derek GM, Benoit S, Paul T, Vijay V, Pete W, Matrin W, Yuan Y, Xiaogiang Z. TensorFlow: Shorten and Khoshgoftaar J Big Data  6:60   a system for large-scale machine learning. In: Proceedings of the 12th USENIX symposium on operating system design and implementation (OSDI'16), 2016. 137. Keras https://keras.io/. 2015. 138. Alexander B, Alex P Eugene K, Vladimir II, Alexandr AK. Albumentations: fast and flexible image augmentations. ArXiv preprints. 2018. 139. Maayan F-A, Idit D, Eyal K, Michal A, Jacob G, Hayit G", "7ffdb084-0fe1-4877-be55-f65196a9f967": "In this case, the fed-back inputs that he network sees during training could be quite different from the kind of inputs hat it will see at test time. One way to mitigate this problem is to train with both teacher-forced inputs and free-running inputs, for example by predicting  che correct target a number of steps in the future through the unfolded recurrent output-to-input paths. In this way, the network can learn to take into account input conditions (such as those it generates itself in the free-running mode) not seen during training and how to map the state back toward one that will make the network generate proper outputs after a few steps. Another approach  to mitigate the gap between the inputs seen at training time and the inputs seen at test time randomly chooses to use generated values or actual data values as input.\n\nThis approach exploits a curriculum learning strategy to gradually use more of the generated values as input. 10.2.2. Computing the Gradient in a Recurrent Neural Network Computing the gradient through a recurrent neural network is straightforward. One simply applies the generalized back-propagation algorithm of section 6.5.6 to the unrolled computational graph. No specialized algorithms are necessary", "8003db6a-098c-40c1-baa8-6a4e9d387d42": "The self-supervised ResNet gets 69.3% top-1 accuracy, 6.8% worse than the supervised model in absolute terms, whereas the self-supervised ResNet (4\u00d7) model gets 76.5%, which is only 1.8% worse than the supervised model. While we focus on using ImageNet as the main dataset for pretraining our unsupervised model, our method also works with other datasets. We demonstrate it by testing on CIFAR-10 as follows. Setup As our goal is not to optimize CIFAR-10 performance, but rather to provide further con\ufb01rmation of our observations on ImageNet, we use the same architecture (ResNet-50) for CIFAR-10 experiments. Because CIFAR-10 images are much smaller than ImageNet images, we replace the \ufb01rst 7x7 Conv of stride 2 with 3x3 Conv of stride 1, and also remove the \ufb01rst max pooling operation", "1c2c5833-dc8a-4238-8be9-984dc0f6dabe": "egy can be applied by only taking the first k columns of W, named  Algorithm 1 Whitening-k Workflow  Input: Existing embeddings {2;}\u201d, and reserved dimensionality k  1:  DAunNRWwWN  compute y and \u00a9 of {a}e,  : compute U, A, U7 = SVD(=) : compute W = (UVA-!) : fori = 1,2,.--,N do  %i = (ai \u2014 w)W  : end for  Output: Transformed embeddings {Z;}*_,  Whitening operations were sho  wn to outperform BERT-flow and achieve SOTA with 256 sentence  dimensionality on many STS benchmarks, either with or without NLI supervision.\n\nUnsupervised Sentence Embedding Learning  Context Prediction  Quick-Thought (QT) vectors   formulate sentence representation  learning as a classification problem: Given a sentence and its context, a classifier distinguishes context sentences from other contrastive sentences based on their vector representations (\u201ccloze test\"). Such a formulation removes the softmax output layer which causes training slowdown. Spring had come", "323601f6-bfcc-42ce-961e-15cda9b430c7": "cover the use of GAN image synthesis in medical imaging applications such as brain MRI synthesis , lung cancer diagnosis , high-resolution skin lesion synthesis , and chest x-ray abnormality classification . GAN-based image synthesis Data Augmentation was used by Frid-Adar et al.\n\nin 2018 for liver lesion classification. This improved classification performance from 78.6% sensitiv- ity and 88.4% specificity using classic augmentations to 85.7% sensitivity and 92.4% specificity using GAN-based Data Augmentation. Most of the augmentations covered focus on improving Image Recognition mod- els. Image Recognition is when a model predicts an output label such as \u2018dog\u2019 or \u2018cat\u2019 given an input image. However, it is possible to extend results from image recognition to other Computer Vision tasks such as Object Detection led by the algorithms YOLO , R-CNN , fast R-CNN , and faster R-CNN  or Semantic Segmentation  including algorithms such as U-Net", "ce49f9a2-3cfb-480b-9f31-142e9a3eb4c3": "The process consists of two steps: (1) a value z(i) is generated from some prior distribution p\u03b8\u2217(z); (2) a value x(i) is generated from some conditional distribution p\u03b8\u2217(x|z). We assume that the prior p\u03b8\u2217(z) and likelihood p\u03b8\u2217(x|z) come from parametric families of distributions p\u03b8(z) and p\u03b8(x|z), and that their PDFs are differentiable almost everywhere w.r.t. both \u03b8 and z. Unfortunately, a lot of this process is hidden from our view: the true parameters \u03b8\u2217 as well as the values of the latent variables z(i) are unknown to us.\n\nVery importantly, we do not make the common simplifying assumptions about the marginal or posterior probabilities. Conversely, we are here interested in a general algorithm that even works ef\ufb01ciently in the case of: 1", "1c571bf0-e3ef-4f9a-977f-dee20091dc9d": "Robotics and Autonomous Systems, 22(3):231\u2013249. Samuel, A. L. .\n\nSome studies in machine learning using the game of checkers. II\u2014Recent progress. IBM Journal on Research and Development, 11(6):601\u2013617. Schaal, S., Atkeson, C. G. Robot juggling: Implementation of memory-based learning. Schmidhuber, J. Curious model-building control systems. In Proceedings of the IEEE International Joint Conference on Neural Networks, pp. 1458\u20131463. IEEE. Schmidhuber, J. A possibility for implementing curiosity and boredom in model-building Schmidhuber, J. Deep learning in neural networks: An overview. Neural Networks, Schmidhuber, J., Storck, J., Hochreiter, S. Reinforcement driven information acquisition in nondeterministic environments. Technical report, Fakult\u00a8at f\u00a8ur Informatik, Technische Universit\u00a8at M\u00a8unchen, M\u00a8unchen, Germany", "a5a3594e-fa15-4792-8637-b5ea40316e14": "When reinforcement learning involves planning, it has to address the interplay between planning and real-time action selection, as well as the question of how environment models are acquired and improved. When reinforcement learning involves supervised learning, it does so for speci\ufb01c reasons that determine which capabilities are critical and which are not.\n\nFor learning research to make progress, important subproblems have to be isolated and studied, but they should be subproblems that play clear roles in complete, interactive, goal-seeking agents, even if all the details of the complete agent cannot yet be \ufb01lled in. By a complete, interactive, goal-seeking agent we do not always mean something like a complete organism or robot. These are clearly examples, but a complete, interactive, goal-seeking agent can also be a component of a larger behaving system. In this case, the agent directly interacts with the rest of the larger system and indirectly interacts with the larger system\u2019s environment. A simple example is an agent that monitors the charge level of robot\u2019s battery and sends commands to the robot\u2019s control architecture. This agent\u2019s environment is the rest of the robot together with the robot\u2019s environment. One must look beyond the most obvious examples of agents and their environments to appreciate the generality of the reinforcement learning framework", "249cffa8-1222-45b6-b623-3394ce144ecf": "These policies e\u21b5ectively treat each visit to a website as if it were made by a new visitor uniformly sampled from the population of the website\u2019s visitors. By not using the fact that many users repeatedly visit the same websites, greedy policies do not take advantage of possibilities provided by long-term interactions with individual users. As an example of how a marketing strategy might take advantage of long-term user interaction, Theocharous et al. contrasted a greedy policy with a longer-term policy for displaying ads for buying a product, say a car. The ad displayed by the greedy policy might o\u21b5er a discount if the user buys the car immediately. A user either takes the o\u21b5er or leaves the website, and if they ever return to the site, they would likely see the same o\u21b5er.\n\nA longer-term policy, on the other hand, can transition the user \u201cdown a sales funnel\u201d before presenting the \ufb01nal deal. It might start by describing the availability of favorable \ufb01nancing terms, then praise an excellent service department, and then, on the next visit, o\u21b5er the \ufb01nal discount", "acdf4d30-01df-4d3c-9cfe-76f452780137": "BERTBASE was chosen to have the same model size as OpenAI GPT for comparison purposes. Critically, however, the BERT Transformer uses bidirectional self-attention, while the GPT Transformer uses constrained self-attention where every token can only attend to context to its left.4 1https://github.com/tensor\ufb02ow/tensor2tensor 2http://nlp.seas.harvard.edu/2018/04/03/attention.html 3In all cases we set the feed-forward/\ufb01lter size to be 4H, i.e., 3072 for the H = 768 and 4096 for the H = 1024. 4We note that in the literature the bidirectional TransInput/Output Representations To make BERT handle a variety of down-stream tasks, our input representation is able to unambiguously represent both a single sentence and a pair of sentences (e.g., \u27e8 Question, Answer \u27e9) in one token sequence.\n\nThroughout this work, a \u201csentence\u201d can be an arbitrary span of contiguous text, rather than an actual linguistic sentence. A \u201csequence\u201d refers to the input token sequence to BERT, which may be a single sentence or two sentences packed together", "0916dd53-3a89-4c09-8b15-864f948e6185": "However, deep learning has a major upfront cost: these methods need massive training sets of labeled examples to learn from\u2014often tens of thousands to millions to reach peak predictive performance . Such training sets are enormously expensive to create, especially when domain expertise is required.\n\nFor example, reading scienti\ufb01c papers, analyzing intelligence data, and interpreting medical images all require labeling by trained subject matter experts (SMEs). Moreover, we observe from our engagements with collaborators like research laboratories and major technology companies that modeling goals such as class de\ufb01nitions or granularity change as projects progress, necessitating re-labeling. Some big companies are able to absorb this cost, hiring large teams to label training data . Other practitioners utilize classic techniques like active learning , transfer learning , and semisupervised learning  to reduce the number of training labels needed. However, the bulk of practitioners are increasFig. 1 In Example 1.1, training data is labeled by sources of differing accuracy and coverage. Two key challenges arise in using this weak supervision effectively. First, we need a way to estimate the unknown source accuracies to resolve disagreements", "0bceb978-9642-4884-aa26-ab066f896fd9": "During the learning phase, a set of training data is used either to obtain a point estimate of the parameter vector or to determine a posterior distribution over this vector. The training data is then discarded, and predictions for new inputs are based purely on the learned parameter vector w. This approach is also used in nonlinear parametric models such as neural networks. Chapter 5 However, there is a class of pattern recognition techniques, in which the training data points, or a subset of them, are kept and used also during the prediction phase. For instance, the Parzen probability density model comprised a linear combination Section 2.5.1 of \u2018kernel\u2019 functions each one centred on one of the training data points. Similarly, in Section 2.5.2 we introduced a simple technique for classi\ufb01cation called nearest neighbours, which involved assigning to each new test vector the same label as the closest example from the training set.\n\nThese are examples of memory-based methods that involve storing the entire training set in order to make predictions for future data points. They typically require a metric to be de\ufb01ned that measures the similarity of any two vectors in input space, and are generally fast to \u2018train\u2019 but slow at making predictions for test data points", "b7a03008-f9c0-41ca-bab2-36b48dbf131f": "By writing out the indices, we see that Tr(AB) = Tr(BA).\n\n(C.8) By applying this formula multiple times to the product of three matrices, we see that in which the sum is taken over all products consisting of precisely one element from each row and one element from each column, with a coef\ufb01cient +1 or \u22121 according to whether the permutation i1i2 . iN is even or odd, respectively. Note that |I| = 1. Thus, for a 2 \u00d7 2 matrix, the determinant takes the form The determinant of a product of two matrices is given by as can be shown from (C.10). Also, the determinant of an inverse matrix is given by where a and b are N-dimensional column vectors. Sometimes we need to consider derivatives of vectors and matrices with respect to scalars. The derivative of a vector a with respect to a scalar x is itself a vector whose components are given by \ufffd\u2202a with an analogous de\ufb01nition for the derivative of a matrix", "609043d9-a890-4a8c-ae9f-2487ec2324db": "(6.33) v 182  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  The reformulated version enables us to evaluate softmax with only small numerical errors, even when z contains extremely large or extremely negative numbers. Examining the numerically stable variant, we see that the softmax function is driven by the amount that its arguments deviate from max; z;. An output softmax(z); saturates to 1 when the corresponding input is maximal (z; = max; z%) and z is much greater than all the other inputs. The output softmax(z); can also saturate to 0 when z; is not maximal and the maximum is much greater. This is a generalization of the way that sigmoid units saturate and can cause similar difficulties for learning if the loss function is not designed to compensate for it. The argument z to the softmax function can be produced in two different ways.\n\nThe most common is simply to have an earlier layer of the neural network output every element of z, as described above using the linear layer z = W 'h +6. While straightforward, this approach actually overparametrizes the distribution", "2c456d49-3384-4fcc-9c48-e9a61bf01165": "We cannot expect to achieve zero Bellman error in general, as it would involve \ufb01nding the true value function, which we presume is outside the space of representable value functions. But getting close to this ideal is a natural-seeming goal. As we have seen, the Bellman error is also closely related to the TD error. The Bellman error for a state is the expected TD error in that state.\n\nSo let\u2019s repeat the derivation above with the expected TD error (all expectations here are implicitly conditional on St): This update and various ways of sampling it are referred to as the residual-gradient algorithm. If you simply used the sample values in all the expectations, then the equation above reduces almost exactly to (11.23), the naive residual-gradient algorithm.1 But this is naive, because the equation above involves the next state, St+1, appearing in two expectations that are multiplied together. To get an unbiased sample of the product, two independent samples of the next state are required, but during normal interaction with an external environment only one is obtained. One expectation or the other can be sampled, but not both. There are two ways to make the residual-gradient algorithm work", "dc69ef55-1646-495f-bec5-e5a0534f4754": "Longer sequences are disproportionately expensive because attention is quadratic to the sequence length. To speed up pretraing in our experiments, we pre-train the model with sequence length of 128 for 90% of the steps. Then, we train the rest 10% of the steps of sequence of 512 to learn the positional embeddings. For \ufb01ne-tuning, most model hyperparameters are the same as in pre-training, with the exception of the batch size, learning rate, and number of training epochs. The dropout probability was always kept at 0.1. The optimal hyperparameter values are task-speci\ufb01c, but we found the following range of possible values to work well across all tasks: 13https://cloudplatform.googleblog.com/2018/06/CloudTPU-now-offers-preemptible-pricing-and-globalavailability.html \u2022 Learning rate (Adam): 5e-5, 3e-5, 2e-5 \u2022 Number of epochs: 2, 3, 4 We also observed that large data sets (e.g., 100k+ labeled training examples) were far less sensitive to hyperparameter choice than small data sets", "e69aa04e-f0f3-4f40-96a3-3ea52486f7a4": "If we are only interested in x\u22c6, then we can eliminate \u03bb from the stationarity equations without needing to \ufb01nd its value (hence the term \u2018undetermined multiplier\u2019). As a simple example, suppose we wish to \ufb01nd the stationary point of the function 2 subject to the constraint g(x1, x2) = x1 + x2 \u2212 1 = 0, as illustrated in Figure E.2. The corresponding Lagrangian function is given by The conditions for this Lagrangian to be stationary with respect to x1, x2, and \u03bb give the following coupled equations: 2 subject to the constraint g(x1, x2) = 0 where g(x1, x2) = x1 + x2 \u2212 1. The circles show contours of the function f(x1, x2), and the diagonal line shows the constraint surface g(x1, x2) = 0. Solution of these equations then gives the stationary point as (x\u22c6 the corresponding value for the Lagrange multiplier is \u03bb = 1. So far, we have considered the problem of maximizing a function subject to an equality constraint of the form g(x) = 0", "5676c969-e6c5-4d7b-8178-dc56453c30a6": "Most of the reinforcement learning methods we consider in this book are structured around estimating value functions, but it is not strictly necessary to do this to solve reinforcement learning problems. For example, solution methods such as genetic algorithms, genetic programming, simulated annealing, and other optimization methods never estimate value functions. These methods apply multiple static policies each interacting over an extended period of time with a separate instance of the environment. The policies that obtain the most reward, and random variations of them, are carried over to the next generation of policies, and the process repeats.\n\nWe call these evolutionary methods because their operation is analogous to the way biological evolution produces organisms with skilled behavior even if they do not learn during their individual lifetimes. If the space of policies is su\ufb03ciently small, or can be structured so that good policies are common or easy to \ufb01nd\u2014or if a lot of time is available for the search\u2014then evolutionary methods can be e\u21b5ective. In addition, evolutionary methods have advantages on problems in which the learning agent cannot sense the complete state of its environment. Our focus is on reinforcement learning methods that learn while interacting with the environment, which evolutionary methods do not do. Methods able to take advantage of the details of individual behavioral interactions can be much more e\ufb03cient than evolutionary methods in many cases", "039641dd-c6c2-4ddf-8c34-17dca8c5400e": "These connections add the input to the block to its output, and no additional weights are needed. He et al. evaluated this method using deep convolutional networks with skip connections around every pair of adjacent layers, \ufb01nding substantial improvement over networks without the skip connections on benchmark image classi\ufb01cation tasks. Both batch normalization and deep residual learning were used in the reinforcement learning application to the game of Go that we describe in Chapter 16.\n\nA type of deep ANN that has proven to be very successful in applications, including impressive reinforcement learning applications (Chapter 16), is the deep convolutional network. This type of network is specialized for processing high-dimensional data arranged in spatial arrays, such as images. It was inspired by how early visual processing works in the brain . Because of its special architecture, a deep convolutional network can be trained by backpropagation without resorting to methods like those described above to train the deep layers. from LeCun et al. , was designed to recognize hand-written characters. It consists of alternating convolutional and subsampling layers, followed by several fully connected \ufb01nal layers. Each convolutional layer produces a number of feature maps", "cbec7a47-02e9-4b8b-95f0-10a5bb6aaba9": "A weight roughly corresponds to the e\ufb03cacy of a synaptic connection in a real neural network (see Section 15.1). If an ANN has at least one loop in its connections, it is a recurrent rather than a feedforward ANN. Although both feedforward and recurrent ANNs have been used in reinforcement learning, here we look only at the simpler feedforward case. The units (the circles in Figure 9.14) are typically semi-linear units, meaning that they compute a weighted sum of their input signals and then apply to the result a nonlinear function, called the activation function, to produce the unit\u2019s output, or activation.\n\nDi\u21b5erent activation functions are used, but they are typically S-shaped, or sigmoid, functions such as the logistic function f(x) = 1/(1 + e\u2212x), though sometimes the recti\ufb01er nonlinearity f(x) = max(0, x) is used. A step function like f(x) = 1 if x \u2265 \u2713, and 0 otherwise, results in a binary unit with threshold \u2713", "adf61f64-ac8a-47af-b849-1e27876a1dfc": "Dein value is defingd as usual:  https://www.deeplearningbook.org/contents/rnn.html    wb? =o (\" +S Ubi! + 5 Wis \") (10.46)  Oso [op + So Uz a + owen |. (10.47)  j j The reset and update gates can individually \u201cignore\u201d parts of the state vector. The update gates act like conditional leaky integrators that can linearly gate any  407  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  dimension, thus choosing to copy it (at one extreme of the sigmoid) or completely ignore it (at the other extreme) by replacing it with the new \u201ctarget state\u201d value (toward which the leaky integrator wants to converge). The reset gates control which parts of the state get used to compute the next target state, introducing an additional nonlinear effect in the relationship between past state and future state.\n\nMany more variants around this theme can be designed. For example the reset gate (or forget gate) output could be shared across multiple hidden units", "ce46e4df-f46e-45c3-afc3-923bb4982a70": "DEEP GENERATIVE MODELS  y is a waveform, and the entire waveform must sound like a coherent utterance. A natural way to represent the relationships between the entries in y is to use a probability distribution p(y | 2). Boltzmann machines, extended to model conditional distributions, can supply this probabilistic model. The same tool of conditional modeling with a Boltzmann machine can be used not just for structured output tasks, but also for sequence modeling. In the latter case, rather than mapping an input a to an output y, the model must estimate a probability distribution over a sequence of variables, p(x), ...,x(7). Conditional Boltzmann machines can represent factors of the form p(x | x@,... xD) in order to accomplish this task. An important sequence modeling task for the video game and film industry is modeling sequences of joint angles of skeletons used to render 3-D characters. These sequences are often collected using motion capture systems to record the movements of actors. A probabilistic model of a character\u2019s movement allows the generation of new, previously unseen, but realistic animations", "b32c82fc-361c-4358-af93-34d859ac83a8": "From (5.165), this is given by where H is the Hessian matrix comprising the second derivatives of the sum-ofsquares error function with respect to the components of w. Algorithms for computing and approximating the Hessian were discussed in Section 5.4.\n\nThe corresponding Gaussian approximation to the posterior is then given from (4.134) by Similarly, the predictive distribution is obtained by marginalizing with respect to this posterior distribution However, even with the Gaussian approximation to the posterior, this integration is still analytically intractable due to the nonlinearity of the network function y(x, w) as a function of w. To make progress, we now assume that the posterior distribution has small variance compared with the characteristic scales of w over which y(x, w) is varying", "79b3ddd4-c4d6-4fb5-9a0c-123777864d57": "In: International conference on artificial neural networks. Berlin: Springer; 2017. P. 626-34.\n\nCamilo B, Andrew JP, Larry TD, Allen TN, Susan MR, Bennett AL. Learning implicit brain MRI manifolds with deep learning. Int Soc Opt Photonics. 2018;10574:105741. Maria JMC, Sarfaraz H, Jeremy B, Ulas B. How to fool radiologists with generative adversarial networks? A visual turing test for lung cancer diagnosis. arXiv preprint. 2017. Baur C, Albarqouni S, Navab N. MelanoGANs: high resolution skin lesion synthesis with GANs. arXiv preprint. 2018. Madani A, Moradi M, Karargyris A, Syeda-Mahmood T. Chest x-ray generation and data augmentation for cardio- vascular abnormality classification. In: Medical imaging 2018. Image Processing 2018;10574:105741", "cdfeeb8d-abeb-48a9-b53d-7f627b86ff95": "In the case of the cross-entropy error function for a network with logistic sigmoid output-unit activation functions, the corresponding approximation is given by Exercise 5.19 An analogous result can be obtained for multiclass networks having softmax outputunit activation functions.\n\nExercise 5.20 We can use the outer-product approximation to develop a computationally ef\ufb01cient procedure for approximating the inverse of the Hessian . First we write the outer-product approximation in matrix notation as where bn \u2261 \u2207wan is the contribution to the gradient of the output unit activation arising from data point n. We now derive a sequential procedure for building up the Hessian by including data points one at a time. Suppose we have already obtained the inverse Hessian using the \ufb01rst L data points. By separating off the contribution from data point L + 1, we obtain In order to evaluate the inverse of the Hessian, we now consider the matrix identity where I is the unit matrix, which is simply a special case of the Woodbury identity (C.7)", "4a37aec6-799f-4752-8345-cb00e30840a4": "The feedforward classifier attempts to recognize all samples from the generative model as being fake and all samples from the training set as being real. In this framework, any structured pattern that the feedforward network can recognize is highly salient. The generative adversarial network is described in more detail in section 20.10.4. For the purposes of the present discussion, it is sufficient to understand that the networks learn how to determine what is salient. Lotter ef al. showed that models trained to generate images of human heads will often neglect to generate the ears when trained with mean squared error, but will successfully generate the ears when trained with the adversarial framework. Because the ears are not extremely bright or dark compared to the surrounding skin, they are not especially salient according to mean squared error loss, but their highly recognizable shape  542  CHAPTER 15. REPRESENTATION LEARNING  Ground Truth MSE Adversarial  Figure 15.6: Predictive generative networks provide an example of the importance of learning which features are salient. In this example, the predictive generative network has been trained to predict the appearance of a 3-D model of a human head at a specific viewing angle", "99f0d99b-46e6-443d-9922-3f1fadbb8730": "To compare the performance of one machine learning algorithm to another, it is necessary to perform controlled experiments. When comparing machine learning algorithm A and machine learning algorithm B, make  https://www.deeplearningbook.org/contents/regularization.html    sure that both algorithms are evaluated using the same hand-designed dataset augmentation schemes. Suppose that algorithm A performs poorly with no dataset  237  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  augmentation, and algorithm B performs well when combined with numerous syn- chetic transformations of the input.\n\nIn such a case the synthetic transformations ikely caused the improved performance, rather than the use of machine learning algorithm B. Sometimes deciding whether an experiment has been properly con- rolled requires subjective judgment. For example, machine learning algorithms hat inject noise into the input are performing a form of dataset augmentation. Usually, operations that are generally applicable (such as adding Gaussian noise to he input) are considered part of the machine learning algorithm, while operations hat are specific to one application domain (such as randomly cropping an image) are considered to be separate preprocessing steps. 7.5 Noise Robustness  Section 7.4 has motivated the use of noise applied to the inputs as a dataset augmentation strategy", "c0bbc343-3d73-4f4d-85ca-82d9823c9c4f": "Convolutional networks offer us the opportunity to take the pretraining strategy one step further than is possible with multilayer perceptrons. Instead of training an entire convolutional layer at a time, we can train a model of asmall patch, as Coates ei al. do with k-means. We can then use the parameters from this patch-based model to define the kernels of a convolutional layer. This means that it is possible to use unsupervised learning to train a convolutional network without ever using convolution during the training  357  CHAPTER 9. CONVOLUTIONAL NETWORKS  process. Using this approach, we can train very large models and incur a high computational cost only at inference time . This approach was popular from roughly 2007 to 2013, when labeled datasets were small and computational power was more limited.\n\nToday, most convolutional networks are trained in a purely supervised fashion, using full forward and back-propagation through the entire network on each training iteration. As with other approaches to unsupervised pretraining, it remains difficult to tease apart the cause of some of the benefits seen with this approach", "84ebba43-c534-4246-a682-d846f9703030": "From (7.85), the marginal likelihood is given by p(t|\u03b1, \u03b2) = N(t|0, C) in which the covariance matrix takes the form where \u03d5 denotes the N-dimensional vector (\u03c6(x1), \u03c6(x2))T, and similarly t = (t1, t2)T. Notice that this is just a zero-mean Gaussian process model over t with covariance C. Given a particular observation for t, our goal is to \ufb01nd \u03b1\u22c6 and \u03b2\u22c6 by maximizing the marginal likelihood. We see from Figure 7.10 that, if there is a poor alignment between the direction of \u03d5 and that of the training data vector t, then the corresponding hyperparameter \u03b1 will be driven to \u221e, and the basis vector will be pruned from the model", "2add74fe-ea54-4a9c-8b9e-2829d2bca0d0": "The other process takes the value function as given and performs some form of policy improvement, changing the policy to make it better, assuming that the value function is its value function. Although each process changes the basis for the other, overall they work together to \ufb01nd a joint solution: a policy and value function that are unchanged by either process and, consequently, are optimal. In some cases, GPI can be proved to converge, most notably for the classical DP methods that we have presented in this chapter. In other cases convergence has not been proved, but still the idea of GPI improves our understanding of the methods. It is not necessary to perform DP methods in complete sweeps through the state set. Asynchronous DP methods are in-place iterative methods that update states in an arbitrary order, perhaps stochastically determined and using out-of-date information. Many of these methods can be viewed as \ufb01ne-grained forms of GPI. Finally, we note one last special property of DP methods.\n\nAll of them update estimates of the values of states based on estimates of the values of successor states. That is, they update estimates on the basis of other estimates. We call this general idea bootstrapping", "003f487b-1835-4b5e-a5cf-c3e8e8b50d42": "2018. 14. Yosinski J, Clune J, Bengio Y, Lipson H. How transferable are features in deep neural networks? Adv Neural Inf Process Syst.\n\n2014;27:3320-8.  a Shorten and Khoshgoftaar J Big Data  6:60  Erhan D, Bengio Y, Courville A, Manzagol PA, Vincent P. Why does unsupervised pre-training help deep learning? J Mach Learn Res. 2010;11:625-60. Mark P, Dean P, Geoffrey H, Tom MM. Zero-shot learning with semantic output codes. In: NIPS; 2009. Yongqin X, Christoph HL, Bernt S, Zeynep A. Zero-shot learning\u2014a comprehensive evaluation of the good, the bad and the ugly. arXiv preprint. 2018. Yaniv T, Ming Y, Marc\u2019 AR, Lior W. DeepFace: closing the gap to human-level performance in face verification. In: CVPR \u201814; 2014", "8b11addc-c42a-46f6-a977-d69291ef17f4": "In section 15.4, we saw an example of a generative model that learned about  550  CHAPTER 15. REPRESENTATION LEARNING  the explanatory factors underlying images of faces, including the person\u2019s gender and whether they are wearing glasses. The generative model that accomplished this task was based on a deep neural network. It would not be reasonable to expect a shallow network, such as a linear network, to learn the complicated relationship between these abstract explanatory factors and the pixels in the image. In this and other AI tasks, the factors that can be chosen almost independently from each other yet still correspond to meaningful inputs are more likely to be very high level and related in highly nonlinear ways to the input. We argue that this demands deep distributed representations, where the higher level features (seen as unctions of the input) or factors (seen as generative causes) are obtained through che composition of many nonlinearities", "24f9d4ad-0d71-4bf4-a26e-96ae6f9257f0": "This \ufb01ts well with several properties of the neural circuitry: axons of dopamine neurons target both the dorsal and ventral subdivisions of the striatum; dopamine appears to be critical for modulating synaptic plasticity in both structures; and how a neuromodulator such as dopamine acts on a target structure depends on properties of the target structure and not just on properties of the neuromodulator. Section 13.5 presents actor\u2013critic algorithms as policy gradient methods, but the actor\u2013 critic algorithm of Barto, Sutton, and Anderson  was simpler and was presented as an arti\ufb01cial neural network (ANN). Here we describe an ANN implementation something like that of Barto et al., and we follow Takahashi, Schoenbaum, and Niv  in giving a schematic proposal for how this ANN might be implemented by real neural networks in the brain. We postpone discussion of the actor and critic learning rules until Section 15.8, where we present them as special cases of the policy-gradient formulation and discuss what they suggest about how dopamine might modulate synaptic plasticity", "60d9b981-3b91-4b80-a747-32018746568f": "Black-Box methods are usually model-agnostic since they do not require information from a model or its parameters and usually focus on task-speci\ufb01c heuristics for creating adversarial examples. For example, by enumerating feasible substitutions on the basis of word similarity and language models, Ren et al. and Garg and Ramakrishnan  select adversarial word replacements which severely in\ufb02uence the predictions from the text classi\ufb01cation model. To attack reading comprehension systems, Jia and Liang  1For more detailed discussion on textual adversarial examples, please refer to recent comprehensive surveys .\n\nand Wang and Bansal  insert distracting but meaningless sentences at different locations in paragraphs and Ribeiro et al. leverage rule-based paraphrasing to produce semanticallyequivalent adversarial examples. Likewise, for multi-hop question answering, Jiang and Bansal  insert shortcut reasoning sentences and Trivedi et al. constructed disconnected reasoning example by removing certain supporting facts. For machine translation, Belinkov and Bisk  attacks character-based models by natural or synthesized typos and Tan et al. further adopt subword morphology level attacks", "22460b7e-d7ee-47e3-9f0c-a66d1f52b576": "Batch mode means that the entire data set for learning is available from the start, as opposed to the online mode of the algorithms we focus on in this book in which data are acquired sequentially while the learning algorithm executes.\n\nBatch-mode reinforcement learning algorithms are sometimes necessary when online learning is not practical, and they can use any batch-mode supervised learning regression algorithm, including algorithms known to scale well to high-dimensional spaces. The convergence of FQI depends on properties of the function approximation algorithm . For their application to LTV optimization, Theocharous et al. used the same RF algorithm they used for the greedy optimization approach. Because in this case FQI convergence is not monotonic, Theocharous et al. kept track of the best FQI policy by o\u21b5-policy evaluation using a validation training set. The \ufb01nal policy for testing the LTV approach was the \"-greedy policy based on the best policy produced by FQI with the initial action-value function set to the mapping produced by the RF for the greedy optimization approach. To measure the performance of the policies produced by the greedy and LTV approaches, Theocharous et al", "d3e2b704-df8b-4deb-973b-d8cd1872b9e6": "Thus, pz is a Gaussian density function and fs : Z \u2014 Uis an invertible transformation:  z~pz(z) u=fg(z) z= f;(u)  A flow-based generative model learns the invertible mapping function by maximizing the likelihood of U's marginal:  max Hu\u2014BERT(s),s~D logpz(f, '(u)) +log det  where s is a sentence sampled from the text corpus D. Only the flow parameters \u00a2 are optimized while parameters in the pretrained BERT stay unchanged. BERT-flow was shown to improve the performance on most STS tasks either with or without supervision from NLI datasets. Because learning normalizing flows for calibration does not require labels, it can utilize the entire dataset including validation and test sets. Whitening Operation  Su et al.\n\napplied whitening operation to im and also to reduce the dimensionality of sentence  prove the isotropy of the learned representation embedding. They transform the mean value of the sentence vectors to 0 and the covariance matrix to the  identity matrix", "3d7fd595-55f0-4f0f-9c99-8983a3e507ec": "This term is a negative reconstruction error in auto-encoder parlance.\n\nIn order to solve our problem we invoked an alternative method for generating samples from q\u03c6(z|x). The essential parameterization trick is quite simple. Let z be a continuous random variable, and z \u223c q\u03c6(z|x) be some conditional distribution. It is then often possible to express the random variable z as a deterministic variable z = g\u03c6(\u03f5, x), where \u03f5 is an auxiliary variable with independent marginal p(\u03f5), and g\u03c6(.) is some vector-valued function parameterized by \u03c6. This reparameterization is useful for our case since it can be used to rewrite an expectation w.r.t q\u03c6(z|x) such that the Monte Carlo estimate of the expectation is differentiable w.r.t. \u03c6. A proof is as follows", "d819f19d-8080-48f0-8773-52f52fe509c4": "Almost any temporal-di\u21b5erence (TD) method, such as Q-learning or Sarsa, can be combined with eligibility traces to obtain a more general method that may learn more e\ufb03ciently. Eligibility traces unify and generalize TD and Monte Carlo methods. When TD methods are augmented with eligibility traces, they produce a family of methods spanning a spectrum that has Monte Carlo methods at one end (\u03bb=1) and one-step TD methods at the other (\u03bb = 0). In between are intermediate methods that are often better than either extreme method.\n\nEligibility traces also provide a way of implementing Monte Carlo methods online and on continuing problems without episodes. Of course, we have already seen one way of unifying TD and Monte Carlo methods: the n-step TD methods of Chapter 7. What eligibility traces o\u21b5er beyond these is an elegant algorithmic mechanism with signi\ufb01cant computational advantages. The mechanism is a short-term memory vector, the eligibility trace zt 2 Rd, that parallels the long-term weight vector wt 2 Rd", "475f93c4-9e76-432a-ba04-63b3dfa3daad": "We also need to evaluate the gradient of ln p(tN|\u03b8) with respect to the parameter vector \u03b8. Note that changes in \u03b8 will cause changes in a\u22c6 N, leading to additional terms in the gradient. Thus, when we differentiate (6.90) with respect to \u03b8, we obtain two sets of terms, the \ufb01rst arising from the dependence of the covariance matrix CN on \u03b8, and the rest arising from dependence of a\u22c6 N on \u03b8.\n\nThe terms arising from the explicit dependence on \u03b8 can be found by using (6.80) together with the results (C.21) and (C.22), and are given by To compute the terms arising from the dependence of a\u22c6 N on \u03b8, we note that the Laplace approximation has been constructed such that \u03a8(aN) has zero gradient at aN = a\u22c6 N, and so \u03a8(a\u22c6 N) gives no contribution to the gradient as a result of its dependence on a\u22c6 N", "5b844a2f-3ea9-4fe0-a54e-e434894ff66f": "CONFRONTING THE PARTITION FUNCTION  https://www.deeplearningbook.org/contents/partition.html    of feature x? given all the other features x \u2014? : n  log p(x; | @-).\n\n(18.20)  t=  If each random variable has k different values, this requires only k xn evaluations of p to compute, as opposed to the k\u201d evaluations needed to compute the partition function. This may look like an unprincipled hack, but it can be proved that estimation by maximizing the pseudolikelihood is asymptotically consistent . Of course, in the case of datasets that do not approach the large sample limit, pseudolikelihood may display different behavior from the maximum likelihood estimator. It is possible to trade computational complexity for deviation from maxi- mum likelihood behavior by using the generalized pseudolikelihood estima- tor . The generalized pseudolikelihood estimator uses m different sets S\u00ae,i = 1,...,m of indices of variables that appear together on the left side of the conditioning bar", "75497485-d19b-4108-a218-1bc19433b321": "Suppose we have two random variables, x and y, such that y = g(x), where g is an invertible, con- tinuous, differentiable transformation. One might expect that p,(y) = pa(g (y))- This is actually not the case. As a simple example, suppose we have scalar random variables x and y. Suppose y = 3 andx ~ U(0,1). If we use the rule p,(y) = pe(2y) then py will be 0 everywhere except the interval , and it will be 1 on this interval. This means  (3.43)  https://www.deeplearningbook.org/contents/prob.html  which violates the denmition of a probability distribution. his 1s a common mistake. The problem with this approach is that it fails to account for the distortion of space introduced by the Ri nection g", "a3c4d3ee-d1d9-43b8-b24b-becde039c7b7": "\u2018I'he specialized approach has the drawback ot requiring the library developer to define the PPT\u00b0P methods for every operation and limiting the user of the library to only those operations that have been defined. Yet the specialized approach also has the benefit of allowing customized back-propagation rules to be developed for each operation, enabling the developer to improve speed or stability in nonobvious ways that an automatic procedure would presumably be  unable to replicate. Back-propagation is therefore not the only way or the optimal way of computing the gradient, but it is a practical method that continues to serve the deep learning community well. In the future, differentiation technology for deep networks may improve as deep learning practitioners become more aware of advances in the broader field of automatic differentiation. 6.5.10 Higher-Order Derivatives  Some software frameworks support the use of higher-order derivatives.\n\nAmong the deep learning software frameworks, this includes at least Theano and TensorFlow. 219  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  These libraries use the same kind of data structure to describe the expressions for derivatives as they use to describe the original function being differentiated. This means that the symbolic differentiation machinery can be applied to derivatives", "41458faf-15eb-4af4-a34a-d97ec3ec7f3a": "The use of a support vector machine to solve a regression problem is illustrated using the sinusoidal data set in Figure 7.8. Here the parameters \u03bd and C have been Appendix A chosen by hand. In practice, their values would typically be determined by crossvalidation. Historically, support vector machines have largely been motivated and analysed using a theoretical framework known as computational learning theory, also sometimes called statistical learning theory .\n\nThis has its origins with Valiant  who formulated the probably approximately correct, or PAC, learning framework. The goal of the PAC framework is to understand how large a data set needs to be in order to give good generalization. It also gives bounds for the computational cost of learning, although we do not consider these here. Suppose that a data set D of size N is drawn from some joint distribution p(x, t) where x is the input variable and t represents the class label, and that we restrict attention to \u2018noise free\u2019 situations in which the class labels are determined by some (unknown) deterministic function t = g(x)", "3ccdcf3b-9f87-4428-b7a9-9c46f655bd6f": "Although the curse of dimensionality certainly raises important issues for pattern recognition applications, it does not prevent us from \ufb01nding effective techniques applicable to high-dimensional spaces. The reasons for this are twofold.\n\nFirst, real data will often be con\ufb01ned to a region of the space having lower effective dimensionality, and in particular the directions over which important variations in the target variables occur may be so con\ufb01ned. Second, real data will typically exhibit some smoothness properties (at least locally) so that for the most part small changes in the input variables will produce small changes in the target variables, and so we can exploit local interpolation-like techniques to allow us to make predictions of the target variables for new values of the input variables. Successful pattern recognition techniques exploit one or both of these properties. Consider, for example, an application in manufacturing in which images are captured of identical planar objects on a conveyor belt, in which the goal is to determine their orientation. Each image is a point in a high-dimensional space whose dimensionality is determined by the number of pixels. Because the objects can occur at different positions within the image and in different orientations, there are three degrees of freedom of variability between images, and a set of images will live on a three dimensional manifold embedded within the high-dimensional space", "b822c109-ba8d-4dcd-81f4-8b42397c2315": "In general, simultaneous gradient descent on two players\u2019 costs is not guaranteed to reach an equilibrium.\n\nConsider, for example, the value function v (a,b) = ab, where one player controls qg and incurs cost ab, while the other player controls b and receives a cost \u2014ab. If we model each player as making infinitesimally small gradient steps, each player reducing their own cost at the expense of the other player, then a and 6 go into a stable, circular orbit, rather than arriving at the equilibrium point at the origin. Note that the equilibria for a minimax game are not local minima of v. Instead, they are points that are simultaneously minima for both players\u2019 costs. This means that they are saddle points of v that are local minima with respect to the first player\u2019s parameters and local maxima with respect  identified an alternative formulation of the payoffs, in which  he game is no longer zero-sum, that has the same expected gradient as maximum likelihood learning whenever the discriminator is optimal. Because maximum  697  CHAPTER 20. DEEP GENERATIVE MODELS  likelihood training converges, this reformulation of the GAN game should also converge, given enough samples", "e2b4799f-3cbc-428b-8a8c-ee9a08216052": "APPROXIMATE INFERENCE  19.4.4 Interactions between Learning and Inference  Using approximate inference as part of a learning algorithm affects the learning process, and this in turn affects the accuracy of the inference algorithm. Specifically, the training algorithm tends to adapt the model in a way that makes the approximating assumptions underlying the approximate inference algorithm become more true. When training the parameters, variational learning increases  Enxg log p(v, h). (19.68)  For a specific v, this increases p(h | v) for values of h that have high probability under q(h | v) and decreases p(h | v) for values of h that have low probability under g(h | v). This behavior causes our approximating assumptions to become self-fulfilling prophecies", "9f6fa392-49ad-4ad8-ab97-7cf6976a905e": "Initialize the means \u00b5k, covariances \u03a3k and mixing coef\ufb01cients \u03c0k, and evaluate the initial value of the log likelihood. 2. E step. Evaluate the responsibilities using the current parameter values 3. M step. Re-estimate the parameters using the current responsibilities and check for convergence of either the parameters or the log likelihood. If the convergence criterion is not satis\ufb01ed return to step 2. In this section, we present a complementary view of the EM algorithm that recognizes the key role played by latent variables.\n\nWe discuss this approach \ufb01rst of all in an abstract setting, and then for illustration we consider once again the case of Gaussian mixtures. The goal of the EM algorithm is to \ufb01nd maximum likelihood solutions for models having latent variables. We denote the set of all observed data by X, in which the nth row represents xT n, and similarly we denote the set of all latent variables by Z, with a corresponding row zT n. The set of all model parameters is denoted by \u03b8, and so the log likelihood function is given by Note that our discussion will apply equally well to continuous latent variables simply by replacing the sum over Z with an integral", "1886c613-8da9-482a-9fad-e82a2e27d872": "On an intuitive level, the norm of a vector a measures the distance from the origin to the point wz.\n\nMore rigorously, a norm is any function f that satisfies the following properties:  e f(x) =0>2=0 e f(xt+y) < f(x)+ f(y) (the triangle inequality) e Va ER, f(ax) = |al f(x)  The L? norm, with p = 2, is known as the Euclidean norm, which is simply the Euclidean distance from the origin to the point identified by \u00ab The L? norm is used so frequently in machine learning that it is often denoted simply as ||a\\|, with the subscript 2 omitted. It is also common to measure the size of a vector using the squared L? norm, which can be calculated simply as \u00ab ! x. The squared L? norm is more convenient to work with mathematically and computationally than the L? norm itself. For example, each derivative of the squared L? norm with respect to each element of 2 depends only on the corre- sponding element of x, while all the derivatives of the L? norm depend on the entire vector", "df24fd52-12b6-4ba6-bfeb-28ca4c73fa30": "Furthermore, it may be possible that some kernels used in practice are unsuitable for capturing very complex distances in high dimensional sample spaces such as natural images. This is properly justi\ufb01ed by the fact that  shows that for the typical Gaussian MMD test to be reliable (as in it\u2019s power as a statistical test approaching 1), we need the number of samples to grow linearly with the number of dimensions. Since the MMD computational cost grows quadratically with the number of samples in the batch used to estimate equation (4), this makes the cost of having a reliable estimator grow quadratically with the number of dimensions, which makes it very inapplicable for high dimensional problems.\n\nIndeed, for something as standard as 64x64 images, we would need minibatches of size at least 4096 (without taking into account the constants in the bounds of  which would make this number substantially larger) and a total cost per iteration of 40962, over 5 orders of magnitude more than a GAN iteration when using the standard batch size of 64. That being said, these numbers can be a bit unfair to the MMD, in the sense that we are comparing empirical sample complexity of GANs with the theoretical sample complexity of MMDs, which tends to be worse", "03c6874c-ca9f-4965-8866-2c39cbbf55e8": "1.19 (\u22c6 \u22c6) Consider a sphere of radius a in D-dimensions together with the concentric hypercube of side 2a, so that the sphere touches the hypercube at the centres of each of its sides.\n\nBy using the results of Exercise 1.18, show that the ratio of the volume of the sphere to the volume of the cube is given by Now make use of Stirling\u2019s formula in the form which is valid for x \u226b 1, to show that, as D \u2192 \u221e, the ratio (1.145) goes to zero. Show also that the ratio of the distance from the centre of the hypercube to one of the corners, divided by the perpendicular distance to one of the sides, is \u221a D, which therefore goes to \u221e as D \u2192 \u221e. From these results we see that, in a space of high dimensionality, most of the volume of a cube is concentrated in the large number of corners, which themselves become very long \u2018spikes\u2019! We wish to \ufb01nd the density with respect to radius in polar coordinates in which the direction variables have been integrated out", "afe5f33e-e4e0-4d12-bf28-5b837d17a0e9": "(20.24)  E(v,hM An?) n@: 0) = \u2014v WOn \u2014-AOTWAn\u00ae \u2014 Ane wep), (20.25)  Figure 20.2: The graphical model for a deep Boltzmann machine with one visible layer (bottom) and two hidden layers. Connections are only between units in neighboring layers. There are no intralayer connections. 660  CHAPTER 20. DEEP GENERATIVE MODELS  In comparison to the RBM energy function (equation 20.5), the DBM energy function includes connections between the hidden units (latent variables) in the form of the weight matrices (W@) and W\u00ae)).\n\nAs we will see, these connections have significant consequences for the model behavior as well as how we go about  https://www.deeplearningbook.org/contents/generative_models.html    performing inference in the model. In comparison to fully connected Boltzmann machines (with every unit con- nected to every other unit), the DBM offers some advantages that are similar  to those offered by the RBM", "456a23b8-75a6-4e3e-8a7a-68352aa32598": "Example 6.3: Random walk under batch updating Batch-updating versions of TD(0) and constant-\u21b5 MC were applied as follows to the random walk prediction example (Example 6.2). After each new episode, all episodes seen so far were treated as a batch. They were repeatedly presented to the algorithm, either TD(0) or constant-\u21b5 MC, with \u21b5 su\ufb03ciently small that the value function converged. The resulting value function was then compared with v\u21e1, and the average root mean-squared error across the \ufb01ve states (and across 100 independent repetitions of the whole experiment) was plotted to obtain the learning curves shown in Figure 6.2. Note that the batch TD method was consistently better than the batch Monte Carlo method. This means that the \ufb01rst episode started in state A, transitioned to B with a reward of 0, and then terminated from B with a reward of 0. The other seven episodes were even shorter, starting from B and terminating immediately", "efb36fe6-ae60-4b52-ab88-f8e4e94a82ff": "It is important to recognize that the two stages are distinct. Thus, the \ufb01rst stage, namely the propagation of errors backwards through the network in order to evaluate derivatives, can be applied to many other kinds of network and not just the multilayer perceptron. It can also be applied to error functions other that just the simple sum-of-squares, and to the evaluation of other derivatives such as the Jacobian and Hessian matrices, as we shall see later in this chapter. Similarly, the second stage of weight adjustment using the calculated derivatives can be tackled using a variety of optimization schemes, many of which are substantially more powerful than simple gradient descent.\n\nWe now derive the backpropagation algorithm for a general network having arbitrary feed-forward topology, arbitrary differentiable nonlinear activation functions, and a broad class of error function. The resulting formulae will then be illustrated using a simple layered network structure having a single layer of sigmoidal hidden units together with a sum-of-squares error. Many error functions of practical interest, for instance those de\ufb01ned by maximum likelihood for a set of i.i.d", "9c702393-df6d-4355-a473-b2aa3dba8edf": "As in Chapters 9 and 12, we shall see that complex models can thereby be constructed from simpler components (in particular, from distributions belonging to the exponential family) and can be readily characterized using the framework of probabilistic graphical models. Here we focus on the two most important examples of state space models, namely the hidden Markov model, in which the latent variables are discrete, and linear dynamical systems, in which the latent variables are Gaussian.\n\nBoth models are described by directed graphs having a tree structure (no loops) for which inference can be performed ef\ufb01ciently using the sum-product algorithm. The easiest way to treat sequential data would be simply to ignore the sequential aspects and treat the observations as i.i.d., corresponding to the graph in Figure 13.2. Such an approach, however, would fail to exploit the sequential patterns in the data, such as correlations between observations that are close in the sequence. Suppose, for instance, that we observe a binary variable denoting whether on a particular day it rained or not. Given a time series of recent observations of this variable, we wish to predict whether it will rain on the next day", "09cc9d87-60be-4e2d-b769-f00ec2369282": "This can also be seen from the result (2.16) for the variance of the beta distribution, in which we see that the variance goes to zero for a \u2192 \u221e or b \u2192 \u221e.\n\nIn fact, we might wonder whether it is a general property of Bayesian learning that, as we observe more and more data, the uncertainty represented by the posterior distribution will steadily decrease. To address this, we can take a frequentist view of Bayesian learning and show that, on average, such a property does indeed hold. Consider a general Bayesian inference problem for a parameter \u03b8 for which we have observed a data set D, described by the joint distribution p(\u03b8, D). The following result Exercise 2.8 says that the posterior mean of \u03b8, averaged over the distribution generating the data, is equal to the prior mean of \u03b8. Similarly, we can show that The term on the left-hand side of (2.24) is the prior variance of \u03b8. On the righthand side, the \ufb01rst term is the average posterior variance of \u03b8, and the second term measures the variance in the posterior mean of \u03b8. Because this variance is a positive quantity, this result shows that, on average, the posterior variance of \u03b8 is smaller than the prior variance", "70dd0d5e-1b3d-42d5-b31d-c959dd00d875": "Equivalence between Data and Reward The recent work  introduced a unifying perspective of reformulating maximum likelihood supervised learning as a special instance of a policy optimization framework. In this perspective, data examples providing supervision signals are equivalent to a specialized reward function. Since the original framework  was derived for sequence generation problems, here we present a slightly adapted formulation for our context of data manipulation. To connect the maximum likelihood supervised learning with policy optimization, consider the model p\u03b8(y|x) as a policy that takes \u201caction\u201d y given the \u201cstate\u201d x.\n\nLet R(x, y|D) \u2208 R denote a reward function, and p(x) be the empirical data distribution which is known given D. Further assume a variational distribution q(x, y) that factorizes as q(x, y) = p(x)q(y|x). A variational policy optimization objective is then written as: where KL(\u00b7\u2225\u00b7) is the Kullback\u2013Leibler divergence; H(\u00b7) is the Shannon entropy; and \u03b1, \u03b2 > 0 are balancing weights", "fbaf60c6-ae22-44bb-bf00-96f59789d4da": "There are close connections between score matching, denoising autoencoders, and contractive autoencoders. These connections demonstrate that some kinds of autoencoders learn the data distribution in some way. We have not yet seen how . This manifold diffusion technique is a kind of Markov chain. There is also a more general Markov chain that can sample from any denoising autoencoder. 707  CHAPTER 20.\n\nDEEP GENERATIVE MODELS  20.11.1 Markov Chain Associated with Any Denoising Autoen- coder  The above discussion left open the question of what noise to inject and where to obtain a Markov chain that would generate from the distribution estimated by the autoencoder. Bengio et al. showed how to construct such a Markov chain for generalized denoising autoencoders. Generalized denoising autoencoders are specified by a denoising distribution for sampling an estimate of the clean input given the corrupted input. Each step of the Markov chain that generates from the estimated distribution consists of the following substeps, illustrated in figure 20.11:  1", "14dcc0a0-0d8d-4189-9933-f91651a62abd": "Distributed representations are powerful because they can use n features with k values to describe k\u201d different concepts. As we have seen throughout this book, neural networks with multiple hidden units and probabilistic models with multiple latent variables both make use of the strategy of distributed representation. We now introduce an additional observation.\n\nMany deep learning algorithms are motivated by the assumption that the hidden units  https://www.deeplearningbook.org/contents/representation.html    can learn to represent the underlying causal factors that explain the data, as discussed in section 15.3. Distributed representations are natural for this approach, because each direction in representation space can correspond to the value of a  different underlying configuration variable. An example of a distributed representation is a vector of n binary features, which can take 2\u201d configurations, each potentially corresponding to a different region in input space, as illustrated in figure 15.7. This can be compared with a symbolic representation, where the input is associated with a single symbol or category. If there are n symbols in the dictionary, one can imagine n feature detectors, each corresponding to the detection of the presence of the associated category", "6b814013-0a82-4878-95c6-e97f9284de03": "As a consequence of the anti-aliasing used to change the resolution of the images, the resulting MNIST digits are grey scale. These images were then centred in a 28 \u00d7 28 box. Examples of the MNIST digits are shown in Figure A.1. Error rates for classifying the digits range from 12% for a simple linear classi\ufb01er, through 0.56% for a carefully designed support vector machine, to 0.4% for a convolutional neural network . This is a synthetic data set that arose out of a project aimed at measuring noninvasively the proportions of oil, water, and gas in North Sea oil transfer pipelines .\n\nIt is based on the principle of dual-energy gamma densitometry. The ideas is that if a narrow beam of gamma rays is passed through the pipe, the attenuation in the intensity of the beam provides information about the density of material along its path. Thus, for instance, the beam will be attenuated more strongly by oil than by gas", "7062dbd1-55c5-454c-aa06-c70c944bbbe2": "This corresponds to a nonlinear decision boundary in the original input space, shown by the black curve in the left-hand plot. Bayes\u2019 theorem, represents an example of generative modelling, because we could take such a model and generate synthetic data by drawing values of x from the marginal distribution p(x). In the direct approach, we are maximizing a likelihood function de\ufb01ned through the conditional distribution p(Ck|x), which represents a form of discriminative training.\n\nOne advantage of the discriminative approach is that there will typically be fewer adaptive parameters to be determined, as we shall see shortly. It may also lead to improved predictive performance, particularly when the class-conditional density assumptions give a poor approximation to the true distributions. So far in this chapter, we have considered classi\ufb01cation models that work directly with the original input vector x. However, all of the algorithms are equally applicable if we \ufb01rst make a \ufb01xed nonlinear transformation of the inputs using a vector of basis functions \u03c6(x). The resulting decision boundaries will be linear in the feature space \u03c6, and these correspond to nonlinear decision boundaries in the original x space, as illustrated in Figure 4.12", "fa73b382-4b44-4938-8261-1539c3ab4681": "fi= o(W; .\n\n+ by) ; how much to forget the old value of parameters. Ut = o(W; . + b;) ; corresponding to the learning rate at time step t. 0, = \u2014Vo, Li  0 = frOn 1 +i OO  Model Setup (Xi, Yi) : mini-batches sampled from De\u00ae. D\u00ae, (Xi, Yi) (Xo, Yo) (Xs, Ys) y v \u00a5  = Ma = Ma, Me Learner. % % (Vi, \u00a31) (V2, L2) B 5 eee iB < 4 A, Meta-learner : outputs the learner\u2019s parameter Repeats T steps; t=1,...,D  Repeats D steps; d = 1, ...,D  The training process mimics what happens during test, since it has been proved to be beneficial in Matching Networks. During each training epoch, we first sample a dataset  D = (Drains Pest) \u20ac Dmeta-train and then sample mini-batches out of Di,ai, to update @ for T rounds", "02e1fc44-4752-48cd-9b1d-85d30c83554b": "Greedy action selection always exploits current knowledge to maximize immediate reward; it spends no time at all sampling apparently inferior actions to see if they might really be better.\n\nA simple alternative is to behave greedily most of the time, but every once in a while, say with small probability \", instead select randomly from among all the actions with equal probability, independently of the action-value estimates. We call methods using this near-greedy action selection rule \"-greedy methods. An advantage of these methods is that, in the limit as the number of steps increases, every action will be sampled an in\ufb01nite number of times, thus ensuring that all the Qt(a) converge to q\u21e4(a). This of course implies that the probability of selecting the optimal action converges to greater than 1 \u2212 \", that is, to near certainty. These are just asymptotic guarantees, however, and say little about the practical e\u21b5ectiveness of the methods. To roughly assess the relative e\u21b5ectiveness of the greedy and \"-greedy action-value methods, we compared them numerically on a suite of test problems. This was a set of 2000 randomly generated k-armed bandit problems with k = 10", "191cc692-1edb-4b32-a06c-5017eb4364cc": "8.2.7 Poor Correspondence between Local and Global Structure  Many of the problems we have discussed so far correspond to properties of the  https://www.deeplearningbook.org/contents/optimization.html    oss function at a single point\u2014it can be difficult to make a single step if J (8) is poorly conditioned at the current point 9, or if @ lies on a cliff, or if 8 is a saddle point hiding the opportunity to make progress downhill from the gradient. It is possible to overcome all these problems at a single point and still perform poorly if the direction that results in the most improvement locally does not point \u2018oward distant regions of much lower cost. Goodfellow et al. argue that much of the runtime of training is due to he length of the trajectory needed to arrive at the solution. Figure 8.2 shows that he learning trajectory spends most of its time tracing out a wide arc around a mountain-shaped structure.\n\nMuch of research into the difficulties of optimization has focused on whether  287  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  )  Figure 8.4: Optimization based on local downhill moves can fail if the local surface does not point toward the global solution", "3b01463e-0285-43a0-b987-bc1e715b5c29": ";--whitening 69.65 7757 74.66 82.27 78.39 79.52 76.91 77.00 * SimCSE-BERT\u00bbase 75.30 84.67 80.19 85.40 80.82 84.25 80.39 81.57 SROBERTazase\u2122 71.54 72.49 70.80 78.74 73.69 77.77 74.46 74.21 SRoBERTayas-whitening 70.46 77.07 74.46 81.64 76.43 79.49 76.65 76.60 * SimCSE-RoBERTapase 76.53 85.21 80.95 86.03 82.57 85.83 80.50 82.52 + SimCSE-RoBERTaiarge 7746 87.27 82.36 =: 86.66 = 83.93 86.70 81.95 83.76  Supervision from NLI  The pre-trained BERT sentence embedding without any fine-tuning has been found to have poor performance for semantic similarity tasks", "65e643c6-a3a3-4d01-8880-fa6f72f145b7": "i L(v, 0, h) (19.38) FE (log o(bj) \u2014 logh,) + (1 \u2014 hy)(log o(\u2014b,) \u2014 log(1 \u2014 hy))| (19.39)  hy j=l  Sd log 8; | v3 \u201420;W;, hey W2 he + SLWy Wy rhelr | ) )  j=l l~k (19.40  =log o(bj) \u2014 log hy \u2014 1 + log(1 \u2014 hy) + 1 \u2014 log o(\u2014b;) (19.41  n 1 . + (ww, \u2014 3 Via \u2014 WW, fn! (19.42) j=l ki . 1 . \u2014p. T . T . T -}. =b; zy ee \u2014h)+v BW - i (s - a W. BW. ih", "e0de5fef-8b95-4bef-9f39-9e214efd8503": "We can use (6.13) and (6.17) to extend this class of kernels by considering sums over products of different probability distributions, with positive weighting coef\ufb01cients p(i), of the form This is equivalent, up to an overall multiplicative constant, to a mixture distribution in which the components factorize, with the index i playing the role of a \u2018latent\u2019 variable. Two inputs x and x\u2032 will give a large value for the kernel function, and Section 9.2 hence appear similar, if they have signi\ufb01cant probability under a range of different components.\n\nTaking the limit of an in\ufb01nite sum, we can also consider kernels of the form where z is a continuous latent variable. Now suppose that our data consists of ordered sequences of length L so that an observation is given by X = {x1, . , xL}. A popular generative model for sequences is the hidden Markov model, which expresses the distribution p(X) as a Section 13.2 marginalization over a corresponding sequence of hidden states Z = {z1, . , zL}", "36fbd1aa-e08d-41a2-be83-80cb0325b42b": "Chapter 5  Machine Learning Basics  Deep learning is a specific kind of machine learning. To understand deep learning well, one must have a solid understanding of the basic principles of machine learning. This chapter provides a brief course in the most important general principles that are applied throughout the rest of the book. Novice readers or those who want a wider perspective are encouraged to consider machine learning textbooks with a more comprehensive coverage of the fundamentals, such as Murphy  or Bishop . If you are already familiar with machine learning basics, feel free to skip ahead to section 5.11. That section covers some perspectives on traditional machine learning techniques that have strongly influenced the development of deep learning algorithms. We begin with a definition of what a learning algorithm is and present an example: the linear regression algorithm. We then proceed to describe how the challenge of fitting the training data differs from the challenge of finding patterns that generalize to new data", "8c2682a9-c14e-406d-b916-88df20cba091": "Careful design of reward signals is essential if an agent is to act in the real world with no opportunity for human vetting of its actions or means to easily interrupt its behavior.\n\nDespite the possibility of unintended negative consequences, optimization has been used for hundreds of years by engineers, architects, and others whose designs have positively impacted the world. We owe much that is good in our environment to the application of optimization methods. Many approaches have been developed to mitigate the risk of optimization, such as adding hard and soft constraints, restricting optimization to robust and risk-sensitive policies, and optimizing with multiple objective functions. Some of these approaches have been adapted to reinforcement learning, and more research is needed to address these concerns. The problem of ensuring that a reinforcement learning agent\u2019s goal is attuned to our own remains a challenge. Another challenge if reinforcement learning agents are to act and learn in the real world is not just about what they might learn eventually, but about how they will behave while they are learning", "aa19b6a0-c3d0-4ddf-9e39-3794d9254570": "component networks implementing the actor and the critic.\n\nThe critic consists of a single neuron-like unit, V , whose output activity represents state values, and a component shown as the diamond labeled TD that computes TD errors by combining V \u2019s output with reward signals and with previous state values (as suggested by the loop from the TD diamond to itself). The actor network has a single layer of k actor units labeled Ai, i = 1, . , k. The output of each actor unit is a component of a k-dimensional action vector. An alternative is that there are k separate actions, one commanded by each actor unit, that compete with one another to be executed, but here we will think of the entire A-vector as an action. Both the critic and actor networks receive input consisting of multiple features representing the state of the agent\u2019s environment. (Recall from Chapter 1 that the environment of a reinforcement learning agent includes components both inside and outside of the \u2018organism\u2019 containing the agent.) The \ufb01gure shows these features as the circles labeled x1, x2, . , xn, shown twice just to keep the \ufb01gure simple", "1ece072e-2b62-4e42-b1ac-f23ace9b5b3d": "If maxyL (vu, 6 ,q) < log pv; 6*), because 6* induces too complicated of a posterior distribution for our q family to capture, then the learning process will never approach @*. Such a problem is very difficult to detect, because we can only know for sure that it happened if we have a superior learning algorithm that can find 6* for comparison. 19.5 Learned Approximate Inference  We have seen that inference can be thought of as an optimization procedure that increases the value of a function \u00a3.\n\nExplicitly performing optimization via iterative procedures such as fixed-point equations or gradient-based optimization is often very expensive and time consuming. Many approaches to inference avoid  648  CHAPTER 19. APPROXIMATE INFERENCE  this expense by learning to perform approximate inference. Specifically, we can think of the optimization process as a function f that maps an input v to an approximate distribution q* = arg max, L(v, q). Once we think of the multistep iterative optimization process as just being a function, we can approximate it with  a neural network that implements an approximation f(v; 6)", "516df69b-cc66-4b9e-8c1d-42cb8dda5e37": "Because we now have a Gaussian approximation for the posterior distribution over w, and a model for a that is a linear function of w, we can now appeal to the results of Section 4.5.2.\n\nThe distribution of output unit activation values, induced by the distribution over network weights, is given by where q(w|D) is the Gaussian approximation to the posterior distribution given by (5.167). From Section 4.5.2, we see that this distribution is Gaussian with mean aMAP \u2261 a(x, wMAP), and variance Finally, to obtain the predictive distribution, we must marginalize over a using with \u2018tanh\u2019 activation functions and a single logistic-sigmoid output unit. The weight parameters were found using scaled conjugate gradients, and the hyperparameter \u03b1 was optimized using the evidence framework. On the left is the result of using the simple approximation (5.185) based on a point estimate wMAP of the parameters, in which the green curve shows the y = 0.5 decision boundary, and the other contours correspond to output probabilities of y = 0.1, 0.3, 0.7, and 0.9. On the right is the corresponding result obtained using (5.190)", "5383ebb2-84ba-484c-af8b-65aef7c7f48c": "The method is based on the observation that  lw + ie) = fla) + ief'(w) +02), (11) MEI) _ Fe) 4+0(2), (119)  real(f(x + ie)) = f(x) +O(e*), imag(  https://www.deeplearningbook.org/contents/guidelines.html    c  where 7 = ,/-1. Unlike in the real-valued case above, there is no cancellation effect because we take the difference between the value of f at different ppoints. This allows the use of tiny values of \u20ac, like e= 10-159, which make the O(e ?) error insignificant for all practical purposes. Monitor histograms of activations and gradient: It is often useful to visualize statistics of neural network activations and gradients, collected over a large amount of training iterations (maybe one epoch). The preactivation value of hidden units can tell us if the units saturate, or how often they do", "474dda88-e2e2-4cab-9161-633ad21bce60": "Advancing self- supervised learning for vision  Most recently, we\u2019ve created and open sourced a new billion-  parameter self-supervised CV model called SEER that\u2019s proven to work efficiently with complex, high-  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   dimensional image data.\n\nIt is based on the SwAV method applied to a convolutional network architecture (ConvNet) and can be trained from a vast number of random images without any metadata or annotations. The ConvNet is large enough to capture and learn every visual concept from this large and complex data. After pretraining ona billion random, unlabeled and uncurated public Instagram images, and supervised fine- tuning on ImageNet, SEER outperformed the most advanced,  state-of-the-art self-supervised systems, reaching 84.2 percent top-1  accuracy on ImageNet. These results show that we can bring the self-supervised learning paradigm shift to computer vision", "bca97bc2-757f-4c08-9786-9d6192371dab": "Summarizing the situation, Doll, Simon, and Daw  wrote that \u201cmodel-based in\ufb02uences appear ubiquitous more or less wherever the brain processes reward information,\u201d and this is true even in the regions thought to be critical for model-free learning. This includes the dopamine signals themselves, which can exhibit the in\ufb02uence of model-based information in addition to the reward prediction errors thought to be the basis of model-free processes. Continuing neuroscience research informed by reinforcement learning\u2019s model-free and model-based distinction has the potential to sharpen our understanding of habitual and goal-directed processes in the brain. A better grasp of these neural mechanisms may lead to algorithms combining model-free and model-based methods in ways that have not yet been explored in computational reinforcement learning.\n\nUnderstanding the neural basis of drug abuse is a high-priority goal of neuroscience with the potential to produce new treatments for this serious public health problem. One view is that drug craving is the result of the same motivation and learning processes that lead us to seek natural rewarding experiences that serve our biological needs. Addictive substances, by being intensely reinforcing, e\u21b5ectively co-opt our natural mechanisms of learning and decision making", "1e1fffab-2d52-40a2-b270-de8552c83e48": "Perhaps more importantly, the fact that we can train the critic till optimality makes it impossible to collapse modes when we do.\n\nThis is due to the fact that mode collapse comes from the fact that the optimal generator for a \ufb01xed discriminator is a sum of deltas on the points the discriminator assigns the highest values, as observed by  and highlighted in . In the following section we display the practical bene\ufb01ts of our new algorithm, and we provide an in-depth comparison of its behaviour and that of traditional GANs. We run experiments on image generation using our Wasserstein-GAN algorithm and show that there are signi\ufb01cant practical bene\ufb01ts to using it over the formulation used in standard GANs. \u2022 a meaningful loss metric that correlates with the generator\u2019s convergence and sample quality \u2022 improved stability of the optimization process We run experiments on image generation. The target distribution to learn is the LSUN-Bedrooms dataset  \u2013 a collection of natural images of indoor bedrooms. Our baseline comparison is DCGAN , a GAN with a convolutional architecture trained with the standard GAN procedure using the \u2212 log D trick . The generated samples are 3-channel images of 64x64 pixels in size", "1aace2fc-93e2-49bb-97f7-d464fe5d1763": "Simard, P., Y. Le Cun, and J. Denker . Ef\ufb01cient pattern recognition using a new transformation distance. In S. J. Hanson, J. D. Cowan, and Simard, P., B. Victorri, Y. Le Cun, and J. Denker . Tangent prop \u2013 a formalism for specifying selected invariances in an adaptive network. In J. E. Moody, S. J. Hanson, and R. P. Lippmann (Eds. ), Advances in Neural Information Processing Systems, Volume 4, pp. 895\u2013903. Morgan Kaufmann. Simard, P. Y., D. Steinkraus, and J. Platt . Best practice for convolutional neural networks applied to visual document analysis. In Proceedings International Conference on Document Analysis and Recognition (ICDAR), pp. 958\u2013 962", "d69c1214-2977-4e26-9f59-4837d2247e42": "Deep learning does not always involve especially deep graphical models. In the context of graphical models, we can define the depth of a model in terms of the graphical model graph rather than the computational graph. We can think of a latent variable h; as being at depth 7 if the shortest path from h; to an observed variable is 7 steps. We usually describe the depth of the model as being the greatest depth of any such h;. This kind of depth is different from the depth induced by the computational graph. Many generative models used for deep learning have no latent variables or only one layer of latent variables but use deep computational graphs to define the conditional distributions within a model. Deep learning essentially always makes use of the idea of distributed represen- tations. Even shallow models used for deep learning purposes (such as pretraining shallow models that will later be composed to form deep ones) nearly always have a single large layer of latent variables. Deep learning models typically have more latent variables than observed variables.\n\nComplicated nonlinear interactions between variables are accomplished via indirect connections that flow through multiple latent variables", "26ebc4f1-7eb5-4fc0-93a3-2cecb6317cc1": "We can model the cost function J with a quadratic approximation in the neighborhood of the empirically optimal value of the weights w\u201d*:  J(0) = J(w*) + S(w \u2014w*)' H(w \u2014 w*), (7.33)  where H is the Hessian matrix of J with respect to w evaluated at w*.\n\nGiven the assumption that w* is a minimum of J(w), we know that H is positive semidefinite. 247  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  https://www.deeplearningbook.org/contents/regularization.html    Under a local Taylor series approximation, the gradient is given by  Vw (w) = H(w \u2014w\u2019%). (7.34)  We are going to study the trajectory followed by the parameter vector during training. For simplicity, let us set the initial parameter vector to the origin,\u00ae w) = 0", "b2368064-17f9-4663-9681-8290428b9841": "When some of the inputs may be missing, rather than providing a single classification function, the learning algorithm must learn a set of functions. Each function corresponds to classifying x with a different subset of its inputs missing. This kind of situation arises frequently in medical diagnosis, because many kinds of medical tests are expensive or invasive. One way to efficiently define such a large set of functions is to learn a probability distribution over all the relevant variables, then solve the  https://www.deeplearningbook.org/contents/ml.html    classification task by marginalizing out the missing variables.\n\nWith \u2122 input variables, we can now obtain all 2\u00b0 different classification functions needed for each possible set of missing inputs, but the computer program needs to learn only a single function describing the joint probability distribution. See Goodfellow et al. for an example of a deep probabilistic model applied to such a task in this way. Many of the other tasks described in this section can also be generalized to work with missing inputs; classification with missing inputs is just one example of what machine learning can do. 98  CHAPTER 5", "d1953b92-a7e6-4a0d-9534-e74ec76a0e77": "There might be a target right at the end (as depicted here), or the gradient on the output o) can be obtained by back-propagating from further downstream modules. of the unrolled graph in figure 10.3, followed by a backward propagation pass moving right to left through the graph. The runtime is O(r) and cannot be reduced by parallelization because the forward propagation graph is inherently sequential; each time step may be computed only after the previous one. States computed in the forward pass must be stored until they are reused during the backward pass, so the memory cost is also O(7). The back-propagation algorithm applied to the unrolled graph with O(7) cost is called back-propagation through time (BPTT) and is discussed further in section 10.2.2. The network with recurrence between hidden units is thus very powerful but also expensive to train. Is there an alternative? 10.2.1 Teacher Forcing and Networks with Output Recurrence  The network with recurrent connections only from the output at one time step to the hidden units at the next time step (shown in figure 10.4) is strictly less powerful because it lacks hidden-to-hidden recurrent connections.\n\nFor example, it cannot simulate a universal Turing machine", "7a8253a6-ac81-4b1a-a970-45251fcb3338": "The reinforcement learning problem is deeply indebted to the idea of Markov decision processes (MDPs) from the \ufb01eld of optimal control. These historical in\ufb02uences and other major in\ufb02uences from psychology are described in the brief history given in Chapter 1.\n\nReinforcement learning adds to MDPs a focus on approximation and incomplete information for realistically large problems. MDPs and the reinforcement learning problem are only weakly linked to traditional learning and decision-making problems in arti\ufb01cial intelligence. However, arti\ufb01cial intelligence is now vigorously exploring MDP formulations for planning and decision making from a variety of perspectives. MDPs are more general than previous formulations used in arti\ufb01cial intelligence in that they permit more general kinds of goals and uncertainty. The theory of MDPs is treated by, for example, Bertsekas , White , Whittle , and Puterman . A particularly compact treatment of the \ufb01nite case is given by Ross . MDPs are also studied under the heading of stochastic optimal control, where adaptive optimal control methods are most closely related to reinforcement learning . The theory of MDPs evolved from e\u21b5orts to understand the problem of making sequences of decisions under uncertainty, where each decision can depend on the previous decisions and their outcomes", "34a13da9-47fb-4b5c-bb71-625ffea09c0d": "8.19 (\u22c6 \u22c6) Apply the sum-product algorithm derived in Section 8.4.4 to the chain-ofnodes model discussed in Section 8.4.1 and show that the results (8.54), (8.55), and (8.57) are recovered as a special case. 8.20 (\u22c6) www Consider the message passing protocol for the sum-product algorithm on a tree-structured factor graph in which messages are \ufb01rst propagated from the leaves to an arbitrarily chosen root node and then from the root node out to the leaves. Use proof by induction to show that the messages can be passed in such an order that at every step, each node that must send a message has received all of the incoming messages necessary to construct its outgoing messages", "488a0d01-b50c-48fc-b1dd-7ccd2cf2640a": "When we evaluate the predictive distribution, we require C- 1, which involves the inversion of a D x D matrix. The computation required to do this can be reduced by making use of the matrix inversion identity (C.7) to give C- 1 = 0-- 11 - 0--2WM- 1W T (12.40) where the M x M matrix M is defined by Because we invert M rather than inverting C directly, the cost of evaluating C- 1 is reduced from O(D3 ) to O(M3 ). As well as the predictive distribution p(x), we will also require the posterior distributionp(zlx), which can again be written down directly using the result (2.116) for linear-Gaussian models to give Note that the posterior mean depends on x, whereas the posterior covariance is independent of x. We next consider the determination of the model parameters using maximum likelihood.\n\nGiven a data set X = {xn } of observed data points, the probabilistic peA model can be expressed as a directed graph, as shown in Figure 12.10", "af013f2f-f745-47e9-8c26-4a571fcbe415": "2.17 (\u22c6) www Consider the multivariate Gaussian distribution given by (2.43).\n\nBy writing the precision matrix (inverse covariance matrix) \u03a3\u22121 as the sum of a symmetric and an anti-symmetric matrix, show that the anti-symmetric term does not appear in the exponent of the Gaussian, and hence that the precision matrix may be taken to be symmetric without loss of generality. Because the inverse of a symmetric matrix is also symmetric (see Exercise 2.22), it follows that the covariance matrix may also be chosen to be symmetric without loss of generality. 2.18 (\u22c6 \u22c6 \u22c6) Consider a real, symmetric matrix \u03a3 whose eigenvalue equation is given by (2.45). By taking the complex conjugate of this equation and subtracting the original equation, and then forming the inner product with eigenvector ui, show that the eigenvalues \u03bbi are real. Similarly, use the symmetry property of \u03a3 to show that two eigenvectors ui and uj will be orthogonal provided \u03bbj \u0338= \u03bbi", "f3006f59-7429-4b68-851e-d69076655709": "The other way to use planning is to begin and complete it after encountering each new state St, as a computation whose output is the selection of a single action At; on the next step planning begins anew with St+1 to produce At+1, and so on. The simplest, and almost degenerate, example of this use of planning is when only state values are available, and an action is selected by comparing the values of model-predicted next states for each action (or by comparing the values of afterstates as in the tic-tac-toe example in Chapter 1).\n\nMore generally, planning used in this way can look much deeper than one-step-ahead and evaluate action choices leading to many di\u21b5erent predicted state and reward trajectories. Unlike the \ufb01rst use of planning, here planning focuses on a particular state. We call this decision-time planning. These two ways of thinking about planning\u2014using simulated experience to gradually improve a policy or value function, or using simulated experience to select an action for the current state\u2014can blend together in natural and interesting ways, but they have tended to be studied separately, and that is a good way to \ufb01rst understand them. Let us now take a closer look at decision-time planning", "0623becd-dabc-4948-813e-954e3539006f": "The idea behind continuation methods is to construct a series of objective functions over the same parameters. To minimize a cost function J(@), we construct new cost functions {JO, oe KY) }. These cost functions are designed to be increasingly difficult, with J) being fairly easy to minimize, and J(\u2122), the most difficult, being J (9), the true cost function motivating the entire process. When we say that J\u00ae is easier than J+), we mean that it is well behaved over more of 8 space. A random initialization is more likely to land in the region where local descent can minimize the cost function successfully because this region is larger. The series of cost functions are designed so that a solution to one is a good initial point of the next.\n\nWe thus begin by solving an easy problem, then refine the solution to solve incrementally harder problems until we arrive at a solution to the true underlying problem. Traditional continuation methods (predating the use of continuation methods for neural network training) are usually based on smoothing the objective function. See Wu  for an example of such a method and a review of some related methods. Continuation methods are also closely related to simulated annealing, which adds noise to the parameters", "e888ecbc-b2e7-4745-8429-351ccb2cd302": "We \ufb01ne-tune the model for 3 epochs with a learning rate of 2e-5 and a batch size of 16. Results are presented in Table 4. BERTLARGE outperforms the authors\u2019 baseline ESIM+ELMo system by +27.1% and OpenAI GPT by 8.3%. In this section, we perform ablation experiments over a number of facets of BERT in order to better understand their relative importance. Additional ablation studies can be found in Appendix C. We demonstrate the importance of the deep bidirectionality of BERT by evaluating two pretraining objectives using exactly the same pretraining data, \ufb01ne-tuning scheme, and hyperparameters as BERTBASE: No NSP: A bidirectional model which is trained using the \u201cmasked LM\u201d (MLM) but without the \u201cnext sentence prediction\u201d (NSP) task. LTR & No NSP: A left-context-only model which is trained using a standard Left-to-Right (LTR) LM, rather than an MLM.\n\nThe left-only constraint was also applied at \ufb01ne-tuning, because removing it introduced a pre-train/\ufb01ne-tune mismatch that degraded downstream performance", "37e6042d-a7bd-491e-973c-39e6ea620e34": "All the changes in notation are summarized in a table on page xix. The second edition is signi\ufb01cantly expanded, and its top-level organization has been changed. After the introductory \ufb01rst chapter, the second edition is divided into three new parts. The \ufb01rst part (Chapters 2\u20138) treats as much of reinforcement learning as possible without going beyond the tabular case for which exact solutions can be found. We cover both learning and planning methods for the tabular case, as well as their uni\ufb01cation in n-step methods and in Dyna. Many algorithms presented in this part are new to the second edition, including UCB, Expected Sarsa, Double learning, tree-backup, Q(\u03c3), RTDP, and MCTS. Doing the tabular case \ufb01rst, and thoroughly, enables core ideas to be developed in the simplest possible setting. The second part of the book (Chapters 9\u201313) is then devoted to extending the ideas to function approximation", "fce3eb66-a788-41d3-8d01-9d7196ff30dc": "In a single dimension, it is easy to obtain a local minimum by tossing a coin and getting heads once. In n-dimensional space, it is exponentially unlikely that all n coin tosses will be heads. See Dauphin ef al. for a review of the relevant theoretical work. An amazing property of many random functions is that the eigenvalues of the Hessian become more likely to be positive as we reach regions of lower cost. In our coin tossing analogy, this means we are more likely to have our coin come up heads n times if we are at a critical point with low cost.\n\nIt also means that local minima are much more likely to have low cost than high cost. Critical points with high cost are far more likely to be saddle points. Critical points with extremely high cost are more likely to be local maxima. This happens for many classes of random functions. Does it happen for neural networks? Baldi and Hornik  showed theoretically that shallow autoencoders feedforward networks trained to copy their input to their output, described in chapter 14) with no nonlinearities have global minima and saddle points but no ocal minima with higher cost than the global minimum", "9511628f-efb9-44de-bb4d-6c6c87df64d3": "\u2020 Hal\u0131c\u0131o\u011flu Data Science Institute, University of California San Diego, San Diego, USA \u2021 Machine Learning Department, Carnegie Mellon University, Pittsburgh, USA \u266e Mohamed bin Zayed University of Arti\ufb01cial Intelligence, Abu Dhabi, UAE Abstract. Machine learning (ML) is about computational methods that enable machines to learn concepts from experience. In handling a wide variety of experience ranging from data instances, knowledge, constraints, to rewards, adversaries, and lifelong interaction in an ever-growing spectrum of tasks, contemporary ML/AI (arti\ufb01cial intelligence) research has resulted in a multitude of learning paradigms and methodologies. Despite the continual progresses on all di\ufb00erent fronts, the disparate narrowly focused methods also make standardized, composable, and reusable development of ML approaches di\ufb03cult, and preclude the opportunity to build AI agents that panoramically learn from all types of experience", "0b80dd5a-b667-4c00-b6a4-cbd1850e2ebc": "Accurate, large minibatch sgd: Training imagenet in 1 hour. arXiv preprint arXiv:1706.02677, 2017. Hadsell, R., Chopra, S., and LeCun, Y. Dimensionality reduction by learning an invariant mapping.\n\nIn 2006 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR\u201906), volume 2, pp. 1735\u20131742. IEEE, 2006. He, K., Zhang, X., Ren, S., and Sun, J. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 770\u2013778, 2016. He, K., Fan, H., Wu, Y., Xie, S., and Girshick, R. Momentum contrast for unsupervised visual representation learning. arXiv preprint arXiv:1911.05722, 2019. H\u00e9naff, O. J., Razavi, A., Doersch, C., Eslami, S., and Oord, A. v", "cee28fdb-737e-4c65-a744-65c1fc2d4cdc": "LINEAR FACTOR MODELS  https://www.deeplearningbook.org/contents/linear_factors.html    13.59 Manitold Interpretation of PCA  Linear factor models including PCA and factor analysis can be interpreted as learning a manifold .\n\nWe can view probabilistic PCA as defining a thin pancake-shaped region of high probability\u2014a Gaussian distribution that is very narrow along some axes, just as a pancake is very flat along its vertical axis, but is elongated along other axes, just as a pancake is wide along its horizontal axes. This is illustrated in figure 13.3. PCA can be interpreted as aligning this pancake with a linear manifold in a higher-dimensional space. This interpretation applies not just to traditional PCA but also to any linear autoencoder that learns matrices W and V with the goal of making the reconstruction of x lie as close to x as possible. Let the encoder be h= f(x) =W'(a\u2014 p). (13.19)  The encoder computes a low-dimensional representation of h", "a5eee44b-c2dc-4f8b-8f2c-7a6988b1e2e8": "The ratio \u21e2t:T \u22121 transforms the returns to have the right expected value: Now we are ready to give a Monte Carlo algorithm that averages returns from a batch of observed episodes following policy b to estimate v\u21e1(s). It is convenient here to number time steps in a way that increases across episode boundaries. That is, if the \ufb01rst episode of the batch ends in a terminal state at time 100, then the next episode begins at time t = 101. This enables us to use time-step numbers to refer to particular steps in particular episodes. In particular, we can de\ufb01ne the set of all time steps in which state s is visited, denoted T(s). This is for an every-visit method; for a \ufb01rst-visit method, T(s) would only include time steps that were \ufb01rst visits to s within their episodes. Also, let T(t) denote the \ufb01rst time of termination following time t, and Gt denote the return after t up through T(t). Then {Gt}t2T(s) are the returns that pertain to state s, and the corresponding importance-sampling ratios", "b3516d30-2d57-46e9-8479-b60255164825": "First consider a computational graph describing how to compute a single scalar u\u2122 (say, the loss on a training example).\n\nThis scalar is the quantity whose gradient we want to obtain, with respect to the n; input nodes u to ul), In other words, we wish to compute ou for all 1,2,...,n; . In the application of back-propagation to computing gradients foregyadient descent over parameters,  a  (m\\ ay (m \\  https://www.deeplearningbook.org/contents/mlp.html    u\u201d will be the cost associated with an example or a minibatch, while u\u2018\u201d\u2019 to u\u201d\u2019  correspond to the parameters of the model. We will assume that the nodes of the graph have been ordered in such a way that we can compute their output one after the other, starting at u(t) and going up to u\\\u201d). As defined in algorithm 6.1, each node u is associated with an operation f\u00ae and is computed by evaluating the function  u = F(A), (6.48) where A is the set of all nodes that are parents of u@. 204  CHAPTER 6", "13bab0b7-dbbc-4314-871d-59535c191600": "We see that the factor involving the derivative of the logistic sigmoid has cancelled, leading to a simpli\ufb01ed form for the gradient of the log likelihood.\n\nIn particular, the contribution to the gradient from data point n is given by the \u2018error\u2019 yn \u2212 tn between the target value and the prediction of the model, times the basis function vector \u03c6n. Furthermore, comparison with (3.13) shows that this takes precisely the same form as the gradient of the sum-of-squares error function for the linear regression model. Section 3.1.1 If desired, we could make use of the result (4.91) to give a sequential algorithm in which patterns are presented one at a time, in which each of the weight vectors is updated using (3.22) in which \u2207En is the nth term in (4.91). It is worth noting that maximum likelihood can exhibit severe over-\ufb01tting for data sets that are linearly separable. This arises because the maximum likelihood solution occurs when the hyperplane corresponding to \u03c3 = 0.5, equivalent to wT\u03c6 = 0, separates the two classes and the magnitude of w goes to in\ufb01nity", "8c294bdc-0beb-4a9a-85a1-424804203d38": "We consider a generative model in which there are two latent variables corresponding to the unobserved speech signal amplitudes, and there are two observed variables given by the signal values at the microphones. The latent variables have a joint distribution that factorizes as above, and the observed variables are given by a linear combination of the latent variables. There is no need to include a noise distribution because the number of latent variables equals the number of observed variables, and therefore the marginal distribution of the observed variables will not in general be singular, so the observed variables are simply deterministic linear combinations of the latent variables. Given a data set of observations, the likelihood function for this model is a function of the coefficients in the linear combination. The log likelihood can be maximized using gradient-based optimization giving rise to a particular version of independent component analysis. The success of this approach requires that the latent variables have non-Gaussian distributions.\n\nTo see this, recall that in probabilistic PCA (and in factor analysis) the latent-space distribution is given by a zero-mean isotropic Gaussian. The model therefore cannot distinguish between two different choices for the latent variables where these differ simply by a rotation in latent space", "e15ff6c3-a69f-46e4-a585-5d3886e36bf0": "The vanishing and exploding gradient problem for RNNs was independently discovered by separate researchers . One may hope that the problem can be avoided simply by staying in a region of parameter space where the gradients do not vanish or explode. Unfortunately, in order to store memories in a way that is robust to small perturbations, the RNN must enter a region of parameter space where gradients vanish . Specifically, whenever the model is able to represent long-term dependencies, che gradient of a long-term interaction has exponentially smaller magnitude than he gradient of a short-term interaction.\n\nThis means not that it is impossible to learn, but that it might take a very long time to learn long-term dependencies, because the signal about these dependencies will tend to be hidden by the smallest fluctuations arising from short-term dependencies. In practice, the experiments in Bengio et al. show that as we increase the span of the dependencies that  398  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  need to be captured, gradient-based optimization becomes increasingly difficult, with the probability of successful training of a traditional RNN via SGD rapidly reaching 0 for sequences of only length 10 or 20", "c0ff8e09-ccbb-4c34-af3c-c15752a31bfe": "Now minimize J with respect to U and show that the s~ution satisfies SU = UH. Clearly, one possible solution is that the columns of U are eigenvectors of S, in which case H is a diagonal matrix containing the corresponding eigenvalues. To obtain the general solution, show that H can be assumed to be a symmetr~ ma~ix, and by using its eigenvect\u00a3r expansion show that the general solution to SU =~UH gives the same value for J as the specific solution in which the columns of U are the eigenvectors of S. Because these solutions are all equivalent, it is convenient to choose the eigenvector solution. 12.4 (*) Imm Suppose we replace the zero-mean, unit-covariance latent space distribution (12.31) in the probabilistic PCA model by a general Gaussian distribution of the formN(zlm, ~)", "80e08af2-489d-4eba-9765-4f23e9619511": "Note that for both viewpoints, the matrix inversion must be performed once for the given training set.\n\nFor each new test point, both methods require a vector-matrix multiply, which has cost O(N 2) in the Gaussian process case and O(M 2) for the linear basis function model. If the number M of basis functions is smaller than the number N of data points, it will be computationally more ef\ufb01cient to work in the basis function framework. However, an advantage of a Gaussian processes viewpoint is that we can consider covariance functions that can only be expressed in terms of an in\ufb01nite number of basis functions. For large training data sets, however, the direct application of Gaussian process methods can become infeasible, and so a range of approximation schemes have been developed that have better scaling with training set size than the exact approach . Practical issues in the application of Gaussian processes are discussed in Bishop and Nabney . We have introduced Gaussian process regression for the case of a single target variable. The extension of this formalism to multiple target variables, known as co-kriging , is straightforward", "28093c36-7037-4e0d-8bb9-457cc849684e": "Models of characters and environments are specified via lists of 3-D coordinates of vertices. Graphics cards must perform matrix multiplication and division on many  https://www.deeplearningbook.org/contents/applications.html    vertices in parallel to convert these 3-D coordinates into 2-D on-screen coordinates. The graphics card must then perform many computations at each pixel in parallel to determine the color of each pixel.\n\nIn both cases, the computations are fairly simple  439  CHAPTER 12. APPLICATIONS  and do not involve much branching compared to the computational workload that a CPU usually encounters. For example, each vertex in the same rigid object will be multiplied by the same matrix; there is no need to evaluate an if statement per vertex to determine which matrix to multiply by. The computations are also entirely independent of each other, and thus may be parallelized easily. The computations also involve processing massive buffers of memory, containing bitmaps describing the texture (color pattern) of each object to be rendered. Together, this results in graphics cards having been designed to have a high degree of parallelism and high memory bandwidth, at the cost of having a lower clock speed and less branching capability relative to traditional CPUs", "a049b527-6112-47fb-96db-bd8e5eb22679": ", xN} consisting of N observations of a random D-dimensional Euclidean variable x. Our goal is to partition the data set into some number K of clusters, where we shall suppose for the moment that the value of K is given. Intuitively, we might think of a cluster as comprising a group of data points whose inter-point distances are small compared with the distances to points outside of the cluster.\n\nWe can formalize this notion by \ufb01rst introducing a set of D-dimensional vectors \u00b5k, where k = 1, . , K, in which \u00b5k is a prototype associated with the kth cluster. As we shall see shortly, we can think of the \u00b5k as representing the centres of the clusters. Our goal is then to \ufb01nd an assignment of data points to clusters, as well as a set of vectors {\u00b5k}, such that the sum of the squares of the distances of each data point to its closest vector \u00b5k, is a minimum. It is convenient at this point to de\ufb01ne some notation to describe the assignment of data points to clusters", "9f2d7a6d-8689-44f2-8edb-2d0c501ba065": "Thus if we write then the value of the normalization constant ZE, also known as the partition function, is not needed in order to draw samples from p(z).\n\nHowever, knowledge of the value of ZE can be useful for Bayesian model comparison since it represents the model evidence (i.e., the probability of the observed data given the model), and so it is of interest to consider how its value might be obtained. We assume that direct evaluation by summing, or integrating, the function exp(\u2212E(z)) over the state space of z is intractable. For model comparison, it is actually the ratio of the partition functions for two models that is required. Multiplication of this ratio by the ratio of prior probabilities gives the ratio of posterior probabilities, which can then be used for model selection or model averaging. One way to estimate a ratio of partition functions is to use importance sampling from a distribution with energy function G(z) where {z(l)} are samples drawn from the distribution de\ufb01ned by pG(z). If the distribution pG is one for which the partition function can be evaluated analytically, for example a Gaussian, then the absolute value of ZE can be obtained", "7c36dcf2-73e5-485d-8df7-d34b9c29043a": "Yet the unifying way of thinking would be incredibly valuable, to continuously unleash the extensive power of current vibrant research, to produce more principled understanding, and to build more versatile AI solutions. Abdolmaleki, A., Springenberg, J. T., Tassa, Y., Munos, R., Heess, N., & Riedmiller, M. Maximum a posteriori policy optimisation. International Conference on Learning Representations. Altun, Y., & Smola, A. .\n\nUnifying divergence minimization and statistical inference via convex duality. International Conference on Computational Learning Theory, 139\u2013153. Anderson, P. W. More is di\ufb00erent: Broken symmetry and the nature of the hierarchical structure of science. Science, 177, 393\u2013396. Arjovsky, M., Chintala, S., & Bottou, L. Wasserstein generative adversarial networks. International Conference on Machine Learning, 214\u2013223", "8c4d9e4c-0b64-4902-8ac3-48faa2b5bb3a": "Of course, successive samples from the Markov chain will be highly correlated, and so to obtain samples that are nearly independent it will be necessary to subsample the sequence. We can obtain the Gibbs sampling procedure as a particular instance of the Metropolis-Hastings algorithm as follows. Consider a Metropolis-Hastings sampling step involving the variable zk in which the remaining variables z\\k remain \ufb01xed, and for which the transition probability from z to z\u22c6 is given by qk(z\u22c6|z) = p(z\u22c6 k|z\\k). We note that z\u22c6 \\k = z\\k because these components are unchanged by the sampling step. Also, p(z) = p(zk|z\\k)p(z\\k). Thus the factor that determines the acceptance probability in the Metropolis-Hastings (11.44) is given by where we have used z\u22c6 \\k = z\\k. Thus the Metropolis-Hastings steps are always accepted", "0d5edf12-2420-4037-b1ee-b1c031545d85": "One can view an energy-based model with multiple terms in its energy function as being a product of experts . Each term in the energy function corresponds to another factor in the probability distribution. Each term of the energy function can  5For some models, we may still need to use constrained optimization to make sure Z exists. 567  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  Figure 16.5: This graph implies that E(a,b,c,d,e,f) can be written as Fa(a,b) + Ep ,c(b, \u00a2) + Ea,a(a, d) + Ep,e(b, e) + Ee,s(e, f) for an appropriate choice of the per-clique  energy functions. Note that we can obtain the \u00a2 functions in figure 16.4 by setting each \u00a2 to the exponential of the corresponding negative energy, e.g.,da,p(a, b) = exp (\u2014E(a, b))", "53e56719-aa3d-4f78-9c78-e00a02f382b4": "APPLICATIONS  personalization, it is possible to train a model once, then deploy it to be used by billions of users. In many cases, the end user is more resource constrained than the developer.\n\nFor example, one might train a speech recognition network with a powerful computer cluster, then deploy it on mobile phones. A key strategy for reducing the cost of inference is model compression . The basic idea of model compression is to replace the original, expensive model with a smaller model that requires less memory and runtime to store and evaluate. Model compression is applicable when the size of the original model is driven primarily by a need to prevent overfitting. In most cases, the model with the lowest generalization error is an ensemble of several independently trained models. Evaluating all n ensemble members is expensive. Sometimes, even a single model generalizes better if it is large (for example, if it is regularized with dropout). These large models learn some function f(a), but do so using many more parameters than are necessary for the task. Their size is necessary only because of the limited number of training examples", "71666151-070e-4dd3-844d-abe0ff2b00d4": "For instance, the extensive astronomical observations of Tycho Brahe in the 16th century allowed Johannes Kepler to discover the empirical laws of planetary motion, which in turn provided a springboard for the development of classical mechanics. Similarly, the discovery of regularities in atomic spectra played a key role in the development and veri\ufb01cation of quantum physics in the early twentieth century. The \ufb01eld of pattern recognition is concerned with the automatic discovery of regularities in data through the use of computer algorithms and with the use of these regularities to take actions such as classifying the data into different categories. Consider the example of recognizing handwritten digits, illustrated in Figure 1.1. Each digit corresponds to a 28\u00d728 pixel image and so can be represented by a vector x comprising 784 real numbers.\n\nThe goal is to build a machine that will take such a vector x as input and that will produce the identity of the digit 0, . , 9 as the output. This is a nontrivial problem due to the wide variability of handwriting", "30e51ad7-c8e0-46ea-8e3f-c7f10fb99796": "Using the sum rule, the denominator in Bayes\u2019 theorem can be expressed in terms of the quantities appearing in the numerator We can view the denominator in Bayes\u2019 theorem as being the normalization constant required to ensure that the sum of the conditional probability on the left-hand side of (1.12) over all values of Y equals one.\n\nIn Figure 1.11, we show a simple example involving a joint distribution over two variables to illustrate the concept of marginal and conditional distributions. Here a \ufb01nite sample of N = 60 data points has been drawn from the joint distribution and is shown in the top left. In the top right is a histogram of the fractions of data points having each of the two values of Y . From the de\ufb01nition of probability, these fractions would equal the corresponding probabilities p(Y ) in the limit N \u2192 \u221e. We can view the histogram as a simple way to model a probability distribution given only a \ufb01nite number of points drawn from that distribution. Modelling distributions from data lies at the heart of statistical pattern recognition and will be explored in great detail in this book", "3a7d57e8-94eb-4322-b452-3ececc9f55e2": "For example, it is common to use the term \u201cbatch size\u201d to describe the size of a minibatch. Optimization algorithms that use only a single example at a time are sometimes called stochastic and sometimes online methods. The term \u201conline\u201d is usually reserved for when the examples are drawn from a stream of continually created examples rather than from a fixed-size training set over which several passes are made. Most algorithms used for deep learning fall somewhere in between, using more  275  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  than one but fewer than all the training examples. These were traditionally called minibatch or minibatch stochastic methods, and it is now common to call them simply stochastic methods. The canonical example of a stochastic method is stochastic gradient descent, presented in detail in section 8.3.1. Minibatch sizes are generally driven by the following factors:  Larger batches provide a more accurate estimate of the gradient, but with less than linear returns. Multicore architectures are usually underutilized by extremely small batches.\n\nThis motivates using some absolute minimum batch size, below which there is no reduction in the time to process a minibatch", "89ebcb91-4e52-475d-af62-135572109387": "Consider an uncertain event, for example whether the moon was once in its own orbit around the sun, or whether the Arctic ice cap will have disappeared by the end of the century. These are not events that can be repeated numerous times in order to de\ufb01ne a notion of probability as we did earlier in the context of boxes of fruit. Nevertheless, we will generally have some idea, for example, of how quickly we think the polar ice is melting. If we now obtain fresh evidence, for instance from a new Earth observation satellite gathering novel forms of diagnostic information, we may revise our opinion on the rate of ice loss. Our assessment of such matters will affect the actions we take, for instance the extent to which we endeavour to reduce the emission of greenhouse gasses. In such circumstances, we would like to be able to quantify our expression of uncertainty and make precise revisions of uncertainty in the light of new evidence, as well as subsequently to be able to take optimal actions or decisions as a consequence. This can all be achieved through the elegant, and very general, Bayesian interpretation of probability", "e5503ad4-b67d-4f79-a54a-0efffff8520e": "No set of m-dimensional vectors can have more than m mutually linearly independent columns, but a matrix with more than m columns may have more than one such set.\n\nFor the matrix to have an inverse, we additionally need to ensure that equa- tion 2.11 has at most one solution for each value of b. To do so, we need to make certain that the matrix has at most m columns. Otherwise there is more than one way of parametrizing each solution. Together, this means that the matrix must be square, that is, we require that m =n and that all the columns be linearly independent. A square matrix with linearly dependent columns is known as singular. If A is not square or is square but singular, solving the equation is still possible, but we cannot use the method of matrix inversion to find the solution. 36  CHAPTER 2. LINEAR ALGEBRA  So far we have discussed matrix inverses as being multiplied on the left. It is also possible to define an inverse that is multiplied on the right:  AA =I. (2.29)  For square matrices, the left inverse and right inverse are equal", "9a0d119c-97dc-468e-a6af-f8df50b50247": "Evolutionary methods ignore much of the useful structure of the reinforcement learning problem: they do not use the fact that the policy they are searching for is a function from states to actions; they do not notice which states an individual passes through during its lifetime, or which actions it selects. In some cases this information can be misleading (e.g., when states are misperceived), but more often it should enable more e\ufb03cient search.\n\nAlthough evolution and learning share many features and naturally work together, we do not consider evolutionary methods by themselves to be especially well suited to reinforcement learning problems and, accordingly, we do not cover them in this book. To illustrate the general idea of reinforcement learning and contrast it with other approaches, we next consider a single example in more detail. Consider the familiar child\u2019s game of tic-tac-toe. Two players take turns playing on a three-by-three board. One player plays Xs and the other Os until one player wins by placing three marks in a row, horizontally, vertically, or diagonally, as the X player has in the game shown to the right. If the board \ufb01lls up with neither player getting three in a row, then the game is a draw", "117d2474-eb20-4ad8-b413-e468f28500ed": "The \ufb01rst two dimensions are whether they update state values or action values and whether they estimate the value for the optimal policy or for an arbitrary given policy. These two dimensions give rise to four classes of updates for approximating the four value functions, q\u21e4, v\u21e4, q\u21e1, and v\u21e1. The updates certainly yield a better estimate because they are uncorrupted by sampling error, but they also require more computation, and computation is often the limiting resource in planning.\n\nTo properly assess the relative merits of expected and sample updates for planning we must control for their di\u21b5erent computational requirements. For concreteness, consider the expected and sample updates for approximating q\u21e4, and the special case of discrete states and actions, a table-lookup representation of the approximate value function, Q, and a model in the form of estimated dynamics, \u02c6p(s0, r|s, a)", "31558fb3-451c-4e21-9535-1d1472a0ae8b": "Here the quantities ak are de\ufb01ned by The normalized exponential is also known as the softmax function, as it represents a smoothed version of the \u2018max\u2019 function because, if ak \u226b aj for all j \u0338= k, then p(Ck|x) \u2243 1, and p(Cj|x) \u2243 0. We now investigate the consequences of choosing speci\ufb01c forms for the classconditional densities, looking \ufb01rst at continuous input variables x and then discussing brie\ufb02y the case of discrete inputs. Let us assume that the class-conditional densities are Gaussian and then explore the resulting form for the posterior probabilities. To start with, we shall assume that all classes share the same covariance matrix. Thus the density for class Ck is given by Consider \ufb01rst the case of two classes.\n\nFrom (4.57) and (4.58), we have We see that the quadratic terms in x from the exponents of the Gaussian densities have cancelled (due to the assumption of common covariance matrices) leading to a linear function of x in the argument of the logistic sigmoid. This result is illustrated for the case of a two-dimensional input space x in Figure 4.10", "7708d4c2-6fb7-47be-bb18-05a8eb9016c5": "20.10.9 Neural Auto-Regressive Networks  Neural auto-regressive networks (Bengio and Bengio, 2000a,b) have the same left-to-right graphical model as logistic auto-regressive networks (figure 20.8) but  https://www.deeplearningbook.org/contents/generative_models.html    employ a GULerent paramevrizavion OL LE COUGLUONAL GISLLIDULIOUS WILL Lat graphical model structure. The new parametrization is more powerful in the sense that its capacity can be increased as much as needed, allowing approximation of any joint distribution. The new parametrization can also improve generalization by introducing a parameter sharing and feature sharing principle common to deep learning in general.\n\nThe models were motivated by the objective of avoiding the curse of dimensionality arising out of traditional tabular graphical models, sharing  703  CHAPTER 20. DEEP GENERATIVE MODELS  the same structure as figure 20.8. In tabular discrete probabilistic models, each conditional distribution is represented by a table of probabilities, with one entry and one parameter for each possible configuration of the variables involved. By using a neural network instead, two advantages are obtained:  1", "3c43e889-a7d7-40fa-801e-f2161e559cc8": "Increases time and mem- ory cost of most opera- tions. Weight decay co-| decreased | Decreasing the weight de-  efficient cay coefficient frees the model parameters to be- come larger. Dropout rate decreased | Dropping units less often  gives the units more oppor- tunities to \u201cconspire\u201d with each other to fit the train- ing set. Table 11.1: The effect of various hyperparameters on model capacity.\n\nproblems optimization does not seem to be a significant barrier, provided that the  model is chosen appropriately. CHAPTER 11.  https://www.deeplearningbook.org/contents/guidelines.html  426  PRACTICAL METHODOLOGY       11.4.2. Automatic Hyperparameter Uptimization Algorithms The ideal learning algorithm just takes a dataset and outputs a function, without requiring hand tuning of hyperparameters. The popularity of several learning algorithms such as logistic regression and SVMs stems in part from their ability to perform well with only one or two tuned hyperparameters. Neural networks can sometimes perform well with only a small number of tuned hyperparameters, but often benefit significantly from tuning of forty or more", "4d9b1001-22cf-47b5-9897-413126c4ee29": "It finds a low-dimensional projection of the data such as to preserve, as closely as possible, the pairwise distances between data points, and involves finding the eigenvectors of the distance matrix. In the case where the distances are Euclidean, it gives equivalent results to PCA. The MDS concept can be extended to a wide variety of data types specified in terms of a similarity matrix, giving nonmetric MDS.\n\nTwo other nonprobabilistic methods for dimensionality reduction and data visualization are worthy of mention. Locally linear embedding, or LLE  first computes the set of coefficients that best reconstructs each data point from its neighbours. These coefficients are arranged to be invariant to rotations, translations, and scalings of that data point and its neighbours, and hence they characterize the local geometrical properties of the neighbourhood. LLE then maps the high-dimensional data points down to a lower dimensional space while preserving these neighbourhood coefficients. If the local neighbourhood for a particular data point can be considered linear, then the transformation can be achieved using a combination of translation, rotation, and scaling, such as to preserve the angles formed between the data points and their neighbours", "23a23fa8-4457-49dc-8db6-4a4f26d087b1": "For example, in 2011, the best CPUs available could run neural network workloads faster when using fixed-point arithmetic rather than floating-point arithmetic. By creating a carefully tuned fixed- point implementation, Vanhoucke e? al. obtained a threefold speedup over a strong floating-point system. Each new model of CPU has different performance characteristics, so sometimes floating-point implementations can be faster too.\n\nThe important principle is that careful specialization of numerical computation routines can yield a large payoff. Other strategies, besides choosing whether to use fixed or floating point, include optimizing data structures to avoid cache misses and using vector instructions. Many machine learning researchers neglect these implementation details, but when the performance of an implementation restricts the size of the model, the accuracy of the model suffers. 12.1.2 GPU Implementations  Most modern neural network implementations are based on graphics processing units. Graphics processing units (GPUs) are specialized hardware components hat were originally developed for graphics applications. The consumer market for video gaming systems spurred development of graphics processing hardware. The performance characteristics needed for good video gaming systems turn out to be beneficial for neural networks as well. Video game rendering requires performing many operations in parallel quickly", "9b07df47-652f-4262-853a-d2f4dab4f019": "The joint distribution is maximized by setting x = 1 and y = 0, corresponding the value 0.4.\n\nHowever, the marginal for p(x), obtained by summing over both values of y, is given by p(x = 0) = 0.6 and p(x = 1) = 0.4, and similarly the marginal for y is given by p(y = 0) = 0.7 and p(y = 1) = 0.3, and so the marginals are maximized by x = 0 and y = 0, which corresponds to a value of 0.3 for the joint distribution. In fact, it is not dif\ufb01cult to construct examples for which the set of individually most probable values has probability zero under the joint distribution. Exercise 8.27 We therefore seek an ef\ufb01cient algorithm for \ufb01nding the value of x that maximizes the joint distribution p(x) and that will allow us to obtain the value of the joint distribution at its maximum. To address the second of these problems, we shall simply write out the max operator in terms of its components where M is the total number of variables, and then substitute for p(x) using its expansion in terms of a product of factors. In deriving the sum-product algorithm, we made use of the distributive law (8.53) for multiplication", "9233b5ea-7415-4c22-bbd6-ce6b35a80a8b": "PRACTICAL METHODOLOGY  estimate by zooming in and running a grid search over {\u20140.1,0,0.1}.\n\nThe obvious problem with grid search is that its computational cost grows exponentially with the number of hyperparameters. If there are m hyperparameters, each taking at most n values, then the number of training and evaluation trials required grows as O(n\u2122). The trials may be run in parallel and exploit loose parallelism (with almost no need for communication between different machines carrying out the search). Unfortunately, because of the exponential cost of grid search, even parallelization may not provide a satisfactory size of search. 11.4.4 Random Search  Fortunately, there is an alternative to grid search that is as simple to program, more convenient to use, and converges much faster to good values of the hyperparameters: random search . A random search proceeds as follows. First we define a marginal distribution for each hyperparameter, for example, a Bernoulli or multinoulli for binary or discrete hyperparameters, or a uniform distribution on a log-scale for positive real-valued hyperparameters", "9f9b59ef-076f-4987-a934-b2e3c6457891": "All the methods we have discussed so far in this chapter have required computation per time step proportional to the number of parameters. With more computation, however, one can do better. In this section we present a method for linear function approximation that is arguably the best that can be done for this case. As we established in Section 9.4 TD(0) with linear function approximation converges asymptotically (for appropriately decreasing step sizes) to the TD \ufb01xed point: Why, one might ask, must we compute this solution iteratively? This is wasteful of data! Could one not do better by computing estimates of A and b, and then directly computing the TD \ufb01xed point? The Least-Squares TD algorithm, commonly known as LSTD, does exactly this. It forms the natural estimates where I is the identity matrix, and \"I, for some small \" > 0, ensures that bAt is always invertible. It might seem that these estimates should both be divided by t, and indeed they should; as de\ufb01ned here, these are really estimates of t times A and t times b", "5c173e79-7b9e-401c-8467-d1be4a2aa121": "The one-hot code still confers some statistical advantages (it naturally conveys the idea that all examples in the same cluster are similar to each other), and it confers the computational advantage that the entire representation  147  CHAPTER 5. MACHINE LEARNING BASICS  may be captured by a single integer. The k-means algorithm works by initializing k different centroids {4 Me, pl} to different values, then alternating between two different steps until convergence. In one step, each training example is assigned to cluster 7, where 7 is the index of the nearest centroid pb, In the other step, each centroid po is updated to the mean of all training examples \u00ab) assigned to cluster i. One difficulty pertaining to clustering is that the clustering problem is inherently ill posed, in the sense that there is no single criterion that measures how well a clustering of the data corresponds to the real world.\n\nWe can measure properties of the clustering, such as the average Euclidean distance from a cluster centroid to the members of the cluster. This enables us to tell how well we are able to reconstruct the training data from the cluster assignments. We do not know how well the cluster assignments correspond to properties of the real world", "192e55d1-59c5-4f26-a509-bb6527cbf791": "We see that the computations that must be performed in order to update the variational posterior distribution over the model parameters involve evaluation of the same sums over the data set, as arose in the maximum likelihood treatment. In order to perform this variational M step, we need the expectations E = rnk representing the responsibilities. These are obtained by normalizing the \u03c1nk that are given by (10.46). We see that this expression involves expectations with respect to the variational distributions of the parameters, and these are easily evaluated to give Exercise 10.14 where we have introduced de\ufb01nitions of \ufffd\u039bk and \ufffd\u03c0k, and \u03c8(\u00b7) is the digamma function de\ufb01ned by (B.25), with \ufffd\u03b1 = \ufffd k \u03b1k. The results (10.65) and (10.66) follow from the standard properties of the Wishart and Dirichlet distributions", "4ef9539f-503e-450a-b5fa-44ff52a351f9": "Figure 5.12 shows how, instead, uniformly sampled points look like the patterns of static that appear on analog television sets when no signal is available. Similarly, if you generate a document by picking letters uniformly at random, what is the probability that you will get a meaningful English-language text? Almost zero, again, because most of the long sequences of letters do not correspond to a natural language sequence: the distribution of natural language sequences occupies a very little volume in the total space of sequences of letters. Of course, concentrated probability distributions are not sufficient to show that the data lies on a reasonably small number of manifolds.\n\nWe must also establish that the examples we encounter are connected to each other by other examples, with each example surrounded by other highly similar examples that can be reached by applying transformations to traverse the manifold. The second argument in favor of the manifold hypothesis is that we can imagine such neighborhoods and transformations, at least informally. In the case of images, we can certainly think of many possible transformations that allow us to trace out a manifold in image space: we can gradually dim or brighten the lights, gradually move or rotate objects in the image, gradually alter the colors on the surfaces of objects, and so forth", "a55660d7-11ef-4f60-a79d-28781bea7bc3": "Foundations and Trends in Machine Bengio, Y., Courville, A. C., Vincent, P. Unsupervised feature learning and deep learning: A review and new perspectives. CoRR 1, ArXiv:1206.5538. Berg, H. C. Chemotaxis in bacteria. Annual review of biophysics and bioengineering, Berns, G. S., McClure, S. M., Pagnoni, G., Montague, P. R. .\n\nPredictability modulates human brain response to reward. The journal of neuroscience, 21(8):2793\u20132798. Berridge, K. C., Kringelbach, M. L. A\u21b5ective neuroscience of pleasure: reward in humans impact, reward learning, or incentive salience? Brain Research Reviews, 28(3):309\u2013369. Berry, D. A., Fristedt, B. Bandit Problems. Chapman and Hall, London. Bertsekas, D. P. Distributed dynamic programming", "c66df00c-cfcc-4fe2-9608-1ed1217400a3": "Sample updates di\u21b5er from the expected updates of DP methods in that they are based on a single sample successor rather than on a complete distribution of all possible successors. Finally, note that the quantity in brackets in the TD(0) update is a sort of error, measuring the di\u21b5erence between the estimated value of St and the better estimate Rt+1 + \u03b3V (St+1). This quantity, called the TD error, arises in various forms throughout reinforcement learning: Notice that the TD error at each time is the error in the estimate made at that time. Because the TD error depends on the next state and next reward, it is not actually available until one time step later", "5c0d2f28-c115-4c22-8793-feb9db5b5810": "His inspiration apparently came from Claude Shannon\u2019s  suggestion that a computer could be programmed to use an evaluation function to play chess, and that it might be able to improve its play by modifying this function online. (It is possible that these ideas of Shannon\u2019s also in\ufb02uenced Bellman, but we know of no evidence for this.) Minsky  extensively discussed Samuel\u2019s work in his \u201cSteps\u201d paper, suggesting the connection to secondary reinforcement theories, both natural and arti\ufb01cial. As we have discussed, in the decade following the work of Minsky and Samuel, little computational work was done on trial-and-error learning, and apparently no computational work at all was done on temporal-di\u21b5erence learning. In 1972, Klopf brought trial-anderror learning together with an important component of temporal-di\u21b5erence learning. Klopf was interested in principles that would scale to learning in large systems, and thus was intrigued by notions of local reinforcement, whereby subcomponents of an overall learning system could reinforce one another", "e6015919-3560-4d44-a319-d7eac98bdbd8": "Shorten and Khoshgoftaar J Big Data  6:60   Image Data Augmentation techniques  The earliest demonstrations showing the effectiveness of Data Augmentations come from simple transformations such as horizontal flipping, color space augmentations, and random cropping. These transformations encode many of the invariances discussed ear- lier that present challenges to image recognition tasks. The augmentations listed in this survey are geometric transformations, color space transformations, kernel filters, mixing images, random erasing, feature space augmentation, adversarial training, GAN-based augmentation, neural style transfer, and meta-learning schemes. This section will explain how each augmentation algorithm works, report experimental results, and discuss dis-  advantages of the augmentation technique.\n\nData Augmentations based on basic image manipulations  Geometric transformations  This section describes different augmentations based on geometric transformations and many other image processing functions. The class of augmentations discussed below could be characterized by their ease of implementation. Understanding these trans- formations will provide a useful base for further investigation into Data Augmentation techniques. We will also describe the different geometric augmentations in the context of their \u2018safety\u2019 of application", "0810007e-1361-4f71-88f4-324afb27626b": "Each Candidate is a tuple of Context objects, which are part of a hierarchy representing the local context of the Candidate Snorkel pipeline is to synthesize this label matrix \ufffd\u2014which may contain overlapping and con\ufb02icting labels for each data point\u2014into a single vector of probabilistic training labels \u02dcY = ( \u02dcy1, . , \u02dcym), where \u02dcyi \u2208 . These training labels can then be used to train a discriminative model. Next, we introduce the running example of a text relation extraction task as a proxy for many real-world knowledge base construction and data analysis tasks: Example 2.1 Consider the task of extracting mentions of adverse chemical\u2013disease relations from the biomedical literature (see CDR task, Sect. 4.1).\n\nGiven documents with mentions of chemicals and diseases tagged, we refer to each co-occurring (chemical, disease) mention pair as a candidate extraction, which we view as a data point to be classi\ufb01ed as either true or false. For example, in Fig", "c03aa591-48de-4dd4-a76a-4760cd72a7d1": "These di\ufb03culties notwithstanding, Abbeel and Ng  argue that the inverse reinforcement learning approach can sometimes be more e\u21b5ective than supervised learning for bene\ufb01ting from the behavior of an expert. Another approach to \ufb01nding a good reward signal is to automate the trial-and-error search for a good signal that we mentioned above. From an application perspective, the reward signal is a parameter of the learning algorithm.\n\nAs is true for other algorithm parameters, the search for a good reward signal can be automated by de\ufb01ning a space of feasible candidates and applying an optimization algorithm. The optimization algorithm evaluates each candidate reward signal by running the reinforcement learning system with that signal for some number of steps, and then scoring the overall result by a \u201chigh-level\u201d objective function intended to encode the designer\u2019s true goal, ignoring the limitations of the agent. Reward signals can even be improved via online gradient ascent, where the gradient is that of the high-level objective function . Relating this approach to the natural world, the algorithm for optimizing the high-level objective function is analogous to evolution, where the high-level objective function is an animal\u2019s evolutionary \ufb01tness determined by the number of its o\u21b5spring that survive to reproductive age", "0930fa77-cb29-4523-88b5-224d851510a6": "In this case, the methods can often \ufb01nd exact solutions, that is, they can often \ufb01nd exactly the optimal value function and the optimal policy.\n\nThis contrasts with the approximate methods described in the next part of the book, which only \ufb01nd approximate solutions, but which in return can be applied e\u21b5ectively to much larger problems. The \ufb01rst chapter of this part of the book describes solution methods for the special case of the reinforcement learning problem in which there is only a single state, called bandit problems. The second chapter describes the general problem formulation that we treat throughout the rest of the book\u2014\ufb01nite Markov decision processes\u2014and its main ideas including Bellman equations and value functions. The next three chapters describe three fundamental classes of methods for solving \ufb01nite Markov decision problems: dynamic programming, Monte Carlo methods, and temporaldi\u21b5erence learning. Each class of methods has its strengths and weaknesses. Dynamic programming methods are well developed mathematically, but require a complete and accurate model of the environment. Monte Carlo methods don\u2019t require a model and are conceptually simple, but are not well suited for step-by-step incremental computation. Finally, temporal-di\u21b5erence methods require no model and are fully incremental, but are more complex to analyze", "d6a31112-51d7-4b1a-8421-a8e4398a9360": "9.6 Structured Outputs  Convolutional networks can be used to output a high-dimensional structured object, rather than just predicting a class label for a classification task or a real value for a regression task. Typically this object is just a tensor, emitted by a standard convolutional layer. For example, the model might emit a tensor S, where S; jx is the probability that pixel (j,k) of the input to the network belongs to class i. This allows the model to label every pixel in an image and draw precise masks that follow the outlines of individual objects. One issue that often comes up is that the output plane can be smaller than the input plane, as shown in figure 9.13. In the kinds of architectures typically used for classification of a single object in an image, the greatest reduction in the spatial dimensions of the network comes from using pooling layers with large stride. To produce an output map of similar size as the input, one can avoid pooling altogether . Another strategy is to simply emit a lower-resolution grid of labels", "37312786-1237-4e90-90bb-9a6617977575": "This approach to deep learning was based on training undirected probabilistic models called restricted Boltzmann machines (RBMs) to model the input data. RBMs are described in part III.\n\nTo solve speech recognition tasks, unsupervised pretraining was used to build deep feedforward networks whose layers were each initialized by training an RBM. These networks take spectral acoustic representations in a fixed-size input window (around a center frame) and predict the conditional probabilities of HMM states for that center frame. Training such deep networks helped to significantly improve the recognition rate on TIMIT , bringing down the  https://www.deeplearningbook.org/contents/applications.html    2012b) for an analysis of reasons for the success of these models. Extensions to the asic phone recognition pipeline included the addition of speaker-adaptive features   that further reduced the error rate. This was quickly followed up by work to expand the architecture from phoneme recognition (which is what TIMIT is focused on) to large-vocabulary speech recognition , which involves not just recognizing phonemes but also recognizing sequences  poset error rate from about 26 percent to 20.7 percent. See Mohamed ef al. of words from a large vocabulary", "42fc802f-ebc2-4b84-aafd-d1337947d00a": "9.2 Motivation  Convolution leverages three important ideas that can help improve a machine learning system: sparse interactions, parameter sharing and equivariant  329  CHAPTER 9. CONVOLUTIONAL NETWORKS  Input  Output  Figure 9.1: An example of 2-D convolution without kernel flipping. We restrict the output to only positions where the kernel lies entirely within the image, called \u201cvalid\u201d convolution in some contexts. We draw boxes with arrows to indicate how the upper-left element of the output tensor is formed by applying the kernel to the corresponding upper-left region of the input tensor. https://www.deeplearningbook.org/contents/convnets.html    representations, Moreover, convolution provides a means for working with inputs of variable size. We now describe each of these ideas in turn. Traditional neural network layers use matrix multiplication by a matrix of parameters with a separate parameter describing the interaction between each input unit and each output unit.\n\nThis means that every output unit interacts with every input unit. Convolutional networks, however, typically have sparse interactions (also referred to as sparse connectivity or sparse weights)", "25270a42-e9e6-4ca0-b674-713e191fae3f": "Using this notation, the gradient on the remaining parameters is given by  dol) \\ | Vel = > ( ao VowL = Yo VowL, 10.22 t t  ah) >\u00bb | oem  2 Vol Val = Sodiag (1 \u2014 (2) ) Vw L,(10.23 t t  OL VE = od (2) Vl? => (Vow Lh, 0.24 7 los  t a 0 {) t DL wwe = E(2) own 025 t a a  2 = Yang (1 - (2) ) nye) al, 0.26  VuL = >y/( oF Vy wht? 0.27 7 ( 2 = Yang (1 - (0) ) not)\u201d, 10.28 t  We do not need to compute the gradient with respect to x for training because it does not have any parameters as ancestors in the computational graph defining the loss. 10.2.3", "d84735ed-ba9f-47df-8f5b-b8da29bdbaf5": "We therefore minimize where the parameter C > 0 controls the trade-off between the slack variable penalty and the margin. Because any point that is misclassi\ufb01ed has \u03ben > 1, it follows that \ufffd n \u03ben is an upper bound on the number of misclassi\ufb01ed points. The parameter C is therefore analogous to (the inverse of) a regularization coef\ufb01cient because it controls the trade-off between minimizing training errors and controlling model complexity. In the limit C \u2192 \u221e, we will recover the earlier support vector machine for separable data.\n\nWe now wish to minimize (7.21) subject to the constraints (7.20) together with \u03ben \u2a7e 0. The corresponding Lagrangian is given by where {an \u2a7e 0} and {\u00b5n \u2a7e 0} are Lagrange multipliers. The corresponding set of KKT conditions are given by Appendix E Using these results to eliminate w, b, and {\u03ben} from the Lagrangian, we obtain the dual Lagrangian in the form which is identical to the separable case, except that the constraints are somewhat different. To see what these constraints are, we note that an \u2a7e 0 is required because these are Lagrange multipliers", "8c82b587-bbbb-4667-8fea-979e6070f875": "From the table it can be seen that \ufb01ne-tuning is surprisingly robust to different masking strategies. However, as expected, using only the MASK strategy was problematic when applying the featurebased approach to NER. Interestingly, using only the RND strategy performs much worse than our strategy as well.", "a9548141-d11e-450c-ab42-d1f95924a725": "We also de\ufb01ned in Chapter 7 an algorithm that uni\ufb01es all action-value algorithms: n-step Q(\u03c3). We leave the semigradient form of that algorithm, and also of the n-step state-value algorithm, as exercises for the reader. Exercise 11.1 Convert the equation of n-step o\u21b5-policy TD (7.9) to semi-gradient form. Give accompanying de\ufb01nitions of the return for both the episodic and continuing cases. \u21e4 \u21e4Exercise 11.2 Convert the equations of n-step Q(\u03c3) (7.11 and 7.17) to semi-gradient form. Give de\ufb01nitions that cover both the episodic and continuing cases. \u21e4 In this section we begin to discuss the second part of the challenge of o\u21b5-policy learning with function approximation\u2014that the distribution of updates does not match the onpolicy distribution.\n\nWe describe some instructive counterexamples to o\u21b5-policy learning\u2014 cases where semi-gradient and other simple algorithms are unstable and diverge. To establish intuitions, it is best to consider \ufb01rst a very simple example", "4856a7d7-3fd7-42cf-8719-5e46ce6ab070": "Dalvi, N., Dasgupta, A., Kumar, R., Rastogi, V.: Aggregating crowdsourced binary ratings. In: International World Wide Web Conference (WWW)  12.\n\nDavis, P.A. et al. : A CTD\u2013P\ufb01zer collaboration: Manual curation of 88,000 scienti\ufb01c articles text mined for drug\u2013disease and drug\u2013 phenotype interactions. em Database  13. Dawid, A.P., Skene, A.M.: Maximum likelihood estimation of observer error-rates using the EM algorithm. J. R. Stat. Soc. C 28(1), 20\u201328  14. Deng, J., Dong, W., Socher, R., Li, L.-J., Li, K., Fei-Fei, L.: Imagenet: A large-scale hierarchical image database. In: IEEE Conference on Computer Vision and Pattern Recognition (CVPR)  15. Dong, X.L., Srivastava, D.: Big Data Integration. Synthesis Lectures on Data Management", "47816987-8464-428d-a654-ffb70ffb0c98": "The derivatives of the feedforward network can also approximate the derivatives of the function arbitrarily well .\n\nThe concept of Borel measurability is beyond the scope of this book; for our purposes it suffices to say that any continuous function on a closed and bounded subset of R\u201d is Borel measurable and therefore may be approximated by a neural network. A neural network may also approximate any function mapping from any finite dimensional discrete space  194  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  to another. While the original theorems were first stated in terms of units with activation functions that saturate for both very negative and very positive argu- ments, universal approximation theorems have also been proved for a wider class of activation functions, which includes the now commonly used rectified linear unit . The universal approximation theorem means that regardless of what function we are trying to learn, we know that a large MLP will be able to represent this function. We are not guaranteed, however, that the training algorithm will be able to learn that function. Even if the MLP is able to represent the function, earning can fail for two different reasons", "9e1ac94e-812d-43cd-ac6c-8430f15fd078": "378  https://www.deeplearningbook.org/contents/rnn.html    CHAPTER 10, SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS. Gradients obtained by back-propagation may then be used with any general-purpose gradient-based techniques to train an RNN. To gain some intuition for how the BPTT algorithm behaves, we provide an example of how to compute gradients by BPTT for the RNN equations above (equation 10.8 and equation 10.12). The nodes of our computational graph include the parameters U, V,W, b and c as well as the sequence of nodes indexed by t for 2, h\u00ae, o and L\u00ae. For each node N we need to compute the gradient VnL recursively, based on the gradient computed at nodes that follow it in the graph. We start the recursion with the nodes immediately preceding the final loss:  OL  ane = (10.17)  In this derivation we assume that the outputs o) are used as the argument to the softmax function to obtain the vector y of probabilities over the output", "b7eb9ce4-0891-401e-8326-ff1897c9b1d1": "If several leapfrog steps are applied in succession, it can be seen that half-step updates to the momentum variables can be combined into full-step updates with step size \u03f5. The successive updates to position and momentum variables then leapfrog over each other. In order to advance the dynamics by a time interval \u03c4, we need to take \u03c4/\u03f5 steps. The error involved in the discretized approximation to the continuous time dynamics will go to zero, assuming a smooth function E(z), in the limit \u03f5 \u2192 0. However, for a nonzero \u03f5 as used in practice, some residual error will remain. We shall see in Section 11.5.2 how the effects of such errors can be eliminated in the hybrid Monte Carlo algorithm. In summary then, the Hamiltonian dynamical approach involves alternating between a series of leapfrog updates and a resampling of the momentum variables from their marginal distribution.\n\nNote that the Hamiltonian dynamics method, unlike the basic Metropolis algorithm, is able to make use of information about the gradient of the log probability distribution as well as about the distribution itself. An analogous situation is familiar from the domain of function optimization. In most cases where gradient information is available, it is highly advantageous to make use of it", "5488a103-92a0-4ef2-a6dc-d0d7f91b1a56": "They found that sensitivity to temperature was of little help. They also found that controlling the angle of attack is not helpful in staying within a particular thermal, being useful instead for traveling between thermals when covering large distances, as in cross-country gliding and bird migration. Due to the fact that soaring in di\u21b5erent levels of turbulence requires di\u21b5erent policies, training was done in conditions ranging from weak to strong turbulence. In strong turbulence the rapidly changing wind and glider velocities allowed less time for the controller to react. This reduced the amount of control possible compared to what was possible for maneuvering when \ufb02uctuations were weak. Reddy et al. examined the policies Sarsa learned under these di\u21b5erent conditions. Common to policies learned in all regimes were these features: when sensing negative wind acceleration, bank sharply in the direction of the wing with the higher lift; when sensing large positive wind acceleration and no torque, do nothing.\n\nHowever, di\u21b5erent levels of turbulence led to policy di\u21b5erences", "3f6ae810-6df3-4e1b-8c6f-2270352bfdf2": "With the autoencoder view, we have a decoder computing the reconstruction  &=g(h)=b+Vh. (13.20) The choices of linear encoder and decoder that minimize reconstruction error  Ell|a\u2014 2\\)3 (13.21)  correspond to V = W, w= b = Ea] and the columns of W form an orthonormal basis, which spans the same subspace as the principal eigenvectors of the covariance  matrix  C = E(w p)(w \u2014 p)\"). (13.22)  In the case of PCA, the columns of W are these eigenvectors, ordered by the magnitude of the corresponding eigenvalues (which are all real and non-negative). One can also show that eigenvalue \u00bb; of C corresponds to the variance of x in the direction of eigenvector vu. If z \u20ac R?\n\nand h \u20ac R\u00a2 with d < D, then the optimal reconstruction error (choosing p, b, V and W as above) is  D min Ele \u2014 2||? ]= S> Xs", "ff467f2e-a51f-421b-b860-33e3df2e1904": "(For example, suppose the agent receives a reward of +1 at each time step.) Thus, in this book we usually use a de\ufb01nition of return that is slightly more complex conceptually but much simpler mathematically. The additional concept that we need is that of discounting. According to this approach, the agent tries to select actions so that the sum of the discounted rewards it receives over the future is maximized. In particular, it chooses At to maximize the expected discounted return: where \u03b3 is a parameter, 0 \uf8ff \u03b3 \uf8ff 1, called the discount rate.\n\nThe discount rate determines the present value of future rewards: a reward received k time steps in the future is worth only \u03b3k\u22121 times what it would be worth if it were received immediately. If \u03b3 < 1, the in\ufb01nite sum in (3.8) has a \ufb01nite value as long as the reward sequence {Rk} is bounded. If \u03b3 = 0, the agent is \u201cmyopic\u201d in being concerned only with maximizing immediate rewards: its objective in this case is to learn how to choose At so as to maximize only Rt+1", "3fe6b330-505a-414a-95be-7173ffc87169": "Labeled or unlabeled examples of x allow one to learn a representation function f, and similarly with examples of y to learn fy.\n\nEach application of the f, and fy functions appears as an upward arrow, with the style of the arrows indicating which function is applied. Distance in h, space provides a similarity metric between any pair of points in x space that may be more meaningful than distance ina space. Likewise, distance inh, space provides a similarity metric between any pair of points iny space. Both of these similarity functions are indicated with dotted bidirectional arrows. Labeled examples (dashed horizontal lines) are pairs (a, y) that allow one to learn a one-way or two-way map (solid bidirectional arrow) between the representations f,,( a) and the representations f,(y) and to anchor these representations to each other. Zero-data learning is then enabled as follows", "7c8501ff-608a-4493-905f-f082215ecbc9": "The L-BFGS strategy with no storage described here can be generalized to include more information about the Hessian by storing some of the vectors used to update M at each time step, which costs only O(n) per step. orn\u201d MM 42---2 at nee Oana ete 7 A NAAR A TNH  https://www.deeplearningbook.org/contents/optimization.html    O.f UPULILIZALLULL OLFALERIES ALLU LVLELA-ALYULLULLLLLS Many optimization techniques are not exactly algorithms but rather general tem- plates that can be specialized to yield algorithms, or subroutines that can be incorporated into many different algorithms.\n\n8.7.1 Batch Normalization  Batch normalization  is one of the most exciting recent innovations in optimizing deep neural networks, and it is actually not an opti- mization algorithm at all. Instead, it is a method of adaptive reparametrization, motivated by the difficulty of training very deep models. Very deep models involve the composition of several functions, or layers. The gradient tells how to update each parameter, under the assumption that the other layers do not change. In practice, we update all the layers simultaneously", "ffb3c46f-0942-4a74-ad85-4e1f92eabe19": ", \u00b5K)T, and the parameters \u00b5k are constrained to satisfy \u00b5k \u2a7e 0 and \ufffd k \u00b5k = 1, because they represent probabilities. The distribution (2.26) can be regarded as a generalization of the Bernoulli distribution to more than two outcomes. It is easily seen that the distribution is normalized Now consider a data set D of N independent observations x1, . , xN. The corresponding likelihood function takes the form which represent the number of observations of xk = 1. These are called the suf\ufb01cient statistics for this distribution. Section 2.4 In order to \ufb01nd the maximum likelihood solution for \u00b5, we need to maximize ln p(D|\u00b5) with respect to \u00b5k taking account of the constraint that the \u00b5k must sum to one.\n\nThis can be achieved using a Lagrange multiplier \u03bb and maximizing Appendix E Setting the derivative of (2.31) with respect to \u00b5k to zero, we obtain We can solve for the Lagrange multiplier \u03bb by substituting (2.32) into the constraint \ufffd which is the fraction of the N observations for which xk = 1. We can consider the joint distribution of the quantities m1,", "62334984-9fc3-4db4-b7cf-d9b5c4fbee00": "This policy iteration process works and always converges to the optimality, but why this is the case? Say, we have a policy 7 and then generate an improved version 7\u2019 by greedily taking actions, m'(s) = argmax,<,4 Q,,(, a).\n\nThe value of this improved 7\u2019 is guaranteed to be better because:  Q,(s,7'(s)) = @,(s, argmax Q,(s, 4) \u2014 max Q,(s, a) = Q;(s, 7(s)) = V,(s)  Monte-Carlo Methods  First, let's recall that V(s) = E. Monte-Carlo (MC) methods uses a simple idea: It learns from episodes of raw experience without modeling the environmental dynamics and  computes the observed mean return as an approximation of the expected return. To compute the  empirical return G;, MC methods need to learn from complete episodes S$), A), Ry,..., S57 to compute G, = = Recker and all the episodes must eventually terminate", "e2c329b4-a970-4a6f-a21b-5a3475036a1b": "The performance boost found from mixing images is very difficult to understand or explain. One possible explanation for this is that the increased dataset size results in more robust representations of low-level characteristics such as lines and edges. Testing the performance of this in comparisons to transfer learning and pretrain- ing methods is an interesting area for future work. Transfer learning and pretraining are  other techniques that learn low-level characteristics in CNNs. Additionally, it will be Shorten and Khoshgoftaar J Big Data  6:60   < 2 8 = B 3 rs z \u00a3  input image | Random Erasing Fig. 11 Example of random erasing on image recognition tasks   interesting to see how the performance changes if we partition the training data such that the first 100 epochs are trained with original and mixed images and the last 50 with original images only. These kinds of strategies are discussed further in Design Consid- erations of Data Augmentation with respect to curriculum learning .\n\nAdditionally, the paper will cover a meta-learning technique developed by Lemley et al. that uses  a neural network to learn an optimal mixing of images. Random erasing  Random erasing  is another interesting Data Augmentation technique developed by Zhong et al", "2ba2785a-d298-4146-92d4-0eb754454207": "Xinyue Z, Yifan L, Zengchang Q, Jiahong L. Emotion classification with data augmentation using generative adver- sarial networks. CoRR, vol. abs/1711.00648. 2017. Goodfellow UJ, Erhan D, Carrier PL, Courville A, Mirza M, Hamner B, Cukierski W, Tang Y, Thaler D, Lee DH, et al. Chal- lenges in representation learning: A report on three machine learning contests. In: NIPS. Berlin: Springer; 2013 p.117-24  Mehdi M, Simon O. Conditional generative adversarial nets. arXiv preprint. 2014. Mario L, Karol K, Marcin M, Olivier B, Sylvain G. Are GANs created equal? A large-scale study. arXiv preprint. 2018. Shorten and Khoshgoftaar J Big Data  6:60   129. 135. 136", "2f84b89a-9e1f-4e41-b11d-3ab66c95743a": "468  CHAPTER 12. APPLICATIONS  Output object (English sentence)  Decoder  Intermediate, semantic representation  Encoder  Source object (French sentence or image)  Figure 12.5: The encoder-decoder architecture to map back and forth between a surface  representation (such as a sequence of words or an image) and a semantic representation. By using the output of an encoder of data from one modality (such as the encoder mapping from French sentences to hidden representations capturing the meaning of sentences) as the input to a decoder for another modality (such as the decoder mapping from hidden representations capturing the meaning of sentences to English), we can train systems that translate from one modality to another.\n\nThis idea has been applied successfully not just  https://www.deeplearningbook.org/contents/applications.html      to machine translation but also to caption generation from images. A drawback of the MLP-based approach is that it requires the sequences to be preprocessed to be of fixed length. To make the translation more flexible, we would like to use a model that can accommodate variable length inputs and variable length outputs. An RNN provides this ability", "97deb17a-1a0e-4ccd-bda1-037a86e5cf2c": "This held true even when the Monte Carlo approximation was allowed to sample up to 1,000 subnetworks. Gal and Ghahramani  found that some models obtain better classification accuracy using twenty samples and the Monte Carlo approximation. It appears that the optimal choice of inference approximation is problem dependent. Srivastava et al. showed that dropout is more effective than other standard computationally inexpensive regularizers, such as weight decay, filter  261  https://www.deeplearningbook.org/contents/regularization.html    CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  norm constraints, and sparse activity regularization. Dropout may also be combined with other forms of regularization to yield a further improvement. One advantage of dropout is that it is very computationally cheap. Using dropout during training requires only O(n) computation per example per update, to generate n random binary numbers and multiply them by the state. Depending on the implementation, it may also require O(n) memory to store these binary numbers until the back-propagation stage", "701336f0-2ae7-41f7-8dab-066c91671661": "OPTIMIZATION FOR TRAINING DEEP MODELS  In some cases, a surrogate loss function actually results in being able to learn more. For example, the test set 0-1 loss often continues to decrease for a long time after the training set 0-1 loss has reached zero, when training using the log-likelihood surrogate.\n\nThis is because even when the expected 0-1 loss is zero, one can improve the robustness of the classifier by further pushing the classes apart from each other, obtaining a more confident and reliable classifier, thus extracting more information from the training data than would have been possible by simply minimizing the average 0-1 loss on the training set. A very important difference between optimization in general and optimization as we use it for training algorithms is that training algorithms do not usually halt at a local minimum. Instead, a machine learning algorithm usually minimizes a surrogate loss function but halts when a convergence criterion based on early stopping (section 7.8) is satisfied. Typically the early stopping criterion is based on the true underlying loss function, such as 0-1 loss measured on a validation set, and is designed to cause the algorithm to halt whenever overfitting begins to occur", "0b32aaa1-fd6c-40f0-9f24-7daf832e8889": "We \ufb01rst remove this factor from the approximating distribution to give and we then multiply this by the exact factor fb(x2, x3) to give \ufffdp(x) = q\\b(x)fb(x2, x3) = \ufffdfa1(x1)\ufffdfa2(x2)\ufffdfc2(x2)\ufffdfc4(x4)fb(x2, x3). (10.229) We now \ufb01nd qnew(x) by minimizing the Kullback-Leibler divergence KL(\ufffdp\u2225qnew). The result, as noted above, is that qnew(z) comprises the product of factors, one for each variable xi, in which each factor is given by the corresponding marginal of \ufffdp(x). These four marginals are given by and qnew(x) is obtained by multiplying these marginals together", "07321723-3b50-4006-9189-fe853271f130": "For example, in Q-learning the target policy is the greedy policy given the current action values, which is de\ufb01ned with a max, and in Sarsa the policy is often \"-greedy, which also involves a maximization operation. In these algorithms, a maximum over estimated values is used implicitly as an estimate of the maximum value, which can lead to a signi\ufb01cant positive bias. To see why, consider a single state s where there are many actions a whose true values, q(s, a), are all zero but whose estimated values, Q(s, a), are uncertain and thus distributed some above and some below zero. The maximum of the true values is zero, but the maximum of the estimates is positive, a positive bias.\n\nWe call this maximization bias. mistake. Nevertheless, our control methods may favor left because of maximization bias making B appear to have a positive value. Figure 6.5 shows that Q-learning with \"-greedy action selection initially learns to strongly favor the left action on this example. Even at asymptote, Q-learning takes the left action about 5% more often than is optimal at our parameter settings (\" = 0.1, \u21b5 = 0.1, and \u03b3 = 1)", "0ec262c0-37cc-48a0-a675-77c6ef651722": "10.30 (\u22c6) By evaluating the second derivative, show that the log logistic function f(x) = \u2212 ln(1 + e\u2212x) is concave.\n\nDerive the variational upper bound (10.137) directly by making a second order Taylor expansion of the log logistic function around a point x = \u03be. 10.31 (\u22c6 \u22c6) By \ufb01nding the second derivative with respect to x, show that the function f(x) = \u2212 ln(ex/2 + e\u2212x/2) is a concave function of x. Now consider the second derivatives with respect to the variable x2 and hence show that it is a convex function of x2. Plot graphs of f(x) against x and against x2. Derive the lower bound (10.144) on the logistic sigmoid function directly by making a \ufb01rst order Taylor series expansion of the function f(x) in the variable x2 centred on the value \u03be2. 10.32 (\u22c6 \u22c6) www Consider the variational treatment of logistic regression with sequential learning in which data points are arriving one at a time and each must be processed and discarded before the next data point arrives", "69f405cf-45d4-4b92-b5ea-c4b4eb90ca28": "SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  Without clipping With clipping = = 8 3 5 SN Ww Ww b b  Figure 10.17: Example of the effect of gradient clipping in a recurrent network with two parameters w and b. Gradient clipping can make gradient descent perform more reasonably in the vicinity of extremely steep cliffs. These steep cliffs commonly occur in recurrent networks near where a recurrent network behaves approximately linearly.\n\nThe cliff is exponentially steep in the number of time steps because the weight matrix is multiplied by itself once for each time step. (Left) Gradient descent without gradient clipping overshoots the bottom of this small ravine, then receives a very large gradient from the cliff face. The large gradient catastrophically propels the parameters outside the axes of the plot. (Right) Gradient descent with gradient clipping has a more moderate reaction to the cliff. While it does ascend the cliff face, the step size is restricted so that it cannot be propelled away from the steep region near the solution. Figure adapted with permission from Pascanu et al", "9b30ecf7-6e63-471f-9435-ee1d1ffd9260": "https://www.deeplearningbook.org/contents/convnets.html    366  https://www.deeplearningbook.org/contents/convnets.html", "5b347eae-28df-4cce-9fd9-b483a568f68c": "We can see now that there is no way around this.\n\nMinimizing the BE requires some such access to the nominal, underlying MDP. This is an important limitation of the BE beyond that identi\ufb01ed in the A-presplit example on page 273. All this directs more attention toward the PBE. We now consider SGD methods for minimizing the PBE. As true SGD methods, these Gradient-TD methods have robust convergence properties even under o\u21b5-policy training and nonlinear function approximation. Remember that in the linear case there is always an exact solution, the TD \ufb01xed point wTD, at which the PBE is zero. This solution could be found by least-squares methods (Section 9.8), but only by methods of quadratic O(d2) complexity in the number of parameters. We seek instead an SGD method, which should be O(d) and have robust convergence properties. Gradient-TD methods come close to achieving these goals, at the cost of a rough doubling of computational complexity", "742f8a5f-b650-437b-b64e-4e153de29b4e": "The end goal in Snorkel is to train a model that generalizes beyond the information expressed in the labeling functions.\n\nWe train a discriminative model h\u03b8 on our probabilistic labels \u02dcY by minimizing a noise-aware variant of the loss l(h\u03b8(xi), y), i.e., the expected loss with respect to \u02dcY: A formal analysis shows that as we increase the amount of unlabeled data, the generalization error of discriminative models trained with Snorkel will decrease at the same asymptotic rate as traditional supervised learning models do with additional hand-labeled data , allowing us to increase predictive performance by adding more unlabeled data. Intuitively, this property holds because as more data is provided, the discriminative model sees more features that co-occur with the heuristics encoded in the labeling functions. Example 2.5 The CDR data contains the sentence, \u201cMyasthenia gravis presenting as weakness after magnesium administration.\u201d None of the 33 labeling functions we developed vote on the corresponding Causes(magnesium, myasthenia gravis) candidate, i.e., they all abstain", "99bd0456-40ca-47b4-974e-c92058cc86cd": "Reinforcement learning (RL) (Sutton and Barto, 2018) offers an alternative principled framework for learning from arbitrary reward functions. However, RL by far has made limited success for training text generation, primarily due to the key challenges of sparse reward (i.e., a single reward signal is received only after the whole text sequence is generated) and large action space (i.e., a vocabulary of millions of words).\n\nFor instance, a popular family of RL algorithms studied extensively for text generation is the policy-based  or actor-critic based  algorithms, with policy gradient (PG) being the most prevalent example . Those algorithms train the model with on-policy updates, i.e., the text samples used for estimating policy gradients are from the target model itself. Due to the exponentially large space of sequences, on-policy updates often suffer from extremely high variance and low data ef\ufb01ciency (e.g., most model samples are not useful for learning). Thus directly training with PG from scratch is usually impossible. In practice, the model has to be initialized by MLE training, followed by PG as \ufb01netuning, which often leads to limited improvement . Another set of work has resorted to off-policy RL", "16f82bf4-a668-4ca4-88b2-46fec1536b9c": "propose an approximation in which we consider the back-propagated vectors V1) L as if they were constants (for the purpose of this regularizer, so that there is no need to back-propagate through them). The experiments with this regularizer suggest that, if combined with the norm clipping heuristic (which handles gradient explosion), the regularizer can considerably increase the span of the dependencies that an RNN can learn. Because it keeps the RNN dynamics on the edge of explosive gradients, the gradient clipping is particularly important. Without gradient clipping, gradient explosion prevents learning from succeeding. A key weakness of this approach is that it is not as effective as the LSTM for tasks where data is abundant, such as language modeling. 411  CHAPTER 10.\n\nSEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  10.12 Explicit Memory  Intelligence requires knowledge, and acquiring knowledge can be done via learning, which has motivated the development of large-scale deep architectures. However, there are different kinds of knowledge. Some knowledge can be implicit, sub- conscious, and difficult to verbalize\u2014such as how to walk, or how a dog looks different from a cat", "93cc7619-b002-4ac4-9e8e-751c045f46b8": "Although it has been a common belief that dopamine neurons do act together like this, modern evidence is pointing to the more complicated picture that di\u21b5erent subpopulations of dopamine neurons respond to input di\u21b5erently depending on the structures to which they send their signals and the di\u21b5erent ways these signals act on their target structures. Dopamine has functions other than signaling RPEs, and even for dopamine neurons that do signal RPEs, it can make sense to send di\u21b5erent RPEs to di\u21b5erent structures depending on the roles these structures play in producing reinforced behavior", "4e73493c-2ee0-482b-aa25-12a1867cdd9a": "Similarly in speech recognition, small levels of nonlinear warping along the time axis, which preserve temporal ordering, should not change the interpretation of the signal. If suf\ufb01ciently large numbers of training patterns are available, then an adaptive model such as a neural network can learn the invariance, at least approximately. This involves including within the training set a suf\ufb01ciently large number of examples of the effects of the various transformations. Thus, for translation invariance in an image, the training set should include examples of objects at many different positions. This approach may be impractical, however, if the number of training examples is limited, or if there are several invariants (because the number of combinations of transformations grows exponentially with the number of such transformations). We therefore seek alternative approaches for encouraging an adaptive model to exhibit the required invariances. These can broadly be divided into four categories: 1.\n\nThe training set is augmented using replicas of the training patterns, transformed according to the desired invariances. For instance, in our digit recognition example, we could make multiple copies of each example in which the digit is shifted to a different position in each image. 2", "c471d892-eb96-4764-b55b-7c6473c32d1c": "From this point of view, training a neural network is not much different from training any other model. Computing the gradient is slightly more complicated for a neural network but can still be done efficiently and exactly. In Section 6.5 we describe how to obtain the gradient using the back-propagation algorithm and modern generalizations of the back-propagation algorithm. As with other machine learning models, to apply gradient-based learning we must choose a cost function, and we must choose how to represent the output of the model.\n\nWe now revisit these design considerations with special emphasis on the neural networks scenario. 6.2.1 Cost Functions  An important aspect of the design of a deep neural network is the choice of the cost function. Fortunately, the cost functions for neural networks are more or less  173  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  the same as those for other parametric models, such as linear models. In most cases, our parametric model defines a distribution p( 30) and we simply use the principle of maximum likelihood", "6679f71d-6cfe-42e3-a843-366ab4673122": "This is done by extending the data-instance experience function (Equation 4.2), in particular by enriching the similarity metric in di\ufb00erent ways. The discussion here generally applies to data instance t of any structures, for example, t = (x, y) or t = x. Data reweighting. Rather than assuming the same importance of all data instances, we can associate each instance t\u2217 with an importance weight w(t\u2217) \u2208 R, so that the learning pays more attention to those high-quality instances, while low-quality ones (e.g., with noisy labels) are downplayed.\n\nThis can be done by scaling the above 0/1 indicator function (e.g., Equation 4.2) with the weight (Figure 2): Plugging fdata-w into the SE (Equation 3.2) with the same other speci\ufb01cation of supervised MLE (\u03b1 = 1, \u03b2 = \u03f5), we get the update rule of model parameters \u03b8 in the student-step (Equation 3.3): which is the familiar weighted supervised MLE. The weights w can be speci\ufb01ed a priori based on heuristics, for example, using inverse class frequency", "e7fb9733-66d7-4ea8-9859-68f289d6a3e9": "This policy is built by the planning process while the agent is still wandering near the start state. By the end of the third episode a complete optimal policy will have been found and perfect performance attained. In Dyna-Q, learning and planning are accomplished by exactly the same algorithm, operating on real experience for learning and on simulated experience for planning. Because planning proceeds incrementally, it is trivial to intermix planning and acting. Both proceed as fast as they can. The agent is always reactive and always deliberative, responding instantly to the latest sensory information and yet always planning in the background. Also ongoing in the background is the model-learning process. As new information is gained, the model is updated to better match reality. As the model changes, the ongoing planning process will gradually compute a di\u21b5erent way of behaving to match the new model.\n\nExercise 8.1 The nonplanning method looks particularly poor in Figure 8.3 because it is a one-step method; a method using multi-step bootstrapping would do better. Do you think one of the multi-step bootstrapping methods from Chapter 7 could do as well as the Dyna method? Explain why or why not", "a74c57a5-8567-401a-a675-c93f73829a9b": "e The homework is worth 0% credit 48 hours after exceeding the late day limit. You must turn in all assignments, even if for zero credit, in order to pass the course. http://zhiting.ucsd.edu/teaching/dsc291winter2023/logistics.html  DSC 291 Machine Learning with Few Labels   Paper Presentation  Each student will give an oral presentation on a research paper that is broadly related to machine learning. Each talk is 10 mins in length, including 8 mins for presentation and 2 mins for QA/discussion. Each student will need to sign up for the presentation in a google sheet (TBA).\n\nCourse Project  The course project will be carried out in groups of 3 or 4 people, and has four main parts: a proposal, a midway report, a final report, and an oral presentation. Please see the project page for more information about the final project. Machine Learning with Few Labels  \u00a9 Copyright 2023 UC San Diego. Powered by Jeky!! with al-folio theme. http://zhiting.ucsd.edu/teaching/dsc291winter2023/logistics.html", "bbfad7e3-4092-4a25-915f-88aec7cb367d": "5.19 (\u22c6) www Derive the expression (5.85) for the outer product approximation to the Hessian matrix for a network having a single output with a logistic sigmoid output-unit activation function and a cross-entropy error function, corresponding to the result (5.84) for the sum-of-squares error function.\n\n5.20 (\u22c6) Derive an expression for the outer product approximation to the Hessian matrix for a network having K outputs with a softmax output-unit activation function and a cross-entropy error function, corresponding to the result (5.84) for the sum-ofsquares error function. 5.21 (\u22c6 \u22c6 \u22c6) Extend the expression (5.86) for the outer product approximation of the Hessian matrix to the case of K > 1 output units. Hence, derive a recursive expression analogous to (5.87) for incrementing the number N of patterns and a similar expression for incrementing the number K of outputs. Use these results, together with the identity (5.88), to \ufb01nd sequential update expressions analogous to (5.89) for \ufb01nding the inverse of the Hessian by incrementally including both extra patterns and extra outputs", "d9bb1ff0-d04b-47eb-92f2-d4a471de9f56": "These results suggest that the hippocampus is critical for the statetransition part of an animal\u2019s environment model, and that it is part of a system that uses the model to simulate possible future state sequences to assess the consequences of possible courses of action: a form of planning. The results described above add to a voluminous literature on neural mechanisms underlying goal-directed, or model-based, learning and decision making, but many questions remain unanswered. For example, how can areas as structurally similar as the DLS and DMS be essential components of modes of learning and behavior that are as di\u21b5erent as model-free and model-based algorithms? Are separate structures responsible for (what we call) the transition and reward components of an environment model?\n\nIs all planning conducted at decision time via simulations of possible future courses of action as the forward sweeping activity in the hippocampus suggests? In other words, is all planning something like a rollout algorithm (Section 8.10)? Or are models sometimes engaged in the background to re\ufb01ne or recompute value information as illustrated by the Dyna architecture (Section 8.2)? How does the brain arbitrate between the use of the habit and goal-directed systems? Is there, in fact, a clear separation between the neural The evidence is not pointing to a positive answer to this last question", "69a0fa07-4307-43ec-b7f6-018db58a8570": "How can each reinforcement learning agent in a team learn to \u201cdo the right thing\u201d so that the collective action of the team is highly rewarded? An interesting result is that if each agent can learn e\u21b5ectively despite its reward signal being corrupted by a large amount of noise, and despite its lack of access to complete state information, then the population as a whole will learn to produce collective actions that improve as evaluated by the common reward signal, even when the agents cannot communicate with one another. Each agent faces its own reinforcement learning task in which its in\ufb02uence on the reward signal is deeply buried in the noise created by the in\ufb02uences of other agents.\n\nIn fact, for any agent, all the other agents are part of its environment because its input, both the part conveying state information and the reward part, depends on how all the other agents are behaving. Furthermore, lacking access to the actions of the other agents, indeed lacking access to the parameters determining their policies, each agent can only partially observe the state of its environment. This makes each team member\u2019s learning task very di\ufb03cult, but if each uses a reinforcement learning algorithm able to increase a reward signal even under these di\ufb03cult conditions, teams of reinforcement learning agents can learn to produce collective actions that improve over time as evaluated by the team\u2019s common reward signal", "7a56bcc8-8880-4d06-b437-a4e14722c345": "Thus the density takes the same form in the new variable as in the original one, and so the density is independent of the choice of origin.\n\nWe would like to choose a prior distribution that re\ufb02ects this translation invariance property, and so we choose a prior that assigns equal probability mass to an interval A \u2a7d \u00b5 \u2a7d B as to the shifted interval A \u2212 c \u2a7d \u00b5 \u2a7d B \u2212 c. This implies \ufffd B and because this must hold for all choices of A and B, we have which implies that p(\u00b5) is constant. An example of a location parameter would be the mean \u00b5 of a Gaussian distribution. As we have seen, the conjugate prior distribution for \u00b5 in this case is a Gaussian p(\u00b5|\u00b50, \u03c32 0) = N(\u00b5|\u00b50, \u03c32 0), and we obtain a noninformative prior by taking the limit \u03c32 0 \u2192 \u221e. Indeed, from (2.141) and (2.142) we see that this gives a posterior distribution over \u00b5 in which the contributions from the prior vanish. As a second example, consider a density of the form where \u03c3 > 0", "d6871485-4134-4a67-8081-62a4a31c22af": "382  CHAPTER 10.\n\nSEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  eee Se  rea  N  \u2018lus  Figure 10.8: Introducing the state variable in the graphical model of the RNN, even though it is a deterministic function of its inputs, helps to see how we can obtain a very efficient parametrization, based on equation 10.5. Every stage in the sequence (forh and y) involves the same structure (the same number of inputs for each node) and can share the same parameters with the other stages. hidden units in the graphical model reveals that the RNN provides an efficient parametrization of the joint distribution over the observations. Suppose that we represented an arbitrary joint distribution over discrete values with a tabular representation\u2014an array containing a separate entry for each possible assignment of values, with the value of that entry giving the probability of that assignment occurring. If y can take on k different values, the tabular representation would have O(k7) parameters. By comparison, because of parameter sharing, the number of parameters in the RNN is O(1) as a function of sequence length. The number of parameters in the RNN may be adjusted to control model capacity but is not forced to scale with sequence length", "201a163c-ee6e-4629-82a4-cd034f845fd6": ", D that satisfy Because this basis is complete, each data point can be represented exactly by a linear combination of the basis vectors where the coefficients ani will be different for different data points. This simply corresponds to a rotation of the coordinate system to a new system defined by the {Ui}, and the original D components {Xnl' ... , XnD} are replaced by an equivalent set {anl' ... ,anD}. Taking the inner product with Uj, and making use of the orthonormality property, we obtain anj = x;Uj, and so without loss of generality we can write D Our goal, however, is to approximate this data point using a representation involving a restricted number M < D of variables corresponding to a projection onto a lower-dimensional subspace. The M -dimensional linear subspace can be represented, without loss of generality, by the first M of the basis vectors, and so we approximate each data point X n by where the {Zni} depend on the particular data point, whereas the {bd are constants that are the same for all data points", "1ea9e24d-29f1-48c2-93dc-d5bac1fe7dbf": "APPLICATIONS  https://www.deeplearningbook.org/contents/applications.html    VUYS PLOUUCL, USECL SPCLLUS SULLIC GINOULLL UL LLOLE ULL LUE PLUUUCL, USCL SPCLLUS time visiting a page for the product, and so fort n). _ This often ends up being either a regression problem (predicting some conditional expected value) or a probabilistic classification pro jlem (predicting the conditional probability of some discrete event). The early work on recommender systems relied on minimal information as inputs for these predictions: the user ID and the item ID. In this context, the only way to generalize is to rely on the similarity between the patterns of values of the target variable for different users or for different items. Suppose that user 1 and user 2 both like items A, B and C. From this, we may infer that user 1 and user 2 have similar tastes. If user 1 likes item D, then this should be a strong cue that user 2 will also like D. Algorithms based on this principle come under the name of collaborative filtering", "8997739f-89a8-4a17-8fd0-bc210dfe3253": "This is an example of a Hebbian learning rule  often summarized with the mnemonic \u201cfire together, wire together.\u201d Hebbian learning rules are among the oldest hypothesized explanations for learning in biological systems and remain relevant today . Other learning algorithms that use more information than local statistics seem to require us to hypothesize the existence of more machinery than this. For example, for the brain to implement back-propagation in a multilayer perceptron, it seems necessary for the brain to maintain a secondary communication network for transmitting gradient information backward through the network. Proposals for biologically plausible implementations (and approximations) of back-propagation have been made  but remain to be validated, and Bengio  links back-propagation of gradients to inference in energy-based models similar to the Boltzmann machine (but with continuous latent variables).\n\nThe negative phase of Boltzmann machine learning is somewhat harder to explain from a biological point of view. As argued in section 18.2, dream sleep may be a form of negative phase sampling. This idea is more speculative though. 20.2", "dd923d8d-d935-4cb1-bf4b-ba5176b66d7e": "Nonetheless, they are useful learning algorithms when computational resources are constrained. We can also build intuition for more sophisticated learning algorithms by thinking about the similarities and differences between sophisticated algorithms and k-nearest neighbors or decision tree baselines. See Murphy , Bishop , Hastie et al. or other machine learning textbooks for more material on traditional supervised learning algorithms. 5.8 Unsupervised Learning Algorithms  Recall from section 5.1.3 that unsupervised algorithms are those that experience only \u201cfeatures\u201d but not a supervision signal. The distinction between supervised and unsupervised algorithms is not formally and rigidly defined because there is no objective test for distinguishing whether a value is a feature or a target provided by a supervisor. Informally, unsupervised learning refers to most attempts to extract information from a distribution that do not require human labor to annotate  142 CHAPTER 5", "7bfcf17c-cdbe-4f39-bfd3-c24fc3408ef5": "If we train a neural network on a new classification task and it achieves 5 percent test error, we have no straightforward way of knowing if this is the expected behavior or suboptimal behavior. A further difficulty is that most machine learning models have multiple parts that are each adaptive. If one part is broken, the other parts can adapt and still  https://www.deeplearningbook.org/contents/guidelines.html    achieve roughly acceptable performance. For example suppose that we are training a neural net with several layers parametrized by weights and biases 6.\n\nSuppose further that we have manually implemented the gradient descent rule for each  parameter separately, and we made an error in the update for the biases: b+ b-a, (11.4)  where ais the learning rate. This erroneous update does not use the gradient at all. It causes the biases to constantly become negative throughout learning, which  431  CHAPTER 11. PRACTICAL METHODOLOGY  is clearly not a correct implementation of any reasonable learning algorithm. The bug may not be apparent just from examining the output of the model though. Depending on the distribution of the input, the weights may be able to adapt to compensate for the negative biases", "24a8ee7e-2a24-4258-b282-046988074869": "Each such conditional distribution will be conditioned only on the parents of the corresponding node in the graph.\n\nFor instance, x5 will be conditioned on x1 and x3. The joint distribution of all 7 variables The reader should take a moment to study carefully the correspondence between (8.4) and Figure 8.2. We can now state in general terms the relationship between a given directed graph and the corresponding distribution over the variables. The joint distribution de\ufb01ned by a graph is given by the product, over all of the nodes of the graph, of a conditional distribution for each node conditioned on the variables corresponding to the parents of that node in the graph. Thus, for a graph with K nodes, the joint distribution is given by where pak denotes the set of parents of xk, and x = {x1, . , xK}. This key equation expresses the factorization properties of the joint distribution for a directed graphical model. Although we have considered each node to correspond to a single variable, we can equally well associate sets of variables and vector-valued variables with the nodes of a graph", "7fdcd7ef-2713-4187-ad69-013ba4a2af27": "2.\n\nAnalogous to the Gaussian example, for any \u201dlocation-scale\u201d family of distributions we can choose the standard distribution (with location = 0, scale = 1) as the auxiliary variable \u03f5, and let g(.) = location + scale \u00b7 \u03f5. Examples: Laplace, Elliptical, Student\u2019s t, Logistic, Uniform, Triangular and Gaussian distributions. 3. Composition: It is often possible to express random variables as different transformations of auxiliary variables. Examples: Log-Normal (exponentiation of normally distributed variable), Gamma (a sum over exponentially distributed variables), Dirichlet (weighted sum of Gamma variates), Beta, Chi-Squared, and F distributions. When all three approaches fail, good approximations to the inverse CDF exist requiring computations with time complexity comparable to the PDF (see e.g. for some methods)", "9551d6f7-0d74-40ff-9917-02a3f257740c": "Unlike the bacterium, however, the neuron\u2019s synaptic strengths retain information about its past trial-and-error behavior. If this view of the behavior of a neuron (or just one type of neuron) is plausible, then the closed-loop nature of how the neuron interacts with its environment is important for understanding its behavior, where the neuron\u2019s environment consists of the rest of the animal together with the environment with which the animal as a whole interacts. Klopf\u2019s hedonistic neuron hypothesis extended beyond the idea that individual neurons are reinforcement learning agents. He argued that many aspects of intelligent behavior can be understood as the result of the collective behavior of a population of self-interested hedonistic neurons interacting with one another in an immense society or economic system making up an animal\u2019s nervous system. Whether or not this view of nervous systems is useful, the collective behavior of reinforcement learning agents has implications for neuroscience. We take up this subject next", "7185a808-6eec-4cfd-aeb9-9317d67baabc": "9.7 (\u22c6) www Verify that maximization of the complete-data log likelihood (9.36) for a Gaussian mixture model leads to the result that the means and covariances of each component are \ufb01tted independently to the corresponding group of data points, and the mixing coef\ufb01cients are given by the fractions of points in each group. 9.8 (\u22c6) www Show that if we maximize (9.40) with respect to \u00b5k while keeping the responsibilities \u03b3(znk) \ufb01xed, we obtain the closed form solution given by (9.17). and suppose that we partition the vector x into two parts so that x = (xa, xb). Show that the conditional density p(xb|xa) is itself a mixture distribution and \ufb01nd expressions for the mixing coef\ufb01cients and for the component densities. 9.11 (\u22c6) In Section 9.3.2, we obtained a relationship between K means and EM for Gaussian mixtures by considering a mixture model in which all components have covariance \u03f5I.\n\nShow that in the limit \u03f5 \u2192 0, maximizing the expected completedata log likelihood for this model, given by (9.40), is equivalent to minimizing the distortion measure J for the K-means algorithm given by (9.1)", "80d20b01-cc61-42a1-91c7-6fde72fdfdc4": "We now consider the problem of maximizing f(x) subject to an inequality constraint of the form g(x) \u2a7e 0, as illustrated in Figure E.3.\n\nThere are now two kinds of solution possible, according to whether the constrained stationary point lies in the region where g(x) > 0, in which case the constraint is inactive, or whether it lies on the boundary g(x) = 0, in which case the constraint is said to be active. In the former case, the function g(x) plays no role and so the stationary condition is simply \u2207f(x) = 0. This again corresponds to a stationary point of the Lagrange function (E.4) but this time with \u03bb = 0. The latter case, where the solution lies on the boundary, is analogous to the equality constraint discussed previously and corresponds to a stationary point of the Lagrange function (E.4) with \u03bb \u0338= 0. Now, however, the sign of the Lagrange multiplier is crucial, because the function f(x) will only be at a maximum if its gradient is oriented away from the region g(x) > 0, as illustrated in Figure E.3", "8e262d70-e17e-4777-8b0b-a2889c008a1b": "REGULARIZATION FOR DEEP LEARNING  >@) Cr@r\u00ae) \u00a9)  pshared  https://www.deeplearningbook.org/contents/regularization.html    Figure 7.2: Multitask learning can be cast in several ways in deep learning frameworks, and this figure illustrates the common situation where the tasks share a common input but involve different target random variables. The lower layers of a deep network (whether it is supervised and feedforward or includes a generative component with downward arrows)  can be shared across such tasks, while task-specific parameters (associated respectively with the weights into and from h\u2122 and h)) can be learned on top of those yielding a shared representation h&\"\u00b0Y, The underlying assumption is that there exists a common pool of factors that explain the variations in the input x, while each task is associated with a subset of these factors.\n\nIn this example, it is additionally assumed that top-level hidden units h and A) are specialized to each task (respectively predicting y and y \u2018)), while some intermediate-level representation h \"*\"\u00b09) is shared across all tasks", "70f27561-062c-4e40-87a1-748f23cb39b5": "A popular choice is the squared loss function, for which the optimal prediction is given by the conditional expectation, which we denote by h(x) and which is given by At this point, it is worth distinguishing between the squared loss function arising from decision theory and the sum-of-squares error function that arose in the maximum likelihood estimation of model parameters. We might use more sophisticated techniques than least squares, for example regularization or a fully Bayesian approach, to determine the conditional distribution p(t|x). These can all be combined with the squared loss function for the purpose of making predictions.\n\nWe showed in Section 1.5.5 that the expected squared loss can be written in the form Recall that the second term, which is independent of y(x), arises from the intrinsic noise on the data and represents the minimum achievable value of the expected loss. The \ufb01rst term depends on our choice for the function y(x), and we will seek a solution for y(x) which makes this term a minimum. Because it is nonnegative, the smallest that we can hope to make this term is zero", "fed9c065-86d7-44ed-9812-fd0eae720683": "The max-sum algorithm is more complex because the messages are functions of node variables x and hence comprise a set of K values for each possible state of x. Unlike max-sum, however, ICM is not guaranteed to \ufb01nd a global maximum even for tree-structured graphs. The sum-product and max-sum algorithms provide ef\ufb01cient and exact solutions to inference problems in tree-structured graphs. For many practical applications, however, we have to deal with graphs having loops. The message passing framework can be generalized to arbitrary graph topologies, giving an exact inference procedure known as the junction tree algorithm . Here we give a brief outline of the key steps involved. This is not intended to convey a detailed understanding of the algorithm, but rather to give a \ufb02avour of the various stages involved. If the starting point is a directed graph, it is \ufb01rst converted to an undirected graph by moralization, whereas if starting from an undirected graph this step is not required", "b62ad49f-5557-4bef-9ac3-e8c4215bbf00": "In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 1455\u20131460, Hong Kong, China.\n\nAssociation for Computational Linguistics. Javid Ebrahimi, Daniel Lowd, and Dejing Dou. 2018a. On adversarial examples for character-level neural machine translation. Javid Ebrahimi, Anyi Rao, Daniel Lowd, and Dejing Dou. 2018b. Hot\ufb02ip: White-box adversarial examples for text classi\ufb01cation. In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers), pages 31\u201336. Sergey Edunov, Myle Ott, Michael Auli, and David Grangier. 2018. Understanding back-translation at scale. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 489\u2013500, Brussels, Belgium. Association for Computational Linguistics. Marzieh Fadaee, Arianna Bisazza, and Christof Monz. 2017", "0689da87-6c32-47b8-9f11-18a563c13c0f": "Various works on GAN exten- sions such as DCGANs, CycleGANs and Progressively-Growing GANs  were pub- lished in 2015, 2017, and 2017, respectively. Neural Style Transfer was sped up with the development of Perceptual Losses by Johnson et al. in 2016. Applying meta- learning concepts from NAS to Data Augmentation has become increasingly popular with works such as Neural Augmentation , Smart Augmentation , and Auto- Augment  published in 2017, 2017, and 2018, respectively. Applying Deep Learning to medical imaging has been a popular application for CNNs since they became so popular in 2012. Deep Learning and medical imaging became increasingly popular with the demonstration of dermatologist-level skin can- cer detection by Esteva et al. in 2017. The use of GANs in medical imaging is well documented in a survey by Yi et al. This survey covers the use of GANs in reconstruction such as CT denoising , accelerated magnetic resonance imaging , PET denoising , and the applica- tion of super-resolution GANs in retinal vasculature segmentation . Additionally, Yi et al", "ed14331c-5423-4448-b38a-e580c455086e": "If we had separate parameters for each value of the time index, we could not generalize to sequence lengths not seen during training, nor share statistical strength across different sequence lengths and across different positions in time.\n\nSuch sharing is particularly important when a specific piece of information can occur at multiple positions within the sequence. For example, consider the two sentences \u201cI went to Nepal in 2009\u201d and \u201cIn 2009, I went to Nepal.\u201d If we ask a machine learning model to read each sentence and extract the year in which the narrator went to Nepal, we would like it to recognize the year 2009 as the relevant piece of information, whether it appears in the sixth  https://www.deeplearningbook.org/contents/rnn.html    367  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  word or in the second word of the sentence. Suppose that we trained a feedforward network that processes sentences of fixed length. A traditional fully connected feedforward network would have separate parameters for each input feature, so it would need to learn all the rules of the language separately at each position in the sentence. By comparison, a recurrent neural network shares the same weights across several time steps", "cb35782f-e62e-41f8-ac48-c600f4c39f6f": "If we perturb each possible pair of weights in turn, we obtain Again, by using a symmetrical central differences formulation, we ensure that the residual errors are O(\u03f52) rather than O(\u03f5). Because there are W 2 elements in the Hessian matrix, and because the evaluation of each element requires four forward propagations each needing O(W) operations (per pattern), we see that this approach will require O(W 3) operations to evaluate the complete Hessian. It therefore has poor scaling properties, although in practice it is very useful as a check on the software implementation of backpropagation methods. A more ef\ufb01cient version of numerical differentiation can be found by applying central differences to the \ufb01rst derivatives of the error function, which are themselves calculated using backpropagation. This gives Because there are now only W weights to be perturbed, and because the gradients can be evaluated in O(W) steps, we see that this method gives the Hessian in O(W 2) operations", "e26480b1-5812-4745-aba2-1eb686c18e80": "As with maximum likelihood, this leads to a two-pass forward-backward recursion to compute posterior probabilities. The directed graph that represents the hidden Markov model, shown in Figure 13.5, is a tree and so we can solve the problem of \ufb01nding local marginals for the hidden variables using the sum-product algorithm. Not surprisingly, this turns out to Section 8.4.4 be equivalent to the forward-backward algorithm considered in the previous section, and so the sum-product algorithm therefore provides us with a simple way to derive the alpha-beta recursion formulae. We begin by transforming the directed graph of Figure 13.5 into a factor graph, of which a representative fragment is shown in Figure 13.14.\n\nThis form of the factor graph shows all variables, both latent and observed, explicitly. However, for the purpose of solving the inference problem, we shall always be conditioning on the variables x1, . , xN, and so we can simplify the factor graph by absorbing the emission probabilities into the transition probability factors", "29973a23-f814-4162-858c-8b6b87751088": "5.7.3 Other Simple Supervised Learning Algorithms  We have already briefly encountered another nonprobabilistic supervised learning algorithm, nearest neighbor regression. More generally, k-nearest neighbors is a family of techniques that can be used for classification or regression. As a nonparametric learning algorithm, k-nearest neighbors is not restricted to a fixed number of parameters. We usually think of the k-nearest neighbors algorithm  https://www.deeplearningbook.org/contents/ml.html    as not having any parameters but rather implementing a simple function of the training data. In fact, there is not even really a training stage or learning process. Instead, at test time, when we want to produce an output \u00a5 for a new test input 2,  we find the k-nearest neighbors to x in the training data X. We then return the average of the corresponding y values in the training set. This works for essentially any kind of supervised learning where we can define an average over y values. In the case of classification, we can average over one-hot code vectors \u00a2 with cy = 1 and c; = 0 for all other values of 7", "d380507b-e6e5-487a-8306-d49c1156eec9": "This arrangement brings together presynaptic activity of cortical neurons, postsynaptic activity of medium spiny neurons, and input from dopamine neurons. What actually occurs at these spines is complex and not completely understood. Figure 15.1 hints at the complexity by showing two types of receptors for dopamine, receptors for glutamate\u2014the neurotransmitter of the cortical inputs\u2014and multiple ways that the various signals can interact. But evidence is mounting that changes in the e\ufb03cacies of the synapses on the pathway from the cortex to the striatum, which neuroscientists call corticostriatal synapses, depend critically on appropriately-timed dopamine signals. Dopamine neurons respond with bursts of activity to intense, novel, or unexpected visual and auditory stimuli that trigger eye and body movements, but very little of their activity is related to the movements themselves.\n\nThis is surprising because degeneration of dopamine neurons is a cause of Parkinson\u2019s disease, whose symptoms include motor disorders, particularly de\ufb01cits in self-initiated movement", "fd90eea0-8755-4025-9451-b234a9546b1a": "DEEP GENERATIVE MODELS  og-likelihood it assigns to the data, or its ability to classify inputs. See figure 20.4 for an illustration of the training procedure. This greedy layer-wise training procedure is not just coordinate ascent.\n\nIt bears some passing resemblance to coordinate ascent because we optimize one subset of he parameters at each step. The two methods differ because the greedy layer-wise raining procedure uses a different objective function at each step. Greedy layer-wise pretraining of a DBM differs from greedy layer-wise pre- raining of a DBN. The parameters of each individual RBM may be copied to he corresponding DBN directly. In the case of the DBM, the RBM parameters must be modified before inclusion in the DBM. A layer in the middle of the stack of RBMs is trained with only bottom-up input, but after the stack is combined  o form the DBM, the layer will have both bottom-up and top-down input. To account for this effect, Salakhutdinov and Hinton  advocate dividing the weights of all but the top and bottom RBM in half before inserting them into the DBM", "288ab57c-8d66-4c72-9937-0c0b7547d057": "The quantities \u03f5m represent weighted measures of the error rates of each of the base classi\ufb01ers on the data set. We therefore see that the weighting coef\ufb01cients \u03b1m de\ufb01ned by (14.17) give greater weight to the more accurate classi\ufb01ers when computing the overall output given by (14.19). The AdaBoost algorithm is illustrated in Figure 14.2, using a subset of 30 data points taken from the toy classi\ufb01cation data set shown in Figure A.7. Here each base learners consists of a threshold on one of the input variables. This simple classi\ufb01er corresponds to a form of decision tree known as a \u2018decision stumps\u2019, i.e., a deciSection 14.4 sion tree with a single node. Thus each base learner classi\ufb01es an input according to whether one of the input features exceeds some threshold and therefore simply partitions the space into two regions separated by a linear decision surface that is parallel to one of the axes. Boosting was originally motivated using statistical learning theory, leading to upper bounds on the generalization error.\n\nHowever, these bounds turn out to be too loose to have practical value, and the actual performance of boosting is much better than the bounds alone would suggest. Friedman et al", "7a653d6b-bc33-4a5f-acb4-6af5307f1d46": "Input: a function F(s, a) returning the set of (indices of) active features for s, a Input: a policy \u21e1 (if estimating q\u21e1) Algorithm parameters: step size \u21b5 > 0, trace decay rate \u03bb 2  Initialize: w = (w1, . , wd)> 2 Rd (e.g., w = 0), z = (z1, . , zd)> 2 Rd Example 12.2: Sarsa(\u03bb) on Mountain Car Figure 12.10 (left) on the next page shows results with Sarsa(\u03bb) on the Mountain Car task introduced in Example 10.1. The function approximation, action selection, and environmental details were exactly as in Chapter 10, and thus it is appropriate to numerically compare these results with the Chapter 10 results for n-step Sarsa (right side of the \ufb01gure). The earlier results varied the update length n whereas here for Sarsa(\u03bb) we vary the trace parameter \u03bb, which plays a similar role", "5a746a12-5b56-4544-8d18-8f732f7e87d8": "LINEAR ALGEBRA by the definition of the L? norm, equation 2.30) =a! x\u2014a'g(c) \u2014g(c)'x + g(c)' g(c) (2.57) by the distributive property) =a! x \u20142a'g(c) + g(c) 'g(c) (2.58) because the scalar g(c)! a is equal to the transpose of itself). We can now change the function being minimized again, to omit the first term, since this term does not depend on c:  c= arg min\u20142a ' 9(\u00a2) + g(e) 'g(c). (2.59)  To make further progress, we must substitute in the definition of g(c):  c =argmin\u201422'De+c! 'D' De (2.60) c  = argmin \u2122De+e'he (2.61) c \u20142x  https://www.deeplearningbook.org/contents/linear_algebra.html     (by the orthogonality and unit norm constraints on D)  = arg min \u20142%'De+ce'e", "4822c774-39f5-468c-91c7-77c846e8a74e": "One of the key factors responsible for the improvement in neural network\u2019s accuracy and the improvement of the complexity of tasks they can solve between the 1980s and today is the dramatic increase in the size of the networks we use.\n\nAs we saw in section 1.2.3, network sizes have grown exponentially for the past three decades, yet artificial neural networks are only as large as the nervous systems of insects. Because the size of neural networks is critical, deep learning requires high  https://www.deeplearningbook.org/contents/applications.html    438  CHAPTER 12. APPLICATIONS  performance hardware and software infrastructure. 12.1.1 Fast CPU Implementations  Traditionally, neural networks were trained using the CPU of a single machine. Today, this approach is generally considered insufficient. We now mostly use GPU computing or the CPUs of many machines networked together. Before moving to these expensive setups, researchers worked hard to demonstrate that CPUs could not manage the high computational workload required by neural networks. A description of how to implement efficient numerical CPU code is beyond the scope of this book, but we emphasize here that careful implementation for specific CPU families can yield large improvements", "ecef4b52-44fd-4171-a493-ae84f14eb2a5": "What if one has no idea what the rewards should be but there is another agent, perhaps a person, who is already expert at the task and whose behavior can be observed? In this case one can use methods known variously as \u201cimitation learning,\u201d \u201clearning from demonstration,\u201d and \u201capprenticeship learning.\u201d The idea here is to bene\ufb01t from the expert agent but leave open the possibility of eventually performing better.\n\nLearning from an expert\u2019s behavior can be done either by learning directly by supervised learning or by extracting a reward signal using what is known as \u201cinverse reinforcement learning\u201d and then using a reinforcement learning algorithm with that reward signal to learn a policy. The task of inverse reinforcement learning as explored by Ng and Russell  is to try to recover the expert\u2019s reward signal from the expert\u2019s behavior alone. This cannot be done exactly because a policy can be optimal with respect to many di\u21b5erent reward signals (for example, any reward signal that gives the same reward for all states and actions), but it is possible to \ufb01nd plausible reward signal candidates. Unfortunately, strong assumptions are required, including knowledge of the environment\u2019s dynamics and of the feature vectors in which the reward signal is linear. The method also requires completely solving the problem (e.g., by dynamic programming methods) multiple times", "87613d59-bf7b-4916-a095-b7e36f6af7cb": "6.1 Example: Learning XOR  To make the idea of a feedforward network more concrete, we begin with an example of a fully functioning feedforward network on a very simple task: learning the XOR function. The XOR function (\u201cexclusive or\u201d) is an operation on two binary values, 21 and x2. When exactly one of these binary values is equal to 1, the XOR function returns 1. Otherwise, it returns 0. The XOR function provides the target function  https://www.deeplearningbook.org/contents/mlp.html    y = J7(#) that we want to learn. Our model proyides a function y= f(#@), and pur earning algorithm will adapt the parameters 9 to make / as similar as possible tof. In this simple example, we will not be concerned with statistical generalization. We want our network to perform correctly on the four points X = {\", and \"}.\n\nWe will train the network on all four of these points. The only challenge is to fit the training set. We can treat this problem as a regression problem and use a mean squared error loss function", "b1da756e-80d6-4937-b2f6-cae9260d14f7": "Suppose, perhaps as part of a larger MDP, there are two states whose estimated values are of the functional form w and 2w, where the parameter vector w consists of only a single component w. This occurs under linear function approximation if the feature vectors for the two states are each simple numbers (single-component vectors), in this case 1 and 2. In the \ufb01rst state, only one action is available, and it results deterministically in a transition to the second state with a reward of 0: where the expressions inside the two circles indicate the two state\u2019s values. Suppose initially w = 10. The transition will then be from a state of estimated value 10 to a state of estimated value 20. It will look like a good transition, and w will be increased to raise the \ufb01rst state\u2019s estimated value. If \u03b3 is nearly 1, then the TD error will be nearly 10, and, if \u21b5 = 0.1, then w will be increased to nearly 11 in trying to reduce the TD error. However, the second state\u2019s estimated value will also be increased, to nearly 22", "c46e64f9-cddf-4ddc-97a3-950a57c51387": "If we have n different microphones placed in different locations, ICA can detect the changes in the volume between each speaker as heard by each microphone and separate the signals so that each h; contains only one person speaking clearly. This is commonly used in neuroscience for electroencephalography, a technology for recording electrical signals originating in the brain. Multiple electrode sensors placed on the subject\u2019s head are used to measure many electrical signals coming from the body. The experimenter is typically only interested in signals from the brain, but signals from the subject\u2019s heart and eyes are strong enough to confound measurements taken at the subject\u2019s scalp.\n\nThe signals arrive at the electrodes mixed together, so ICA is necessary to separate the electrical signature of the heart from the signals originating in the brain, and to separate signals in different brain regions from each other. As mentioned before, many variants of ICA are possible. Some add some noise in the generation of x rather than using a deterministic decoder. Most do not use the maximum likelihood criterion, but instead aim to make the elements of h =W\u2014'a independent from each other. Many criteria that accomplish this goal are possible. Equation 3.47 requires taking the determinant of W, which can be an expensive and numerically unstable operation", "c4a124f8-cc37-4f69-a76d-5ca953d7f69c": "For example, suppose the states in the examples are the states generated by interaction (or simulated interaction) with the environment using policy \u21e1. Because the true value of a state is the expected value of the return following it, the Monte Carlo target Ut .= Gt is by de\ufb01nition an unbiased estimate of v\u21e1(St). With this choice, the general SGD method (9.7) converges to a locally optimal approximation to v\u21e1(St). Thus, the gradient-descent version of Monte Carlo state-value prediction is guaranteed to \ufb01nd a locally optimal solution. Pseudocode for a complete algorithm is shown in the box below. Gradient Monte Carlo Algorithm for Estimating \u02c6v \u21e1 v\u21e1 Generate an episode S0, A0, R1, S1, A1, . , RT , ST using \u21e1 Loop for each step of episode, t = 0, 1,", "41a1830a-cac6-47bf-9897-80cd345b77bc": "S., Watkins, C. J. C. H. Learning and sequential decision making. In M. Gabriel and J. Moore (Eds. ), Learning and Computational Neuroscience: Foundations of Adaptive Networks, pp. 539\u2013602.\n\nMIT Press, Cambridge, MA. Baxter, J., Bartlett, P. L. In\ufb01nite-horizon policy-gradient estimation. Journal of Arti\ufb01cial Baxter, J., Bartlett, P. L., Weaver, L. Experiments with in\ufb01nite-horizon, policy-gradient estimation. Journal of Arti\ufb01cial Intelligence Research, 15:351\u2013381. Bellemare, M. G., Dabney, W., Munos, R. A distributional perspective on reinforcement Bellemare, M. G., Naddaf, Y., Veness, J., Bowling, M. The arcade learning environment: Bellemare, M", "fa386ba8-aa4d-4834-a7e7-4fba1b4b7d59": "The deep learning approach is often to figure out what the minimum amount of information we absolutely need is, and then to figure out how to get a reasonable approximation of that information as quickly as possible. 583  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  Figure 16.14: An RBM drawn as a Markov network. 16.7.1 Example: The Restricted Boltzmann Machine  The restricted Boltzmann machine (RBM) , or harmo- nium, is the quintessential example of how graphical models are used for deep learning. The RBM is not itself a deep model. Instead, it has a single layer of latent variables that may be used to learn a representation for the input", "a4a7ff2f-672a-41b9-be02-0bc7244ba89d": "However, there are not many comparative studies that show the performance differences of these different augmentations. One such study was conducted by Shijie et al. which compared GANs, WGANs, flipping, cropping, shifting, PCA jittering, color jittering, adding noise, rotation, and some combinations on the CIFAR-10 and ImageNet datasets. Additionally, the comparative study ranged across dataset sizes with the small set consisting of 2 k samples with 200 in each class, tthe medium set consisting of 10 k samples with 1 k in each class, and the large set consist- ing of 50 k samples with 5 k in each class. They also tested with 3 levels of augmentation, no augmentation, original plus same size of generated samples, and original plus double size of generated samples. They found that cropping, flipping, WGAN, and rotation gen- erally performed better than others. The combinations of flipping + cropping and flip- ping + WGAN were the best overall, improving classification performance on CIFAR-10 by + 3% and + 3.5%, respectively", "3e8e881c-598e-4471-8116-9d6337895f03": "In particular, we shall take the targets for class C1 to be N/N1, where N1 is the number of patterns in class C1, and N is the total number of patterns. This target value approximates the reciprocal of the prior probability for class C1. For class C2, we shall take the targets to be \u2212N/N2, where N2 is the number of patterns in class C2.\n\nThe sum-of-squares error function can be written Setting the derivatives of E with respect to w0 and w to zero, we obtain respectively From (4.32), and making use of our choice of target coding scheme for the tn, we obtain an expression for the bias in the form and where m is the mean of the total data set and is given by After some straightforward algebra, and again making use of the choice of tn, the second equation (4.33) becomes Exercise 4.6 where SW is de\ufb01ned by (4.28), SB is de\ufb01ned by (4.27), and we have substituted for the bias using (4.34). Using (4.27), we note that SBw is always in the direction of (m2 \u2212 m1). Thus we can write where we have ignored irrelevant scale factors. Thus the weight vector coincides with that found from the Fisher criterion", "a5617531-296b-43f6-bd9e-6bfe70f4f368": "Snorkel: rapid training data creation with weak supervision Alexander Ratner1 \u00b7 Stephen H. Bach1,2 \u00b7 Henry Ehrenberg1 \u00b7 Jason Fries1 \u00b7 Sen Wu1 \u00b7 Christopher R\u00e91 Received: 16 December 2018 / Revised: 15 May 2019 / Accepted: 25 June 2019 / Published online: 15 July 2019 \u00a9 The Author(s) 2019 Abstract Labeling training data is increasingly the largest bottleneck in deploying machine learning systems. We present Snorkel, a \ufb01rst-of-its-kind system that enables users to train state-of-the-art models without hand labeling any training data. Instead, users write labeling functions that express arbitrary heuristics, which can have unknown accuracies and correlations. Snorkel denoises their outputs without access to ground truth by incorporating the \ufb01rst end-to-end implementation of our recently proposed machine learning paradigm, data programming. We present a \ufb02exible interface layer for writing labeling functions based on our experience over the past year collaborating with companies, agencies, and research laboratories. In a user study, subject matter experts build models 2.8\u00d7 faster and increase predictive performance an average 45.5% versus seven hours of hand labeling", "59476af1-d334-4536-9c19-9703c57c36c1": "Typically we do not allow the precision matrix to be nondiagonal in this context, because some operations on the Gaussian distribution require inverting the matrix, and a diagonal matrix can be inverted trivially.\n\nIn the sections ahead, we will see that other forms of Boltzmann machines permit modeling the covariance structure, using various techniques to avoid inverting the precision matrix. 20.5.2 Undirected Models of Conditional Covariance  While the Gaussian RBM has been the canonical energy model for real-valued data, Ranzato et al. argue that the Gaussian RBM inductive bias is not well suited to the statistical variations present in some types of real-valued data, especially natural images. The problem is that much of the information content present in natural images is embedded in the covariance between pixels rather than in the raw pixel values. In other words, it is the relationships between pixels and not their absolute values where most of the useful information in images resides. Since the Gaussian RBM only models the conditional mean of the input given the hidden units, it cannot capture conditional covariance information. In response to these criticisms, alternative models have been proposed that attempt to better account for the covariance of real-valued data", "4e87b5de-35dc-4a41-bdb1-d2f03a862b77": "IEEE Computer Society. Sirovich, L. Turbulence and the dynamics of coherent structures. Quarterly Applied Mathematics 45(3), 561\u2013590. Smola, A. J. and P. Bartlett . Sparse greedy Gaussian process regression. In T. K. Leen, T. G. Dietterich, and V. Tresp (Eds. ), Advances in Neural Information Processing Systems, Volume 13, pp. 619\u2013625. MIT Press. Spiegelhalter, D. and S. Lauritzen . Sequential updating of conditional probabilities on directed graphical structures. Networks 20, 579\u2013605. Stinchecombe, M. and H. White . Universal approximation using feed-forward networks with non-sigmoid hidden layer activation functions. In International Joint Conference on Neural Networks, Volume 1, pp. 613\u2013618. IEEE", "1d8b8618-ba2a-41ea-a9d6-e224b446e22b": "We note that, if a patient who does not have cancer is incorrectly diagnosed as having cancer, the consequences may be some patient distress plus the need for further investigations. Conversely, if a patient with cancer is diagnosed as healthy, the result may be premature death due to lack of treatment. Thus the consequences of these two types of mistake can be dramatically different. It would clearly be better to make fewer mistakes of the second kind, even if this was at the expense of making more mistakes of the \ufb01rst kind. We can formalize such issues through the introduction of a loss function, also called a cost function, which is a single, overall measure of loss incurred in taking any of the available decisions or actions. Our goal is then to minimize the total loss incurred.\n\nNote that some authors consider instead a utility function, whose value they aim to maximize. These are equivalent concepts if we take the utility to be simply the negative of the loss, and throughout this text we shall use the loss function convention. Suppose that, for a new value of x, the true class is Ck and that we assign x to class Cj (where j may or may not be equal to k)", "7e898adb-6e32-467e-9c71-385a1c98a91e": "When training with a penalty on the norm of the weights, these configurations can be locally optimal, even if it is possible to significantly reduce J by making the weights larger. Explicit constraints implemented by reprojection can work much better in these cases because they do not encourage the weights to approach the origin.\n\nExplicit constraints implemented by reprojection have an effect only when the weights become large and attempt to leave the constraint region. 234  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  https://www.deeplearningbook.org/contents/regularization.html    Finally, explicit constraints with reprojection can be useful because they impose some stability on the optimization procedure. When using high learning rates, it is possible to encounter a positive feedback loop in which large weights induce large gradients, which then induce a large update to the weights. If these updates  consistently increase the size of the weights, then @ rapidly moves away from the origin until numerical overflow occurs. Explicit constraints with reprojection prevent this feedback loop from continuing to increase the magnitude of the weights without bound. Hinton et al. recommend using constraints combined with a high learning rate to enable rapid exploration of parameter space while maintaining some stability", "39acd09f-2a95-4079-b13b-7373f64993ea": "However, all these local minima arising from nonidentifiability are equivalent to each other in cost function value. As a result, these local minima are not a problematic form of nonconvexity. Local minima can be problematic if they have high cost in comparison to the global minimum. One can construct small neural networks, even without hidden units, that have local minima with higher cost than the global minimum (Sontag  281  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  https://www.deeplearningbook.org/contents/optimization.html    and Sussman, 1989; Brady et al., 1989; Gori and Tesi, 1992). If local minima with high cost are common, this could pose a serious problem for gradient-based optimization algorithms. Whether networks of practical interest have many local minima of high cost and whether optimization algorithms encounter them remain open questions. For many years, most practitioners believed that local minima were a common problem plaguing neural network optimization", "6a7278c3-38f5-488b-92e6-ff5191b997e3": "Academic Press, New York. Calabresi, P., Picconi, B., Tozzi, A., Filippo, M. D. Dopamine-mediated regulation of corticostriatal synaptic plasticity. Trends in Neuroscience, 30(5):211\u2013219. Camerer, C. Behavioral Game Theory: Experiments in Strategic Interaction. Princeton Campbell, D. T. Blind variation and selective survival as a general strategy in knowledgeprocesses. In M. C. Yovits and S. Cameron (Eds. ), Self-Organizing Systems, pp. 205\u2013231.\n\nPergamon, New York. Cao, X. R. Stochastic learning and optimization\u2014A sensitivity-based approach. Annual Cao, X. R., Chen, H. F. Perturbation realization, potentials, and sensitivity analysis of Markov processes. IEEE Transactions on Automatic Control, 42(10):1382\u20131393", "bd1118ce-7f67-4b1c-b05a-0dcd5d5336fe": "Our goal is to extend this model by making the basis functions \u03c6j(x) depend on parameters and then to allow these parameters to be adjusted, along with the coef\ufb01cients {wj}, during training. There are, of course, many ways to construct parametric nonlinear basis functions. Neural networks use basis functions that follow the same form as (5.1), so that each basis function is itself a nonlinear function of a linear combination of the inputs, where the coef\ufb01cients in the linear combination are adaptive parameters. This leads to the basic neural network model, which can be described a series of functional transformations. First we construct M linear combinations of the input variables x1, . , xD in the form where j = 1, . , M, and the superscript (1) indicates that the corresponding parameters are in the \ufb01rst \u2018layer\u2019 of the network. We shall refer to the parameters w(1) ji as weights and the parameters w(1) j0 as biases, following the nomenclature of Chapter 3", "f59bb3e7-f4b1-44d2-ae3b-4ccdf5bc75a1": "These are based on analytical approximations to the posterior distribution, for example by assuming that it factorizes in a particular way or that it has a speci\ufb01c parametric form such as a Gaussian. As such, they can never generate exact results, and so their strengths and weaknesses are complementary to those of sampling methods. In Section 4.4, we discussed the Laplace approximation, which is based on a local Gaussian approximation to a mode (i.e., a maximum) of the distribution. Here we turn to a family of approximation techniques called variational inference or variational Bayes, which use more global criteria and which have been widely applied. We conclude with a brief introduction to an alternative variational framework known as expectation propagation. Variational methods have their origins in the 18th century with the work of Euler, Lagrange, and others on the calculus of variations.\n\nStandard calculus is concerned with \ufb01nding derivatives of functions. We can think of a function as a mapping that takes the value of a variable as the input and returns the value of the function as the output", "364832b6-adc6-4eb8-aed0-a74836920e3f": "Shimansky  proposed a synaptic learning rule somewhat similar to Seung\u2019s mentioned above in which each synapse individually acts like a chemotactic bacterium. In this case a collection of synapses \u201cswims\u201d toward attractants in the high-dimensional space of synaptic weight values. Montague, Dayan, Person, and Sejnowski  proposed a chemotactic-like model of the bee\u2019s foraging behavior involving the neuromodulator octopamine. 15.10 Research on the behavior of reinforcement learning agents in team and game problems has a long history roughly occurring in three phases. To the best of our knowledge, the \ufb01rst phase began with investigations by the Russian mathematician and physicist M. L. Tsetlin. A collection of his work was published as Tsetlin  after his death in 1966. Our Sections 1.7 and 4.8 refer to his study of learning automata in connection to bandit problems", "7e385adb-d731-4eb3-a454-4acdfd511945": "Most implementations of minibatch stochastic gradient descent shuffle the dataset once and then pass through it multiple times. On the first pass, each minibatch is used to compute an unbiased estimate of the true generalization error.\n\nOn the second pass, the estimate becomes biased because it is formed by resampling values that have already been used, rather than obtaining new fair samples from the data-generating distribution. The fact that stochastic gradient descent minimizes generalization error is easiest to see in online learning, where examples or minibatches are drawn from a stream of data. In other words, instead of receiving a fixed-size training set, the learner is similar to a living being who sees a new example at each instant, with every example (x, y) coming from the data-generating distribution pdata (x, y). In this scenario, examples are never repeated; every experience is a fair sample from Pdata:  The equivalence is easiest to derive when both a and y are discrete", "d5642361-ac01-4b8d-a8f4-845488f3bc8c": "Monte Carlo methods sample and average returns for each state\u2013action pair much like the bandit methods we explored in Chapter 2 sample and average rewards for each action. The main di\u21b5erence is that now there are multiple states, each acting like a di\u21b5erent bandit problem (like an associative-search or contextual bandit) and the di\u21b5erent bandit problems are interrelated. That is, the return after taking an action in one state depends on the actions taken in later states in the same episode. Because all the action selections are undergoing learning, the problem becomes nonstationary from the point of view of the earlier state. To handle the nonstationarity, we adapt the idea of general policy iteration (GPI) developed in Chapter 4 for DP. Whereas there we computed value functions from knowledge of the MDP, here we learn value functions from sample returns with the MDP. The value functions and corresponding policies still interact to attain optimality in essentially the same way (GPI).\n\nAs in the DP chapter, \ufb01rst we consider the prediction problem (the computation of v\u21e1 and q\u21e1 for a \ufb01xed arbitrary policy \u21e1) then policy improvement, and, \ufb01nally, the control problem and its solution by GPI", "007486b6-b960-4ee6-8e1b-4e3354f4973a": "The main reason that random search finds good solutions faster than grid  https://www.deeplearningbook.org/contents/guidelines.html    search is that it has no wasted experimental runs, unlike in the case of grid search, when two values of a hyperparameter (given values of the other hyperparameters)  429  CHAPTER 11. PRACTICAL METHODOLOGY  would give the same result. In the case of grid search, the other hyperparameters would have the same values for these two runs, whereas with random search, they would usually have different values. Hence if the change between these two values does not marginally make much difference in terms of validation set error, grid search will unnecessarily repeat two equivalent experiments while random search will still give two independent explorations of the other hyperparameters. 11.4.5 Model-Based Hyperparameter Optimization  The search for good hyperparameters can be cast as an optimization problem.\n\nThe decision variables are the hyperparameters. The cost to be optimized is the validation set error that results from training using these hyperparameters. In simplified settings where it is feasible to compute the gradient of some differentiable error measure on the validation set with respect to the hyperparameters, we can simply follow this gradient", "0cd8cd19-4bbf-4e66-a261-7c9b9bf182b0": "Although this can be a very useful and informative quantity, in the end we must decide either to give treatment to the patient or not, and we would like this choice to be optimal in some appropriate sense . This is the decision step, and it is the subject of decision theory to tell us how to make optimal decisions given the appropriate probabilities. We shall see that the decision stage is generally very simple, even trivial, once we have solved the inference problem. Here we give an introduction to the key ideas of decision theory as required for the rest of the book. Further background, as well as more detailed accounts, can be found in Berger  and Bather .\n\nBefore giving a more detailed analysis, let us \ufb01rst consider informally how we might expect probabilities to play a role in making decisions. When we obtain the X-ray image x for a new patient, our goal is to decide which of the two classes to assign to the image. We are interested in the probabilities of the two classes given the image, which are given by p(Ck|x)", "e8d28c5a-94d0-41d1-ac16-4150cccf9c21": "APPROXIMATE INFERENCE  approximations of p(h | v), the lower bound \u00a3 will be tighter, in other words, closer to log p(v).\n\nWhen q(h | v) = p(h | v), the approximation is perfect, and L(v, 0, \u00a2) = log p(v; 8). We can thus think of inference as the procedure for finding the g that maximizes L. Exact inference maximizes \u00a3 perfectly by searching over a family of functions q that includes p(h | v). Throughout this chapter, we show how to derive different forms of approximate inference by using approximate optimization to find g. We can make the optimization procedure less expensive but approximate by restricting the family of distributions qg that the optimization is allowed to search over or by using an imperfect optimization procedure that may not completely maximize \u00a3 but may merely increase it by a significant amount. No matter what choice of q we use, \u00a3 is a lower bound. We can get tighter or looser bounds that are cheaper or more expensive to compute depending on how we choose to approach this optimization problem", "d580631d-5475-4cda-8c0b-8b0eb3903ee3": "But when reward arrives earlier than expected, dopamine neurons do not do what the TD error does\u2014at least with the CSC representation used by Montague et al. and by us in our example. Dopamine neurons do respond to the early reward, which is consistent with a positive TD error because the reward is not predicted to occur then.\n\nHowever, at the later time when the reward is expected but omitted, the TD error is negative whereas, in contrast to this prediction, dopamine neuron activity does not drop below baseline in the way the TD model predicts . Something more complicated is going on in the animal\u2019s brain than simply TD learning with a CSC representation. Some of the mismatches between the TD error and dopamine neuron activity can be addressed by selecting suitable parameter values for the TD algorithm and by using stimulus representations other than the CSC representation. For instance, to address the early-reward mismatch just described, Suri and Schultz  proposed a CSC representation in which the sequences of internal signals initiated by earlier stimuli are cancelled by the occurrence of a reward", "5d800940-8468-49a2-bb1a-781d848032d8": "To finish computing the value of h for each example, we apply the rectified linear transformation:  (6.10)  NrRrRO a  This transformation has changed the relationship between the examples. They no  https://www.deeplearningbook.org/contents/mlp.html    longer lie on a single line. As shown In figure 0.1, they now he 1n a space where a linear model can solve the problem. We finish with multiplying by the weight vector w:  (6.11)  The neural network has obtained the correct answer for every example in the batch. In this example, we simply specified the solution, then showed that it obtained zero error. In a real situation, there might be billions of model parameters and billions of training examples, so one cannot simply guess the solution as we did here. Instead, a gradient-based optimization algorithm can find parameters that produce very little error. The solution we described to the XOR problem is at a global minimum of the loss function, so gradient descent could converge to this point. There are other equivalent solutions to the XOR problem that gradient descent could also find", "e82c510e-b2e0-4a82-9e9d-382678e76466": "This result is unsurprising, since both principal component analysis and the neural network are using linear dimensionality reduction and are minimizing the same sum-of-squares error function.\n\nIt might be thought that the limitations of a linear dimensionality reduction could be overcome by using nonlinear (sigmoidal) activation functions for the hidden units in the network in Figure 12.18. However, even with nonlinear hidden units, the minimum error solution is again given by the projection onto the principal component subspace . There is therefore no advantage in using twolayer neural networks to perform dimensionality reduction. Standard techniques for principal component analysis (based on singular value decomposition) are guaranteed to give the correct solution in finite time, and they also generate an ordered set of eigenvalues with corresponding orthonormal eigenvectors. The situation is different, however. if additional hidden layers are pcrmillcd in the network. Consider the four-layer autoassociativc network shown in Figure 12.19. Again the output units are linear, and the M units in the second hidden layer can also be linear. however, the first and third hidden layers have sigmoidal nonlinear activation functions", "f49c7fa3-19a0-4a83-9a57-1ab844646e76": "The computation performed by each node does not have to be the traditional artificial  neuron computation (affine transformation of all inputs followed by a monotone nonlinearity). For example, Socher ef al. propose using tensor operations and bilinear forms, which have previously been found useful to model relationships between concepts  when the concepts are represented by continuous vectors (embeddings). 10.7 The Challenge of Long-Term Dependencies  The mathematical challenge of learning long-term dependencies in recurrent net- works is introduced in section 8.2.5. The basic problem is that gradients propagated over many stages tend to either vanish (most of the time) or explode (rarely, but with much damage to the optimization).\n\nEven if we assume that the parameters are such that the recurrent network is stable (can store memories, with gradients not  https://www.deeplearningbook.org/contents/rnn.html    exploding), the difficulty with long-term dependencies arises from the exponentially smaller weights given to long-term interactions (involving the multiplication of many Jacobians) compared to short-term ones. Many other sources provide a deeper treatment . In this section, we describe the problem in more detail", "4e42af57-e783-401a-ac71-7c5829b09927": "Consider, for instance, the case of a Gaussian mixture, and suppose we perform an update for data point m in which the corresponding old and new values of the responsibilities are denoted \u03b3old(zmk) and \u03b3new(zmk). In the M step, the required suf\ufb01cient statistics can be updated incrementally. For instance, for the means the suf\ufb01cient statistics are de\ufb01ned by (9.17) and (9.18) from which we obtain Exercise 9.26 The corresponding results for the covariances and the mixing coef\ufb01cients are analogous. Thus both the E step and the M step take \ufb01xed time that is independent of the total number of data points. Because the parameters are revised after each data point, rather than waiting until after the whole data set is processed, this incremental version can converge faster than the batch version. Each E or M step in this incremental algorithm is increasing the value of L(q, \u03b8) and, as we have shown above, if the algorithm converges to a local (or global) maximum of L(q, \u03b8), this will correspond to a local (or global) maximum of the log likelihood function ln p(X|\u03b8)", "874ac031-ba3e-4dcf-bd60-bfdd961892e5": "For a polynomial of order M, the growth in the number of coef\ufb01cients is like DM. Although this is now a power law growth, Exercise 1.16 rather than an exponential growth, it still points to the method becoming rapidly unwieldy and of limited practical utility. Our geometrical intuitions, formed through a life spent in a space of three dimensions, can fail badly when we consider spaces of higher dimensionality. As a simple example, consider a sphere of radius r = 1 in a space of D dimensions, and ask what is the fraction of the volume of the sphere that lies between radius r = 1\u2212\u03f5 and r = 1. We can evaluate this fraction by noting that the volume of a sphere of radius r in D dimensions must scale as rD, and so we write where the constant KD depends only on D. Thus the required fraction is given by Exercise 1.18 which is plotted as a function of \u03f5 for various values of D in Figure 1.22. We see that, for large D, this fraction tends to 1 even for small values of \u03f5", "34aad8ab-7329-40a4-8b59-0c28aa480992": "Intractability: the case where the integral of the marginal likelihood p\u03b8(x) = \ufffd p\u03b8(z)p\u03b8(x|z) dz is intractable (so we cannot evaluate or differentiate the marginal likelihood), where the true posterior density p\u03b8(z|x) = p\u03b8(x|z)p\u03b8(z)/p\u03b8(x) is intractable (so the EM algorithm cannot be used), and where the required integrals for any reasonable mean-\ufb01eld VB algorithm are also intractable. These intractabilities are quite common and appear in cases of moderately complicated likelihood functions p\u03b8(x|z), e.g. a neural network with a nonlinear hidden layer. 2. A large dataset: we have so much data that batch optimization is too costly; we would like to make parameter updates using small minibatches or even single datapoints. Samplingbased solutions, e.g. Monte Carlo EM, would in general be too slow, since it involves a typically expensive sampling loop per datapoint. We are interested in, and propose a solution to, three related problems in the above scenario: 1", "b492dc5c-1b2a-485d-b140-6e26236a8b48": "It will not, however, ensure that edges within the dark region stand out. This motivates local contrast normalization. Local contrast normalization ensures that the contrast is normalized across each small window, rather than over the image as a whole. See figure 12.2 for a comparison of global and local contrast normalization. Various definitions of local contrast normalization are possible. In all cases, one modifies each pixel by subtracting a mean of nearby pixels and dividing by a standard deviation of nearby pixels. In some cases, this is literally the mean and standard deviation of all pixels in a rectangular window centered on the pixel to be modified . In other cases, this is a weighted mean and weighted standard deviation using Gaussian weights centered on the pixel to  1 rn re c 1 . \u2018 ' . wer : 1  https://www.deeplearningbook.org/contents/applications.html    pe moained. in the case or color images, some strategies process aliferent color channels separately while others combine information from different channels to  451  CHAPTER 12", "ee3c29a9-b5d5-4951-9c58-724bb83c8fcb": "The fully variational Bayesian method for inferring a posterior over the parameters is given in the appendix.\n\nUnder certain mild conditions outlined in section 2.4 for a chosen approximate posterior q\u03c6(z|x) we can reparameterize the random variable \ufffdz \u223c q\u03c6(z|x) using a differentiable transformation g\u03c6(\u03f5, x) of an (auxiliary) noise variable \u03f5: \ufffdz = g\u03c6(\u03f5, x) with \u03f5 \u223c p(\u03f5) (4) See section 2.4 for general strategies for chosing such an approriate distribution p(\u03f5) and function g\u03c6(\u03f5, x). We can now form Monte Carlo estimates of expectations of some function f(z) w.r.t. q\u03c6(z|x) as follows: We apply this technique to the variational lower bound (eq. (2)), yielding our generic Stochastic Gradient Variational Bayes (SGVB) estimator \ufffdLA(\u03b8, \u03c6; x(i)) \u2243 L(\u03b8, \u03c6; x(i)): Algorithm 1 Minibatch version of the Auto-Encoding VB (AEVB) algorithm", "d4297648-59a3-495b-a9d0-55952e9fb37b": "Suppose the \ufb01rst episode progressed directly from the center state, C, to the right, through D and E, and then terminated on the right with a return of 1. Recall that the estimated values of all the states started at an intermediate value, V (s) = 0.5. As a result of this experience, a one-step method would change only the estimate for the last state, V (E), which would be incremented toward 1, the observed return. A two-step method, on the other hand, would increment the values of the two states preceding termination: V (D) and V (E) both would be incremented toward 1. A three-step method, or any n-step method for n > 2, would increment the values of all three of the visited states toward 1, all by the same amount. Which value of n is better? Figure 7.2 shows the results of a simple empirical test for a larger random walk process, with 19 states instead of 5 (and with a \u22121 outcome on the left, all values initialized to 0), which we use as a running example in this chapter", "861c4af5-01fb-4261-b5f8-9413adc1a711": "\u02d9Ipek, Mutlu, Mart\u00b4\u0131nez, and Caruana   designed a reinforcement learning memory controller and demonstrated that it can signi\ufb01cantly improve the speed of program execution over what was possible with conventional controllers at the time of their research. They were motivated by limitations of existing state-of-the-art controllers that used policies that did not take advantage of past scheduling experience and did not account for long-term consequences of scheduling decisions. \u02d9Ipek et al.\u2019s project was carried out by means of simulation, but they designed the controller at the detailed level of the hardware needed to implement it\u2014including the learning algorithm\u2014directly on a processor chip. Accessing DRAM involves a number of steps that have to be done according to strict time constraints. DRAM systems consist of multiple DRAM chips, each containing multiple rectangular arrays of storage cells arranged in rows and columns. Each cell stores a bit as the charge on a capacitor", "87110c23-8d68-4293-a253-712be534d5c9": "However, this too runs into the problem of ambiguous regions, as illustrated in the right-hand diagram of Figure 4.2.\n\nWe can avoid these dif\ufb01culties by considering a single K-class discriminant comprising K linear functions of the form and then assigning a point x to class Ck if yk(x) > yj(x) for all j \u0338= k. The decision boundary between class Ck and class Cj is therefore given by yk(x) = yj(x) and hence corresponds to a (D \u2212 1)-dimensional hyperplane de\ufb01ned by This has the same form as the decision boundary for the two-class case discussed in Section 4.1.1, and so analogous geometrical properties apply. The decision regions of such a discriminant are always singly connected and convex. To see this, consider two points xA and xB both of which lie inside decision region Rk, as illustrated in Figure 4.3", "9c3dba8e-1264-4ba8-8fef-70d41d2ca2ed": "Left: before learning: the agent selects actions randomly and the glider descends. Right: after learning: the glider gains altitude by following a spiral trajectory. Adapted with permission from PNAS vol. 113(22), p. E4879, 2016, Reddy, Celani, Sejnowski, and Vergassola, Learning to Soar in Turbulent Environments. within the rising column of air. Although Reddy et al. found that performance varied widely over di\u21b5erent simulated periods of air \ufb02ow, the number of times the glider touched the ground consistently decreased to nearly zero as learning progressed. After experimenting with di\u21b5erent sets of features available to the learning agent, it turned out that the combination of just vertical wind acceleration and torques worked best.\n\nThe authors conjectured that because these features give information about the gradient of vertical wind velocity in two di\u21b5erent directions, they allow the controller to select between turning by changing the bank angle or continuing along the same course by leaving the bank angle alone. This allows the glider to stay within a rising column of air. Vertical wind velocity is indicative of the strength of the thermal but does not help in staying within the \ufb02ow", "b7bdaf80-2ae3-4d84-b32d-fbcc61c25e7e": "This meang, Wepuse the  https://www.deeplearningbook.org/contents/mlp.html    CIrOSS-eENLLOpy DELWeeL LE Lally Gala ald Ue LOGE $8 PLedICLIOUs aS ULE COSL function. Sometimes, we take a simpler approach, where rather than predicting a complete probability distribution over y, we merely predict some statistic of y conditioned  on x. Specialized loss functions enable us to train a predictor of these estimates. The total cost function used to train a neural network will often combine one of the primary cost functions described here with a regularization term. We have already seen some simple examples of regularization applied to linear models in section 5.2.2. The weight decay approach used for linear models is also directly applicable to deep neural networks and is among the most popular regulariza- tion strategies. More advanced regularization strategies for neural networks are described in chapter 7.\n\n6.2.1.1 Learning Conditional Distributions with Maximum Likelihood  Most modern neural networks are trained using maximum likelihood. This means that the cost function is simply the negative log-likelihood, equivalently described as the cross-entropy between the training data and the model distribution", "f890f8cf-c063-41f0-828c-892def48136b": "For all values of \u03b1 we have D\u03b1(p\u2225q) \u2a7e 0, with equality if, and only if, Exercise 10.6 p(x) = q(x). Suppose p(x) is a \ufb01xed distribution, and we minimize D\u03b1(p\u2225q) with respect to some set of distributions q(x). Then for \u03b1 \u2a7d \u22121 the divergence is zero forcing, so that any values of x for which p(x) = 0 will have q(x) = 0, and typically q(x) will under-estimate the support of p(x) and will tend to seek the mode with the largest mass. Conversely for \u03b1 \u2a7e 1 the divergence is zero-avoiding, so that values of x for which p(x) > 0 will have q(x) > 0, and typically q(x) will stretch to cover all of p(x), and will over-estimate the support of p(x).\n\nWhen \u03b1 = 0 we obtain a symmetric divergence that is linearly related to the Hellinger distance given by The square root of the Hellinger distance is a valid distance metric", "c83280a7-a568-4c03-a70e-5f5632f3bd8a": "Now suppose we wish to evaluate the marginals p(xn) for every node n \u2208 {1, . , N} in the chain. Simply applying the above procedure separately for each node will have computational cost that is O(N 2M 2). However, such an approach would be very wasteful of computation. For instance, to \ufb01nd p(x1) we need to propagate a message \u00b5\u03b2(\u00b7) from node xN back to node x2. Similarly, to evaluate p(x2) we need to propagate a messages \u00b5\u03b2(\u00b7) from node xN back to node x3. This will involve much duplicated computation because most of the messages will be identical in the two cases.\n\nSuppose instead we \ufb01rst launch a message \u00b5\u03b2(xN\u22121) starting from node xN and propagate corresponding messages all the way back to node x1, and suppose we similarly launch a message \u00b5\u03b1(x2) starting from node x1 and propagate the corresponding messages all the way forward to node xN. Provided we store all of the intermediate messages along the way, then any node can evaluate its marginal simply by applying (8.54)", "099c7c9f-c55e-44d4-831e-8a5f51233e45": "Boosting has been applied to build ensembles of neural networks  by incrementally adding neural networks to the ensemble. Boosting has also been applied interpreting an individual neural network as an ensemble , incrementally adding hidden units to the network. 7.12 Dropout  Dropout  provides a computationally inexpensive but powerful method of regularizing a broad family of models. To a first approximation,  https://www.deeplearningbook.org/contents/regularization.html    dropout can be thought of as a method of making bagging practical for ensembles of very many large neural networks. Bagging involves training multiple models and evaluating multiple models on each test example.\n\nThis seems impractical  when each model is a large neural network, since training and evaluating such networks is costly in terms of runtime and memory. It is common to use ensembles of five to ten neural networks\u2014Szegedy et al. used six to win the ILSVRC\u2014 but more than this rapidly becomes unwieldy. Dropout provides an inexpensive approximation to training and evaluating a bagged ensemble of exponentially many neural networks", "d47636e5-c7ef-4b3e-bc8e-b7a266457954": "For a two-dimensional space, we say that each tiling is o\u21b5set by the displacement vector (1, 1), meaning that it is o\u21b5set from the previous tiling by w the asymmetrically o\u21b5set tilings shown in the lower part of Figure 9.11 are o\u21b5set by a displacement vector of (1, 3).\n\nExtensive studies have been made of the e\u21b5ect of di\u21b5erent displacement vectors on the generalization of tile coding (Parks and Militzer, 1991; An, 1991; An, Miller and Parks, 1991; Miller, An, Glanz and Carter, 1990), assessing their homegeneity and tendency toward diagonal artifacts like those seen for the (1, 1) displacement vectors. Based on this work, Miller and Glanz  recommend using displacement vectors consisting of the \ufb01rst odd integers. In particular, for a continuous space of dimension k, a good choice is to use the \ufb01rst odd integers (1, 3, 5, 7, . , 2k \u2212 1), with n (the number of tilings) set to an integer power of 2 greater than or equal to 4k", "f9feb219-a80b-40b5-9602-99ef54e33773": "A., Hudspeth, A. J. (Eds.) . Principles of Neural Science, Fifth Edition. McGraw-Hill Companies, Inc. Karampatziakis, N., Langford, J. Online importance weight aware updates. ArXiv:1011.1576. Kashyap, R. L., Blaydon, C. C., Fu, K. S. Stochastic approximation. In J. M. Mendel and K. S. Fu (Eds. ), Adaptive, Learning, and Pattern Recognition Systems: Theory and Applications, pp. 329\u2013355. Academic Press, New York. Kearney, A., Veeriah, V, Travnik, J, Sutton, R. S., Pilarski, P. M. (in preparation). TIDBD: Adapting Temporal-di\u21b5erence Step-sizes Through Stochastic Meta-descent", "c0755003-e2de-441e-9ec0-c94ed3318f5e": "(2) A decoder or writer or output RNN is conditioned on that fixed-length vector (just as in figure 10.9) to generate the output sequence Y = (y,...,y). The innovation of this kind of architecture over those presented in earlier sections of this chapter is that the lengths n, and n, can vary from each other, while previous architectures constrained nz = ny = 7. na sequence-to-sequence architecture, the two RNNs are trained jointly to maximize the average of log P(y\u2122,..., y@) | a, ..., a) over all the pairs of # and y sequences in the training set.\n\nThe last state hn, of the encoder RNN is typically used as a representation C' of the input sequence that is provided as input to the decoder RNN. If the context C' is a vector, then the decoder RNN is simply a vector-to- sequence RNN, as described in section 10.2.4. As we have seen, there are at least two ways for a vector-to-sequence RNN to receive input", "78a0fb66-11bb-47c5-8036-82506eee73e3": "The state-value update shown is for n-step TD with importance sampling, and the action-value update is for n-step Q(\u03c3), which generalizes Expected Sarsa and Q-learning. All n-step methods involve a delay of n time steps before updating, as only then are all the required future events known. A further drawback is that they involve more computation per time step than previous methods. Compared to one-step methods, n-step methods also require more memory to record the states, actions, rewards, and sometimes other variables over the last n time steps.\n\nEventually, in Chapter 12, we will see how multi-step TD methods can be implemented with minimal memory and computational complexity using eligibility traces, but there will always be some additional computation beyond one-step methods. Such costs can be well worth paying to escape the tyranny of the single time step. Although n-step methods are more complex than those using eligibility traces, they have the great bene\ufb01t of being conceptually clear. We have sought to take advantage of this by developing two approaches to o\u21b5-policy learning in the n-step case. One, based on importance sampling is conceptually simple but can be of high variance", "12a0cc0d-e962-437e-86ac-17ced33a2f7d": "This implies that h(px) = xh(p) where x is a positive rational number, and hence by continuity when it is a positive real number. Finally, show that this implies h(p) must take the form h(p) \u221d ln p. with equality if, and only if, x and y are statistically independent. 1.32 (\u22c6) Consider a vector x of continuous variables with distribution p(x) and corresponding entropy H. Suppose that we make a nonsingular linear transformation of x to obtain a new variable y = Ax. Show that the corresponding entropy is given by H = H + ln |A| where |A| denotes the determinant of A. 1.33 (\u22c6 \u22c6) Suppose that the conditional entropy H between two discrete random variables x and y is zero. Show that, for all values of x such that p(x) > 0, the variable y must be a function of x, in other words for each x there is only one value of y such that p(y|x) \u0338= 0", "9ca0fd72-f3f4-4a75-9330-4fddee8a9745": "Notice that here each state is a list, or vector, of sensor readings and symbolic inputs, and each action is a vector consisting of a target temperature and a stirring rate. It is typical of reinforcement learning tasks to have states and actions with such structured representations. Rewards, on the other hand, are always single numbers. control the motion of a robot arm in a repetitive pick-and-place task.\n\nIf we want to learn movements that are fast and smooth, the learning agent will have to control the motors directly and have low-latency information about the current positions and velocities of the mechanical linkages. The actions in this case might be the voltages applied to each motor at each joint, and the states might be the latest readings of joint angles and velocities. The reward might be +1 for each object successfully picked up and placed. To encourage smooth movements, on each time step a small, negative reward can be given as a function of the moment-to-moment \u201cjerkiness\u201d of the motion. Exercise 3.1 Devise three example tasks of your own that \ufb01t into the MDP framework, identifying for each its states, actions, and rewards. Make the three examples as di\u21b5erent from each other as possible", "7868b7b5-62c7-4e96-8d3b-8beec18e0299": "Each entry in the matrix Ci; is the cosine similarity between network output vector dimension at index i, 7 and batch index b, Zi; and Zi with a value between -1 (i.e. perfect anti-  correlation) and 1 (i.e. perfect correlation). https://lilianweng.github.io/posts/2021-05-31-contrastive/     Contrastive Representation Learning | Lil'Log  Ler=>o(1-\u00a2;,)? +A SOC,  i i dj invariance term redundancy reduction term  Do ei2h Zoli)? (Ze)? where C;; =  Barlow Twins is competitive with SOTA methods for self-supervised learning. It naturally avoids trivial constants (i.e. collapsed representations), and is robust to different training batch sizes. Algorithm 1 PyTorch-style pseudocode for Barlow Twins", "c748a84e-6ca3-4c69-b64c-3ee0cabcd621": "The idea of autoencoders has been part of the historical landscape of neural networks for decades . Traditionally, autoencoders were used for dimensionality reduction or feature learning. Recently, theoretical connections between autoencoders and latent variable models have brought autoencoders to the forefront of generative modeling, as we will see in chapter 20.\n\nAutoencoders may be thought of as being a special case of feedforward networks and may be trained with all the same techniques, typically minibatch gradient descent following gradients computed by back-propagation. Unlike general feedforward networks, autoencoders may also be trained using recirculation , a learning algorithm based on comparing the activations of the network on the original input  https://www.deeplearningbook.org/contents/autoencoders.html    499  CHAPTER 14. AUTOENCODERS  Figure 14.1: The general structure of an autoencoder, mapping an input x to an output (called reconstruction) r through an internal representation or code h. The autoencoder has two components: the encoder f (mapping x to h) and the decoder g (mapping h tor)", "bdfbfa20-87ca-40b6-82bf-21f2bf5bf7ee": "2018. Neural network acceptability judgments. arXiv preprint arXiv:1805.12471. Jason Yosinski, Jeff Clune, Yoshua Bengio, and Hod Lipson. 2014. How transferable are features in deep neural networks? In Advances in neural information processing systems, pages 3320\u20133328. Adams Wei Yu, David Dohan, Minh-Thang Luong, Rui Zhao, Kai Chen, Mohammad Norouzi, and Quoc V Le. 2018. QANet: Combining local convolution with global self-attention for reading comprehension. In ICLR. Rowan Zellers, Yonatan Bisk, Roy Schwartz, and Yejin Choi. 2018. Swag: A large-scale adversarial dataset for grounded commonsense inference. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP). Yukun Zhu, Ryan Kiros, Rich Zemel, Ruslan Salakhutdinov, Raquel Urtasun, Antonio Torralba, and Sanja Fidler. 2015", "c90e4ce5-fa53-45fe-97cc-d51f60cdab57": "into the MAML gradients with one step inner gradient update:  ) (1) _  = gy) \u2014 aH\" 9\u201d + O(a\u201d) dL aH, gl? )_ aT g\\\u00b0) + O(a?) \u2014 aH\u201d) (g\\? \u2014 aT) gl) + O(a?)) gH g \u2014 Hg\u201d 4 aH Hg + O(a2)  pL aH) g(\u00ae \u2014 ag + O(a\u2019) mes: JReptile = g + gv = g) + gs) - aH) g(\u00ae + O(a?) So far we have the formula of three types of gradients:  https://lilianweng.github.io/posts/2018-11-30-|  meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log   JFOMAML = g) \u2014 aH |\") g) + O(a\u2019)  JMAML = g\\ _ aH |\") g\\) _ aH g? + O(a?) JReptile = g + gi\u201d \u2014 ag) + O(a\u2019)  During training, we often average over multiple data batches", "609a749e-89b6-41d8-af94-a78d525468bf": "Actor\u2013Critic with Eligibility Traces (episodic), for estimating \u21e1\u2713 \u21e1 \u21e1\u21e4 Input: a di\u21b5erentiable policy parameterization \u21e1(a|s, \u2713) Input: a di\u21b5erentiable state-value function parameterization \u02c6v(s,w) Parameters: trace-decay rates \u03bb\u2713 2 , \u03bbw 2 ; step sizes \u21b5\u2713 > 0, \u21b5w > 0 Initialize policy parameter \u2713 2 Rd0 and state-value weights w 2 Rd (e.g., to 0) Loop forever (for each episode): As discussed in Section 10.3, for continuing problems without episode boundaries we need to de\ufb01ne performance in terms of the average rate of reward per time step: where \u00b5 is the steady-state distribution under \u21e1, \u00b5(s) .= limt!1 Pr{St =s|A0:t \u21e0\u21e1}, which is assumed to exist and to be independent of S0 (an ergodicity assumption).\n\nRemember that this is the special distribution under which, if you select actions according to \u21e1, you remain in the same distribution: Complete pseudocode for the actor\u2013critic algorithm in the continuing case (backward view) is given in the box below", "6f145f00-0b7a-4a35-9b22-4860b84af276": "An elegant aspect of this technique is that the equations for evaluating vTH mirror closely those for standard forward and backward propagation, and so the extension of existing software to compute this product is typically straightforward.\n\nIf desired, the technique can be used to evaluate the full Hessian matrix by choosing the vector v to be given successively by a series of unit vectors of the form (0, 0, . , 1, . , 0) each of which picks out one column of the Hessian. This leads to a formalism that is analytically equivalent to the backpropagation procedure of Bishop , as described in Section 5.4.5, though with some loss of ef\ufb01ciency due to redundant calculations. 5.5. Regularization in Neural Networks The number of input and outputs units in a neural network is generally determined by the dimensionality of the data set, whereas the number M of hidden units is a free parameter that can be adjusted to give the best predictive performance. Note that M controls the number of parameters (weights and biases) in the network, and so we might expect that in a maximum likelihood setting there will be an optimum value of M that gives the best generalization performance, corresponding to the optimum balance between under-\ufb01tting and over-\ufb01tting", "2cb2cfd1-5e9d-41ca-9126-dba96a6b519f": "Chapter 10  Sequence Modeling: Recurrent and Recursive Nets  Recurrent neural networks, or RNNs , are a family of neural networks for processing sequential data. Much as a convolutional network is a neural network that is specialized for processing a grid of values X such as an image, a recurrent neural network is a neural network that is specialized for processing a sequence of values w@),...,a(7. Just as convolutional networks can readily scale to images with large width and height, and some convolutional networks can process images of variable size, recurrent networks can scale to much longer sequences than would be practical for networks without sequence-based specialization. Most recurrent networks can also process sequences of variable length. To go from multilayer networks to recurrent networks, we need to take advantage of one of the early ideas found in machine learning and statistical models of the 1980s: sharing parameters across different parts of a model. Parameter sharing makes it possible to extend and apply the model to examples of different forms (different lengths, here) and generalize across them", "2f055389-4f16-4866-8772-36a039ddea0b": "In that way (and by choosing \u03b3(\u00b7) as a constant in all other states) we can recover the classical episodic setting as a special case. State dependent termination includes other prediction cases such as pseudo termination, in which we seek to predict a quantity without altering the \ufb02ow of the Markov process. Discounted returns can be thought of as such a quantity, in which case state dependent termination uni\ufb01es the episodic and discounted-continuing cases. (The undiscounted-continuing case still needs some special treatment.)\n\nThe generalization to variable bootstrapping is not a change in the problem, like discounting, but a change in the solution strategy. The generalization a\u21b5ects the \u03bbreturns for states and actions. The new state-based \u03bb-return can be written recursively as where now we have added the \u201cs\u201d to the superscript \u03bb to remind us that this is a return that bootstraps from state values, distinguishing it from returns that bootstrap from action values, which we present below with \u201ca\u201d in the superscript", "6a59747c-de42-4f85-8864-abdde5503ef4": "The focus so far in this book has been on unsupervised learning, including topics such as density estimation and data clustering. We turn now to a discussion of supervised learning, starting with regression. The goal of regression is to predict the value of one or more continuous target variables t given the value of a D-dimensional vector x of input variables. We have already encountered an example of a regression problem when we considered polynomial curve \ufb01tting in Chapter 1. The polynomial is a speci\ufb01c example of a broad class of functions called linear regression models, which share the property of being linear functions of the adjustable parameters, and which will form the focus of this chapter. The simplest form of linear regression models are also linear functions of the input variables. However, we can obtain a much more useful class of functions by taking linear combinations of a \ufb01xed set of nonlinear functions of the input variables, known as basis functions.\n\nSuch models are linear functions of the parameters, which gives them simple analytical properties, and yet can be nonlinear with respect to the input variables. Given a training data set comprising N observations {xn}, where n = 1,", "add04395-fe9c-4ea4-8006-10f27c2d7fd2": "We again have a sparse solution, and the only terms that have to be evaluated in the predictive model (7.64) are those that involve the support vectors.\n\nThe parameter b can be found by considering a data point for which 0 < an < C, which from (7.67) must have \u03ben = 0, and from (7.65) must therefore satisfy \u03f5 + yn \u2212 tn = 0. Using (7.1) and solving for b, we obtain where we have used (7.57). We can obtain an analogous result by considering a point for which 0 < \ufffdan < C. In practice, it is better to average over all such estimates of b. As with the classi\ufb01cation case, there is an alternative formulation of the SVM for regression in which the parameter governing complexity has a more intuitive interpretation . In particular, instead of \ufb01xing the width \u03f5 of the insensitive region, we \ufb01x instead a parameter \u03bd that bounds the fraction of points lying outside the tube. This involves maximizing It can be shown that there are at most \u03bdN data points falling outside the insensitive tube, while at least \u03bdN data points are support vectors and so lie either on the tube or outside it", "1a3ac030-9143-45cc-a3c0-1471e5c325a8": "Many researchers seemed to believe that they were studying reinforcement learning when they were actually studying supervised learning.\n\nFor example, arti\ufb01cial neural network pioneers such as Rosenblatt  and Widrow and Ho\u21b5  were clearly motivated by reinforcement learning\u2014they used the language of rewards and punishments\u2014but the systems they studied were supervised learning systems suitable for pattern recognition and perceptual learning. Even today, some researchers and textbooks minimize or blur the distinction between these types of learning. For example, some arti\ufb01cial neural network textbooks have used the term \u201ctrial-and-error\u201d to describe networks that learn from training examples. This is an understandable confusion because these networks use error information to update connection weights, but this misses the essential character of trial-and-error learning as selecting actions on the basis of evaluative feedback that does not rely on knowledge of what the correct action should be. Partly as a result of these confusions, research into genuine trial-and-error learning became rare in the 1960s and 1970s, although there were notable exceptions", "d274363c-b5ac-4d17-acdd-258dfa53c1be": "On the other hand, there are other discrepancies between the TD theory and experimental data that are not so easily accommodated by selecting parameter values and stimulus representations (we mention some of these discrepancies in the Bibliographical and Historical Remarks section at the end of this chapter), and more mismatches are likely to be discovered as neuroscientists conduct ever more re\ufb01ned experiments. But the reward prediction error hypothesis has been functioning very e\u21b5ectively as a catalyst for improving our understanding of how the brain\u2019s reward system works. Intricate experiments have been designed to validate or refute predictions derived from the hypothesis, and experimental results have, in turn, led to re\ufb01nement and elaboration of the TD error/dopamine hypothesis.\n\nA remarkable aspect of these developments is that the reinforcement learning algorithms and theory that connect so well with properties of the dopamine system were developed from a computational perspective in total absence of any knowledge about the relevant properties of dopamine neurons\u2014remember, TD learning and its connections to optimal control and dynamic programming were developed many years before any of the experiments were conducted that revealed the TD-like nature of dopamine neuron activity. This unplanned correspondence, despite not being perfect, suggests that the TD error/dopamine parallel captures something signi\ufb01cant about brain reward processes", "e982d8bf-906f-4e2e-be54-195b83abba18": "While various approaches have been proposed to tackle learning with limited labeled data \u2014 including unsupervised pre-training , multi-task learning , semi-supervised learning , and few-shot learning  \u2014 in this work, we focus on and compare different data augmentation methods and their application to supervised and semisupervised learning.\n\nIn this survey, we comprehensively review and perform experiments on recent data augmentation techniques developed for various NLP tasks. Our contributions are three-fold: (1) summarize and categorize recent methods in textual data augmentation; (2) compare different data augmentation methods through experiments with limited labeled data in supervised and semi-supervised settings on 11 NLP tasks, and (3) discuss current challenges and future directions of data augmentation, as well as learning with limited data in NLP more arXiv:2106.07499v1    14 Jun 2021 broadly. Our experimental results allow us to conclude that no single augmentation works best for every task, but (i) token-level augmentations work well for supervised learning, (ii) sentence-level augmentation usually works the best for semisupervised learning, and (iii) augmentation methods can sometimes hurt performance, even in the semi-supervised setting. Related Surveys. Recently, several surveys also explore the data augmentation techniques for NLP", "8cb2ba4e-0efb-4d71-bfac-eeab721965c1": "https://lilianweng.github.io/posts/2021-05-31-contrastive/  Contrastive Representation Learning | Lil'Log  Model STS12 STS13 STS14 STS15 STS16 STS-B_ SICK-R_ Avg. Unsupervised models GloVe embeddings (avg. )* 55.14 7066 59.73 68.25 63.66 58.02 53.76 61.32 BERT\u00bbase (first-last avg.) 39.70 59.38 49.67 66.03 66.19 53.87 62.06 56.70 BERT ase-flow 58.40 67.10 60.85 75.16 71.22 68.66 64.47 66.55 BERT) 2se-whitening 57.83 66.90 60.90 75.08 T1131 68.24 63.73 66.28 IS-BERTyase\u201d 56.77 69.24 61.21 75.23", "163debd7-ae2f-4aff-84e6-b042766db0e2": "2.39 (\u22c6 \u22c6) Starting from the results (2.141) and (2.142) for the posterior distribution of the mean of a Gaussian random variable, dissect out the contributions from the \ufb01rst N \u2212 1 data points and hence obtain expressions for the sequential update of \u00b5N and \u03c32 N. Now derive the same results starting from the posterior distribution p(\u00b5|x1, . .\n\n, xN\u22121) = N(\u00b5|\u00b5N\u22121, \u03c32 N\u22121) and multiplying by the likelihood function p(xN|\u00b5) = N(xN|\u00b5, \u03c32) and then completing the square and normalizing to obtain the posterior distribution after N observations. 2.40 (\u22c6 \u22c6) www Consider a D-dimensional Gaussian random variable x with distribution N(x|\u00b5, \u03a3) in which the covariance \u03a3 is known and for which we wish to infer the mean \u00b5 from a set of observations X = {x1, . , xN}. Given a prior distribution p(\u00b5) = N(\u00b5|\u00b50, \u03a30), \ufb01nd the corresponding posterior distribution p(\u00b5|X)", "bb4c26a9-4ce9-4afc-86cb-47d72e96a490": ":/)  Initialize replay memory D to capacity N Initialize action-value function Q with random weights 0 Initialize target action-value function Q with weights 0\u201d = 0 For episode = 1, M do Initialize sequence s, = {x, } and preprocessed sequence \u00a2, =\u00a2(s,) For t= 1,T do With probability \u00a2 select a random action a, otherwise select a; = argmax, O((s;),a; 0) Execute action a, in emulator and observe reward r, and image x, \u00bb", "d0f6789d-2a2e-49d8-b67d-a487e962050a": "As shown by Tipping and Bishop , probabilistic PCA becomes PCA as o \u2014 0.\n\nIn that case, the conditional expected value of h given x becomes an orthogonal projection of x \u2014 b onto the space spanned by the d columns of W, as in PCA. As o + 0, the density model defined by probabilistic PCA becomes very sharp around these d dimensions spanned by the columns of W. This can make the model assign very low likelihood to the data if the data do not actually cluster near a hyperplane. 13.2 Independent Component Analysis (ICA)  Independent component analysis (ICA) is among the oldest representation learning algorithms . It is an approach to modeling linear factors that seeks to separate an observed signal into many underlying signals that are scaled and added together to form the observed data. These signals are intended to be fully independent, rather than merely decorrelated from each other. ! https://www.deeplearningbook.org/contents/linear_factors.html    Many different specific methodologies are referred to as ICA. The variant that is most similar to the other generative models we have described here is a variant  that trains a fully parametric generative model", "f69a297c-47b7-4b76-b727-2e69a697a6ed": "While it is reasonable to omit batch normalization from the very first baseline, it should be introduced quickly if optimization appears to be problematic. Unless your training set contains tens of millions of examples or more, you should include some mild forms of regularization from the start. Early stopping should be used almost universally. Dropout is an excellent regularizer that is easy to implement and compatible with many models and training algorithms. Batch normalization also sometimes reduces generalization error and allows dropout to be omitted, because of the noise in the estimate of the statistics used to normalize each variable. 420  CHAPTER 11.\n\nPRACTICAL METHODOLOGY  If your task is similar to another task that has been studied extensively, you will probably do well by first copying the model and algorithm that is already known to perform best on the previously studied task. You may even want to copy a trained model from that task. For example, it is common to use the features from a convolutional network trained on ImageNet to solve other computer vision tasks . A common question is whether to begin by using unsupervised learning, de- scribed further in part III. This is somewhat domain specific", "eeb38f56-5bcd-4fc5-a6a5-35daadab189f": "All the involved paradigms of algorithms are perfectly encompassed in the single SE formulation, allowing users to simply tweak and evolve the relevant components for the interpolation. Thus far, we have discussed the standard equation as the uni\ufb01ed objective function. Learning the target model p\u03b8 amounts to optimizing the objective w.r.t the model parameters \u03b8. That is, the standardized objective presents an optimization problem, for which an optimization solver is applied to obtain the target model solution p\u03b8\u2217. This section is devoted to discussion of various optimization algorithms. For a simple objective such as that of the vanilla supervised MLE (Equation 2.1) with a tractable model, stochastic gradient descent can be used to optimize the model parameters \u03b8 straightforwardly. With a more complex model or a more complex objective like the general SE, more sophisticated optimization algorithms are needed, such as the teacher-student procedure exempli\ufb01ed in Equation 3.3", "86c2c7ea-c5f2-4a83-9349-e77a4a743839": "In batch form, TD(0) is faster than Monte Carlo methods because it computes the true certainty-equivalence estimate. This explains the advantage of TD(0) shown in the batch results on the random walk task (Figure 6.2). The relationship to the certaintyequivalence estimate may also explain in part the speed advantage of nonbatch TD(0) (e.g., Example 6.2, page 125, right graph).\n\nAlthough the nonbatch methods do not achieve either the certainty-equivalence or the minimum squared-error estimates, they can be understood as moving roughly in these directions. Nonbatch TD(0) may be faster than constant-\u21b5 MC because it is moving toward a better estimate, even though it is not getting all the way there. At the current time nothing more de\ufb01nite can be said about the relative e\ufb03ciency of online TD and Monte Carlo methods. Finally, it is worth noting that although the certainty-equivalence estimate is in some sense an optimal solution, it is almost never feasible to compute it directly", "3b6d53cb-68b3-4ab5-b294-9f3c47f0d825": "Then a simple weighting would result in the n-step return being zero, which could result in high variance when it was used as a target. Instead, in this more sophisticated approach, one uses an alternate, o\u21b5-policy de\ufb01nition of the n-step return ending at horizon h, as where again Gh:h .= Vh\u22121(Sh). In this approach, if \u21e2t is zero, then instead of the target being zero and causing the estimate to shrink, the target is the same as the estimate and causes no change. The importance sampling ratio being zero means we should ignore the sample, so leaving the estimate unchanged seems appropriate. The second, additional term in (7.13) is called a control variate (for obscure reasons). Notice that the control variate does not change the expected update; the importance sampling ratio has expected value one (Section 5.9) and is uncorrelated with the estimate, so the expected value of the control variate is zero.\n\nAlso note that the o\u21b5-policy de\ufb01nition (7.13) is a strict generalization of the earlier on-policy de\ufb01nition of the n-step return (7.1), as the two are identical in the on-policy case, in which \u21e2t is always 1", "136dcb89-020e-48b7-b760-490905c3d2e2": "The cross entropy and the Gini index are better measures than the misclassi\ufb01cation rate for growing the tree because they are more sensitive to the node probabilities. Also, unlike misclassi\ufb01cation rate, they are differentiable and Exercise 14.11 hence better suited to gradient based optimization methods. For subsequent pruning of the tree, the misclassi\ufb01cation rate is generally used. The human interpretability of a tree model such as CART is often seen as its major strength.\n\nHowever, in practice it is found that the particular tree structure that is learned is very sensitive to the details of the data set, so that a small change to the training data can result in a very different set of splits . There are other problems with tree-based methods of the kind considered in this section. One is that the splits are aligned with the axes of the feature space, which may be very suboptimal. For instance, to separate two classes whose optimal decision boundary runs at 45 degrees to the axes would need a large number of axis-parallel splits of the input space as compared to a single non-axis-aligned split", "47e4ce13-a972-4b35-b080-9c932ca35118": "IEEE Transactions on Systems, Man, and Cybernetics, 17(1):7\u201320. Werbos, P. J. Generalization of back propagation with applications to a recurrent gas Werbos, P. J. Neural networks for control and system identi\ufb01cation.\n\nIn Proceedings of the 28th Conference on Decision and Control, pp. 260\u2013265. IEEE Control Systems Society. modeling. In D. A. White and D. A. Sofge (Eds. ), Handbook of Intelligent Control: Neural, Fuzzy, and Adaptive Approaches, pp. 493\u2013525. Van Nostrand Reinhold, New York. Werbos, P. J. The Roots of Backpropagation: From Ordered Derivatives to Neural Networks and Political Forecasting (Vol. 1). John Wiley and Sons. Wiering, M., Van Otterlo, M. Reinforcement Learning: State-of-the-Art", "026e2d28-c429-4070-9cb3-1a0026879556": "Another continuous error function that has sometimes been used to solve classi\ufb01cation problems is the squared error, which is again plotted in Figure 7.5. It has the property, however, of placing increasing emphasis on data points that are correctly classi\ufb01ed but that are a long way from the decision boundary on the correct side. Such points will be strongly weighted at the expense of misclassi\ufb01ed points, and so if the objective is to minimize the misclassi\ufb01cation rate, then a monotonically decreasing error function would be a better choice. The support vector machine is fundamentally a two-class classi\ufb01er. In practice, however, we often have to tackle problems involving K > 2 classes.\n\nVarious methods have therefore been proposed for combining multiple two-class SVMs in order to build a multiclass classi\ufb01er. One commonly used approach  is to construct K separate SVMs, in which the kth model yk(x) is trained using the data from class Ck as the positive examples and the data from the remaining K \u2212 1 classes as the negative examples. This is known as the one-versus-the-rest approach. However, in Figure 4.2 we saw that using the decisions of the individual classi\ufb01ers can lead to inconsistent results in which an input is assigned to multiple classes simultaneously", "ea83b3d5-dd6e-4fb0-8dc1-772b677831aa": "(Recall from Chapter 4 that optimal policies can be greedy with respect to many di\u21b5erent value functions, not just v\u21e4.) Checking for the emergence of an optimal policy before value iteration converges is not a part of the conventional DP algorithm and requires considerable additional computation.\n\nIn the racetrack example, by running many test episodes after each DP sweep, with actions selected greedily according to the result of that sweep, it was possible to estimate the earliest point in the DP computation at which the approximated optimal evaluation function was good enough so that the corresponding greedy policy was nearly optimal. For this racetrack, a close-to-optimal policy emerged after 15 sweeps of value iteration, or after 136,725 value-iteration updates. This is considerably less than the 252,784 updates DP needed to converge to v\u21e4, but still more than the 127,600 updates RTDP required. Although these simulations are certainly not de\ufb01nitive comparisons of the RTDP with conventional sweep-based value iteration, they illustrate some of advantages of on-policy trajectory sampling. Whereas conventional value iteration continued to update the value of all the states, RTDP strongly focused on subsets of the states that were relevant to the problem\u2019s objective", "d9a0c742-3840-4936-950b-7f416522d09b": "Adversarial models may also gain some statistical advantage from the generator network not being updated directly with data examples, but only with gradients \ufb02owing through the discriminator. This means that components of the input are not copied directly into the generator\u2019s parameters.\n\nAnother advantage of adversarial networks is that they can represent very sharp, even degenerate distributions, while methods based on Markov chains require that the distribution be somewhat blurry in order for the chains to be able to mix between modes. This framework admits many straightforward extensions: 1. A conditional generative model p(x | c) can be obtained by adding c as input to both G and D. 2. Learned approximate inference can be performed by training an auxiliary network to predict z given x. This is similar to the inference net trained by the wake-sleep algorithm  but with the advantage that the inference net may be trained for a \ufb01xed generator net after the generator net has \ufb01nished training. 3. One can approximately model all conditionals p(xS | x\u0338S) where S is a subset of the indices of x by training a family of conditional models that share parameters", "af788eab-d29e-4096-a358-6a9f59cc75f9": "https://www.deeplearningbook.org/contents/regularization.html    To gain some insight into the effect of the constraint, we can fix a\u201d and view the problem as just a function of 0:  0* = argmin \u00a3(0, a*) = argmin J(9; X, y) + a*O(8). (7.28) 6 0  This is exactly the same as the regularized training problem of minimizing J. We can thus think of a parameter norm penalty as imposing a constraint on the weights. If 0 is the L? norm, then the weights are constrained to lie in an L? ball. If Q is the L' norm, then the weights are constrained to lie in a region of limited Z' norm. Usually we do not know the size of the constraint region that we impose by using weight decay with coefficient a* because the value of a* does not directly tell us the value of k. In principle, one can solve for k, but the relationship between k and q* depends on the form of J", "5b2fe3f3-f91b-47b0-a1ef-b131d616241a": "Association for Computational Linguistics. Shiyue Zhang and Mohit Bansal. 2019.\n\nAddressing semantic drift in question generation for semisupervised question answering. In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 2495\u20132509, Hong Kong, China. Association for Computational Linguistics. Wei Emma Zhang, Quan Z Sheng, Ahoud Alhazmi, and Chenliang Li. 2020b. Adversarial attacks on deep-learning models in natural language processing: A survey. ACM Transactions on Intelligent Systems and Technology (TIST), 11(3):1\u201341. Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015a. Character-level convolutional networks for text classi\ufb01cation. In Proceedings of the 28th International Conference on Neural Information Processing Systems - Volume 1, NIPS\u201915, page 649\u2013657, Cambridge, MA, USA. MIT Press. Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015b", "09b31e6d-fea9-4a22-8ab0-0554b4e698cf": "If the agent fails to learn, learns too slowly, or learns the wrong thing, then the designer tweaks the reward signal and tries again. To do this, the designer judges the agent\u2019s performance by criteria that he or she is attempting to translate into a reward signal so that the agent\u2019s goal matches his or her own. And if learning is too slow, the designer may try to design a non-sparse reward signal that e\u21b5ectively guides learning throughout the agent\u2019s interaction with its environment. It is tempting to address the sparse reward problem by rewarding the agent for achieving subgoals that the designer thinks are important way stations to the overall goal.\n\nBut augmenting the reward signal with well-intentioned supplemental rewards may lead the agent to behave very di\u21b5erently from what is intended; the agent may end up not achieving the overall goal at all. A better way to provide such guidance is to leave the reward signal alone and instead augment the value-function approximation with an initial guess of what it should ultimately be, or augment it with initial guesses as to what certain parts of it should be", "5ba078b9-ea91-4cfb-b92f-e8949cffaf38": "Rangel, Camerer, and Montague  review many of the outstanding issues involving habitual, goal-directed, and Pavlovian modes of control.\n\nComments on Terminology\u2014 The traditional meaning of reinforcement in psychology is the strengthening of a pattern of behavior (by increasing either its intensity or frequency) as a result of an animal receiving a stimulus (or experiencing the omission of a stimulus) in an appropriate temporal relationship with another stimulus or with a response. Reinforcement produces changes that remain in future behavior. Sometimes in psychology reinforcement refers to the process of producing lasting changes in behavior, whether the changes strengthen or weaken a behavior pattern . Letting reinforcement refer to weakening in addition to strengthening is at odds with the everyday meaning of reinforce, and its traditional use in psychology, but it is a useful extension that we have adopted here. In either case, a stimulus considered to be the cause of the behavioral change is called a reinforcer. Psychologists do not generally use the speci\ufb01c phrase reinforcement learning as we do. Animal learning pioneers probably regarded reinforcement and learning as being synonymous, so it would be redundant to use both words. Our use of the phrase follows its use in computational and engineering research, in\ufb02uenced mostly by Minsky", "e0261156-19e0-45af-b711-4d6aca3d9977": "We might be tempted be to build a K-class discriminant by combining a number of two-class discriminant functions. However, this leads to some serious dif\ufb01culties  as we now show.\n\nConsider the use of K\u22121 classi\ufb01ers each of which solves a two-class problem of separating points in a particular class Ck from points not in that class. This is known as a one-versus-the-rest classi\ufb01er. The left-hand example in Figure 4.2 shows an biguous regions, shown in green. On the left is an example involving the use of two discriminants designed to distinguish points in class Ck from points not in class Ck. On the right is an example involving three discriminant functions each of which is used to separate a pair of classes Ck and Cj. example involving three classes where this approach leads to regions of input space that are ambiguously classi\ufb01ed. An alternative is to introduce K(K \u2212 1)/2 binary discriminant functions, one for every possible pair of classes. This is known as a one-versus-one classi\ufb01er. Each point is then classi\ufb01ed according to a majority vote amongst the discriminant functions", "18d992d8-00ac-4def-b848-1bbe092949e3": "(3.27)  The Dirac delta function is defined such that it is zero valued everywhere except 0, yet integrates to 1. The Dirac delta function is not an ordinary function that associates each value x with a real-valued output; instead it is a different kind of  63  https://www.deeplearningbook.org/contents/prob.html    CHAPTER 3. PROBABILITY AND INFORMATION THEORY  mathematical object called a generalized function that is defined in terms of its properties when integrated. We can think of the Dirac delta function as being the limit point of a series of functions that put less and less density on all points other than zero. By defining p(x) to be 6 shifted by \u2014y we obtain an infinitely narrow and infinitely high peak of probability density where x = p.  A common use of the Dirac delta distribution is as a component of an empirical  distribution, 1< ; i(~) = \u2014 (a \u2014 a 3.28 Ale) = 7, le -20) (3.28) which puts probability mass 4 on each of the m points ao, al\u2122) forming  a given data set or collection of samples", "ef42ffb8-283f-4a21-811e-918647f1752b": "Multi-class support vector machines. In M. Verlysen (Ed. ), Proceedings ESANN\u201999, Brussels. D-Facto Publications. Whittaker, J. Graphical Models in Applied Multivariate Statistics. Wiley. Widrow, B. and M. E. Hoff . Adaptive switching circuits. In IRE WESCON Convention Record, Volume 4, pp. 96\u2013104. Reprinted in Anderson and Rosenfeld . Widrow, B. and M. A. Lehr . 30 years of adaptive neural networks: perceptron, madeline, and backpropagation. Proceedings of the IEEE 78(9), 1415\u20131442. Wiegerinck, W. and T. Heskes . Fractional belief propagation. In S. Becker, S. Thrun, and K. Obermayer (Eds", "b57d52de-2918-4374-b0b7-41665b795524": "Reinforcement learning algorithm for partially observable Markov decision problems.\n\nIn Advances in Neural Information Processing Systems 7 , pp. 345\u2013352. MIT Press, Cambridge, MA. Jacobs, R. A. Increased rates of convergence through learning rate adaptation. Neural Jaderberg, M., Mnih, V., Czarnecki, W. M., Schaul, T., Leibo, J. Z., Silver, D., Kavukcuoglu, K. Reinforcement learning with unsupervised auxiliary tasks. ArXiv:1611.05397. Jaeger, H. Observable operator models and conditioned continuation representations. ArJaeger, H. Discrete Time, Discrete Valued Observable Operator Models: A Tutorial. Jaeger, H. Tutorial on training recurrent neural networks, covering BPPT, RTRL, EKF and the \u2018echo state network\u2019 approach. German National Research Center for Information Technology, Technical Report GMD report 159, 2002", "40b9c950-787c-4452-8dcf-1b7818990fb6": "In order to use the data from b we must take into account the di\u21b5erence between the two policies, using their relative probability of taking the actions that were taken (see Section 5.5). In n-step methods, returns are constructed over n steps, so we are interested in the relative probability of just those n actions. For example, to make a simple o\u21b5-policy version of n-step TD, the update for time t (actually made at time t + n) can simply be weighted by \u21e2t:t+n\u22121: where \u21e2t:t+n\u22121, called the importance sampling ratio, is the relative probability under the two policies of taking the n actions from At to At+n\u22121 (cf. Eq.\n\n5.3): For example, if any one of the actions would never be taken by \u21e1 (i.e., \u21e1(Ak|Sk) = 0) then the n-step return should be given zero weight and be totally ignored. On the other hand, if by chance an action is taken that \u21e1 would take with much greater probability than b does, then this will increase the weight that would otherwise be given to the return", "12ca26f3-7696-4470-8921-bdfb1653c6d4": "It is plausible that f could be expanding in-between or far from the data manifolds (see, for example, what happens in the 1-D toy example of figure 14.7).\n\nWhen the  ala - - - - - - oe -  https://www.deeplearningbook.org/contents/autoencoders.html    s(n) penalty is applied to sigmoidal units, one easy way to shrink the Jacobian is to make the sigmoid units saturate to 0 or 1. This encourages the CAE to encode  input points with extreme values of the sigmoid, which may be interpreted as a binary code. It also ensures that the CAE will spread its code values throughout  most of the hypercube that its sigmoidal hidden units can span. We can think of the Jacobian matrix J at a point x as approximating the nonlinear encoder f(a) as being a linear operator. This allows us to use the word \u201ccontractive\u201d more formally. In the theory of linear operators, a linear operator is said to be contractive if the norm of Jz remains less than or equal to 1 for all unit-norm x", "6bcd01be-9bc4-48c3-8081-1521c7c360b2": "In principle, the SL or RL policy networks could have been used in the rollouts, but the forward propagation through these deep networks took too much time for either of them to be used in rollout simulations, a great many of which had to be carried out for each move decision during live play. For this reason, the rollout policy network was less complex than the other policy networks, and its input features could be computed more quickly than the features used for the policy networks. The rollout policy network allowed approximately 1,000 complete game simulations per second to be run on each of the processing threads that AlphaGo used. One may wonder why the SL policy was used instead of the better RL policy to select actions in the expansion phase of APV-MCTS. These policies took the same amount of time to compute because they used the same network architecture. The team actually found that AlphaGo played better against human opponents when APV-MCTS used as the SL policy instead of the RL policy. They conjectured that the reason for this was that the latter was tuned to respond to optimal moves rather than to the broader set of moves characteristic of human play.\n\nInterestingly, the situation was reversed for the value function used by APV-MCTS", "be116caa-e3e6-44aa-a579-430f8b9782fc": "Deep Q-learning  parameterizes the Q-function as Q\u03b8(x, a), and train the parameters by minimizing the following regression objective L(\u03b8) based on the Bellman temporal consistency: where \u00af\u03b8 is the parameters of the target Q-network, which is a slow copy of \u03b8 and considered as constant for gradient computation of \u03b8. Here \u03c0\u2032 is an behavior policy which can be an arbitrary distribution over text, such as the data distribution or replay buffer . This makes Q-learning an off-policy algorithm because of its ability to use samples coming from other policies. After learning Q\u03b8, one can induce a policy \u03c0 from it that takes arg maxa Q\u03b8(s, a) at each state s. Jaques et al.\n\ninstead sample tokens from the softmax function applied to Q\u03b8. However, the training can be unstable and inef\ufb01cient due to several challenges: (1) The bootstrapping nature of the above regression problem can make the training unstable. That is, the regression target rt + \u03b3 maxat+1 Q\u00af\u03b8(st+1, at+1) itself is derived from the Q-function to be learned", "10db9377-3aca-4830-814a-7d9498e5cdda": "Jiaao Chen, Zichao Yang, and Diyi Yang. 2020c. MixText: Linguistically-informed interpolation of hidden space for semi-supervised text classi\ufb01cation. In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pages 2147\u2013 2157, Online. Association for Computational Linguistics. Luoxin Chen, Weitong Ruan, Xinyue Liu, and Jianhua Lu. 2020d. SeqVAT: Virtual adversarial training for semi-supervised sequence labeling. In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pages 8801\u20138811, Online. Association for Computational Linguistics. Mingda Chen, Qingming Tang, Sam Wiseman, and Kevin Gimpel. 2019. Controllable paraphrase generation with a syntactic exemplar. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5972\u20135984", "0e611dec-1b81-4714-901f-021b345ae15a": "(b) The same data set but with three additional outlying data points showing how the Gaussian (green curve) is strongly distorted by the outliers, whereas the t-distribution (red curve) is relatively unaffected. outliers is much less signi\ufb01cant for the t-distribution than for the Gaussian. Outliers can arise in practical applications either because the process that generates the data corresponds to a distribution having a heavy tail or simply through mislabelled data. Robustness is also an important property for regression problems. Unsurprisingly, the least squares approach to regression does not exhibit robustness, because it corresponds to maximum likelihood under a (conditional) Gaussian distribution", "9e0d104c-bdbb-4653-ac4d-529538d00520": "The scaling factor a adjusts the total magnitude of the simple cell\u2019s response, while 6, and By control how quickly its receptive field falls off. 363  https://www.deeplearningbook.org/contents/convnets.html    CHAPTER 9. CONVOLUTIONAL NETWORKS  The cosine factor cos( fx\u2019 +) controls how the simple cell responds to changing brightness along the x\u2019 axis. The parameter f controls the frequency of the cosine, and \u00a2 controls its phase offset.\n\nAltogether, this cartoon view of simple cells means that a simple cell responds to a specific spatial frequency of brightness in a specific direction at a specific location. Simple cells are most excited when the wave of brightness in the image has the same phase as the weights. This occurs when the image is bright where the weights are positive and dark where the weights are negative. Simple cells are most inhibited when the wave of brightness is fully out of phase with the weights\u2014when the image is dark where the weights are positive and bright where the weights are negative", "25ef8ea6-a384-49cb-8995-0f4021062586": "4.19 (\u22c6) www Write down expressions for the gradient of the log likelihood, as well as the corresponding Hessian matrix, for the probit regression model de\ufb01ned in Section 4.3.5.\n\nThese are the quantities that would be required to train such a model using IRLS. 4.20 (\u22c6 \u22c6) Show that the Hessian matrix for the multiclass logistic regression problem, de\ufb01ned by (4.110), is positive semide\ufb01nite. Note that the full Hessian matrix for this problem is of size MK \u00d7 MK, where M is the number of parameters and K is the number of classes. To prove the positive semide\ufb01nite property, consider the product uTHu where u is an arbitrary vector of length MK, and then apply Jensen\u2019s inequality. 4.23 (\u22c6 \u22c6) www In this exercise, we derive the BIC result (4.139) starting from the Laplace approximation to the model evidence given by (4.137). Show that if the prior over parameters is Gaussian of the form p(\u03b8) = N(\u03b8|m, V0), the log model evidence under the Laplace approximation takes the form where H is the matrix of second derivatives of the log likelihood ln p(D|\u03b8) evaluated at \u03b8MAP", "e993797f-aef7-4287-b333-86c740555cf1": "We are obligated then to say which states we care most about. We must specify a state distribution \u00b5(s) \u2265 0, P about the error in each state s. By the error in a state s we mean the square of the di\u21b5erence between the approximate value \u02c6v(s,w) and the true value v\u21e1(s). Weighting this over the state space by \u00b5, we obtain a natural objective function, the Mean Squared Value Error, denoted VE: The square root of this measure, the root VE, gives a rough measure of how much the approximate values di\u21b5er from the true values and is often used in plots. Often \u00b5(s) is chosen to be the fraction of time spent in s. Under on-policy training this is called the on-policy distribution; we focus entirely on this case in this chapter. In continuing tasks, the on-policy distribution is the stationary distribution under \u21e1.\n\nIn an episodic task, the on-policy distribution is a little di\u21b5erent in that it depends on how the initial states of episodes are chosen", "21071803-fb99-4bab-8ee5-e4ce386c8224": "Importance sam- pling may also be used to improve the estimate of the gradient of the cost function used to train model parameters with stochastic gradient descent, particularly for models, such as classifiers, in which most of the total value of the cost function comes from a small number of misclassified examples. Sampling more difficult examples more frequently can reduce the variance of the gradient in such cases . 17.3.\n\nMarkov Chain Monte Carlo Methods  In many cases, we wish to use a Monte Carlo technique but there is no tractable method for drawing exact samples from the distribution Pmodel(x) or from a good (low variance) importance sampling distribution q(x). In the context of deep learning, this most often happens when pyode|(X) is represented by an undirected model. In these cases, we introduce a mathematical tool called a Markov chain to approximately sample from pyodei (x). The family of algorithms that use Markov chains to perform Monte Carlo estimates is called Markov chain Monte Carlo methods (MCMC). Markov chain Monte Carlo methods for machine learning are described at greater length in Koller and Friedman", "bdba8548-e81e-4132-b11a-d361d6f75f8d": "SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  digital computer read from or write to a specific address.\n\nIt is difficult to optimize functions that produce exact integer addresses. To alleviate this problem, NTMs actually read to or write from many memory cells simultaneously. To read, they take a weighted average of many cells. To write, they modify multiple cells by different amounts. The coefficients for these operations are chosen to be focused on a small number of cells, for example, by producing them via a softmax function. Using these weights with nonzero derivatives enables the functions controlling access to the memory to be optimized using gradient descent. The gradient on these coefficients indicates whether each of them should  https://www.deeplearningbook.org/contents/rnn.html    be creased or decreased, but the gradient will typically be large only tor those memory addresses receiving a large coefficient. These memory cells are typically augmented to contain a vector, rather than the single scalar stored by an LSTM or GRU memory cell. There are two reasons  to increase the size of the memory cell. One reason is that we have increased the cost of accessing a memory cell", "ad18454e-14e5-47a7-a0f1-cda918894cea": "One di\u21b5erence is that the pseudocode uses the compact expression r ln \u21e1(At|St, \u2713t) for the fractional vector r\u21e1(At|St,\u2713t) these two expressions for the vector are equivalent follows from the identity r ln x = rx This vector has been given several names and notations in the literature; we will refer to it simply as the eligibility vector.\n\nNote that it is the only place that the policy REINFORCE: Monte-Carlo Policy-Gradient Control (episodic) for \u21e1\u21e4 Generate an episode S0, A0, R1, . , ST \u22121, AT \u22121, RT , following \u21e1(\u00b7|\u00b7, \u2713) Loop for each step of the episode t = 0, 1, . , T \u2212 1: The second di\u21b5erence between the pseudocode update and the REINFORCE update equation (13.8) is that the former includes a factor of \u03b3t. This is because, as mentioned earlier, in the text we are treating the non-discounted case (\u03b3 =1) while in the boxed algorithms we are giving the algorithms for the general discounted case", "1a2b6a46-60b4-4072-a8e0-43f57460a16e": "The remaining two plots in Figure 1.11 show the corresponding histogram estimates of p(X) and p(X|Y = 1). Let us now return to our example involving boxes of fruit. For the moment, we shall once again be explicit about distinguishing between the random variables and their instantiations. We have seen that the probabilities of selecting either the red or the blue boxes are given by respectively. Note that these satisfy p(B = r) + p(B = b) = 1. Now suppose that we pick a box at random, and it turns out to be the blue box. Then the probability of selecting an apple is just the fraction of apples in the blue box which is 3/4, and so p(F = a|B = b) = 3/4.\n\nIn fact, we can write out all four conditional probabilities for the type of fruit, given the selected box takes two possible values. The top left \ufb01gure shows a sample of 60 points drawn from a joint probability distribution over these variables", "df023886-2524-4d1d-9a50-b9df00e8030a": "Dopamine neurons receive information from many di\u21b5erent brain areas, so the input to the SNpc and VTA labeled \u2018Reward\u2019 in Figure 15.5b should be thought of as vector of reward-related information arriving to neurons in these nuclei along multiple input channels. What the theoretical scalar reward signal Rt might correspond to, then, is the net contribution of all reward-related information to dopamine neuron activity. It is the result of a pattern of activity across many neurons in di\u21b5erent areas of the brain. Although the actor\u2013critic neural implementation illustrated in Figure 15.5b may be correct on some counts, it clearly needs to be re\ufb01ned, extended, and modi\ufb01ed to qualify as a full-\ufb02edged model of the function of the phasic activity of dopamine neurons. The Historical and Bibliographic Remarks section at the end of this chapter cites publications that discuss in more detail both empirical support for this hypothesis and places where it falls short", "c3fbef67-fbf1-40ea-ae93-68e638b23a34": "Recall that these ratios multiply the step size in SGD methods, so high variance means taking steps that vary greatly in their sizes. This is problematic for SGD because of the occasional very large steps. They must not be so large as to take the parameter to a part of the space with a very di\u21b5erent gradient. SGD methods rely on averaging over multiple steps to get a good sense of the gradient, and if they make large moves from single samples they become unreliable. If the step-size parameter is set small enough to prevent this, then the expected step can end up being very small, resulting in very slow learning. The notions of momentum , of Polyak-Ruppert averaging , or further extensions of these ideas may signi\ufb01cantly help. Methods for adaptively setting separate step sizes for di\u21b5erent components of the parameter vector are also pertinent (e.g., Jacobs, 1988; Sutton, 1992b, c), as are the \u201cimportance weight aware\u201d updates of Karampatziakis and Langford .\n\nIn Chapter 5 we saw how weighted importance sampling is signi\ufb01cantly better behaved, with lower variance updates, than ordinary importance sampling", "f455fe10-fdd6-4d5f-b468-ed56e8db492a": "Exercise 12.3 Some insight into how TD(\u03bb) can closely approximate the o\u270fine \u03bb-return algorithm can be gained by seeing that the latter\u2019s error term (in brackets in (12.4)) can be written as the sum of TD errors (12.6) for a single \ufb01xed w. Show this, following the pattern of (6.6), and using the recursive relationship for the \u03bb-return you obtained in Exercise 12.1. \u21e4 Exercise 12.4 Use your result from the preceding exercise to show that, if the weight updates over an episode were computed on each step but not actually used to change the weights (w remained \ufb01xed), then the sum of TD(\u03bb)\u2019s weight updates would be the same as the sum of the o\u270fine \u03bb-return algorithm\u2019s updates.\n\n\u21e4 The o\u270fine \u03bb-return algorithm is an important ideal, but it is of limited utility because it uses the \u03bb-return (12.2), which is not known until the end of the episode. In the continuing case, the \u03bb-return is technically never known, as it depends on n-step returns for arbitrarily large n, and thus on rewards arbitrarily far in the future", "2bf0fa0c-4215-4daa-aeb1-e08f20b5243b": "We therefore wish to evaluate the predictive distribution p(t|x, x, t).\n\nHere we shall assume that the parameters \u03b1 and \u03b2 are \ufb01xed and known in advance (in later chapters we shall discuss how such parameters can be inferred from data in a Bayesian setting). A Bayesian treatment simply corresponds to a consistent application of the sum and product rules of probability, which allow the predictive distribution to be written in the form Here p(t|x, w) is given by (1.60), and we have omitted the dependence on \u03b1 and \u03b2 to simplify the notation. Here p(w|x, t) is the posterior distribution over parameters, and can be found by normalizing the right-hand side of (1.66). We shall see in Section 3.3 that, for problems such as the curve-\ufb01tting example, this posterior distribution is a Gaussian and can be evaluated analytically. Similarly, the integration in (1.68) can also be performed analytically with the result that the predictive distribution is given by a Gaussian of the form where the mean and variance are given by where I is the unit matrix, and we have de\ufb01ned the vector \u03c6(x) with elements \u03c6i(x) = xi for i = 0,", "f1cd7596-d97b-45e9-aa15-756700e26290": "Use these formulae to highlight the difference between Bayesian averaging of different models and the use of latent variables within a single model.\n\n14.2 (\u22c6) The expected sum-of-squares error EAV for a simple committee model can be de\ufb01ned by (14.10), and the expected error of the committee itself is given by (14.11). Assuming that the individual errors satisfy (14.12) and (14.13), derive the result (14.14). 14.3 (\u22c6) www By making use of Jensen\u2019s inequality (1.115), for the special case of the convex function f(x) = x2, show that the average expected sum-of-squares error EAV of the members of a simple committee model, given by (14.10), and the expected error ECOM of the committee itself, given by (14.11), satisfy 14.4 (\u22c6 \u22c6) By making use of Jensen\u2019s in equality (1.115), show that the result (14.54) derived in the previous exercise hods for any error function E(y), not just sum-ofsquares, provided it is a convex function of y", "4db4305a-8219-407f-9e2d-e799da18f400": "Another example is pixel-wise segmentation of images, where the computer program assigns every pixel in an image to a specific category. 99  CHAPTER 5. MACHINE LEARNING BASICS  For example, deep learning can be used to annotate the locations of roads in aerial photographs . The output form need not mirror the structure of the input as closely as in these annotation-style tasks. For example, in image captioning, the computer program observes an image and outputs a natural language sentence describing the image . These tasks are called structured output tasks because the program must output several values that are all tightly interrelated. For example, the words produced by an image captioning program must form a valid sentence. Anomaly detection: In this type of task, the computer program sifts through a set of events or objects and flags some of them as being unusual or atypical. An example of an anomaly detection task is credit card fraud detection. By modeling your purchasing habits, a credit card company can detect misuse of your cards", "11b4bbc9-d5cb-4f4a-bf04-30fb006a3d41": "An approach related to supervised pretraining extends the idea to the context of transfer learning: Yosinski et al.\n\npretrain a deep convolutional net with eight layers of weights on a set of tasks (a subset of the 1,000 ImageNet object categories) and then initialize a same-size network with the first & layers of the first net. All the layers of the second network (with the upper layers initialized randomly) are then jointly trained to perform a different set of tasks (another subset of the 1,000 ImageNet object categories), with fewer training examples than for the first set of tasks. Other approaches to transfer learning with neural networks are discussed in section 15.2. Another related line of work is the FitNets  approach. This approach begins by training a network that has low enough depth and great enough width (number of units per layer) to be easy to train. This network then becomes a teacher for a second network, designated the student. The student network is much deeper and thinner (eleven to nineteen layers) and would be difficult to train with SGD under normal circumstances", "ec95349e-f471-4cd0-b24c-8560d1c260e8": "(6.4) p  https://www.deeplearningbook.org/contents/mlp.html    J e=| % ], (6.5) 1 w=] 4 ]> (6.6)  and b= 0. We can now walk through how the model processes a batch of inputs. Let X be the design matrix containing all four points in the binary input space, with one  loa  X = | |. (6.7)  Lia]  The first step in the neural network is to multiply the input matrix by the first layer\u2019s weight matrix:  example per row:  0 0 1 1 xXW=|,, (6.8) 2 2 Next, we add the bias vector c, to obtain 0 -l 1 O 1 O (6.9) 2 1 171  CHAPTER 6.\n\nDEEP FEEDFORWARD NETWORKS  In this space, all the examples lie along a line with slope 1. As we move along this line, the output needs to begin at 0, then rise to 1, then drop back down to 0. A linear model cannot implement such a function", "cc81610f-c89c-4908-b4f9-909fc5d1e463": "military: the cavalry battalion a This essay discusses the potential for the development of a small infantry brigade as an infantry regiment. It is also a contribution to the larger cavalry corps as it would require a larger brigade for battle. For more information see the original article on this page. legal: In summary Currently: In 1966 the Act was amended into state of law through amendments.\\n\\n\\n Defent No.\n\n1 etc 695 [The character in question for judicial decision purposes; participation t concerned you; \"but not acceptance. \")\\n\\n Generally held: Just politics: In summary Senate candidates, senator (Republican); senator (Democrat); and opinion-former (2002-08). - 2012 Senate results are based on the federal Election Commission\u2019s October 2016 Current Opinion Polling Reports. Key \ufb01gures : Open Gallup poll Most Americans view the computers: In summary: 12-16 add-on chips", "8613a2e7-1241-4faf-a4be-d95b5699ed1b": "As an illustration we consider the case of a single input variable x in which f(x, t) is given by a zero-mean isotropic Gaussian over the variable z = (x, t) with variance \u03c32. The corresponding conditional distribution (6.48) is given by a Gaussian mixture, and is shown, together with the conditional mean, for the sinusoidal Exercise 6.18 An obvious extension of this model is to allow for more \ufb02exible forms of Gaussian components, for instance having different variance parameters for the input and target variables.\n\nMore generally, we could model the joint distribution p(t, x) using a Gaussian mixture model, trained using techniques discussed in Chapter 9 , and then \ufb01nd the corresponding conditional distribution p(t|x). In this latter case we no longer have a representation in terms of kernel functions evaluated at the training set data points. However, the number of components in the mixture model can be smaller than the number of training set points, resulting in a model that is faster to evaluate for test data points. We have thereby accepted an increased computational cost during the training phase in order to have a model that is faster at making predictions", "30271fed-2ff4-4d33-9103-2229c2e05b90": "The loss function for maximum  179  CHAPTER 6.\n\nDEEP FEEDFORWARD NETWORKS  likelihood learning of a Bernoulli parametrized by a sigmoid is  J(8) = \u2014log Ply | 2) (6.24) = \u2014 logo ((2y \u2014 1)z) (6.25) =\u00a2((1\u2014 2y)z). (6.26)  This derivation makes use of some properties from section 3.10. By rewriting the loss in terms of the softplus function, we can see that it saturates only when (1 \u2014 2y)z is very negative. Saturation thus occurs only when the model already has the right answer\u2014when y = 1 and z is very positive, or y = 0 and z is very negative. When z has the wrong sign, the argument to the softplus function, (1 \u20142y)z, may be simplified to |z|. As |z| becomes large while z has the wrong sign, the softplus function asymptotes toward simply returning its argument |z|. The derivative with respect to z asymptotes to sign(z), so, in the limit of extremely incorrect z, the softplus function does not shrink the gradient at all", "2fdd45f3-0b45-43f9-9e84-6c34cfb502fa": "In this fragment of the lattice, we see that the quantity \u03b2(zn1) is obtained by taking the components \u03b2(zn+1,k) of \u03b2(zn+1) at step n + 1 and summing them up with weights given by the products of A1k, corresponding to the values of p(zn+1|zn) and the corresponding values of the emission density p(xn|zn+1,k). Making use of the de\ufb01nition (13.35) for \u03b2(zn), we then obtain Note that in this case we have a backward message passing algorithm that evaluates \u03b2(zn) in terms of \u03b2(zn+1). At each step, we absorb the effect of observation xn+1 through the emission probability p(xn+1|zn+1), multiply by the transition matrix p(zn+1|zn), and then marginalize out zn+1. This is illustrated in Figure 13.13. Again we need a starting condition for the recursion, namely a value for \u03b2(zN)", "8172bd36-8e50-4a19-9605-6aa7ef6ed303": "Note that in a practical implementation, new variables \u03b7j de\ufb01ned by are introduced, and the minimization is performed with respect to the \u03b7j. This ensures that the parameters \u03c3j remain positive.\n\nIt also has the effect of discouraging pathological solutions in which one or more of the \u03c3j goes to zero, corresponding to a Gaussian component collapsing onto one of the weight parameter values. Such solutions are discussed in more detail in the context of Gaussian mixture models in Section 9.2.1. For the derivatives with respect to the mixing coef\ufb01cients \u03c0j, we need to take account of the constraints \ufffd which follow from the interpretation of the \u03c0j as prior probabilities. This can be done by expressing the mixing coef\ufb01cients in terms of a set of auxiliary variables {\u03b7j} using the softmax function given by in which the Cartesian coordinates (x1, x2) of the end effector are determined uniquely by the two joint angles \u03b81 and \u03b82 and the (\ufb01xed) lengths L1 and L2 of the arms. This is know as the forward kinematics of the arm", "652e7be0-445f-4b15-800c-ceea712a557c": "The objective is in the same form with the RL-as-inference formalism of policy optimization . Intuitively, the objective maximizes the expected reward under q, and enforces the model p\u03b8 to stay close to q, with a maximum entropy regularization over q. The problem is solved with an EM procedure that optimizes q and \u03b8 alternatingly: where Z is the normalization term. With the established framework, it is easy to show that the above optimization procedure reduces to maximum likelihood learning by taking \u03b1 \u2192 0, \u03b2 = 1, and the reward function: That is, a sample (x, y) receives a unit reward only when it matches a training example in the dataset, while the reward is negative in\ufb01nite in all other cases. To make the equivalence to maximum likelihood learning clearer, note that the above M-step now reduces to where the joint distribution p(x) exp{R\u03b4}/Z equals the empirical data distribution, which means the M-step is in fact maximizing the data log-likelihood of the model p\u03b8", "f50abbb5-d575-4c57-837c-976957a9abb8": "Afterstates are useful when we have knowledge of an initial part of the environment\u2019s dynamics but not necessarily of the full dynamics. For example, in games we typically know the immediate e\u21b5ects of our moves. We know for each possible chess move what the resulting position will be, but not how our opponent will reply. Afterstate value functions are a natural way to take advantage of this kind of knowledge and thereby produce a more e\ufb03cient learning method.\n\nThe reason it is more e\ufb03cient to design algorithms in terms of afterstates is apparent from the tic-tac-toe example. A conventional action-value function would map from positions and moves to an estimate of the value. But many position\u2013move pairs produce the same resulting position, as in the example below: In such cases the position\u2013move pairs are di\u21b5erent but produce the same \u201cafterposition,\u201d and thus must have the same value. A conventional action-value function would have to separately assess both pairs, whereas an afterstate value function would immediately assess both equally. Any learning about the position\u2013move pair on the left would immediately transfer to the pair on the right. Afterstates arise in many tasks, not just games", "bbdf89d2-b447-46a7-b3cd-5e573ff8881a": "(d \u00a9 v) + by\u2019)  Because P will be normalized, we can safely ignore multiplication by factors that are constant with respect to y:  Ponsemble(Y =yl|v) x on Il exp(W,|(d Ov)+ by) (7.64) de{0,1}\" 1 =exp|s, DY Wy(dov) +by (7.65) de{0,1}\" = exp (5 Wi .vt+ by) ; (7.66)  Substituting this back into equation 7.58, we obtain a softmax classifier with weights 3W. The weight scaling rule is also exact in other settings, including regression networks with conditionally normal outputs as well as deep networks that have hidden layers without nonlinearities. However, the weight scaling rule is only an approximation for deep models that have nonlinearities. Though the approximation has not been theoretically characterized, it often works well, empirically. Goodfellow et al.\n\nfound experimentally that the weight scaling approximation can work better (in terms of classification accuracy) than Monte Carlo approximations to the ensemble predictor", "7f6a840f-6ba6-462e-9c51-b4f370d1e269": ", M. We see that the variance, as well as the mean, of the predictive distribution in (1.69) is dependent on x. The \ufb01rst term in (1.71) represents the uncertainty in the predicted value of t due to the noise on the target variables and was expressed already in the maximum likelihood predictive distribution (1.64) through \u03b2\u22121 ML.\n\nHowever, the second term arises from the uncertainty in the parameters w and is a consequence of the Bayesian treatment. The predictive distribution for the synthetic sinusoidal regression problem is illustrated in Figure 1.17. In our example of polynomial curve \ufb01tting using least squares, we saw that there was an optimal order of polynomial that gave the best generalization. The order of the polynomial controls the number of free parameters in the model and thereby governs the model complexity. With regularized least squares, the regularization coef\ufb01cient \u03bb also controls the effective complexity of the model, whereas for more complex models, such as mixture distributions or neural networks there may be multiple parameters governing complexity. In a practical application, we need to determine the values of such parameters, and the principal objective in doing so is usually to achieve the best predictive performance on new data", "923ccd94-d975-4ce7-9c47-da92eecc9ba3": "As we will show later in Theorem 2, \u03b4 gives the same topology as the Jensen-Shannon divergence, pointing to the fact that the JS is a very strong distance, and is thus more propense to give a discontinuous loss function. Now, all dual spaces (such as Cb(X)\u2217 and thus Prob(X)) have a strong topology (induced by the norm), and a weak* topology. As the name suggests, the weak* topology is much weaker than the strong topology.\n\nIn the case of Prob(X), the strong topology is given by the total variation distance, and the weak* topology is given by the Wasserstein distance (among others) . Assumption 1. Let g : Z \u00d7Rd \u2192 X be locally Lipschitz between \ufb01nite dimensional vector spaces. We will denote g\u03b8(z) it\u2019s evaluation on coordinates (z, \u03b8). We say that g satis\ufb01es assumption 1 for a certain probability distribution p over Z if there are local Lipschitz constants L(\u03b8, z) such that Proof of Theorem 1", "21ab1919-e729-43e6-8227-d0227d283c81": "This stage is essentially drawing a sample from the RBM defined by the top two hidden layers. We can then use a single pass of ancestral sampling through the rest of the model to draw a sample from the visible units. Deep belief networks incur many of the problems associated with both directed models and undirected models. Inference in a deep belief network is intractable because of the explaining away effect within each directed layer and the interaction between the two hidden layers that have undirected connections. Evaluating or maximizing the standard evidence  Tannen Lae-- dd ne AL Ta Wet dd te 21a tenet nt abla Lann-enn thn net dn 1  https://www.deeplearningbook.org/contents/generative_models.html    1OUWEL VUULIU ULI LIC 1O8~ LBCLLOOU ib aldU IULLACLADVIE, VUCCaAUSE LUC CVIUCLICE 1OWEL bound takes the expectation of cliques whose size is equal to the network width", "ef02616d-430b-43ab-bd25-5bfaf500720f": "Nevertheless, it provides a good exercise in the use of variational methods and will also lay the foundation for variational treatment of Bayesian logistic regression in Section 10.6. Recall that the likelihood function for w, and the prior over w, are given by where \u03c6n = \u03c6(xn). We now introduce a prior distribution over \u03b1. From our discussion in Section 2.3.6, we know that the conjugate prior for the precision of a Gaussian is given by a gamma distribution, and so we choose This can be represented as a directed graphical model as shown in Figure 10.8. Our \ufb01rst goal is to \ufb01nd an approximation to the posterior distribution p(w, \u03b1|t). To do this, we employ the variational framework of Section 10.1, with a variational posterior distribution given by the factorized expression We can \ufb01nd re-estimation equations for the factors in this distribution by making use of the general result (10.9). Recall that for each factor, we take the log of the joint distribution over all variables and then average with respect to those variables not in that factor", "fc359be2-8a6a-4b87-859e-3b83a2515225": "This can make the border pixels somewhat underrepresented in the model.\n\nThis motivates the other extreme case, which MATLAB refers to as full convolution, in which enough zeros are added for every pixel to be visited k times in each direction, resulting in an output image of width m +k \u2014 1. In this case, the output pixels near the border are a function of fewer pixels than the output pixels near the center. This can make it difficult to learn a single kernel that performs well at all positions in the convolutional feature map. Usually the optimal amount of zero padding (in  344  CHAPTER 9. CONVOLUTIONAL NETWORKS  Ls PANSZAINS ASscoocl  SOO OOOOOOOOOOCOOOOONS\u00aee  w\u00e94, o0c00000006  ! \\  https://www.deeplearningbook.org/contents/convnets.html     PGOOOOOOOOCOOOOOOCSCOOO SS  Sscoccoo0 00s  Figure 9.13: The effect of zero padding on network size. Consider a convolutional network with a kernel of width six at every layer", "ed33c2a7-5398-4e15-b37a-7cff80c1c8ec": "\"C, Technlque< ho.-e lherefore bttn proposed for finding approximale pre-image< iB\"\"lr Nat.. 2(04). 12.4. Nonlinear Latent Variable Models In this chapter, we have focussed on the simplest class of models having continuous latent variables, namely those based on linear-Gaussian distributions. As well as having great practical importance, these models are relatively easy to analyse and to fit to data and can also be used as components in more complex models.\n\nHere we consider briefly some generalizations of this framework to models that are either nonlinear or non-Gaussian, or both. In fact, the issues of nonlinearity and non-Gaussianity are related because a general probability density can be obtained from a simple fixed reference density, such as a Gaussian, by making a nonlinear change of variables. This idea forms the basis of several practical latent variable models as we shall see shortly. We begin by considering models in which the observed variables are related linearly to the latent variables, but for which the latent distribution is non-Gaussian", "18b2a7bb-6add-4f31-bbb8-aa94e0708668": "These secondary hyperparameters are usually easier to choose, however, in the sense that acceptable performance may be achieved on a wide range of tasks using the same secondary hyperparameters for all tasks. 11.4.3. Grid Search  When there are three or fewer hyperparameters, the common practice is to perform grid search. For each hyperparameter, the user selects a small finite set of values to explore. The grid search algorithm then trains a model for every joint specification of hyperparameter values in the Cartesian product of the set of values for each individual hyperparameter.\n\nThe experiment that yields the best validation set error is then chosen as having found the best hyperparameters. See the left of figure 11.2 for an illustration of a grid of hyperparameter values. How should the lists of values to search over be chosen? In the case of numerical (ordered) hyperparameters, the smallest and largest element of each list is chosen  427  https://www.deeplearningbook.org/contents/guidelines.html    CHAPTER 11, PRACTICAL METHODOLOGY  Grid Random  Figure 11.2: Comparison of grid search and random search. For illustration purposes, we display two hyperparameters, but we are typically interested in having many more", "c33e3804-8272-491c-8f25-2b0382ba344a": "One way to resolve this problem is to make h a deep representation, encoding x into h in such a way that a Markov chain in the space of h can mix more easily. Many representation learning algorithms, such as autoencoders and RBMs, tend to yield a marginal distribution over h that is more uniform and more unimodal than the original data distribution over aw.\n\nIt can be argued that this arises from trying to minimize reconstruction error while using all the available representation space, because minimizing reconstruction error over  https://www.deeplearningbook.org/contents/monte_carlo.html    the training examples will be better achieved when different training examples are easily distinguishable from each other in 2-space, and thus well separated. Bengio et al. observed that deeper stacks of regularized autoencoders or RBMs yield marginal distributions in the top-level h-space that appeared more spread out  and more uniform, with less of a gap between the regions corresponding to different modes (categories, in the experiments). Training an RBM in that higher-level  601  CHAPTER 17. MONTE CARLO METHODS  space allowed Gibbs sampling to mix faster between modes", "05c45396-8456-410f-b1f4-f2ff7b16927a": "monkeys were internally keeping track of the timing of the reward. (Response timing is one area where the simplest version of TD learning needs to be modi\ufb01ed to account for some of the details of the timing of dopamine neuron responses. We consider this issue in the following section.) The observations from the studies described above led Schultz and his group to conclude that dopamine neurons respond to unpredicted rewards, to the earliest predictors of reward, and that dopamine neuron activity decreases below baseline if a reward, or a predictor of reward, does not occur at its expected time. Researchers familiar with reinforcement learning were quick to recognize that these results are strikingly similar to how the TD error behaves as the reinforcement signal in a TD algorithm. The next section explores this similarity by working through a speci\ufb01c example in detail. This section explains the correspondence between the TD error \u03b4 and the phasic responses of dopamine neurons observed in the experiments just described.\n\nWe examine how \u03b4 changes over the course of learning in a task something like the one described above where a monkey \ufb01rst sees an instruction cue and then a \ufb01xed time later has to respond correctly to a trigger cue in order to obtain reward", "793a9356-7054-464c-8a1d-5424595a1356": "If Al systems can gleana deeper, more nuanced understanding  of reality beyond what\u2019s specified in the  training data set, they\u2019ll be more useful and ultimately bring Al closer to human-level intelligence. As babies, we learn how the world works largely by observation.\n\nWe form generalized predictive models about objects in the world by learning concepts such as object permanence and gravity. Later in life, we observe the world, act onit, observe again, and build hypotheses to explain how our actions change our environment by trial and error. A working hypothesis is that generalized knowledge about the world, or common sense, forms the  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/    Canadian leaders for their groundbreaking innovations and positive impact on the quality of life in the country. Artificial Intelligence  FACEBOOK  Faceboo Resear..  Facebook researchers will be participating   Self-supervised learning: The dark matter of intelligence   bulk of biological intelligence in both In several  humans and animals. This common activities  sense ability is taken for granted in at this  humans and animals, but has remained year's  an open challenge in Al research since virtual  its inception. In a way, common sense is ICLR 2020.  the dark matter of artificial intelligence", "044b563e-6d42-4d9d-bf70-65b9ea816b27": "Lswav (Zt, Zs) = (Zt, as) + (Zs; ae)  The swapped fit prediction depends on the cross entropy between the predicted code and a set of K trainable prototype vectors C = {e1, see ,cx}. The prototype vector matrix is shared across different batches and represents anchor clusters that each instance should be clustered to. Lz s=- (k) lo (k) where (k) _ exp(Z, cx/T) (2,4s) da BP; Pe eplas ex /7)  In a mini-batch containing B feature vectors Z =  \u20ac RE*B, We would like to maximize the similarity between the features and the prototypes:  maxTr(Q'C! 'Z) + cH(Q) Qca x 1 1 where Q = {QERE*? | Qlp= Kin QV = pies  where H is the entropy, H#(Q) = \u2014 vy Q;; log Q;;, controlling the smoothness of the code", "763436d8-6344-458f-b23e-fd20729064b7": "Then,  = S> d(s) S> (als; 0)Q.\n\n(s, a)  scS acA VI(8) = d7 as) $7 Va(als; 4)Qx(s,a) ses acA = Sod s) So x(als; 0) m(als;4) Q,(s, a) ses acA (als; 8) = So d(s) S> r(a\\s; 6) V In (als; 0)Q,. (s, a) scS acA  = E,,  https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log   This result is named \u201cPolicy Gradient Theorem\" which lays the theoretical foundation for various policy gradient algorithms:  VI(0) =E,,  REINFORCE  REINFORCE, also known as Monte-Carlo policy gradient, relies on Q,(s, a), an estimated return by MC methods using episode samples, to update the policy parameter 0", "81607bcf-7d05-4ade-86f8-b778d8b45055": "When q is chosen to be a Gaussian distribution, with noise added to a predicted mean value, maximizing this entropy term encourages increasing the standard deviation  of this noise. More generally, this entropy term encourages the variational posterior to place high probability mass on many z values that could have generated x, rather than collapsing to a single point estimate of the most likely value. In equation 20.77, we recognize the first term as the reconstruction log-likelihood found in other autoencoders. The second term tries to make the approximate posterior distribution q(z | z) and the model prior Pmodei (Z) approach each other. Traditional approaches to variational inference and learning infer q via an opti- mization algorithm, typically iterated fixed-point equations (section 19.4). These approaches are slow and often require the ability to compute E,.glog pmodei(Z; \u00a3) in closed form.\n\nThe main idea behind the variational autoencoder is to train a parametric encoder (also sometimes called an inference network or recognition model) that produces the parameters of g. As long as z is a continuous variable, we  693  CHAPTER 20", "813d8844-4def-4248-8932-1f1337f6d27c": "DEEP GENERATIVE MODELS  Specifically, with binary mean units ho\u201d) and binary covariance units no), the mcRBM model is defined as the combination of two energy functions:  Enc (x, A, AO) = En(x, bh) + Ep(@, hb), (20.43)  where E,, is the standard Gaussian-Bernoulli RBM energy function,\u201d m 1 m m m Eq (@ hi) = Sale \u2014 Dra Wah\u201d \u2014 So vrr nee, (20.44) j j  and EF, is the cRBM energy function that models the conditional covariance information:  ~\\ 2 E\u00a2(a,h) = Soni? (er) = S209, (20.45) Jj J  The parameter r) corresponds to the covariance weight vector associated with no, and b(\u00a9) is a vector of covariance offsets", "661325c8-b9da-4972-ab43-a691aa77f082": "Although the discrete nature of textual data and its complex syntactic and semantic structures make \ufb01nding labelpreserving transformation more dif\ufb01cult, there nevertheless exists a wide range of methods for augmenting text data that in practice preserve labels. In the following subsections, we describe four broad classes of data augmentation methods: Token-level augmentations manipulate words and phrases in a sentence to generate augmented text while ideally retaining the semantic meaning and labels of the original text. Designed Replacement. Intuitively, the semantic meaning of a sentence remains unchanged if some of its tokens are replaced with other tokens that have the same meaning.\n\nA simple approach is to fetch synonyms as words for substitutions . The synonyms are discovered based on pre-de\ufb01ned dictionaries such as WordNet , or similarities in word embedding space . However, improvements from this technique are usually minimal  and in some cases, performance may even degrade . A major drawback stems from the lack of contextual information when fetching synonyms\u2014especially for words with multiple meanings and few synonyms. To resolve this, language models (LMs) have been used to replace the sampled words given their context", "3f95c83b-b8a0-4484-8bc5-69811bbf692d": "MACHINE LEARNING BASICS  In some cases, the cost function may be a function that we cannot actually evaluate, for computational reasons. In these cases, we can still approximately minimize it using iterative numerical optimization, as long as we have some way of approximating its gradients. Most machine learning algorithms make use of this recipe, though it may not be immediately obvious. If a machine learning algorithm seems especially unique or hand designed, it can usually be understood as using a special-case optimizer. Some models, such as decision trees and k-means, require special-case optimizers because heir cost functions have flat regions that make them inappropriate for minimization by gradient-based optimizers", "302d27d8-fbdb-403c-916c-c8536c07a9b0": "Semi-supervised sequence modeling with cross-view training. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1914\u2013 1925, Brussels, Belgium. Association for Computational Linguistics. Ryan Cotterell and Georg Heigold. 2017. Crosslingual character-level neural morphological tagging. In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 748\u2013759, Copenhagen, Denmark. Association for Computational Linguistics. Ekin D Cubuk, Barret Zoph, Dandelion Mane, Vijay Vasudevan, and Quoc V Le. 2019. Autoaugment: Learning augmentation strategies from data. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 113\u2013123.\n\nLi Deng, Jinyu Li, Jui-Ting Huang, Kaisheng Yao, Dong Yu, Frank Seide, Mike Seltzer, Geoff Zweig, Xiaodong He, Jason Williams, Yifan Gong, and Alex Acero. 2013. Recent advances in deep learning for speech research at microsoft", "297d7746-bfa9-4654-9c78-f1912610d00f": "Furthermore, as well as \ufb01nding the appropriate values for complexity parameters within a given model, we may wish to consider a range of different types of model in order to \ufb01nd the best one for our particular application. We have already seen that, in the maximum likelihood approach, the performance on the training set is not a good indicator of predictive performance on unseen data due to the problem of over-\ufb01tting.\n\nIf data is plentiful, then one approach is simply to use some of the available data to train a range of models, or a given model with a range of values for its complexity parameters, and then to compare them on independent data, sometimes called a validation set, and select the one having the best predictive performance. If the model design is iterated many times using a limited size data set, then some over-\ufb01tting to the validation data can occur and so it may be necessary to keep aside a third test set on which the performance of the selected model is \ufb01nally evaluated. In many applications, however, the supply of data for training and testing will be limited, and in order to build good models, we wish to use as much of the available data as possible for training. However, if the validation set is small, it will give a relatively noisy estimate of predictive performance", "6fcc0666-287c-48b2-834f-f0e1b502a00b": "The book is supported by a great deal of additional material, including lecture slides as well as the complete set of \ufb01gures used in the book, and the reader is encouraged to visit the book web site for the latest information: http://research.microsoft.com/\u223ccmbishop/PRML The exercises that appear at the end of every chapter form an important component of the book. Each exercise has been carefully chosen to reinforce concepts explained in the text or to develop and generalize them in signi\ufb01cant ways, and each is graded according to dif\ufb01culty ranging from (\u22c6), which denotes a simple exercise taking a few minutes to complete, through to (\u22c6 \u22c6 \u22c6), which denotes a signi\ufb01cantly more complex exercise.\n\nIt has been dif\ufb01cult to know to what extent these solutions should be made widely available. Those engaged in self study will \ufb01nd worked solutions very bene\ufb01cial, whereas many course tutors request that solutions be available only via the publisher so that the exercises may be used in class. In order to try to meet these con\ufb02icting requirements, those exercises that help amplify key points in the text, or that \ufb01ll in important details, have solutions that are available as a PDF \ufb01le from the book web site. Such exercises are denoted by www", "436cc709-940b-4bab-8575-9899eadd4530": "This is especially true for environments whose dynamics depend on the behavior of humans, such as in education, healthcare, transportation, and public policy, domains that can surely bene\ufb01t from improved decision making. However, it is for real-world embedded agents that warnings about potential dangers of arti\ufb01cial intelligence need to be heeded. Some of these warnings are particularly relevant to reinforcement learning. Because reinforcement learning is based on optimization, it inherits the pluses and minuses of all optimization methods. On the minus side is the problem of devising objective functions, or reward signals in the case of reinforcement learning, so that optimization produces the desired results while avoiding undesirable results. We said in Section 17.4 that reinforcement learning agents can discover unexpected ways to make their environments deliver reward, some of which might be undesirable, or even dangerous.\n\nWhen we specify what we want a system to learn only indirectly, as we do in designing a reinforcement learning system\u2019s reward signal, we will not know how closely the agent will ful\ufb01ll our desire until its learning is complete. This is hardly a new problem with reinforcement learning; recognition of it has a long history in both literature and engineering", "968b6b1d-3abc-4620-8782-c72f0fbb16c4": "We already know that the exact maximum likelihood solution for JL is given by the sample mean x defined by (12.1), and it is convenient to substitute for JL at this stage.\n\nMaking use of the expressions (12.31) and (12.32) for the latent and conditional distributions, respectively, and taking the expectation with respect to the posterior distribution over the latent variables, we obtain Note that this depends on the posterior distribution only through the sufficient statistics of the Gaussian. Thus in the E step, we use the old parameter values to evaluate which follow directly from the posterior distribution (12.42) together with the standard result lE = cov + JEJET. Here M is defined by (12.41). In the M step, we maximize with respect to Wand (J2, keeping the posterior statistics fixed. Maximization with respect to (T2 is straightforward. For the maximization with respect to W we make use of (C.24), and obtain the M-step equations The EM algorithm for probabilistic PCA proceeds by initializing the parameters and then alternately computing the sufficient statistics of the latent space posterior distribution using (12.54) and (12.55) in the E step and revising the parameter values using (12.56) and (12.57) in the M step", "bc69ec65-357c-4390-9ec6-42ed6b2339d3": "61  CHAPTER 3.\n\nPROBABILITY AND INFORMATION THEORY  https://www.deeplearningbook.org/contents/prob.html    0.40  0.35  0.30 Maximum at x = pw 7 0.25 Inflection points at & 0.20 t=pto  0.15 0.10 0.05 0.00  2.0 1.5 1.0 0.5 0.0 0.5 1.0 1.5 2.0  Figure 3.1: The normal distribution. The normal distributionN (x; j1, 07) exhibits a classic \u201cbell curve\u201d shape, with the x coordinate of its central peak given by pu, and the width of its peak controlled by o. In this example, we depict the standard normal distribution, with = 0 ando =1. First, many distributions we wish to model are truly close to being normal distributions. The central limit theorem shows that the sum of many indepen- dent random variables is approximately normally distributed. This means that in practice, many complicated systems can be modeled successfully as normally distributed noise, even if the system can be decomposed into parts with more structured behavior. Second, out of all possible probability distributions with the same variance, the normal distribution encodes the maximum amount of uncertainty over the real numbers", "e99c851f-5eb4-4c5a-b335-4bd57310be9f": "To set the stage for the full problem, we brie\ufb02y discuss the simplest way in which nonassociative tasks extend to the associative setting. As an example, suppose there are several di\u21b5erent k-armed bandit tasks, and that on each step you confront one of these chosen at random. Thus, the bandit task changes randomly from step to step. This would appear to you as a single, nonstationary k-armed bandit task whose true action values change randomly from step to step.\n\nYou could try using one of the methods described in this chapter that can handle nonstationarity, but unless the true action values change slowly, these methods will not work very well. Now suppose, however, that when a bandit task is selected for you, you are given some distinctive clue about its identity (but not its action values). Maybe you are facing an actual slot machine that changes the color of its display as it changes its action values. Now you can learn a policy associating each task, signaled by the color you see, with the best action to take when facing that task\u2014for instance, if red, select arm 1; if green, select arm 2", "eafca0ef-3ae8-4cc9-b029-766d744b52a5": "Points with an = C can lie inside the margin and can either be correctly classi\ufb01ed if \u03ben \u2a7d 1 or misclassi\ufb01ed if \u03ben > 1.\n\nTo determine the parameter b in (7.1), we note that those support vectors for which 0 < an < C have \u03ben = 0 so that tny(xn) = 1 and hence will satisfy Again, a numerically stable solution is obtained by averaging to give where M denotes the set of indices of data points having 0 < an < C. An alternative, equivalent formulation of the support vector machine, known as the \u03bd-SVM, has been proposed by Sch\u00a8olkopf et al. This involves maximizing This approach has the advantage that the parameter \u03bd, which replaces C, can be interpreted as both an upper bound on the fraction of margin errors (points for which \u03ben > 0 and hence which lie on the wrong side of the margin boundary and which may or may not be misclassi\ufb01ed) and a lower bound on the fraction of support vectors. An example of the \u03bd-SVM applied to a synthetic data set is shown in Figure 7.4", "5cea6bbe-a004-4287-870d-4ada14d1bf37": "The training criterion for the discriminator D, given any generator G, is to maximize the quantity V (G, D) a+b. The discriminator does not need to be de\ufb01ned outside of Supp(pdata) \u222a Supp(pg), concluding the proof. Note that the training objective for D can be interpreted as maximizing the log-likelihood for estimating the conditional probability P(Y = y|x), where Y indicates whether x comes from pdata (with y = 1) or from pg (with y = 0). The minimax game in Eq. 1 can now be reformulated as: C(G) = max D V (G, D) Theorem 1. The global minimum of the virtual training criterion C(G) is achieved if and only if pg = pdata. At that point, C(G) achieves the value \u2212 log 4", "9d4c0870-0177-4498-b248-52a8045c6928": "Optimizing models that make discrete decisions requires specialized optimization algorithms, described in section 20.9.1. So far, training these stochastic architectures that make discrete decisions remains harder than training deterministic algorithms that make soft decisions. Whether it is soft (allowing back-propagation) or stochastic and hard, the mechanism for choosing an address is in its form identical to the attention mechanism, which had been previously introduced in the context of machine translation  and is discussed in section 12.4.5.1. The idea of attention mechanisms for neural networks was introduced even earlier, in the context of handwriting generation , with an attention mechanism that was constrained to move only forward in time through the sequence. In the case of machine translation and memory networks, at each step, the focus of attention can move to a completely different place, compared to the previous step. Recurrent neural networks provide a way to extend deep learning to sequential data. They are the last major tool in our deep learning toolbox. Our discussion now moves to how to choose and use these tools and how to apply them to real-world tasks. 415  https://www.deeplearningbook.org/contents/rnn.html", "56ea3d04-19a8-4e78-b9e9-0acc997c009d": "In a latent variable model, we might want to extract features E describing the observed variables v. Sometimes we need to solve such problems in order to perform other tasks. We often train our models using the principle of maximum likelihood.\n\nBecause  C  log p(v) = hwvolhla) Nae mlh as) \u2014 law obh | a1 (18 Qa)  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    7 BVB Pee wR Uys (suey 580  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  we often want to compute p(h | v) in order to implement a learning rule. All these are examples of inference problems in which we must predict the value of some variables given other variables, or predict the probability distribution over some variables given the value of other variables. Unfortunately, for most interesting deep models, these inference problems are intractable, even when we use a structured graphical model to simplify them", "a9e6f917-c02d-4c2f-a0b0-40efda1d9a79": "For the particular case of R = I, we see that the columns of W are the principal component eigenvectors scaled by the variance parameters Ai (J'2. The interpretation of these scaling factors is clear once we recognize that for a convolution of independent Gaussian distributions (in this case the latent space distribution and the noise model) the variances are additive. Thus the variance Ai in the direction of an eigenvector Ui is composed of the sum of a contribution Ai (J'2 from the projection of the unit-variance latent space distribution into data space through the corresponding column of W, plus an isotropic contribution of variance (J'2 which is added in all directions by the noise model.\n\nIt is worth taking a moment to study the form of the covariance matrix given by (12.36). Consider the variance of the predictive distribution along some direction specified by the unit vector v, where vTv = 1, which is given by vTCv. First suppose that v is orthogonal to the principal subspace, in other words it is given by some linear combination of the discarded eigenvectors. Then vTV = 0 and hence vTCv = (J'2", "0a7a8f99-9ef5-45a0-bdcf-11db2e298baa": "In particular, the result (8.63) shows that the local marginal at the node zn is given by the product of the incoming messages. Because we have conditioned on the variables X = {x1, . , xN}, we are computing the joint distribution Dividing both sides by p(X), we then obtain in agreement with (13.33). The result (13.43) can similarly be derived from (8.72). Exercise 13.11 There is an important issue that must be addressed before we can make use of the forward backward algorithm in practice.\n\nFrom the recursion relation (13.36), we note that at each step the new value \u03b1(zn) is obtained from the previous value \u03b1(zn\u22121) by multiplying by quantities p(zn|zn\u22121) and p(xn|zn). Because these probabilities are often signi\ufb01cantly less than unity, as we work our way forward along the chain, the values of \u03b1(zn) can go to zero exponentially quickly. For moderate lengths of chain (say 100 or so), the calculation of the \u03b1(zn) will soon exceed the dynamic range of the computer, even if double precision \ufb02oating point is used", "5e2c24ab-50b2-48d2-a0fe-bc19b3437378": "Overall, policy-gradient methods provide a signi\ufb01cantly di\u21b5erent set of strengths and weaknesses than action-value methods.\n\nToday they are less well understood in some respects, but a subject of excitement and ongoing research. Methods that we now see as related to policy gradients were actually some of the earliest to be studied in reinforcement learning  and in predecessor \ufb01elds . They were largely supplanted in the 1990s by the action-value methods that are the focus of the other chapters of this book. In recent years, however, attention has returned to actor\u2013critic methods and to policy-gradient methods in general. Among the further developments beyond what we cover here are natural-gradient methods , deterministic policy gradient methods , o\u21b5-policy policy-gradient methods , and entropy regularization . Major applications include acrobatic helicopter autopilots and AlphaGo (Section 16.6). Our presentation in this chapter is based primarily on that by Sutton, McAllester, Singh, and Mansour , who introduced the term \u201cpolicy gradient methods.\u201d A useful overview is provided by Bhatnagar et al", "aad787c6-a3b3-47fd-9b46-51823f54c81b": "Because \u03b3(zn) must also be Gaussian, we write it in the form To derive the required recursion, we start from the backward recursion (13.62) for \ufffd\u03b2(zn), which, for continuous latent variables, can be written in the form We now multiply both sides of (13.99) by \ufffd\u03b1(zn) and substitute for p(xn+1|zn+1) and p(zn+1|zn) using (13.75) and (13.76). Then we make use of (13.89), (13.90) and (13.91), together with (13.98), and after some manipulation we obtain Exercise 13.29 and we have made use of AVn = PnJT n", "01ee99ee-6942-45bb-a10a-215b32e2f01c": "(Left)Gabor functions with different values of the parameters that control the coordinate system: xo, yo, and +. Each Gabor function in this grid is assigned a value of xp and yo proportional to its position in its grid, and 7 is chosen so that each Gabor filter is sensitive to the direction radiating out from the center of the grid. For the other two plots, zo, yo, and 7 are fixed to zero. (Center)Gabor functions with different Gaussian scale parameters 8, and \u00a3,. Gabor functions are arranged in increasing width (decreasing 3,,) as we move left to right through the grid, and increasing height (decreasing 8,) as we move top to bottom. For the other two plots, the 6 values are fixed to 1.5 times the image width. (Right)Gabor functions with different sinusoid parameters f and \u00a2. As we move top to bottom, f increases, and as we move left to right, \u00a2 increases.\n\nFor the other two plots, \u00a2 is fixed to 0 and f is fixed to 5 times the image width", "51d43f60-200f-418d-ba6c-b777e3df15d7": "AlphaZero is a general reinforcement learning algorithm that improves over the world\u2019s hitherto best programs in the diverse games of Go, chess, and shogi. Personalizing web services such as the delivery of news articles or advertisements is one approach to increasing users\u2019 satisfaction with a website or to increase the yield of a marketing campaign.\n\nA policy can recommend content considered to be the best for each particular user based on a pro\ufb01le of that user\u2019s interests and preferences inferred from their history of online activity. This is a natural domain for machine learning, and in particular, for reinforcement learning. A reinforcement learning system can improve a recommendation policy by making adjustments in response to user feedback. One way to obtain user feedback is by means of website satisfaction surveys, but for acquiring feedback in real time it is common to monitor user clicks as indicators of interest in a link. A method long used in marketing called A/B testing is a simple type of reinforcement learning used to decide which of two versions, A or B, of a website users prefer. Because it is non-associative, like a two-armed bandit problem, this approach does not personalize content delivery", "4c311767-49e8-4939-bf01-41b6529f970b": "The generator nets used a mixture of recti\ufb01er linear activations  and sigmoid activations, while the discriminator net used maxout  activations. Dropout  was applied in training the discriminator net. While our theoretical framework permits the use of dropout and other noise at intermediate layers of the generator, we used noise as the input to only the bottommost layer of the generator network. We estimate probability of the test set data under pg by \ufb01tting a Gaussian Parzen window to the samples generated with G and reporting the log-likelihood under this distribution. The \u03c3 parameter of the Gaussians was obtained by cross validation on the validation set. This procedure was introduced in Breuleux et al. and used for various generative models for which the exact likelihood is not tractable . Results are reported in Table 1. This method of estimating the likelihood has somewhat high variance and does not perform well in high dimensional spaces but it is the best method available to our knowledge. Advances in generative models that can sample but not estimate likelihood directly motivate further research into how to evaluate such models", "204433d3-1aa0-49c6-b608-ff47686d17ba": "IEEE Transactions on Automatic Bertsekas, D. P. Distributed asynchronous computation of \ufb01xed points. Mathematical Bertsekas, D. P. Dynamic Programming: Deterministic and Stochastic Models. PrenticeBertsekas, D. P. Dynamic Programming and Optimal Control, Volume 1, third edition. Bertsekas, D. P. Dynamic Programming and Optimal Control, Volume 2: Approximate Dynamic Programming, fourth edition. Athena Scienti\ufb01c, Belmont, MA. Bertsekas, D. P. Rollout algorithms for discrete optimization: A survey. In Handbook of Combinatorial Optimization, pp. 2989\u20133013. Springer, New York. Bertsekas, D. P., Tsitsiklis, J. N., Wu, C. Rollout algorithms for combinatorial optimizaBertsekas, D. P., Yu, H", "850b7014-df67-447b-a64e-4676f58a6d83": "In either case, we say the model is used to simulate the environment and produce simulated experience. The word planning is used in several di\u21b5erent ways in di\u21b5erent \ufb01elds. We use the term to refer to any computational process that takes a model as input and produces or improves a policy for interacting with the modeled environment: In arti\ufb01cial intelligence, there are two distinct approaches to planning according to our de\ufb01nition.\n\nState-space planning, which includes the approach we take in this book, is viewed primarily as a search through the state space for an optimal policy or an optimal path to a goal. Actions cause transitions from state to state, and value functions are computed over states. In what we call plan-space planning, planning is instead a search through the space of plans. Operators transform one plan into another, and value functions, if any, are de\ufb01ned over the space of plans. Plan-space planning includes evolutionary methods and \u201cpartial-order planning,\u201d a common kind of planning in arti\ufb01cial intelligence in which the ordering of steps is not completely determined at all stages of planning. Plan-space methods are di\ufb03cult to apply e\ufb03ciently to the stochastic sequential decision problems that are the focus in reinforcement learning, and we do not consider them further", "9919813b-3680-4e7c-a9b6-ca9ac58428da": "For the univariate Gaussian, we have which, after some simple rearrangement, can be cast in the standard exponential family form (2.194) with Exercise 2.57 Let us now consider the problem of estimating the parameter vector \u03b7 in the general exponential family distribution (2.194) using the technique of maximum likelihood. Taking the gradient of both sides of (2.195) with respect to \u03b7, we have Rearranging, and making use again of (2.195) then gives where we have used (2.194). We therefore obtain the result Note that the covariance of u(x) can be expressed in terms of the second derivatives of g(\u03b7), and similarly for higher order moments. Thus, provided we can normalize a Exercise 2.58 distribution from the exponential family, we can always \ufb01nd its moments by simple differentiation. Now consider a set of independent identically distributed data denoted by X = {x1, . .\n\n, xn}, for which the likelihood function is given by Setting the gradient of ln p(X|\u03b7) with respect to \u03b7 to zero, we get the following condition to be satis\ufb01ed by the maximum likelihood estimator \u03b7ML which can in principle be solved to obtain \u03b7ML", "d021a8bb-9102-41bf-b46c-cd91e21c7087": "Later, is influenced by all the Markov chain steps that have  run so far. Our goal is for q) (x) to converge to p(x). Because we have reparametrized the problem in terms of a positive integer x, we can describe the probability distribution q using a vector v with  g(x = 1) = 4. (17.17)  Consider what happens when we update a single Markov chain\u2019s state x to a new state 2\u2019. The probability of a single state landing in state x\u2019 is given by  git ( =a T(a\u2019 | a). (17.18)  Using our integer parametrization, we can represent the effect of the transition operator T using a matrix A. We define A so that  Ay; =T(x' =i|x= J).\n\n(17.19)  Using this definition, we can now rewrite equation 17.18. Rather than writing it in terms of gq and T to understand how a single state is updated, we may now use v  593  CHAPTER 17", "6ad81439-42c0-44ee-8381-43239a384ddc": "Let P\u03b8 be the distribution of g\u03b8(Z) with Z a random variable with density p and g\u03b8 a function satisfying assumption 1. Then, there is a solution f : X \u2192 R to the problem Now comes the question of \ufb01nding the function f that solves the maximization problem in equation (2). To roughly approximate this, something that we can do is train a neural network parameterized with weights w lying in a compact space W and then backprop through Ez\u223cp(z), as we would do with a typical GAN.\n\nNote that the fact that W is compact implies that all the functions fw will be K-Lipschitz for some K that only depends on W and not the individual weights, therefore approximating (2) up to an irrelevant scaling factor and the capacity of the \u2018critic\u2019 fw. In order to have parameters w lie in a compact space, something simple we can do is clamp the weights to a \ufb01xed box (say W = l) after each gradient update. The Wasserstein Generative Adversarial Network (WGAN) procedure is described in Algorithm 1. Weight clipping is a clearly terrible way to enforce a Lipschitz constraint", "a5722758-16f6-4931-bb97-f6f4f8c64c27": "11, 12).\n\nRandom erasing is a Data Augmentation method that seeks to directly prevent overfit- ting by altering the input space. By removing certain input patches, the model is forced to find other descriptive characteristics. This augmentation method can also be stacked on top of other augmentation techniques such as horizontal flipping or color filters. Ran- dom erasing produced one of the highest accuracies on the CIFAR-10 dataset. DeVries and Taylor  conducted a similar study called Cutout Regularization. Like the random erasing study, they experimented with randomly masking regions of the image (Table 2). Mikolajcyzk and Grochowski  presented an interesting idea to combine random  erasing with GANs designed for image inpainting. Image inpainting describes the task of Shorten and Khoshgoftaar J Big Data  6:60   Image-aware Random Erasing  input image  Object-aware Random Erasin", "93e3be3f-a4db-4d65-a340-42bcf87371ef": "This readily falls into the dynamic SE setting described in Section 6, where now the experience function is f\u03c6(t) associated with learnable parameters \u03c6.\n\nFor example, in problem (1), f\u03c6(t) = \ufffd i \u03bbi \u03c6f i rule,\u03c6(t), where any learnable components in each knowledge constraint f i rule,\u03c6 (Section 4.2) and the weights \u03bbi \u03c6 constitute the \u03c6 to be learned . In problem (2), f\u03c6(t) is instantiated as fdata-w,\u03c6(t; D) (Equation 4.6) with learnable data weights w(t\u2217) \u2208 \u03c6, or as fdata-aug,\u03c6(t; D) (Equation 4.8) with the metric for augmentation at\u2217(t) \u2208 \u03c6 to be learned . In problem (3), we have discussed the training of f\u03c6(t) as the GAN discriminator in Section 6.1, but we want to improve the training stability . Thus, one approach for e\ufb03cient updates of the general experience function f\u03c6 would address all three problems together. To seek for solutions, we again take advantage of the uni\ufb01ed SE perspective that enables us to reuse existing successful techniques instead of having to invent new ones", "6376ee49-1106-4825-833c-0aba6c9aa0c1": "In order to solve this constrained optimization problem, we introduce Lagrange multipliers an \u2a7e 0, with one multiplier an for each of the constraints in (7.5), giving Appendix E where a = (a1, . , aN)T. Note the minus sign in front of the Lagrange multiplier term, because we are minimizing with respect to w and b, and maximizing with respect to a. Setting the derivatives of L(w, b, a) with respect to w and b equal to zero, we obtain the following two conditions Eliminating w and b from L(w, b, a) using these conditions then gives the dual representation of the maximum margin problem in which we maximize with respect to a subject to the constraints Here the kernel function is de\ufb01ned by k(x, x\u2032) = \u03c6(x)T\u03c6(x\u2032). Again, this takes the form of a quadratic programming problem in which we optimize a quadratic function of a subject to a set of inequality constraints. We shall discuss techniques for solving such quadratic programming problems in Section 7.1.1. The solution to a quadratic programming problem in M variables in general has computational complexity that is O(M 3)", "7af85381-b9c2-4fc4-a6e4-cb3ee4ac02ea": ", xN each of which has a uniform distribution over the interval  and then considering the distribution of the mean (x1 + \u00b7 \u00b7 \u00b7 + xN)/N. For large N, this distribution tends to a Gaussian, as illustrated in Figure 2.6. In practice, the convergence to a Gaussian as N increases can be very rapid. One consequence of this result is that the binomial distribution (2.9), which is a distribution over m de\ufb01ned by the sum of N observations of the random binary variable x, will tend to a Gaussian as N \u2192 \u221e (see Figure 2.1 for the case of N = 10). The Gaussian distribution has many important analytical properties, and we shall consider several of these in detail. As a result, this section will be rather more technically involved than some of the earlier sections, and will require familiarity with various matrix identities. However, we strongly encourage the reader to become proAppendix C \ufb01cient in manipulating Gaussian distributions using the techniques presented here as this will prove invaluable in understanding the more complex models presented in later chapters. We begin by considering the geometrical form of the Gaussian distribution", "f582ec8b-7f6e-40f8-a2fe-5503283555b7": "In practice, these methods usually converge much faster than their theoretical worst-case run times, particularly if they are started On problems with large state spaces, asynchronous DP methods are often preferred. To complete even one sweep of a synchronous method requires computation and memory for every state. For some problems, even this much memory and computation is impractical, yet the problem is still potentially solvable because relatively few states occur along optimal solution trajectories. Asynchronous methods and other variations of GPI can be applied in such cases and may \ufb01nd good or optimal policies much faster than synchronous methods can.\n\nIn this chapter we have become familiar with the basic ideas and algorithms of dynamic programming as they relate to solving \ufb01nite MDPs. Policy evaluation refers to the (typically) iterative computation of the value functions for a given policy. Policy improvement refers to the computation of an improved policy given the value function for that policy. Putting these two computations together, we obtain policy iteration and value iteration, the two most popular DP methods. Either of these can be used to reliably compute optimal policies and value functions for \ufb01nite MDPs given complete knowledge of the MDP", "eb29dbaf-2269-4d53-a004-6e333ba30d56": "We have seen that the effective kernel de\ufb01nes the weights by which the training set target values are combined in order to make a prediction at a new value of x, and it can be shown that these weights sum to one, in other words for all values of x.\n\nThis intuitively pleasing result can easily be proven informally Exercise 3.14 by noting that the summation is equivalent to considering the predictive mean \ufffdy(x) for a set of target data in which tn = 1 for all n. Provided the basis functions are linearly independent, that there are more data points than basis functions, and that one of the basis functions is constant (corresponding to the bias parameter), then it is clear that we can \ufb01t the training data exactly and hence that the predictive mean will be simply \ufffdy(x) = 1, from which we obtain (3.64). Note that the kernel function can be negative as well as positive, so although it satis\ufb01es a summation constraint, the corresponding predictions are not necessarily convex combinations of the training set target variables", "d9a7fea5-555f-4592-9d15-72a2f28649e4": "2018. Kevin Clark, Minh-Thang Luong, Christopher D Manning, and Quoc Le. 2018. Semi-supervised sequence modeling with cross-view training. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1914\u2013 1925. Ronan Collobert and Jason Weston. 2008. A uni\ufb01ed architecture for natural language processing: Deep neural networks with multitask learning. In Proceedings of the 25th international conference on Machine learning, pages 160\u2013167. ACM. Alexis Conneau, Douwe Kiela, Holger Schwenk, Lo\u00a8\u0131c Barrault, and Antoine Bordes. 2017. Supervised learning of universal sentence representations from natural language inference data.\n\nIn Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 670\u2013680, Copenhagen, Denmark. Association for Computational Linguistics. Andrew M Dai and Quoc V Le. 2015. Semi-supervised sequence learning. In Advances in neural information processing systems, pages 3079\u20133087. J. Deng, W", "af384deb-a48b-457d-a497-5c72bdef72e8": "Thc simplest continuous latent variable model assumes Gaussian distributions for both thc latent and observed variables and makes use of a linear,Gaussian deSeCTion 8.1..J pendence of the observed variables on Ihe slate of the latent variables. This leads to a probabilislic fonnulation of the well-known technique of principal component analysis (PeA), as well as 10 a related model called factor analysis. Section 12.1 In this chapter w will begin wilh a slandard, nonprobabilistic treatment of PeA. and thcn we show how PeA arises naturally as the maximum likelihood solution 10 S'crio\" 12.2 a panlcula, fonn of linear-Gau\"ian latem \"ariable model", "b762fc18-41f9-4e85-9a7c-5ed445ecc896": "Pawlak, V., Kerr, J. N. D. .\n\nDopamine receptor activation is required for corticostriatal spike-timing-dependent plasticity. The Journal of Neuroscience, 28(10):2435\u20132446. thing: neuromodulation opens the STDP gate. Frontiers in Synaptic Neuroscience, 2:146. doi:10.3389/fnsyn.2010.00146. Pearce, J. M., Hall, G. A model for Pavlovian learning: Variation in the e\u21b5ectiveness of conditioning but not unconditioned stimuli. Psychological Review, 87(6):532\u2013552. Pearl, J. Causal diagrams for empirical research. Biometrika, 82(4):669-688. Pecevski, D., Maass, W., Legenstein, R. A. Theoretical analysis of learning with reward-modulated spike-timing-dependent plasticity. In Advances in Neural Information Processing Systems 20 , pp. 881\u2013888", "65faf282-80af-41b2-8e9c-c1a873ef98d2": "Notes: According to the Reptile paper, \u201cthe gradient of the squared euclidean distance between a point \u00a9 and a set S is the vector 2(0 - p), where p is the closest point in S to 0\". Technically the closest point in S is also a function of \u00a9, but I\u2019m not sure why the gradient does not need to worry  about the derivative of p. (Please feel free to leave me a comment or send me an email about this if you have ideas.)\n\nThus the update rule for one stochastic gradient step is:  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log  6 =0\u2014aVol ; dist(0, W*)?] = 0 \u2014 (0 \u2014 W2(6)) = (1\u2014 a) + aW (6)  The closest point on the optimal task manifold W; (8) cannot be computed exactly, but Reptile approximates it using SGD(L,,, 9, k)", "18a51604-3059-40a0-9a90-95cda64fe491": "Expectation learning in the brain using di\u21b5use ascending connections. In Society for Neuroscience Abstracts, 18:1210. Randl\u00f8v, J., Alstr\u00f8m, P. Learning to drive a bicycle using reinforcement learning and shaping. In Proceedings of the 15th International Conference on Machine Learning , pp. 463\u2013471. Rangel, A., Camerer, C., Montague, P. R. A framework for studying the neurobiology of value-based decision making. Nature Reviews Neuroscience, 9(7):545\u2013556. Rangel, A., Hare, T. Neural computations associated with goal-directed choice. Current Rao, R. P., Sejnowski, T. J. Spike-timing-dependent Hebbian plasticity as temporal di\u21b5erence learning. Neural Computation, 13(10):2221\u20132237. Ratcli\u21b5, R. Connectionist models of recognition memory: Constraints imposed by learning and forgetting functions", "bfd99acf-45c6-4001-98aa-dddd34504bcc": "Moreover, in the context of neural network training, we usually do not care about finding the exact minimum of a function, but seek only to reduce its value sufficiently to obtain good generalization error. Theoretical analysis of whether an optimization algorithm can accomplish this goal is extremely difficult. Developing more realistic bounds on the performance of optimization algorithms therefore remains an important goal for machine learning research. (omma) Ma. AlA27-241L-  https://www.deeplearningbook.org/contents/optimization.html    0.90 DadIC ALYULILLILLIS  We have previously introduced the gradient descent (section 4.3) algorithm that follows the gradient of an entire training set downhill. This may be accelerated considerably by using stochastic gradient descent to follow the gradient of randomly selected minibatches downhill, as discussed in section 5.9 and section 8.1.3. 8.3.1 Stochastic Gradient Descent  Stochastic gradient descent (SGD) and its variants are probably the most used optimization algorithms for machine learning in general and for deep learning in particular.\n\nAs discussed in section 8.1.3, it is possible to obtain an unbiased estimate of the gradient by taking the average gradient on a minibatch of m examples drawn i.i.d from the data-generating distribution", "6c3ec7d8-9f44-4c76-befb-ea45c0c8fba9": "It is also crucial that the minibatches be selected randomly. Computing an unbiased estimate of the expected gradient from a set of samples requires that those samples be independent.\n\nWe also wish for two subsequent gradient estimates to be independent from each other, so two subsequent minibatches of examples should also be independent from each other. Many datasets are most naturally arranged in a way where successive examples are highly correlated. For example, we might have a dataset of medical data with a long list of blood sample test results. This list might be arranged so that first we have five blood samples taken at different times from the first patient, then we have three blood samples taken from the second patient, then the blood samples from the third patient, and so on", "7d06ff7a-3faa-4943-a23f-4412fa50fa15": "We see that (2.17) has the same functional dependence on \u00b5 as the prior distribution, re\ufb02ecting the conjugacy properties of the prior with respect to the likelihood function.\n\nIndeed, it is simply another beta distribution, and its normalization coef\ufb01cient can therefore be obtained by comparison with (2.13) to give We see that the effect of observing a data set of m observations of x = 1 and l observations of x = 0 has been to increase the value of a by m, and the value of b by l, in going from the prior distribution to the posterior distribution. This allows us to provide a simple interpretation of the hyperparameters a and b in the prior as an effective number of observations of x = 1 and x = 0, respectively. Note that a and b need not be integers. Furthermore, the posterior distribution can act as the prior if we subsequently observe additional data. To see this, we can imagine taking observations one at a time and after each observation updating the current posterior with parameters a = 2, b = 2, and the likelihood function, given by (2.9) with N = m = 1, corresponds to a single observation of x = 1, so that the posterior is given by a beta distribution with parameters a = 3, b = 2", "3d090b7b-8303-4ef0-b805-8c9f686b3d4b": "We call eligibility traces like these of the critic unit\u2019s synapses noncontingent eligibility traces because they only depend on presynaptic activity and are not contingent in any way on postsynaptic activity. The non-contingent eligibility traces of the critic unit\u2019s synapses mean that the critic unit\u2019s learning rule is essentially the TD model of classical conditioning described in Section 14.2. With the de\ufb01nition we have given above of the critic unit and its learning rule, the critic in Figure 15.5a is the same as the critic in the ANN actor\u2013critic of Barto et al. Clearly, a critic like this consisting of just one linear neuron-like unit is the simplest starting point; this critic unit is a proxy for a more complicated neural network able to learn value functions of greater complexity.\n\nThe actor in Figure 15.5a is a one-layer network of k neuron-like actor units, each receiving at time t the same feature vector, x(St), that the critic unit receives. Each actor unit j, j = 1,", "edfb4796-edce-4127-8021-c231e41f5fcc": "Here \u0393(x) is the gamma function de\ufb01ned by (1.141) while Plots of the Dirichlet distribution over the simplex, for various settings of the parameters \u03b1k, are shown in Figure 2.5.\n\nMultiplying the prior (2.38) by the likelihood function (2.34), we obtain the posterior distribution for the parameters {\u00b5k} in the form We see that the posterior distribution again takes the form of a Dirichlet distribution, con\ufb01rming that the Dirichlet is indeed a conjugate prior for the multinomial. This allows us to determine the normalization coef\ufb01cient by comparison with (2.38) so that where we have denoted m = (m1, . , mK)T. As for the case of the binomial distribution with its beta prior, we can interpret the parameters \u03b1k of the Dirichlet prior as an effective number of observations of xk = 1. Note that two-state quantities can either be represented as binary variables and in Belgium, and the name Lejeune Dirichlet comes from \u2018le jeune de Richelet\u2019 (the young person from Richelet). Dirichlet\u2019s \ufb01rst paper, which was published in 1825, brought him instant fame", "34f89a01-2fb5-4756-846c-01ddbdc3732a": "With the right policy you can usually do much better than you could in the absence of any information distinguishing one bandit task from another. This is an example of an associative search task, so called because it involves both trial-and-error learning to search for the best actions, and association of these actions with the situations in which they are best. Associative search tasks are often now called contextual bandits in the literature. Associative search tasks are intermediate between the k-armed bandit problem and the full reinforcement learning problem. They are like the full reinforcement learning problem in that they involve learning a policy, but like our version of the k-armed bandit problem in that each action a\u21b5ects only the immediate reward.\n\nIf actions are allowed to a\u21b5ect the next situation as well as the reward, then we have the full reinforcement learning problem. We present this problem in the next chapter and consider its rami\ufb01cations throughout the rest of the book. Exercise 2.10 Suppose you face a 2-armed bandit task whose true action values change randomly from time step to time step", "f7c94cb0-3b98-4503-8547-fd74cc7b93e6": "(Right) In general, moralization may add many edges to the graph, thus losing many implied independences. For example, this sparse coding graph requires adding moralizing edges between every pair of hidden units, thus introducing a quadratic number of new direct dependences. 575  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  OHO) OO) CeO 55 SS ss  Figure 16.12: Converting an undirected model to a directed model. (Left) This undirected model cannot be converted to a directed model because it has a loop of length four with no chords. Specifically, the undirected model encodes two different independences that  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    no directed model can capture Simultaneously: alc | {b,d} and bld | {a,c}.\n\n(Center) To convert the undirected model to a directed model, we must toimgalate the grap  by ensuring that all loops of greater than length three have a chord", "8426884f-9f39-4410-9e59-af020880e132": "Our approach draws inspiration from the recent work  that shows equivalence between the data in supervised learning and the reward function in reinforcement learning.\n\nWe thus adapt an off-the-shelf reward learning algorithm  to the supervised setting for automated data manipulation. The marriage of the two paradigms results in a simple yet general algorithm, where various manipulation schemes are reduced to different parameterization of the 33rd Conference on Neural Information Processing Systems , Vancouver, Canada. data reward. Free parameters of manipulation are learned jointly with the target model through ef\ufb01cient gradient descent on validation examples. We demonstrate instantiations of the approach for automatically \ufb01ne-tuning an augmentation network and learning data weights, respectively. We conduct extensive experiments on text and image classi\ufb01cation in challenging situations of very limited data and imbalanced labels. Both augmentation and weighting by our approach signi\ufb01cantly improve over strong base models, even though the models are initialized with large-scale pretrained networks such as BERT  for text and ResNet  for images. Our approach, besides its generality, also outperforms a variety of dedicated rule- and learning-based methods for either augmentation or weighting, respectively", "652b4b9a-7bc9-41a9-bdd0-f805878f68cf": "Space is thus subdivided into nonoverlapping regions, with a one-to-one  https://www.deeplearningbook.org/contents/ml.html    correspondence between leat nodes and input regions. Hach leat node usually maps every point in its input region to the same output. Decision trees are usua  trained with specialized algorithms that are beyond the scope of this book. The learning algorithm can be considered nonparametric if it is allowed to learn a tree  of arbitrary size, though decision trees are usually regularized with size constraints that turn them into parametric models in practice. Decision trees as they are typically used, with axis-aligned splits and constant outputs within each node, struggle to solve some problems that are easy even for logistic regression. For example, if we have a two-class problem, and the positive class occurs wherever a > a1, the decision boundary is not axis aligned.\n\nThe decision tree will thus need to approximate the decision boundary with many nodes, implementing a step function that constantly walks back and forth across the true decision function with axis-aligned steps. As we have seen, nearest neighbor predictors and decision trees have many limitations", "63f7f689-019a-403e-ad20-6b92a75454fd": "As described in section 6.2.2.4, a general strategy for designing the output units and the loss function of a feedforward network is to define an output distribution p(y | a) and minimize the negative log-likelihood \u2014 log p(y | x). In that setting, y is a vector of targets, such as class labels. In an autoencoder, x is now the target as well as the input. Yet we can still apply the same machinery as before. Given a hidden code h, we may think of the decoder as providing a conditional distribution pgecoder(@ | h). We may then train the autoencoder by minimizing \u2014 log pdecoder(#@ | h). The exact form of this loss function will change depending on the form of pgecoder- AS With traditional feedforward networks, we usually use linear output units to parametrize the mean of a Gaussian distribution if a is real valued.\n\nIn that case, the negative log-likelihood yields a mean squared error criterion", "821ca787-b8ad-4a8a-b4a6-64d076b92730": "Iyyer et al. , Xie et al. Artetxe et al. , Lample et al. Xie et al. , Wei and Zou  Jia and Liang  , Andreas  Nye et al. , Feng et al. Furrer et al. , Guo et al. Yu et al. , Xie et al. Chen et al. , He et al. Chen et al. , Cai et al. Anaby-Tavor et al. , Kumar et al. Zhang and Bansal , Yang et al. Miyato et al. , Ebrahimi et al. Ebrahimi et al. , Cheng et al. , Chen et al", "2d38b21b-de65-415f-acec-329f0f8f795b": "11.2 The earliest w-to-2w example was given by Tsitsiklis and Van Roy , who also introduced the speci\ufb01c counterexample in the box on page 263. Baird\u2019s counterexample is due to Baird , though the version we present here is slightly modi\ufb01ed. Averaging methods for function approximation were developed by Gordon . Other examples of instability with o\u21b5-policy DP methods and more complex methods of function approximation are given by Boyan and Moore . Bradtke  gives an example in which Q-learning using linear function approximation in a linear quadratic regulation problem converges to a destabilizing policy. including the dynamic programming operator. Diagrams like Figure 11.3 were introduced by Lagoudakis and Parr . What we have called the Bellman operator, and denoted B\u21e1, is more commonly denoted T \u21e1 and called a \u201cdynamic programming operator,\u201d while a generalized form, denoted T (\u03bb), is called the \u201cTD(\u03bb) operator\u201d", "2e41a155-6276-407e-9bce-eb9673a2027b": "The EM algorithm breaks down the potentially dif\ufb01cult problem of maximizing the likelihood function into two stages, the E step and the M step, each of which will often prove simpler to implement. Nevertheless, for complex models it may be the case that either the E step or the M step, or indeed both, remain intractable. This leads to two possible extensions of the EM algorithm, as follows. The generalized EM, or GEM, algorithm addresses the problem of an intractable M step. Instead of aiming to maximize L(q, \u03b8) with respect to \u03b8, it seeks instead to change the parameters in such a way as to increase its value. Again, because L(q, \u03b8) is a lower bound on the log likelihood function, each complete EM cycle of the GEM algorithm is guaranteed to increase the value of the log likelihood (unless the parameters already correspond to a local maximum). One way to exploit the GEM approach would be to use one of the nonlinear optimization strategies, such as the conjugate gradients algorithm, during the M step", "ce76afcb-2233-4ac6-a147-349c903d915d": "An alternative way to reduce the number of independent parameters in a model is by sharing parameters (also known as tying of parameters).\n\nFor instance, in the chain example of Figure 8.10, we can arrange that all of the conditional distributions p(xi|xi\u22121), for i = 2, . , M, are governed by the same set of K(K\u22121) parameters. Together with the K\u22121 parameters governing the distribution of x1, this gives a total of K2 \u2212 1 parameters that must be speci\ufb01ed in order to de\ufb01ne the joint distribution. We can turn a graph over discrete variables into a Bayesian model by introducing Dirichlet priors for the parameters. From a graphical point of view, each node then acquires an additional parent representing the Dirichlet distribution over the parameters associated with the corresponding discrete node. This is illustrated for the chain model in Figure 8.11. The corresponding model in which we tie the parameters governing the conditional distributions p(xi|xi\u22121), for i = 2, . , M, is shown in Figure 8.12", "ec2e7ba6-4a95-408c-820b-755236639379": "This is because the partition function appears in both the numerator and the denominator of the ratio and cancels out:  4D  ZP(x) \u2014 p(x) Py) spy) Bly) (8.17)  The pseudolikelihood is based on the observation that conditional probabilities take this ratio-based form and thus can be computed without knowledge of the partition function.\n\nSuppose that we partition x into a, b and c, where a contains the variables we want to find the conditional distribution over, b contains the variables we want to condition on, and c contains the variables that are not part of our query:  p(ab)_\u2014\u2014p(ab) \u2014 _ (ab) p(b) Vac pla, b, c) Vac pla, b, c) :  This quantity requires marginalizing out a, which can be a very efficient operation provided that a andc do not contain many variables. In the extreme case, a can be a single variable and c can be empty, making this operation require only as many evaluations of p as there are values of a single random variable", "da1a7709-7106-4555-bd9a-8398b66f7afd": "Some approaches to back-propagation take a computational graph and a set of numerical values for the inputs to the graph, then return a set of numerical values describing the gradient at those input values. We call this approach symbol-to- number differentiation.\n\nThis is the approach used by libraries such as Torch  and Caffe . Another approach is to take a computational graph and add additional nodes  209  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  https://www.deeplearningbook.org/contents/mlp.html    \u00a9  Figure 6.10: An example of the symbol-to-symbol approach to computing derivatives. In this approach, the back-propagation algorithm does not need to ever access any actual specific numeric values. Instead, it adds nodes to a computational graph describing how to compute these derivatives. A generic graph evaluation engine can later compute the derivatives for any specific numeric values. (Left) In this example, we begin with a graph representing z = f(f(f(w))). (Right) We run the back-propagation algorithm, instructing it to construct the graph for the expression corresponding to #", "c1226b04-28d2-4e60-9607-814028720632": "12.5 True online TD(\u03bb) is primarily due to Harm van Seijen  though some of its key ideas were discovered independently by Hado van Hasselt (personal communication). The name \u201cdutch traces\u201d is in recognition of the contributions of both scientists. introduced by van Seijen and Sutton . The algorithm on page 307 was adapted from van Seijen et al. The Mountain Car results were made for this text, except for Figure 12.11 which is adapted from van Seijen and Sutton . Variable \u03bb was introduced in the \ufb01rst edition of this text. The roots of variable \u03b3 are in the work on options  and its precursors , becoming explicit in the GQ(\u03bb) paper , which also introduced some of these recursive forms for the \u03bb-returns. A di\u21b5erent notion of variable \u03bb has been developed by Yu . 12.9 O\u21b5-policy eligibility traces were introduced by Precup et al.\n\n, then further developed by Bertsekas and Yu , Maei , Yu , and by Sutton, Mahmood, Precup, and van Hasselt", "8af392b6-7155-4915-a756-22fedf75a7a0": "13.21 (\u22c6 \u22c6) Use the results (2.115) and (2.116), together with the matrix identities (C.5) and (C.7), to derive the results (13.89), (13.90), and (13.91), where the Kalman gain matrix Kn is de\ufb01ned by (13.92).\n\n13.23 (\u22c6 \u22c6) Using (13.93), together with the de\ufb01nitions (13.76) and (13.77) and the result (2.116), derive (13.94), (13.95) and (13.97). Show that this extension can be re-case in the framework discussed in this chapter by de\ufb01ning a state vector z with an additional component \ufb01xed at unity, and then augmenting the matrices A and C using extra columns corresponding to the parameters a and c. 13.25 (\u22c6 \u22c6) In this exercise, we show that when the Kalman \ufb01lter equations are applied to independent observations, they reduce to the results given in Section 2.3 for the maximum likelihood solution for a single Gaussian distribution. Consider the problem of \ufb01nding the mean \u00b5 of a single Gaussian random variable x, in which we are given a set of independent observations {x1, . , xN}", "27de51e2-bfbf-4371-af94-dc8e2d4a3400": "In this analogy, the kernel function is the potential of a point charge, which falls o\u21b5 as the reciprocal of the distance from the charge.\n\nConnell and Utgo\u21b5  applied an actor\u2013critic method to the pole-balancing task in which the critic approximated the value function using kernel regression with an inverse-distance weighting. Predating widespread interest in kernel regression in machine learning, these authors did not use the term kernel, but referred to \u201cShepard\u2019s method\u201d . Other kernelbased approaches to reinforcement learning include those of Ormoneit and Sen , Dietterich and Wang , Xu, Xie, Hu, and Lu , Taylor and Parr , Barreto, Precup, and Pineau , and Bhat, Farias, and Moallemi . The earliest example we know of in which function approximation methods were used for learning value functions was Samuel\u2019s checkers player . Samuel followed Shannon\u2019s  suggestion that a value function did not have to be exact to be a useful guide to selecting moves in a game and that it might be approximated by a linear combination of features", "571c097f-9076-467f-8873-f5f603f4fd95": "The number of parameters can then be much smaller than in a completely general model (for example it may grow linearly with M), although this is achieved at the expense of a restricted family of conditional distributions. Suppose we wish to build a model for sequences that is not limited by the Markov assumption to any order and yet that can be speci\ufb01ed using a limited number of free parameters. We can achieve this by introducing additional latent variables to permit a rich class of models to be constructed out of simple components, as we did with mixture distributions in Chapter 9 and with continuous latent variable models in Chapter 12.\n\nFor each observation xn, we introduce a corresponding latent variable zn (which may be of different type or dimensionality to the observed variable). We now assume that it is the latent variables that form a Markov chain, giving rise to the graphical structure known as a state space model, which is shown in Figure 13.5. It satis\ufb01es the key conditional independence property that zn\u22121 and zn+1 are independent given zn, so that The joint distribution for this model is given by p(x1, . , xN, z1,", "a9ca7f99-2775-49c1-abe5-e3899fe20a15": "The initial conditions for these recursion equations are obtained from Because p(z1) is given by (13.77), and p(x1|z1) is given by (13.76), we can again make use of (2.115) to calculate c1 and (2.116) to calculate \u00b51 and V1 giving Similarly, the likelihood function for the linear dynamical system is given by (13.63) in which the factors cn are found using the Kalman \ufb01ltering equations. We can interpret the steps involved in going from the posterior marginal over zn\u22121 to the posterior marginal over zn as follows. In (13.89), we can view the quantity A\u00b5n\u22121 as the prediction of the mean over zn obtained by simply taking the mean over zn\u22121 and projecting it forward one step using the transition probability matrix A. This predicted mean would give a predicted observation for xn given by CAzn\u22121 obtained by applying the emission probability matrix C to the predicted hidden state mean.\n\nWe can view the update equation (13.89) for the mean of the hidden variable distribution as taking the predicted mean A\u00b5n\u22121 and then adding a correction that is proportional to the error xn \u2212 CAzn\u22121 between the predicted observation and the actual observation", "d1eb5550-6bba-49be-9c3d-af93b0f75490": "Similarly, binary x values correspond to a Bernoulli distribution whose parameters are given by a sigmoid output unit, discrete x values correspond to a softmax distribution, and so on. Typically, the  506  CHAPTER 14. AUTOENCODERS  Pencoder(h | &) Paecoder (@ | h)  Figure 14.2: The structure of a stochastic autoencoder, in which both the encoder and the decoder are not simple functions but instead involve some noise injection, meaning that their output can be seen as sampled from a distribution, pencoder(h | x) for the encoder and Pdecoder  (a | h) for the decoder. https://www.deeplearningbook.org/contents/autoencoders.html    output variables are treated as being conditionally independent given Ff so that this probability distribution is inexpensive to evaluate, but some techniques, such as mixture density outputs, allow tractable modeling of outputs with correlations", "25481a08-7807-4ff9-8031-7efab75532ea": "You can infer that she is probably not also sick.\n\n(d) The explaining away effect happens even if any descendant ofs is observed! For example, suppose that c is a variable representing whether you have received a report from your colleague. If you notice that you have not received the report, this increases your estimate of the probability that she is not at work today, which in turn makes it more likely that she is either sick or on vacation. The only way to block a path through a V-structure is to observe none of the descendants of the shared child. 571  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  O \u00a9  Figure 16.9: From this graph, we can read out several d-separation properties", "875a3777-ffc2-40c1-bfa5-2a2efbae8c35": "However, our preliminary experiments suggest that, as a downside, this makes \ufb01netuning an MLE-trained model with SQL objectives more challenging. Future work to scale the proposed methods to tasks such as machine translation and language modeling, and with signi\ufb01cantly larger and (MLE-)pretrained models would be exciting. This work develops a new RL formulation for text generation. While we demonstrate the framework in four applications, it could be adapted to other (emerging) applications. One major component in these applications is the design of the reward function, which in\ufb02uences the behavior of the trained agent. While we believe the MaxEnt RL framework is more robust against reward misspeci\ufb01cation , the potential failures of sub-optimal reward functions are widely known and discussed.7 To this end, deploying this model to the wild requires careful and extensive examination, using tools such as Ribeiro et al. Further, we highlight the application for (blackbox) adversarial attacks in the paper, with the intention of using adversarial attacks to understand the model\u2019s inner workings.\n\nThat being said, this could potentially be misused to conduct malicious attacks against systems. Hence, users of this framework might want to conduct adversarial attacks against their own models to avoid being attacked by other people with bad intentions", "43314b45-5d52-422f-b445-626eb62711a4": "These models naturally learn high-capacity, overcomplete encodings of the input and do not require regularization for these encodings to be useful. Their encodings are naturally useful because the models were trained to approximately maximize the probability of the training data rather than to copy the input to the output.\n\n14.2.1 Sparse Autoencoders  A sparse autoencoder is simply an autoencoder whose training criterion involves a sparsity penalty Q(h) on the code layer h, in addition to the reconstruction error:  L(x, 9(f(#))) + Q(h), (14.2)  where g(h) is the decoder output, and typically we have h = f(a), the encoder output. Sparse autoencoders are typically used to learn features for another task, such as classification. An autoencoder that has been regularized to be sparse must respond to unique statistical features of the dataset it has been trained on, rather than simply acting as an identity function. In this way, training to perform the copying task with a sparsity penalty can yield a model that has learned useful features as a byproduct", "0c5faa4e-8dfa-4a52-80cd-08b4b87d8c69": ", wL are constructed using (11.23). Finally, a second set of L samples is drawn from the discrete distribution (z(1), . , z(L)) with probabilities given by the weights (w1, . , wL). The resulting L samples are only approximately distributed according to p(z), but the distribution becomes correct in the limit L \u2192 \u221e. To see this, consider the univariate case, and note that the cumulative distribution of the resampled values is given by where I(.)\n\nis the indicator function (which equals 1 if its argument is true and 0 otherwise). Taking the limit L \u2192 \u221e, and assuming suitable regularity of the distributions, we can replace the sums by integrals weighted according to the original sampling distribution q(z) which is the cumulative distribution function of p(z). Again, we see that the normalization of p(z) is not required. For a \ufb01nite value of L, and a given initial sample set, the resampled values will only approximately be drawn from the desired distribution", "112e262f-5174-44ba-b023-627e2dec3599": "To best exploit this extra data, one can perform extra training after the initial training with early stopping has completed. In the second, extra raining step, all the training data is included. There are two basic strategies one can use for this second training procedure. One strategy (algorithm 7.2) is to initialize the model again and retrain on all he data. In this second training pass, we train for the same number of steps as che early stopping procedure determined was optimal in the first pass. There are some subtleties associated with this procedure. For example, there is not a good way of knowing whether to retrain for the same number of parameter updates or he same number of passes through the dataset. On the second round of training, each pass through the dataset will require more parameter updates because the raining set is bigger. Another strategy for using all the data is to keep the parameters obtained from  che first round of training and then continue training, but now using all the data. At this stage, we now no longer have a guide for when to stop in terms of a number of steps.\n\nInstead, we can monitor the average loss function on the validation set and continue training until it falls below the value of the training set objective at which the early stopping procedure halted", "5eb302bf-8ef8-484f-a1dd-9ab1166304b5": "Here a suf\ufb01x i or j denotes the index of a component, whereas (x)i denotes x raised to the power of i. 1.3 (\u22c6 \u22c6) Suppose that we have three coloured boxes r (red), b (blue), and g (green). Box r contains 3 apples, 4 oranges, and 3 limes, box b contains 1 apple, 1 orange, and 0 limes, and box g contains 3 apples, 3 oranges, and 4 limes", "a270bd06-4329-4233-bd5d-2c7933f49ccc": "Theory of Neural-Analog Reinforcement Systems and Its Application to the Brain-Model Problem. Ph.D. thesis, Princeton University. Minsky, M. L. Steps toward arti\ufb01cial intelligence. Proceedings of the Institute of Radio Engineers, 49:8\u201330. Reprinted in E. A. Feigenbaum and J. Feldman (Eds. ), Computers and Thought, pp. 406\u2013450. McGraw-Hill, New York, 1963. Minsky, M. L. Computation: Finite and In\ufb01nite Machines. Prentice-Hall, Englewood Mnih, V., Kavukcuoglu, K., Silver, D., Graves, A., Antonoglou, I., Wierstra, D., Riedmiller, M. Playing atari with deep reinforcement learning. ArXiv:1312.5602. Mnih, V., Kavukcuoglu, K., Silver, D., Rusu, A", "0bc2bed5-20a4-4b66-b215-1f3173e17c10": "(8.27)  307  https://www.deeplearningbook.org/contents/optimization.html    Thus for a locally quadratic function (with positive definite H), by rescaling the gradient by H~!, Newton\u2019s method jumps directly to the minimum.\n\nIf the objective function is convex but not quadratic (there are higher-order terms), this update can be iterated, yielding the training algorithm associated with Newton\u2019s method, given in algorithm 8.8. For surfaces that are not quadratic, as long as the Hessian remains positive definite, Newton\u2019s method can be applied iteratively. This implies a two-step iterative procedure. First, update or compute the inverse Hessian (i.e., by updat- ing the quadratic approximation). Second, update the parameters according to equation 8.27. In section 8.2.3, we discuss how Newton\u2019s method is appropriate only when the Hessian is positive definite. In deep learning, the surface of the objective function is typically nonconvex, with many features, such as saddle points, that are problematic for Newton\u2019s method", "509e193b-f186-467e-aea9-d82bd1718e49": "Classification  t Pseudo-labels  ~~, Clustering  Convnet ot\u2019 me  https://lilianweng.github.io/posts/2021-05-31-contrastive/  Contrastive Representation Learning | Lil'Log   In each iteration, DeepCluster clusters data points using the prior representation and then produces the new cluster assignments as the classification targets for the new representation. However this iterative process is prone to trivial solutions. While avoiding the use of negative pairs, it requires a costly clustering phase and specific precautions to avoid collapsing to trivial solutions. SwAV  SwAV  is an online contrastive learning algorithm. It computes a code from an augmented version of the image and tries to predict this code using another augmented version of the same image. Contrastive instance learning Swapping Assignments between Views (Ours)  Given features of images with two different augmentations, z; and z,, SwAV computes corresponding codes q; and q, and the loss quantifies the fit by swapping two codes using L(. )\n\nto measure the fit between a feature and a code", "af0bbc28-fb63-420a-a1ed-a45dbc41f1bb": "The TD error at this stage of learning is analogous to a dopamine neuron responding to an unpredicted reward (e.g., a drop of apple juice) at the start of training. Throughout this \ufb01rst trial and all successive trials, TD(0) updates occur at each state transition as described in Chapter 6.\n\nThis successively increases the values of the reward-predicting states, with the increases spreading backwards from the rewarding state, until the values converge to the correct return predictions. In this case (because we are assuming no discounting) the correct predictions are equal to R? for all the reward-predicting states. This can be seen in Figure 15.4 as the graph of V labeled \u2018learning complete\u2019 where the values of all the states from the earliest to the latest reward-predicting states all equal R?. The values of the states preceding the earliest reward-predicting state remain low (which Figure 15.4 shows as zero) because they are not reliable predictors of reward. When learning is complete, that is, when V attains its correct values, the TD errors associated with transitions from any reward-predicting state are zero because the predictions are now accurate", "a207860f-b50e-4a9a-aa6e-73ee51b38e08": "For nonparametric models, more data yield better generalization until the best possible error is achieved. Any fixed parametric model with less than optimal capacity will asymptote to an error value that exceeds the Bayes error. https://www.deeplearningbook.org/contents/ml.html    See figure 5.4 for an illustration.\n\nNote that it is possible for the model to have optimal capacity and yet still have a large gap between training and generalization errors. In this situation, we may be able to reduce this gap by gathering more training examples. 5.2.1 The No Free Lunch Theorem  Learning theory claims that a machine learning algorithm can generalize well from a finite training set of examples. This seems to contradict some basic principles of logic. Inductive reasoning, or inferring general rules from a limited set of examples, is not logically valid. To logically infer a rule describing every member of a set, one must have information about every member of that set. In part, machine learning avoids this problem by offering only probabilistic rules, rather than the entirely certain rules used in purely logical reasoning. Machine  learning promises to find rules that are probably correct about most members of the set they concern", "36bdac67-6d7b-480e-912c-190436225b55": "The value of \u03b7 needs to be chosen with care to ensure that the algorithm converges . In Section 1.1, we introduced the idea of adding a regularization term to an error function in order to control over-\ufb01tting, so that the total error function to be minimized takes the form ED(w) + \u03bbEW (w) (3.24) where \u03bb is the regularization coef\ufb01cient that controls the relative importance of the data-dependent error ED(w) and the regularization term EW (w).\n\nOne of the simplest forms of regularizer is given by the sum-of-squares of the weight vector elements EW (w) = 1 If we also consider the sum-of-squares error function given by This particular choice of regularizer is known in the machine learning literature as weight decay because in sequential learning algorithms, it encourages weight values to decay towards zero, unless supported by the data. In statistics, it provides an example of a parameter shrinkage method because it shrinks parameter values towards zero. It has the advantage that the error function remains a quadratic function of w, and so its exact minimizer can be found in closed form", "473b817f-0503-4d84-b69b-661756212df9": "FllIu.e 12.21 ?lot ot trle oillkYw <:lata Wllisualiz.ed using PeA on the left and GTM on Itle ngr,t FOf tile GTM model. each <lata poinIls plollfld at tile mean ot its posM'k>< dislribution in ..tent s;>ace, Tile \"\",\"ineanty mlhe GTM 1TlOd8I._lha sepamlion betwoon the groups of data points to be .....n \"\"\". ckl.arfy, bilistic foundation also makes it very straightforward to define generalizations of GTM  such as a Bayesian treatment, dealing with missing valSection 6.4 ues, a principled extension to discrete variables, the use of Gaussian processes to define the manifold, or a hierarchical GTM model", "cf5cb558-2ecb-4cf8-adea-9fd9b7713b55": "Curriculum-based strategies are more effective for teaching humans than strategies based on uniform sampling of examples and can also increase the effectiveness of other teaching strategies . Another important contribution to research on curriculum learning arose in the context of training recurrent neural networks to capture long-term dependencies: Zaremba and Sutskever  found that much better results were obtained with a stochastic curriculum, in which a random mix of easy and difficult examples is always presented to the learner, but where the average proportion of the more difficult examples (here, those with longer-term dependencies) is gradually increased. With a deterministic curriculum, no improvement over the baseline (ordinary training from the full training set) was observed. We have now described the basic family of neural network models and how to regularize and optimize them. In the chapters ahead, we turn to specializations of he neural network family that allow neural networks to scale to very large sizes and process input data that has special structure.\n\nThe optimization methods discussed in this chapter are often directly applicable to these specialized architectures with ittle or no modification. https://www.deeplearningbook.org/contents/optimization.html    325  https://www.deeplearningbook.org/contents/optimization.html", "95f3e4ae-a320-4d97-b248-188f68819c04": "These artifacts can be avoided if the tilings are o\u21b5set asymmetrically, as shown in the lower half of the \ufb01gure. These lower generalization patterns are better because they are all well centered on the trained state with no obvious asymmetries. Tilings in all cases are o\u21b5set from each other by a fraction of a tile width in each dimension. If w denotes the tile width and n the number of tilings, then w n on a side, all states activate the same tiles, have the same feature representation, and the same approximated value. If a state is moved by w in any cartesian direction, the feature representation changes by one component/tile. Uniformly o\u21b5set tilings are o\u21b5set from each other by exactly this unit distance", "eb3712d6-4e5c-4556-88e9-13d854367949": "In so doing, we incur some level of loss that we denote by Lkj, which we can view as the k, j element of a loss matrix. For instance, in our cancer example, we might have a loss matrix of the form shown in Figure 1.25. This particular loss matrix says that there is no loss incurred if the correct decision is made, there is a loss of 1 if a healthy patient is diagnosed as having cancer, whereas there is a loss of 1000 if a patient having cancer is diagnosed as healthy. The optimal solution is the one which minimizes the loss function. However, the loss function depends on the true class, which is unknown. For a given input vector x, our uncertainty in the true class is expressed through the joint probability distribution p(x, Ck) and so we seek instead to minimize the average loss, where the average is computed with respect to this distribution, which is given by Each x can be assigned independently to one of the decision regions Rj", "63203fa4-abca-4e32-9970-737c88542f62": "shearing, rotation, invert, etc.) for image classification as an RL problem and looks for the combination that leads to the highest accuracy on the evaluation set. RandAugment : RandAugment greatly reduces the search space of AutoAugment by controlling the magnitudes of different transformation operations with a single magnitude parameter. PBA : PBA combined PBT  with AutoAugment, using the evolutionary algorithm to train a population of children models in parallel to evolve the best augmentation strategies.\n\nUDA : Among a set of possible augmentation strategies, UDA selects those to minimize the KL divergence between the predicted distribution over an unlabelled example and its unlabelled augmented version. Liflog  Image Mixture  Image mixture methods can construct new training examples from existing data points. Mixup : It runs global-level mixture by creating a weighted pixel-wise combination of two existing images I, and Ig: Inixup <\u2014 2; + (1 \u2014 a)Iy anda \u20ac 0, 1]. Cutmix : Cutmix does region-level mixture by generating a new example by combining a local region of one image with the rest of the other image", "3d26d85b-8428-4afc-8f85-de4671099bc2": "18.5 Denoising Score Matching  Tew nae AA nnn en nee eet be en eatin Anne ent ahinn Lee Gait 2 Atsbnth--4in-  https://www.deeplearningbook.org/contents/partition.html   dil SULLIC Cases We illay WISIL LO LCYULALIZE BSCULE IUALCLIUILY , vy dit LLLLY, a@ UISLLIVDULIVILL  psmoothed (a) = [restate | y)dy (18.27)  rather than the true pqata: The distribution q(a | y) is a corruption process, usually one that forms a by adding a small amount of noise to y. 617  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  Denoising score matching is especially useful because in practice, we usually do not have access to the true pdata but rather only an empirical distribution defined by samples from it", "c363d41b-51ef-4f8b-9661-2d3549273ac4": "have seen this repeatedly, such as in Chapters 7 (Figure 7.2) and 9 (Figure 9.2), where some degree of bootstrapping performed much better than Monte Carlo methods on the random-walk prediction task, and in Chapter 10 where the same was seen on the Mountain-Car control task (Figure 10.4). Many other problems show much faster learning with bootstrapping (e.g., see Figure 12.14). Bootstrapping often results in faster learning because it allows learning to take advantage of the state property, the ability to recognize a state upon returning to it. On the other hand, bootstrapping can impair learning on problems where the state representation is poor and causes poor generalization . A poor state representation can also result in bias; this is the reason for the poorer bound on the asymptotic approximation quality of bootstrapping methods (Equation 9.14).\n\nOn balance, the ability to bootstrap has to be considered extremely valuable. One may sometimes choose not to use it by selecting long n-step updates (or a large bootstrapping parameter, \u03bb \u21e1 1; see Chapter 12) but often bootstrapping greatly increases e\ufb03ciency. It is an ability that we would very much like to keep in our toolkit", "52338354-3ad1-41f9-97f9-336acd961e2d": "Suppose we have a distributionp(x) and wish to approximate it with another distribution g(x). We have the choice of minimizing either Dxi(p||q) or Di (q||p). We illustrate the effect of this choice using a mixture of two Gaussians for p, and a single Gaussian for g. The choice of which direction of the KL divergence to use is problem dependent. Some applications require an approximation that usually places high probability anywhere that the true distribution places high probability, while other applications require an approximation that rarely places high probability anywhere that the true distribution places low probability. The choice of the direction of the KL divergence reflects which of these considerations takes priority for each application.\n\n(Left)The effect of minimizing Dxx(p||q). In this case, we select aq that has high probability where p has high probability. When p has multiple modes, g chooses to blur the modes together, in order to put high probability mass on all of them. (Right)The effect of minimizing Dx1(q||p)", "d686ad98-34e2-4b0e-9455-17b40c9b594e": "To estimate the value of zN, we take only the most recent few measurements, say xN\u2212L, . , xN and just average these. If z is changing slowly, and the random noise level in the sensor is high, it would make sense to choose a relatively long window of observations to average. Conversely, if the signal is changing quickly, and the noise levels are small, we might be better just to use xN directly as our estimate of zN. Perhaps we could do even better if we take a weighted average, in which more recent measurements make a greater contribution than less recent ones. Although this sort of intuitive argument seems plausible, it does not tell us how to form a weighted average, and any sort of hand-crafted weighing is hardly likely to be optimal. Fortunately, we can address problems such as this much more systematically by de\ufb01ning a probabilistic model that captures the time evolution and measurement processes and then applying the inference and learning methods developed in earlier chapters", "0a5d8c35-1a61-4a19-8cdc-af75f29bafb2": "Even though we may not have labeled examples translating word A in anguage X to word B in language Y , we can generalize and guess a translation for word A because we have learned a distributed representation for words in language X and a distributed representation for words in language Y, then created a link possibly two-way) relating the two spaces, via training examples consisting of matched pairs of sentences in both languages. This transfer will be most successful if all three ingredients (the two representations and the relations between them) are learned jointly. https://www.deeplearningbook.org/contents/representation.html    Zero-shot learning is a particular form of transfer learning. The same principle  537  CHAPTER 15. REPRESENTATION LEARNING  ax&\u2014space  y\u2014space  \u2014 \u2014 = (x,y) pairs in the training set \u2014 f,: encoder function for \u00ab ooc> fy: encoder function for y ------ \u00bb Relationship between embedded points within one of the domains  <\u2014\u2014 = Maps between representation spaces  Figure 15.3: Transfer learning between two domains x and y enables zero-shot learning", "fd0fc04a-c23c-4e9b-a5c2-e523fd3d56b0": "The integral over w can now be evaluated simply by appealing to the standard result for the normalization coef\ufb01cient of a multivariate Gaussian, giving Exercise 3.19 Using (3.78) we can then write the log of the marginal likelihood in the form which is the required expression for the evidence function. Returning to the polynomial regression problem, we can plot the model evidence against the order of the polynomial, as shown in Figure 3.14. Here we have assumed a prior of the form (1.65) with the parameter \u03b1 \ufb01xed at \u03b1 = 5 \u00d7 10\u22123. The form of this plot is very instructive. Referring back to Figure 1.4, we see that the M = 0 polynomial has very poor \ufb01t to the data and consequently gives a relatively low value for the evidence. Going to the M = 1 polynomial greatly improves the data \ufb01t, and hence the evidence is signi\ufb01cantly higher. However, in going to M = 2, the data \ufb01t is improved only very marginally, due to the fact that the underlying sinusoidal function from which the data is generated is an odd function and so has no even terms in a polynomial expansion.\n\nIndeed, Figure 1.5 shows that the residual data error is reduced only slightly in going from M = 1 to M = 2", "8f7eda3d-6166-4aac-a1bd-82ab5685943e": "Feedforward networks are a conceptual stepping stone on the path to recurrent networks, which power many natural language applications. Feedforward neural networks are called networks because they are typically represented by composing together many different functions.\n\nThe model is asso- ciated with a directed acyclic graph describing how the functions are composed together. For example, we might have three functions f@), f@, and f@) connected in a chain, to form f(a) = f(f@(f(#))). These chain structures are the most commonly used structures of neural networks. In this case, fH is called  (2)  ro a ed . 1 L\u00a3 . Woot Be a 1 rat  https://www.deeplearningbook.org/contents/mlp.html    the urs tayer ot the network, J 18 called the 5evulu tayer, and so on. Lhe 164  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  overall length of the chain gives the depth of the model. The name \u201cdeep learning\u201d arose from this terminology", "17929747-0194-497a-8ef5-c35157fe2502": "For example, can be real valued. Srivastava e\u00a2 al. showed that multiplying the weights by pe~ N(1,J) can outperform dropout based on binary masks. Because E = 1, the standard network automatically implements approximate inference in the ensemble, without needing any weight scaling.\n\nSo far we have described dropout purely as a means of performing efficient, approximate bagging. Another view of dropout goes further than this. Dropout trains not just a bagged ensemble of models, but an ensemble of models that share hidden units. This means each hidden unit must be able to perform well regardless of which other hidden units are in the model. Hidden units must be prepared to be swapped and interchanged between models. Hinton ef al. were inspired by an idea from biology: sexual reproduction, which involves swapping genes between two different organisms, creates evolutionary pressure for genes to become not just good but readily swapped between different organisms. Such genes and such features are robust to changes in their environment because they are not able to incorrectly adapt to unusual features of any one organism or model", "1bf4ebda-cc0b-44fa-a508-e77f73a2571a": "The data may lie on many disconnected manifolds, but the class remains constant within each one of these. This assumption motivates a variety of learning algorithms, including tangent propagation, double backprop, the manifold tangent classifier and adversarial training. e Temporal and spatial coherence: Slow feature analysis and related algorithms make the assumption that the most important explanatory factors change slowly over time, or at least that it is easier to predict the true underlying explanatory factors than to predict raw observations such as pixel values. https://www.deeplearningbook.org/contents/representation.html    See section 13.3 for further description of this approach.\n\ne Sparsity: Most features should presumably not be relevant to describing most inputs\u2014there is no need to use a feature that detects elephant trunks when  representing an image of a cat. It is therefore reasonable to impose a prior that any feature that can be interpreted as \u201cpresent\u201d or \u201cabsent\u201d should be absent most of the time. e Simplicity of factor dependencies: In good high-level representations, the factors are related to each other through simple dependencies", "bcea1915-203c-47ef-b315-b5e1f022ef46": "First we write the tree-backup n-step return (7.16) in terms of the horizon h = t + n and then in terms of the expected approximate value \u00afV (7.8): = Rt+1 + \u03b3 \u00afVh\u22121(St+1) \u2212 \u03b3\u21e1(At+1|St+1)Qh\u22121(St+1, At+1) + \u03b3\u21e1(At+1|St+1)Gt+1:h after which it is exactly like the n-step return for Sarsa with control variates (7.14) except with the action probability \u21e1(At+1|St+1) substituted for the importance-sampling ratio \u21e2t+1. For Q(\u03c3), we slide linearly between these two cases: GT \u22121:T .= RT if h = T. Then we use the general (o\u21b5-policy) update for n-step Sarsa (7.11)", "637a3b1b-de7d-4acd-a558-380c6d846ff7": "Policies derived by reinforcement learning in simulated environments can advise human decision makers in such areas as education, healthcare, transportation, energy, and public-sector resource allocation. Particularly relevant is the key feature of reinforcement learning that it takes long-term consequences of decisions into account. This is very clear in games like backgammon and Go, where some of the most impressive results of reinforcement learning have been demonstrated, but it is also a property of many high-stakes decisions that a\u21b5ect our lives and our planet. Reinforcement learning follows related methods for advising human decision making that have been developed in the past by decision analysts in many disciplines.\n\nWith advanced function approximation methods and massive computational power, reinforcement learning methods have the potential to overcome some of the di\ufb03culties of scaling up traditional decision-support methods to larger and more complex problems. The rapid pace of advances in arti\ufb01cial intelligence has led to warnings that arti\ufb01cial intelligence poses serious threats to our societies, even to humanity itself. The renowned scientist and arti\ufb01cial intelligence pioneer Herbert Simon anticipated the warnings we are hearing today in a presentation at the Earthware Symposium at CMU in 2000", "1e6f8881-5939-4976-a393-8efcb75e00a3": ", which is hat the transition operator (defined by the stochastic mapping going from one state of the chain to the next) should satisfy a property called detailed balance, which specifies that a Markov chain at equilibrium will remain in equilibrium whether the transition operator is run in forward or reverse. An experiment in clamping half of the pixels (the right part of the image) and running the Markov chain on the other half is shown in figure 20.12. 20.11.38 Walk-Back Training Procedure  The walk-back training procedure was proposed by Bengio et al. as a way to accelerate the convergence of generative training of denoising autoencoders.\n\nInstead of performing a one-step encode-decode reconstruction, this procedure consists of alternative multiple stochastic encode-decode steps (as in the generative Markov chain), initialized at a training example (just as with the contrastive divergence algorithm, described in section 18.2), and penalizing the last probabilistic reconstructions (or all the reconstructions along the way). Training with & steps is equivalent (in the sense of achieving the same stationary distribution) as training with one step but practically has the advantage that spurious modes further from the data can be removed more efficiently. 709  CHAPTER 20", "dc88bef8-879d-4dd4-a0c5-c79ce8a7aeb8": "The question-answering example in Figure 1 will serve as a running example for this section. A distinctive feature of BERT is its uni\ufb01ed architecture across different tasks. There is minimal difference between the pre-trained architecture and the \ufb01nal downstream architecture. Model Architecture BERT\u2019s model architecture is a multi-layer bidirectional Transformer encoder based on the original implementation described in Vaswani et al.\n\nand released in the tensor2tensor library.1 Because the use of Transformers has become common and our implementation is almost identical to the original, we will omit an exhaustive background description of the model architecture and refer readers to Vaswani et al. as well as excellent guides such as \u201cThe Annotated Transformer.\u201d2 In this work, we denote the number of layers (i.e., Transformer blocks) as L, the hidden size as H, and the number of self-attention heads as A.3 We primarily report results on two model sizes: BERTBASE (L=12, H=768, A=12, Total Parameters=110M) and BERTLARGE (L=24, H=1024, A=16, Total Parameters=340M)", "0743b513-d22f-4c0a-8ef2-e4dd119e2073": "Here we discuss an approximation in which we set the hyperparameters to speci\ufb01c values determined by maximizing the marginal likelihood function obtained by \ufb01rst integrating over the parameters w. This framework is known in the statistics literature as empirical Bayes , or type 2 maximum likelihood , or generalized maximum likelihood , and in the machine learning literature is also called the evidence approximation . If we introduce hyperpriors over \u03b1 and \u03b2, the predictive distribution is obtained by marginalizing over w, \u03b1 and \u03b2 so that where p(t|w, \u03b2) is given by (3.8) and p(w|t, \u03b1, \u03b2) is given by (3.49) with mN and SN de\ufb01ned by (3.53) and (3.54) respectively.\n\nHere we have omitted the dependence on the input variable x to keep the notation uncluttered", "d886e572-68d4-4c84-8b86-8fb04b1244e4": "Like supervised learning, contrastive learning bene\ufb01ts from deeper and wider networks. We combine these \ufb01ndings to achieve a new state-of-the-art in self-supervised and semi-supervised learning on ImageNet ILSVRC-2012 . Under the linear evaluation protocol, SimCLR achieves 76.5% top-1 accuracy, which is a 7% relative improvement over previous state-of-the-art . When \ufb01ne-tuned with only 1% of the ImageNet labels, SimCLR achieves 85.8% top-5 accuracy, a relative improvement of 10% .\n\nWhen \ufb01ne-tuned on other natural image classi\ufb01cation datasets, SimCLR performs on par with or better than a strong supervised baseline  on 10 out of 12 datasets. 2.1. The Contrastive Learning Framework Inspired by recent contrastive learning algorithms (see Section 7 for an overview), SimCLR learns representations by maximizing agreement between differently augmented views of the same data example via a contrastive loss in the latent space. As illustrated in Figure 2, this framework comprises the following four major components", "706b4d83-4926-4802-aa0b-e2ed348436bd": "One reason we have treated all states encountered equally is that then we are updating according to the on-policy distribution, for which stronger theoretical results are available for semi-gradient methods. Recall that the on-policy distribution was de\ufb01ned as the distribution of states encountered in an MDP while following the target policy. Now we will generalize this concept signi\ufb01cantly. Rather than having one on-policy distribution for the MDP, we will have many. All of them will have in common that they are a distribution of states encountered in trajectories while following the target policy, but they will vary in how the trajectories are, in a sense, initiated. We now introduce some new concepts.\n\nFirst we introduce a non-negative scalar measure, a random variable It called interest, indicating the degree to which we are interested in accurately valuing the state (or state\u2013action pair) at time t. If we don\u2019t care at all about the state, then the interest should be zero; if we fully care, it might be one, though it is formally allowed to take any non-negative value. The interest can be set in any causal way; for example, it may depend on the trajectory up to time t or the learned parameters at time t", "987dcca5-ce3d-4857-9563-d999e225b8f7": "Take \u00b5 = Pr \u2212 P\u03b8, which is a signed measure, and (P, Q) its Hahn decomposition. Then, we can de\ufb01ne f \u2217 := 1Q \u2212 1P . By construction, then Furthermore, if f is bounded between -1 and 1, we get Since \u03b4 is positive, we can conclude Ex\u223cPr \u2212 Ex\u223cP\u03b8 \u2265 \u2212\u03b4(Pr, P\u03b8).", "d3ee0843-08eb-4ed8-b77e-04d77764235d": "The better performance of networks trained with weights initialized this way could be due to many factors, but one idea is that this method places the network in a region of weight space from which a gradient-based algorithm can make good progress. Batch normalization  is another technique that makes it easier to train deep ANNs.\n\nIt has long been known that ANN learning is easier if the network input is normalized, for example, by adjusting each input variable to have zero mean and unit variance. Batch normalization for training deep ANNs normalizes the output of deep layers before they feed into the following layer. Io\u21b5e and Szegedy  used statistics from subsets, or \u201cmini-batches,\u201d of training examples to normalize these between-layer signals to improve the learning rate of deep ANNs. Another technique useful for training deep ANNs is deep residual learning (He, Zhang, Ren, and Sun, 2016). Sometimes it is easier to learn how a function di\u21b5ers from the identity function than to learn the function itself. Then adding this di\u21b5erence, or residual function, to the input produces the desired function. In deep ANNs, a block of layers can be made to learn a residual function simply by adding shortcut, or skip, connections around the block", "ff95c7a0-f634-4fad-8a08-891abd54afc3": "For some models, the addition of noise with infinitesimal variance at the input of the model is equivalent to imposing a penalty on the norm of the weights (Bishop, 1995a,b). In the general case, it is important to remember that noise injection can be much more powerful than simply shrinking the parameters, especially when the noise is added to the hidden units. Noise applied to the hidden units is such an important topic that it merits its own separate discussion; the dropout algorithm described in section 7.12 is the main development of that approach. Another way that noise has been used in the service of regularizing models is by adding it to the weights.\n\nThis technique has been used primarily in the context of recurrent neural networks . This can be interpreted as a stochastic implementation of Bayesian inference over the weights. The Bayesian treatment of learning would consider the model weights to be uncertain and representable via a probability distribution that reflects this uncertainty. Adding noise to the weights is a practical, stochastic way to reflect this uncertainty. Noise applied to the weights can also be interpreted as equivalent (under some assumptions) to a more traditional form of regularization, encouraging stability of the function to be learned", "51b6d495-a691-4a78-aaa8-afa2a649853b": "The DP target is an estimate not because of the expected values, which are assumed to be completely provided by a model of the environment, but because v\u21e1(St+1) is not known and the current estimate, V (St+1), is used instead. The TD target is an estimate for both reasons: it samples the expected values in (6.4) and it uses the current estimate V instead of the true v\u21e1. Thus, TD methods combine the sampling of Monte Carlo with the bootstrapping of DP. As we shall see, with care and imagination this can take us a long way toward obtaining the advantages of both Monte Carlo and DP methods. Shown to the right is the backup diagram for tabular TD(0).\n\nThe value estimate for the state node at the top of the backup diagram is updated on the basis of the one sample transition from it to the immediately following state. We refer to TD and Monte Carlo updates as sample updates because they involve looking ahead to a sample successor state (or state\u2013action pair), using the value of the successor and the reward along the way to compute a backed-up value, and then updating the value of the original state (or state\u2013 action pair) accordingly", "3271d86a-f89a-4e2d-bb96-d937fc56ccde": "DEEP GENERATIVE MODELS  https://www.deeplearningbook.org/contents/generative_models.html    PURY =1\\v,r) =0 (vw? + win) ; (20.27) and  PK =1| bh) =0 (nOTw?) (20.28)  The bipartite structure makes Gibbs sampling in a deep Boltzmann machine efficient. The naive approach to Gibbs sampling is to update only one variable at a time. RBMs allow all the visible units to be updated in one block and all the hidden units to be updated in a second block. One might naively assume that a DBM with / layers requires | + 1 updates, with each iteration updating a block consisting of one layer of units. Instead, it is possible to update all the units in only two iterations. Gibbs sampling can be divided into two blocks of updates, one including all even layers (including the visible layer) and the other including all odd layers. Because of the bipartite DBM connection pattern, given the even layers, the distribution over the odd layers is factorial and thus can be sampled simultaneously and independently as a block", "b5834aab-ad85-48c5-9e37-b95537495daa": "B., Hassabis, D., Spiers, H. J. Hippocampal place cells construct reward related sequences through unexplored space. Elife, 4:e06063. Oh, J., Guo, X., Lee, H., Lewis, R. L., Singh, S. Action-conditional video prediction using deep networks in Atari games. In Advances in Neural Information Processing Systems 28 , pp. 2845\u20132853. Curran Associates, Inc. Olds, J., Milner, P. Positive reinforcement produced by electrical stimulation of the septal O\u2019Reilly, R. C., Frank, M. J. Making working memory work: A computational model of learning in the prefrontal cortex and basal ganglia. Neural Computation, 18(2):283\u2013328. learned value Pavlovian learning algorithm. Behavioral Neuroscience, 121(1):31\u201349. Omohundro, S. M. E\ufb03cient algorithms with neural network behavior", "1161c9c4-0fe9-40ea-9741-89086b5d571f": "Self-supervised learning enables Al systems to learn from orders of magnitude more data, which is important to recognize and understand patterns of more subtle, less common representations of the world. Self- supervised learning has long had great success in advancing the field of natural language processing (NLP), including the Collobert-Weston 2008 model, Word2Vec, GIoVE, fastText, and, more recently, BERT, ROBERTa, XLM-R, and others. Systems pretrained this way  yield considerably higher performance than when solely trained in a supervised manner.\n\nOur latest research project SEER leverages SwAV and other methods to pretrain a large network ona billion random unlabeled images, yielding top accuracy ona diverse set of vision tasks. This progress demonstrates that self-supervised learning can excel at CV  tasks in complex, real-world settings as  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   ell. Today, we\u2019re sharing details on why self-supervised learning may be helpful in unlocking the dark matter of intelligence \u2014 and the next frontier of Al", "8a8e921a-e8c5-435b-abcb-260ee5ff2009": "The momentum algorithm accumulates an exponentially decaying moving average of past gradients and continues to move  292  CHAPTER 8.\n\nOPTIMIZATION FOR TRAINING DEEP MODELS  20  10  https://www.deeplearningbook.org/contents/optimization.html  Sw \u201410  \u201430 \u201420 -10 0 10.20  Figure 8.5: Momentum aims primarily to solve two problems: poor conditioning of the Hessian matrix and variance in the stochastic gradient. Here, we illustrate how momentum overcomes the first of these two problems. The contour lines depict a quadratic loss function with a poorly conditioned Hessian matrix. The red path cutting across the contours indicates the path followed by the momentum learning rule as it minimizes this function. At each step along the way, we draw an arrow indicating the step that gradient descent would take at that point. We can see that a poorly conditioned quadratic objective looks like a long, narrow valley or canyon with steep sides. Momentum correctly traverses the canyon lengthwise, while gradient steps waste time moving back and forth across the narrow axis of the canyon. Compare also figure 4.6, which shows the behavior of gradient descent without momentum. in their direction", "5c58025b-11cc-4813-b309-2152250af5a6": "In follow-on work, Tesauro and Galperin  explored trajectory sampling methods as an alternative to full-width search, which reduced the error rate of live play by large numerical factors (4x\u20136x) while keeping the think time reasonable at \u21e05\u201310 seconds per move. During the 1990s, Tesauro was able to play his programs in a signi\ufb01cant number of games against world-class human players. A summary of the results is given in Table 16.1. Based on these results and analyses by backgammon grandmasters , TD-Gammon 3.0 appeared to play at close to, or possibly better than, the playing strength of the best human players in the world.\n\nTesauro reported in a subsequent article  the results of an extensive rollout analysis of the move decisions and doubling decisions of TD-Gammon relative to top human players. The conclusion was that TD-Gammon 3.1 had a \u201clopsided advantage\u201d in piece-movement decisions, and a \u201cslight edge\u201d in doubling decisions, over top humans. TD-Gammon had a signi\ufb01cant impact on the way the best human players play the game", "60a4cc0d-55de-4738-8857-a98c34bddc02": "Much as a Turing machine\u2019s memory needs only to be able to store 0 or 1 states, we can build a universal function approximator from rectified linear functions,  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  affine transformation from an input vector to an output scalar. Now, we describe an affine transformation from a vector x to a vector h, so an entire vector of bias parameters is needed. The activation function g is typically chosen to be a function that is applied element-wise, with h; = ga! W. ; +c;). In modern neural networks, the default recommendation is to use the rectified linear unit, or ReLU , defined by the activation function g(z) = max{0, z}, depicted in figure 6.3. We can now specify our complete network as f(a;W,c,w,b) = w! max{0, Wlat c} +b. (6.3)  We can then specify a solution to the XOR problem. Let  w= it", "9954a6ac-8ed6-4fa2-80c6-224527edc7f6": "The dictionary is structured as a large FIFO queue of encoded representations of data samples. Given a query sample x,, we get a query representation through an encoder q = fa(Xq)- A list of key representations {k,, ky,.. } in the dictionary are encoded by a momentum encoder  k; = fh (x*). Let's assume among them there is a single positive key k* in the dictionary that matches q. In the paper, they create k* using a noise copy of x, with different augmentation. Then the InfoNCE contrastive loss with temperature 7 is used over one positive and NV \u2014 1 negative samples:  ex kt /r Catoce = \u2014log p(q-k\"/r)  i=1 \u20acxP(q- k;/7)  Compared to the memory bank, a queue-based dictionary in MoCo enables us to reuse representations of immediately preceding mini-batches of data", "565bea6c-03d9-469b-beec-045228224c17": "If we de\ufb01ne a joint distribution over observed and latent variables, the corresponding distribution of the observed variables alone is obtained by marginalization.\n\nThis allows relatively complex marginal distributions over observed variables to be expressed in terms of more tractable joint distributions over the expanded space of observed and latent variables. The introduction of latent variables thereby allows complicated distributions to be formed from simpler components. In this chapter, we shall see that mixture distributions, such as the Gaussian mixture discussed in Section 2.3.9, can be interpreted in terms of discrete latent variables. Continuous latent variables will form the subject of Chapter 12. As well as providing a framework for building more complex probability distributions, mixture models can also be used to cluster data. We therefore begin our discussion of mixture distributions by considering the problem of \ufb01nding clusters in a set of data points, which we approach \ufb01rst using a nonprobabilistic technique called the K-means algorithm . Then we introduce the latent variable Section 9.1 view of mixture distributions in which the discrete latent variables can be interpreted as de\ufb01ning assignments of data points to speci\ufb01c components of the mixture. A genSection 9.2 eral technique for \ufb01nding maximum likelihood estimators in latent variable models is the expectation-maximization (EM) algorithm", "a22b9001-54ee-46c5-9218-0e90f3f922fa": "The joint distribution Section 8.4.4 We seek an approximation q(x) that has the same factorization, so that Note that normalization constants have been omitted, and these can be re-instated at the end by local normalization, as is generally done in belief propagation.\n\nNow suppose we restrict attention to approximations in which the factors themselves factorize with respect to the individual variables so that which corresponds to the factor graph shown on the right in Figure 10.18. Because the individual factors are factorized, the overall distribution q(x) is itself fully factorized. Now we apply the EP algorithm using the fully factorized approximation. Suppose that we have initialized all of the factors and that we choose to re\ufb01ne factor the right is the corresponding factorized approximation. \ufffdfb(x2, x3) = \ufffdfb2(x2)\ufffdfb3(x3)", "b45170d1-8eb3-4f71-ac04-66a189b3d100": "For continuous-valued 2, the denoising criterion with Gaussian corruption and reconstruction distribution yields an estimator of the score that is applicable to general encoder and decoder parametrizations . This means a generic encoder-decoder architecture may be made to estimate the score  509  CHAPTER 14. AUTOENCODERS  https://www.deeplearningbook.org/contents/autoencoders.html    Figure 14.4: A denoising autoencoder is trained to map a corrupted data point & back to  the original data point x. We illustrate training examples x as red crosses lying near a  low-dimensional manifold, illustrated with the bold black line. We illustrate the corruption process C (& | x) with a gray circle of equiprobable corruptions. A gray arrow demonstrates how one training example is transformed into one sample from this corruption process. When the denoising autoencoder is trained to minimize the average of squared errors llg( f(\u20ac)) \u2014 #|P, the reconstruction g( f(%)) estimates Ex, x. panta(x)C (Xx) X |X]", "4afab07c-2021-4965-b257-3199424184bf": "5.26 (\u22c6 \u22c6) Consider a multilayer perceptron with arbitrary feed-forward topology, which is to be trained by minimizing the tangent propagation error function (5.127) in which the regularizing function is given by (5.128).\n\nShow that the regularization term \u2126 can be written as a sum over patterns of terms of the form where G is a differential operator de\ufb01ned by By acting on the forward propagation equations with the operator G, show that \u2126n can be evaluated by forward propagation using the following equations: where we have de\ufb01ned the new variables Now show that the derivatives of \u2126n with respect to a weight wrs in the network can be written in the form Write down the backpropagation equations for \u03b4kr, and hence derive a set of backpropagation equations for the evaluation of the \u03c6kr. 5.27 (\u22c6 \u22c6) www Consider the framework for training with transformed data in the special case in which the transformation consists simply of the addition of random noise x \u2192 x + \u03be where \u03be has a Gaussian distribution with zero mean and unit covariance. By following an argument analogous to that of Section 5.5.5, show that the resulting regularizer reduces to the Tikhonov form (5.135)", "fdf80700-c3bb-4b78-94f9-ff57be40af04": "This is not a team problem as de\ufb01ned here. A second requirement for collective learning in a team problem is that there has to be variability in the actions of the team members in order for the team to explore the space of collective actions. The simplest way for a team of reinforcement learning agents to do this is for each member to independently explore its own action space through persistent variability in its output. This will cause the team as a whole to vary its collective actions. For example, a team of the actor units described in Section 15.8 explores the space of collective actions because the output of each unit, being a Bernoulli-logistic unit, probabilistically depends on the weighted sum of its input vector\u2019s components. The weighted sum biases \ufb01ring probability up or down, but there is always variability.\n\nBecause each unit uses a REINFORCE policy gradient algorithm (Chapter 13), each unit adjusts its weights with the goal of maximizing the average reward rate it experiences while stochastically exploring its own action space", "3dd26edc-02e2-44f7-b0cc-8ff873f6fbfc": "We shall make use of the multivariate Gaussian distribution brie\ufb02y in this chapter, although its properties will be studied in detail in Section 2.3. Now suppose that we have a data set of observations x = (x1, . , xN)T, representing N observations of the scalar variable x. Note that we are using the typeface x to distinguish this from a single observation of the vector-valued variable (x1, . , xD)T, which we denote by x. We shall suppose that the observations are drawn independently from a Gaussian distribution whose mean \u00b5 and variance \u03c32 are unknown, and we would like to determine these parameters from the data set. Data points that are drawn independently from the same distribution are said to be independent and identically distributed, which is often abbreviated to i.i.d", "5c2927b6-4d22-4e1c-a3dd-2ecc07724d6c": "By learning a model Pmodel(#) and a representation Pyoge(h | 2), a generative model can provide answers to many inference problems about the relationships between input variables in x and can offer many different ways of representing x by taking expectations of h at different layers of the hierarchy.\n\nGenerative models hold the promise to provide AI systems with a framework for all the many different intuitive concepts they need to understand, giving them the ability to reason about these concepts in the face of uncertainty. We hope that our readers will find new ways to make these approaches more powerful and continue the journey to understanding the principles that underlie learning and intelligence. https://www.deeplearningbook.org/contents/generative_models.html    716  https://www.deeplearningbook.org/contents/generative_models.html", "29da0138-ec32-45f7-9fa9-44fa7c333ea3": "The dependencies on (r, w) were estimated from Watson\u2019s actual accuracies over many thousands of historical categories.\n\nWith the previously learned value function \u02c6v and in-category DD con\ufb01dence pDD, Watson computed \u02c6q(s, bet) for each legal round-dollar bet as follows: where SW is Watson\u2019s current score, and \u02c6v gives the estimated value for the game state after Watson\u2019s response to the DD clue, which is either correct or incorrect. Computing an action value this way corresponds to the insight from Exercise 3.19 that an action value is the expected next state value given the action (except that here it is the expected next afterstate value because the full next state of the entire game depends on the next square selection). Tesauro et al. found that selecting bets by maximizing action values incurred \u201ca frightening amount of risk,\u201d meaning that if Watson\u2019s response to the clue happened to be wrong, the loss could be disastrous for its chances of winning. To decrease the downside risk of a wrong answer, Tesauro et al. adjusted (16.2) by subtracting a small fraction of the standard deviation over Watson\u2019s correct/incorrect afterstate evaluations", "d393b14a-4dd3-4c13-83d1-5a126504f16d": "3.8 (\u22c6 \u22c6) www Consider the linear basis function model in Section 3.1, and suppose that we have already observed N data points, so that the posterior distribution over w is given by (3.49). This posterior can be regarded as the prior for the next observation. By considering an additional data point (xN+1, tN+1), and by completing the square in the exponential, show that the resulting posterior distribution is again given by (3.49) but with SN replaced by SN+1 and mN replaced by mN+1. 3.9 (\u22c6 \u22c6) Repeat the previous exercise but instead of completing the square by hand, make use of the general result for linear-Gaussian models given by (2.116).\n\n3.10 (\u22c6 \u22c6) www By making use of the result (2.115) to evaluate the integral in (3.57), verify that the predictive distribution for the Bayesian linear regression model is given by (3.58) in which the input-dependent variance is given by (3.59). 3.11 (\u22c6 \u22c6) We have seen that, as the size of a data set increases, the uncertainty associated with the posterior distribution over model parameters decreases", "5b7d6ab9-4aec-473c-8057-13b864e7937e": "We therefore consider conditional distributions of the target variable of the form p(t|\u03b7, s) = 1 Using the same line of argument as led to the derivation of the result (2.226), we see that the conditional mean of t, which we denote by y, is given by Thus y and \u03b7 must related, and we denote this relation through \u03b7 = \u03c8(y). Following Nelder and Wedderburn , we de\ufb01ne a generalized linear model to be one for which y is a nonlinear function of a linear combination of the input (or feature) variables so that y = f(wT\u03c6) (4.120) where f(\u00b7) is known as the activation function in the machine learning literature, and f \u22121(\u00b7) is known as the link function in statistics.\n\nNow consider the log likelihood function for this model, which, as a function of \u03b7, is given by where we are assuming that all observations share a common scale parameter (which corresponds to the noise variance for a Gaussian distribution for instance) and so s is independent of n", "83dfb307-0964-416f-86fc-10ec9e5c54f4": "While the phrase \u201cmultitask learning\u201d typically refers to supervised learning tasks, the more general notion of transfer learning is applicable to unsupervised learning and reinforcement learning as well. In all these cases, the objective is to take advantage of data from the first setting to extract information that may be useful when learning or even when directly making predictions in the second setting. The core idea of representation learning is that the same representation may be useful in both settings. Using the same representation in both settings allows the representation to benefit from the training data that is available for both tasks.\n\nAs mentioned before, unsupervised deep learning for transfer learning has found success in some machine learning competitions . In the first of these competitions, the experimental setup is the following. Each participant is first given a dataset from the first setting (from distribution P,), illustrating examples of some set of categories. The participants must use this to learn a good feature space (mapping the raw input to some representation), such that when we apply this learned transformation to inputs from the transfer setting (distribution P,), a linear classifier can be trained and generalize well from few labeled examples", "e8b13b4a-7ded-4c5a-b40e-42a417e84d90": "We describe several variants on the convolution function that are widely used in practice for neural networks. We also show how convolution may be applied to many kinds of data, with different numbers of dimensions. We chen discuss means of making convolution more efficient.\n\nConvolutional networks stand out as an example of neuroscientific principles influencing deep learning. We discuss these neuroscientific principles, then conclude with comments about he role convolutional networks have played in the history of deep learning. One opic this chapter does not address is how to choose the architecture of your convolutional network. The goal of this chapter is to describe the kinds of tools hat convolutional networks provide, while chapter 11 describes general guidelines  https://www.deeplearningbook.org/contents/convnets.html    326  CHAPTER 9. CONVOLUTIONAL NETWORKS  for choosing which tools to use in which circumstances. Research into convolutional network architectures proceeds so rapidly that a new best architecture for a given benchmark is announced every few weeks to months, rendering it impractical to describe in print the best architecture. Nonetheless, the best architectures have consistently been composed of the building blocks described here", "200d3a54-0f82-4f5c-a68b-f7e6c7add060": "The natural algorithm is then while the values of all other states remain unchanged: Qt+n(s, a) = Qt+n\u22121(s, a), for all s, a such that s 6= St or a 6= At. This is the algorithm we call n-step Sarsa. Pseudocode is shown in the box on the next page, and an example of why it can speed up learning compared to one-step methods is given in Figure 7.4. Initialize Q(s, a) arbitrarily, for all s 2 S, a 2 A Initialize \u21e1 to be \"-greedy with respect to Q, or to a \ufb01xed given policy Algorithm parameters: step size \u21b5 2 (0, 1], small \" > 0, a positive integer n All store and access operations (for St, At, and Rt) can take their index mod n + 1 Exercise 7.4 Prove that the n-step return of Sarsa (7.4) can be written exactly in terms of a novel TD error, as What about Expected Sarsa? The backup diagram for the n-step version of Expected Sarsa is shown on the far right in Figure 7.3", "890cf01e-ded7-494f-a1e3-3b216369f070": "The robot\u2019s control system has components for interpreting sensory information, for navigating, and for controlling the arm and gripper. High-level decisions about how to search for cans are made by a reinforcement learning agent based on the current charge level of the battery. To make a simple example, we assume that only two charge levels can be distinguished, comprising a small state set S = {high, low}. In each state, the agent can decide whether to (1) actively search for a can for a certain period of time, (2) remain stationary and wait for someone to bring it a can, or (3) head back to its home base to recharge its battery. When the energy level is high, recharging would always be foolish, so we do not include it in the action set for this state. The action sets are then A(high) = {search, wait} and A(low) = {search, wait, recharge}. The rewards are zero most of the time, but become positive when the robot secures an empty can, or large and negative if the battery runs all the way down.\n\nThe best way to \ufb01nd cans is to actively search for them, but this runs down the robot\u2019s battery, whereas waiting does not", "0a866308-b407-406e-864c-d762268779b1": "Although the bias-variance decomposition may provide some interesting insights into the model complexity issue from a frequentist perspective, it is of limited practical value, because the bias-variance decomposition is based on averages with respect to ensembles of data sets, whereas in practice we have only the single observed data set. If we had a large number of independent training sets of a given size, we would be better off combining them into a single large training set, which of course would reduce the level of over-\ufb01tting for a given model complexity. Given these limitations, we turn in the next section to a Bayesian treatment of linear basis function models, which not only provides powerful insights into the issues of over-\ufb01tting but which also leads to practical techniques for addressing the question model complexity. In our discussion of maximum likelihood for setting the parameters of a linear regression model, we have seen that the effective model complexity, governed by the number of basis functions, needs to be controlled according to the size of the data set.\n\nAdding a regularization term to the log likelihood function means the effective model complexity can then be controlled by the value of the regularization coef\ufb01cient, although the choice of the number and form of the basis functions is of course still important in determining the overall behaviour of the model", "591025fd-12a2-43e4-b7da-eae1276d51a3": "The dashed line indicates the value of the  .\u00a2 at VW ad 1 ay rose at 1 1  https://www.deeplearningbook.org/contents/numerical.html    COsl LULICLIOLL WE WOULU EXPECL VASCU OLL LLLE ZrAaACIELLL LIOLMAaLLON aALOWEe ad WE LllaKke a rradient step downhill. With negative curvature, the cost function actually decreases aster than the gradient predicts. With no curvature, the gradient predicts the decrease correctly.\n\nWith positive curvature, the function decreases more slowly than expected and  eventually begins to increase, so steps that are too large can actually increase the function inadvertently. figure 4.4 to see how different forms of curvature affect the relationship between the value of the cost function predicted by the gradient and the true value. When our function has multiple input dimensions, there are many second derivatives. These derivatives can be collected together into a matrix called the Hessian matrix. The Hessian matrix H(f)(a) is defined such that  e2 A(f)(x);; =~ f (2)", "64472bc3-ccdc-4319-b570-adf2424875dd": "If \u03b3 = 0.9, then we can consider that with probability 0.1 the process terminates on every time step and then immediately restarts in the state that is transitioned to.\n\nA discounted problem is one that is continually terminating and restarting with probability 1 \u2212 \u03b3 on every step. This way of thinking about discounting is an example of a more general notion of pseudo termination\u2014termination that does not a\u21b5ect the sequence of state transitions, but does a\u21b5ect the learning process and the quantities being learned. This kind of pseudo termination is important to o\u21b5-policy learning because the restarting is optional\u2014remember we can start any way we want to\u2014and the termination relieves the need to keep including encountered states within the on-policy distribution. That is, if we don\u2019t consider the new states as restarts, then discounting quickly gives us a limited on-policy distribution. The one-step Emphatic-TD algorithm for learning episodic state values is de\ufb01ned by: with It, the interest, being arbitrary and Mt, the emphasis, being initialized to Mt\u22121 = 0", "d8fe9e12-13e2-4dcb-ae61-780616e8f90a": "Trained in neurophysiology and long interested in machine intelligence, Harry was a senior scientist a\ufb03liated with the Avionics Directorate of the Air Force O\ufb03ce of Scienti\ufb01c Research (AFOSR) at Wright-Patterson Air Force Base, Ohio. He was dissatis\ufb01ed with the great importance attributed to equilibrium-seeking processes, including homeostasis and error-correcting pattern classi\ufb01cation methods, in explaining natural intelligence and in providing a basis for machine intelligence.\n\nHe noted that systems that try to maximize something (whatever that might be) are qualitatively di\u21b5erent from equilibriumseeking systems, and he argued that maximizing systems hold the key to understanding important aspects of natural intelligence and for building arti\ufb01cial intelligences. Harry was instrumental in obtaining funding from AFOSR for a project to assess the scienti\ufb01c merit of these and related ideas. This project was conducted in the late 1970s at the University of Massachusetts Amherst (UMass Amherst), initially under the direction of Michael Arbib, William Kilmer, and Nico Spinelli, professors in the Department of Computer and Information Science at UMass Amherst, and founding members of the Cybernetics Center for Systems Neuroscience at the University, a farsighted group focusing on the intersection of neuroscience and arti\ufb01cial intelligence. Barto, a recent Ph.D", "ea2155b5-18f8-4f66-bab3-317cb87ead83": "Our view of reinforcement learning has been signi\ufb01cantly enriched by discussions with Paul Cohen, Paul Utgo\u21b5, Martha Steenstrup, Gerry Tesauro, Mike Jordan, Leslie Kaelbling, Andrew Moore, Chris Atkeson, Tom Mitchell, Nils Nilsson, Stuart Russell, Tom Dietterich, Tom Dean, and Bob Narendra. We thank Michael Littman, Gerry Tesauro, Bob Crites, Satinder Singh, and Wei Zhang for providing speci\ufb01cs of Sections 4.7, 15.1, 15.4, 15.4, and 15.6 respectively.\n\nWe thank the Air Force O\ufb03ce of Scienti\ufb01c Research, the National Science Foundation, and GTE Laboratories for their long and farsighted support. We also wish to thank the many people who have read drafts of this book and provided valuable comments, including Tom Kalt, John Tsitsiklis, Pawel Cichosz, Olle G\u00a8allmo, Chuck Anderson, Stuart Russell, Ben Van Roy, Paul Steenstrup, Paul Cohen, Sridhar Mahadevan, Jette Randlov, Brian Sheppard, Thomas O\u2019Connell, Richard Coggins, Cristina Versino, John H", "85758af1-c920-46aa-96db-5f767a404bc2": "It can also be useful to make versions of convolution or locally connected layers in which the connectivity is further restricted, for example to constrain each output channel j to be a function of only a subset of the input channels /. A common way to do this is to make the first m output channels connect to only the first n input channels, the second m output channels connect to only the second n input channels, and so on. See figure 9.15 for an example. Modeling interactions between few channels allows the network to have fewer parameters, reducing memory consumption, increasing statistical efficiency, and reducing the amount of computation needed to perform forward and back-propagation. It accomplishes these goals without reducing the number of hidden units. Tiled convolution  offers a com- promise between a convolutional layer and a locally connected layer. Rather than learning a separate set of weights at every spatial location, we learn a set of kernels that we rotate through as we move through space", "02388012-28e6-4f59-a541-e488ac0d5a7a": "Let \u21b5n(a) denote the step-size parameter used to process the reward received after the nth selection of action a. As we have noted, the choice \u21b5n(a) = 1 which is guaranteed to converge to the true action values by the law of large numbers. But of course convergence is not guaranteed for all choices of the sequence {\u21b5n(a)}. A well-known result in stochastic approximation theory gives us the conditions required to assure convergence with probability 1: The \ufb01rst condition is required to guarantee that the steps are large enough to eventually overcome any initial conditions or random \ufb02uctuations. The second condition guarantees that eventually the steps become small enough to assure convergence. Note that both convergence conditions are met for the sample-average case, \u21b5n(a) = 1 but not for the case of constant step-size parameter, \u21b5n(a) = \u21b5. In the latter case, the second condition is not met, indicating that the estimates never completely converge but continue to vary in response to the most recently received rewards", "263cac85-5cd7-4d7e-a1bc-aa5d1cd348e9": "We usually give matrices uppercase variable names with bold typeface, such as A. If a real-valued matrix A has a height of m and a width of n, then we say that A \u20ac R\u201d*\u201d. We usually identify the elements of a matrix using its name in italic but not bold font, and the indices are listed with separating commas. For example, A;, is the upper left entry of A and A,,,, is the bottom right entry. We can identify  https://www.deeplearningbook.org/contents/linear_algebra.html  all the numbers with vertical coordinate ? by writing a \u201c:\u201d for the horigontal cro i wit  or t coordinate. For example, 4%: denotes the horizontal cross section of vertical coordinate i. This is known as the +th row of A. Likewise, A. ; is  30  CHAPTER 2. LINEAR ALGEBRA  the i-th column of A. When we need to explicitly identify the elements of a matrix, we write them as an array enclosed in square brackets:  Ai At y y", "564ce5f7-5725-4160-8b28-abf59f9a936c": "Injecting noise in the input to a neural network  can also be seen as a form of data augmentation. For many classification and even some regression tasks, the task should still be possible to solve even if small random noise is added to the input. Neural networks prove not to be very robust to noise, however . One way to improve the robustness of neural networks is simply to train them with random noise applied to their inputs.\n\nInput noise injection is part of some unsupervised learning algorithms, such as the denoising autoencoder . Noise injection also works when the noise is applied to the hidden units, which can be seen as doing dataset augmentation at multiple levels of abstraction. Poole et al. recently showed that this approach can be highly effective provided that the magnitude of the noise is carefully tuned. Dropout, a powerful regularization strategy that will be described in section 7.12, can be seen as a process of constructing new inputs by multiplying by noise. When comparing machine learning benchmark results, taking the effect of dataset augmentation into account is important. Often, hand-designed dataset augmentation schemes can dramatically reduce the generalization error of a ma- chine learning technique", "f18612d1-1ca7-4c22-9b38-cdb7a7d7ba0e": "This means we can obtain a model with better validation set error (and thus, hopefully better test set error) by returning to the parameter setting at the point in time with the lowest validation set error.\n\nEvery time the error on the validation set improves, we store a copy of the model parameters. When the training algorithm terminates, we return these parameters, rather than the latest parameters. The algorithm terminates when no parameters have improved over the best recorded validation error for some pre-specified number of iterations. This procedure is specified more formally in algorithm 7.1. This strategy is known as early stopping. It is probably the most commonly used form of regularization in deep learning. Its popularity is due to both its effectiveness and its simplicity. One way to think of early stopping is as a very efficient hyperparameter selection algorithm. In this view, the number of training steps is just another hyperparameter. We can see in figure 7.3 that this hyperparameter has a U-shaped validation set performance curve. Most hyperparameters that control model capacity have such a U-shaped validation set performance curve, as illustrated in figure 5.3", "5d2f6f21-c8dd-4479-9f3b-2eaa9dbd8641": "If we consider the limit N \u226b M in which the number of data points is large in relation to the number of parameters, then from (3.87) all of the parameters will be well determined by the data because \u03a6T\u03a6 involves an implicit sum over data points, and so the eigenvalues \u03bbi increase with the size of the data set. In this case, \u03b3 = M, and the re-estimation equations for \u03b1 and \u03b2 become where EW and ED are de\ufb01ned by (3.25) and (3.26), respectively. These results can be used as an easy-to-compute approximation to the full evidence re-estimation synthetic data set. It is the intersection of these two curves that de\ufb01nes the optimum value for \u03b1 given by the evidence procedure.\n\nThe right plot shows the corresponding graph of log evidence ln p(t|\u03b1, \u03b2) versus ln \u03b1 (red curve) showing that the peak coincides with the crossing point of the curves in the left plot. Also shown is the test set error (blue curve) showing that the evidence maximum occurs close to the point of best generalization. formulae, because they do not require evaluation of the eigenvalue spectrum of the Hessian. 3.6", "ca2ff36a-fc77-4549-ad92-c4ce21e78d7c": "See algorithm 1 for a basic approach to compute the stochastic gradients. A connection with auto-encoders becomes clear when looking at the objective function given at eq. (7). The \ufb01rst term is (the KL divergence of the approximate posterior from the prior) acts as a regularizer, while the second term is a an expected negative reconstruction error. The function g\u03c6(.) is chosen such that it maps a datapoint x(i) and a random noise vector \u03f5(l) to a sample from the approximate posterior for that datapoint: z(i,l) = g\u03c6(\u03f5(l), x(i)) where z(i,l) \u223c q\u03c6(z|x(i)). Subsequently, the sample z(i,l) is then input to function log p\u03b8(x(i)|z(i,l)), which equals the probability density (or mass) of datapoint x(i) under the generative model, given z(i,l)", "488fb87b-1f91-47b7-b388-5f588d4e41d9": "We can use this approach to de\ufb01ne a kernel function measuring the similarity of two sequences X and X\u2032 by extending the mixture representation (6.29) to give so that both observed sequences are generated by the same hidden sequence Z. This model can easily be extended to allow sequences of differing length to be compared. An alternative technique for using generative models to de\ufb01ne kernel functions is known as the Fisher kernel . Consider a parametric generative model p(x|\u03b8) where \u03b8 denotes the vector of parameters. The goal is to \ufb01nd a kernel that measures the similarity of two input vectors x and x\u2032 induced by the generative model. Jaakkola and Haussler  consider the gradient with respect to \u03b8, which de\ufb01nes a vector in a \u2018feature\u2019 space having the same dimensionality as \u03b8. In particular, they consider the Fisher score from which the Fisher kernel is de\ufb01ned by Here F is the Fisher information matrix, given by where the expectation is with respect to x under the distribution p(x|\u03b8).\n\nThis can be motivated from the perspective of information geometry , which considers the differential geometry of the space of model parameters", "c9ddc06a-2809-4e61-b6c5-d0bd9caa3071": "As a speci\ufb01c example, we consider once again the sequential estimation of the mean of a Gaussian distribution, in which case the parameter \u03b8(N) is the estimate \u00b5(N) ML of the mean of the Gaussian, and the random variable z is given by Thus the distribution of z is Gaussian with mean \u00b5 \u2212 \u00b5ML, as illustrated in Figure 2.11.\n\nSubstituting (2.136) into (2.135), we obtain the univariate form of (2.126), provided we choose the coef\ufb01cients aN to have the form aN = \u03c32/N. Note that although we have focussed on the case of a single variable, the same technique, together with the same restrictions (2.130)\u2013(2.132) on the coef\ufb01cients aN, apply equally to the multivariate case . The maximum likelihood framework gave point estimates for the parameters \u00b5 and \u03a3. Now we develop a Bayesian treatment by introducing prior distributions over these parameters. Let us begin with a simple example in which we consider a single Gaussian random variable x", "0e2c8f47-df15-48a1-b367-09395c987383": "Of these, the most prominent is ill-conditioning of the Hessian matrix H. This is a very general problem in most numerical optimization, convex or otherwise, and is described in more detail in section 4.3.1. The ill-conditioning problem is generally believed to be present in neural network training problems. Ill-conditioning can manifest by causing SGD to get \u201cstuck\u201d in the sense that even very small steps increase the cost function.\n\nRecall from equation 4.9 that a second-order Taylor series expansion of the cost function predicts that a gradient descent step of \u2014eg will add  5\u00a29' Ha \u2014eg'g (8.10)  to the cost. Ill-conditioning of the gradient becomes a problem when 4\u00a2\u00b0g 'H. g exceeds eg'g. To determine whether ill-conditioning is detrimental to a neural  279  CHAPTER 8", "da6dafb7-7f9d-4a83-bf11-a5e57f3cb62b": "Other features of computational reinforcement learning, such as eligibility traces and the ability of teams of reinforcement learning agents to learn to act collectively under the in\ufb02uence of a globally-broadcast reinforcement signal, may also turn out to parallel experimental data as neuroscientists continue to unravel the neural basis of reward-based animal learning and behavior.\n\nThe number of publications treating parallels between the neuroscience of learning and decision making and the approach to reinforcement learning presented in this book is enormous. We can cite only a small selection. Niv , Dayan and Niv , Gimcher , Ludvig, Bellemare, and Pearson , and Shah  are good places to start. Together with economics, evolutionary biology, and mathematical psychology, reinforcement learning theory is helping to formulate quantitative models of the neural mechanisms of choice in humans and non-human primates. With its focus on learning, this chapter only lightly touches upon the neuroscience of decision making. Glimcher  introduced the \ufb01eld of \u201cneuroeconomics,\u201d in which reinforcement learning contributes to the study of the neural basis of decision making from an economics perspective. See also Glimcher and Fehr . The text on computational and mathematical modeling in neuroscience by Dayan and Abbott  includes reinforcement learning\u2019s role in these approaches", "0c55d043-67fb-4b55-a107-dc86d01615cf": "For example, if it were black\u2019s move, he could use the dice roll of 2 to move a piece from the 24 point to the 22 point, \u201chitting\u201d the white piece there.\n\nPieces that have been hit are placed on the \u201cbar\u201d in the middle of the board (where we already see one previously hit black piece), from whence they reenter the race from the start. However, if there are two pieces on a point, then the opponent cannot move to that point; the pieces are protected from being hit. Thus, white cannot use his 5\u20132 dice roll to move either of his pieces on the 1 point, because their possible resulting points are occupied by groups of black pieces. Forming contiguous blocks of occupied points to block the opponent is one of the elementary strategies of the game. Backgammon involves several further complications, but the above description gives the basic idea. With 30 pieces and 24 possible locations (26, counting the bar and o\u21b5-the-board) it should be clear that the number of possible backgammon positions is enormous, far more than the number of memory elements one could have in any physically realizable computer. The number of moves possible from each position is also large", "e23a3e21-6ebc-4ecd-86c9-fdeb09b5b32b": "For this reason we rule them out for use on large problems where function approximation is most needed. To get some intuitive feel for how to set the step-size parameter manually, it is best to go back momentarily to the tabular case. There we can understand that a step size of \u21b5 = 1 will result in a complete elimination of the sample error after one target (see (2.4) with a step size of one). As discussed on page 201, we usually want to learn slower than this. In the tabular case, a step size of \u21b5 = 1 10 would take about 10 experiences to approach the mean of its targets, with the most recent targets having the greatest e\u21b5ect, after about \u2327 experiences with the state. With general function approximation there is not such a clear notion of number of experiences with a state, as each state may be similar to and dissimilar from all the others to various degrees. However, there is a similar rule that gives similar behavior in the case of linear function approximation", "f30c0b7d-688c-42ae-b1b8-62b082355aa4": "The distributions introduced in this chapter will also serve another important purpose, namely to provide us with the opportunity to discuss some key statistical concepts, such as Bayesian inference, in the context of simple models before we encounter them in more complex situations in later chapters. One role for the distributions discussed in this chapter is to model the probability distribution p(x) of a random variable x, given a \ufb01nite set x1, . , xN of observations. This problem is known as density estimation. For the purposes of this chapter, we shall assume that the data points are independent and identically distributed.\n\nIt should be emphasized that the problem of density estimation is fundamentally ill-posed, because there are in\ufb01nitely many probability distributions that could have given rise to the observed \ufb01nite data set. Indeed, any distribution p(x) that is nonzero at each of the data points x1, . , xN is a potential candidate. The issue of choosing an appropriate distribution relates to the problem of model selection that has already been encountered in the context of polynomial curve \ufb01tting in Chapter 1 and that is a central issue in pattern recognition", "0eb7f4dc-6708-408d-8d7f-02261e960b78": "We would like to further explore the combinatorics of GAN samples with other augmentation techniques such as applying a range of style transfers to GAN-generated samples. Super-resolution networks through the use of SRCNNs, Super-Resolution Convolu- tional Neural Networks, and SRGANs are also very interesting areas for future work in Data Augmentation. We want to explore the performance differences across archi- tectures with upsampled images such as expanding CIFAR-10 images from 32 x 32 to 64 x 64 to 128 x 128 and so on. One of the primary difficulties with GAN samples is try- ing to achieve high-resolution outputs. Therefore, it will be interesting to see how we  can use super-resolution networks to achieve high-resolution such as DCGAN samples Shorten and Khoshgoftaar J Big Data  6:60   inputted into an SRCNN or SRGAN. The result of this strategy will be compared with the performance of the Progressively Growing GAN architecture. Test-time augmentation has the potential to make a massive difference in Computer Vision performance and has not been heavily explored", "6c6d5ad8-95d4-49ba-b76c-396549622292": "(Heuristic search methods such as A\u21e4 are almost always based on the episodic case.) The methods of dynamic programming can be related even more closely to the Bellman optimality equation. Many reinforcement learning methods can be clearly understood as approximately solving the Bellman optimality equation, using actual experienced transitions in place of knowledge of the expected transitions. We consider a variety of such methods in the following chapters. Exercise 3.20 Draw or describe the optimal state-value function for the golf example. \u21e4 Exercise 3.24 Figure 3.5 gives the optimal value of the best state of the gridworld as 24.4, to one decimal place. Use your knowledge of the optimal policy and (3.8) to express this value symbolically, and then to compute it to three decimal places. \u21e4 We have de\ufb01ned optimal value functions and optimal policies. Clearly, an agent that learns an optimal policy has done very well, but in practice this rarely happens.\n\nFor the kinds of tasks in which we are interested, optimal policies can be generated only with extreme computational cost. A well-de\ufb01ned notion of optimality organizes the approach to learning we describe in this book and provides a way to understand the theoretical properties of various learning algorithms, but it is an ideal that agents can only approximate to varying degrees", "b2b7d9b2-0a80-42cb-b514-c3f350a19f9b": "Thus, when a node receives a message on one of its links, this creates pending messages on all of its other links. Only pending messages need to be transmitted because other messages would simply duplicate the previous message on the same link. For graphs that have a tree structure, any schedule that sends only pending messages will eventually terminate once a message has passed in each direction across every link. At this point, there are no pending messages, and the product of the received Exercise 8.29 messages at every variable give the exact marginal. In graphs having loops, however, the algorithm may never terminate because there might always be pending messages, although in practice it is generally found to converge within a reasonable time for most applications. Once the algorithm has converged, or once it has been stopped if convergence is not observed, the (approximate) local marginals can be computed using the product of the most recently received incoming messages to each variable node or factor node on every link. In some applications, the loopy belief propagation algorithm can give poor results, whereas in other applications it has proven to be very effective.\n\nIn particular, state-of-the-art algorithms for decoding certain kinds of error-correcting codes are equivalent to loopy belief propagation", "360c272d-adb0-4907-9c1f-ea597e5635f5": "It is also useful to learn how the environment generates rewards.\n\nIn this case, examples are of the form S\u2013R or SA\u2013R, where R is a reward signal associated with S or the SA pair. These are all forms of supervised learning by which an agent can acquire cognitive-like maps whether or not it receives any non-zero reward signals while exploring its environment. The distinction between model-free and model-based reinforcement learning algorithms corresponds to the distinction psychologists make between habitual and goal-directed control of learned behavioral patterns. Habits are behavior patterns triggered by appropriate stimuli and then performed more-or-less automatically. Goal-directed behavior, according to how psychologists use the phrase, is purposeful in the sense that it is controlled by knowledge of the value of goals and the relationship between actions and their consequences. Habits are sometimes said to be controlled by antecedent stimuli, whereas goal-directed behavior is said to be controlled by its consequences . Goal-directed control has the advantage that it can rapidly change an animal\u2019s behavior when the environment changes its way of reacting to the animal\u2019s actions. While habitual behavior responds quickly to input from an accustomed environment, it is unable to quickly adjust to changes in the environment", "baf4ebac-8032-409f-bce7-b7fd7cdb490c": "Among the variants, one can choose to use the cell state s  LSTM networks have been shown to learn long-term dependencies more easily than the simple recurrent architectures, first on artificial datasets designed for testing the ability to learn long-term dependencies , then on challenging sequence processing tasks where state-of-the-art performance was obtained . Variants and alternatives to the LSTM that have been studied and used are discussed next.\n\n10.10.2 Other Gated RNNs  Which pieces of the LSTM architecture are actually necessary? What other successful architectures could be designed that allow the network to dynamically control the time scale and forgetting behavior of different units? Some answers to these questions are given with the recent work on gated RNNs, whose units are also known as gated recurrent units, or GRUs . The main difference with the LSTM is that a single gating unit simultaneously controls the forgetting factor and the decision to update the state unit. The update equations are the following:  HO uM Lalo Taga age PAOD J J  (10.45) where u stands for \u201cupdate\u201d gate and r for deesot\u201d gate", "a95ed249-4388-4ae7-8ea7-412652dc827d": "Chapter 15  Representation Learning  In this chapter, we first discuss what it means to learn representations and how the notion of representation can be useful to design deep architectures. We explore how learning algorithms share statistical strength across different tasks, including using information from unsupervised tasks to perform supervised tasks. Shared representations are useful to handle multiple modalities or domains, or to transfer learned knowledge to tasks for which few or no examples are given but a task representation exists. Finally, we step back and argue about the reasons for the success of representation learning, starting with the theoretical advantages of distributed representations  and deep representations, ending with the more general idea of underlying assumptions about the data-generating process, in particular about underlying causes of the observed data. Many information processing tasks can be very easy or very difficult depending on how the information is represented. This is a general principle applicable to daily life, to computer science in general, and to machine learning. For example, it is straightforward for a person to divide 210 by 6 using long division. The task becomes considerably less straightforward if it is instead posed using the Roman numeral representation of the numbers.\n\nMost modern people asked to divide CCX by VI would begin by converting the numbers to the Arabic numeral representation, permitting long division procedures that make use of the place value system", "30762230-7111-49ea-9be0-e675ab9ac73f": "Let  s=) ola) f(x) = Elf] (17.1)  s= [ v(x) f(e)ae = BF) (17.2)  be the sum or integral to estimate, rewritten as an expectation, with the constraint that p is a probability distribution (for the sum) or a probability density (for the integral) over random variable x. We can approximate s by drawing n samples #@),..., a from p and then forming the empirical average  bn = LY? f(a. (17.3) i=1  This approximation is justified by a few different properties.\n\nThe first trivial observation is that the estimator \u00a7 is unbiased, since  n n  BlJ=>  EY@O== sas (17.4) 3 3  https://www.deeplearningbook.org/contents/monte_carlo.html    But in addition, the law of large numbers states that if the samples \u00a3\u2018\u2019\u2019 are ii.d., then the average converges almost surely to the expected value:  lim &, =, (17.5)  n->oCo  588  CHAPTER 17", "c6da1c9e-bae2-4606-8fd8-024bd079d4f8": "Section 10 reviews related work.\n\nSection 11 concludes the article with discussion of future directions\u2014in particular, we discuss the broader aspects of ML not covered in the present work (e.g., more advanced learning such as continual learning in complex evolving environments, theoretical analysis of learnability, generalization and complexity, and automated algorithm composition) and how their uni\ufb01ed characterization based on or inspired by the current framework could potentially lead toward a full \u2018Standard Model\u2019 of ML and a turnkey approach to panoramic learning with all types of experience. 2", "6db7a6ac-741c-4b6b-b22b-5e72899dffe3": "Reinforcement learning and control as probabilistic inference: Tutorial and review. arXiv. https://arxiv.org/abs/1805.00909 Li, L., Littman, M. L., Walsh, T. J., & Strehl, A. L. Knows what it knows: A framework for self-aware learning. Machine Learning, 3(82), 399\u2013443. Li, X. L., & Liang, P. Pre\ufb01x-tuning: Optimizing continuous prompts for generation. Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), 4582\u20134597. Liu, G., Feng, Z., Gao, Y., Yang, Z., Liang, X., Bao, J., He, X., Cui, S., Li, Z., & Hu, Z. Composable text controls in latent space with ODEs.\n\narXiv", "2ce36cc6-ce16-4ea8-84dd-b34ced10c270": "Here a 'Gaussian' kernel of the form is applied to a synthetic data set.\n\nThe lines correspond to contours along which the projection onto the corresponding principal component, defined by One obvioo' dls.aJmota~eof I:emel ! 'CA Is thaf if invoh'es finding lhe elgen\"e<tors of the N x N malri>: K raW. Ihan lhe D x D malri, S of cor,..emionallinear ! 'CA. and!iO In prac1lce for large data \"'1' appro,lmation< are often uS(:d Finally. \"\"e OOIe that i\" <tandard linear I'CA, we often retain some redoce<l num\u00b7 ber L < Dof eigenvectors and then appro,lmale 0 data vttl<:>r Xn b}' its projection I\" kernell'CA", "75cae5df-3ee1-4ffb-a26d-c334f8344cd1": "We pay the computational cost of producing a coefficient for many cells, but we expect these coefficients to cluster around a small number of cells. By reading a vector value, rather than a scalar value, we can offset some of this cost.\n\nAnother reason to use vector valued memory cells is that they allow for content-based addressing, where the weight used to read to or write from a cell is a function of that cell. Vector valued cells allow us to retrieve a complete vector valued memory if we are able to produce a pattern that matches some but not all its elements. This is analogous to how people can recall the lyrics of a song based on a few words. We can think of a content-based read instruction as saying, \u201cRetrieve the lyrics of the song that has the chorus \u2018We all live in a yellow submarine.\u2019\u201d Content-based addressing is more useful when we make the objects to be retrieved large\u2014if every letter of the song was stored in a separate memory cell, we would not be able to find them this way. By comparison, location-based addressing is not allowed to refer to the content of the memory", "5f3fee32-ddbd-4af6-bac0-e0fe1483cf1a": "0F(@) _ I(0+eu) - (6) 00, \u20ac  Or analytically,  J (8) = Ex slr] = J) dyo(8) >) (als; 6) R(s, a)  seS acA  Actually we have nice theoretical support for (replacing d(. ) with d,(. )):  T(0) = S~dz,(s) S> m(als;0)Q,(s,a) x S$ d(s) S> r(a\\s; 0)Q,(s, a)  seS acA seS acA  Check Sec 13.1 in Sutton & Barto  for why this is the case", "f53411bb-1a22-4066-b69a-932ea017c0dd": "S OOP PPL HH JN 2V VBA QBQBOSAAPPPPKLHLH ds ~ 2 SVQ QaKsDAPNPNNHKHDE SSM QQNAD ND WWNNNHO -\u2014~wwwwmmama mow www www OO cK KK ee ennnwMVVWWDIDoOOoO cK KK eee OOnwuwNuvoo cK KK eee OOwmnwwwwwuDgod eK KKK EO OOSWWWWWOODOODO HK KK KAHN HSHSWSWWHWWHaBOODO HFK KK KRHHHHHHHHHHQABOOO HFK KAHHHHOHHHYHHHQRWDOCOO S=FFBHAHAHAHH HHHHHHRQAWOO =\u201c=F=FAHHH HHHHHHHHHAWOHO S~SANHHHHEHVHSSSEEEOOOHO SS AASSSSLPRSVNVSVSELEOGH  https://www.deeplearningbook.org/contents/generative_models.html   eee  Figure 20.6: Examples of 2-D coordinate systems for high-dimensional manifolds, learned by a variational autoencoder ", "93781d6e-16c5-4b72-b664-ec87ae1deb2a": "Then, considering all limits as n \u2192 \u221e, \u2022 \u03b4(Pn, P) \u2192 0 with \u03b4 the total variation distance. \u2022 JS(Pn, P) \u2192 0 with JS the Jensen-Shannon divergence. 3. KL(Pn\u2225P) \u2192 0 or KL(P\u2225Pn) \u2192 0 imply the statements in (1). 4. The statements in (1) imply the statements in (2). This highlights the fact that the KL, JS, and TV distances are not sensible cost functions when learning distributions supported by low dimensional manifolds. However the EM distance is sensible in that setup. This obviously leads us to the next section where we introduce a practical approximation of optimizing the EM distance.\n\nAgain, Theorem 2 points to the fact that W(Pr, P\u03b8) might have nicer properties when optimized than JS(Pr, P\u03b8). However, the in\ufb01mum in (1) is highly intractable", "eb908359-c28c-439b-b790-802d3318a8f5": "In: Conference on Innovative Data Systems Research  47. Rekatsinas, T., Chu, X., Ilyas, I.F., R\u00e9, C.: HoloClean: Holistic data repairs with probabilistic inference. PVLDB 10(11), 1190\u20131201  48.\n\nRekatsinas,T.,Joglekar,M.,Garcia-Molina,H.,Parameswaran,A., R\u00e9, C.: SLiMFast: Guaranteed results for data fusion and source reliability. In: ACM SIGMOD International Conference on Management of Data (SIGMOD)  49. Riedel, S., Yao, L., McCallum, A.: Modeling relations and their mentions without labeled text. In: European Conference on Machine Learning and Knowledge Discovery in Databases (ECML PKDD)  50. Roth, B., Klakow, D.: Combining generative and discriminative model scores for distant supervision. In: Conference on Empirical Methods on Natural Language Processing (EMNLP)  51", "a47be785-9bcd-41a3-b3c2-e4b62c171617": "Each of these ideas taken from DP is extended to the Monte Carlo case in which only sample experience is available. We begin by considering Monte Carlo methods for learning the state-value function for a given policy. Recall that the value of a state is the expected return\u2014expected cumulative future discounted reward\u2014starting from that state. An obvious way to estimate it from experience, then, is simply to average the returns observed after visits to that state. As more returns are observed, the average should converge to the expected value. This idea underlies all Monte Carlo methods. In particular, suppose we wish to estimate v\u21e1(s), the value of a state s under policy \u21e1, given a set of episodes obtained by following \u21e1 and passing through s. Each occurrence of state s in an episode is called a visit to s. Of course, s may be visited multiple times in the same episode; let us call the \ufb01rst time it is visited in an episode the \ufb01rst visit to s. The \ufb01rst-visit MC method estimates v\u21e1(s) as the average of the returns following \ufb01rst visits to s, whereas the every-visit MC method averages the returns following all visits to s", "0c28dc6f-9c71-41ad-a021-293e5116e028": "(The exceptions are cases of direct electric coupling between neurons, but these will not concern us here.) Neurotransmitter molecules released from the presynaptic side of the synapse di\u21b5use across the synaptic cleft, the very small space between the presynaptic ending and the postsynaptic neuron, and then bind to receptors on the surface of the postsynaptic neuron to excite or inhibit its spike-generating activity, or to modulate its behavior in other ways. A particular neurotransmitter may bind to several di\u21b5erent types of receptors, with each producing a di\u21b5erent e\u21b5ect on the postsynaptic neuron.\n\nFor example, there are at least \ufb01ve di\u21b5erent receptor types by which the neurotransmitter dopamine can a\u21b5ect a postsynaptic neuron. Many di\u21b5erent chemicals have been identi\ufb01ed as neurotransmitters in animal nervous systems", "f5bb080e-e805-42c4-b42e-dbb6fbabf753": "The dot over the equals sign in the equation reminds us that it is a de\ufb01nition (in this case of the function p) rather than a fact that follows from previous de\ufb01nitions. The dynamics function p : S \u21e5 R \u21e5 S \u21e5 A ! is an ordinary deterministic function of four arguments. The \u2018|\u2019 in the middle of it comes from the notation for conditional probability, 1We use the terms agent, environment, and action instead of the engineers\u2019 terms controller, controlled system (or plant), and control signal because they are meaningful to a wider audience. 2We restrict attention to discrete time to keep things as simple as possible, even though many of the ideas can be extended to the continuous-time case . 3To simplify notation, we sometimes assume the special case in which the action set is the same in all 4We use Rt+1 instead of Rt to denote the reward due to At because it emphasizes that the next reward and next state, Rt+1 and St+1, are jointly determined", "41a58e54-66d8-44b7-b162-7c83dca8c8f2": "(s! s'cS V,(s) = max (R(s,a) +7) / PyyV-(s')) ac s'eS Q,(s,a) = R(s, a) +7 >) PS max Qs (s',a\u2019) s'cS  Unsurprisingly they look very similar to Bellman expectation equations. If we have complete information of the environment, this turns into a planning problem, solvable by DP. Unfortunately, in most scenarios, we do not know P\u201c,, or R(s, a), so we cannot solve MDPs by directly applying Bellmen equations, but it lays the theoretical foundation for many RL algorithms. Common Approaches  Now it is the time to go through the major approaches and classic algorithms for solving RL problems. In future posts, | plan to dive into each approach further.\n\nDynamic Programming  When the model is fully known, following Bellman equations, we can use Dynamic Programming (DP) to iteratively evaluate value functions and improve policy", "49ce61df-a82d-4f9e-98a2-d761ff580b48": "GQ(\u03bb) is the Gradient-TD algorithm for action values with eligibility traces. Its goal is to learn a parameter wt such that \u02c6q(s, a, wt) .= w> data. If the target policy is \"-greedy, or otherwise biased toward the greedy policy for \u02c6q, then GQ(\u03bb) can be used as a control algorithm. Its update is where \u00afxt is the average feature vector for St under the target policy, t is the expectation form of the TD error, which can be written zt is de\ufb01ned in the usual way for action values (12.29), and the rest is as in GTD(\u03bb), including the update for vt (12.30). HTD(\u03bb) is a hybrid state-value algorithm combining aspects of GTD(\u03bb) and TD(\u03bb). Its most appealing feature is that it is a strict generalization of TD(\u03bb) to o\u21b5-policy learning, meaning that if the behavior policy happens to be the same as the target policy, then HTD(\u03bb) becomes the same as TD(\u03bb), which is not true for GTD(\u03bb)", "7560d479-2460-4be2-98c9-3d9e638dda43": "The panoramic learning we discussed here makes use of broader forms of experience not necessarily amenable to be converted into supervised labels, such as reward, discriminator-like models, and many structured constraints. The experience function f(y) o\ufb00ers such \ufb02exibility for expressing all those experiences. We have presented a standardized machine learning formalism, materialized as the standard equation of the objective function, that formulates a vast algorithmic space governed by a few components regarding the experience, model \ufb01tness measured with divergence, and uncertainty. The formalism gives a holistic view of the diverse landscape of learning paradigms, allows a mechanical way of designing ML approaches to new problems, and provides a vehicle toward panoramic learning that integrates all available experience in building an AI agent. The work shapes a range of exciting open questions and opportunities for future study. We discuss a few of these directions below. Continual learning in complex dynamic environments", "9490114d-a403-4ebf-9dae-f773f77d207c": "https://www.deeplearningbook.org/contents/rnn.html    10.11.1 Clipping Gradients  As discussed in section 8.2.4, strongly nonlinear functions, such as those computed by a recurrent net over many time steps, tend to have derivatives that can be either very large or very small in magnitude. This is illustrated in figure 8.3 and in figure 10.17, in which we see that the objective function (as a function of the parameters) has a \u201clandscape\u201d in which one finds \u201ccliffs\u201d: wide and rather flat regions separated by tiny regions where the objective function changes quickly, forming a kind of cliff.\n\nThe difficulty that arises is that when the parameter gradient is very large, a gradient descent parameter update could throw the parameters very far into a region where the objective function is larger, undoing much of the work that had been done to reach the current solution. The gradient tells us the direction that corresponds to the steepest descent within an infinitesimal region surrounding the current parameters. Outside this infinitesimal region, the cost function may  409  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  begin to curve back upward", "9aca9b05-556e-4bcb-9f67-678ab9932714": "Contrastive divergence is slow for deep Boltzmann machines because they do not allow efficient sampling of the hidden units given the visible units\u2014instead, contrastive divergence would require burning in a Markov chain every time a new negative phase sample is needed. The nonvariational version of the stochastic maximum likelihood algorithm is discussed in section 18.2. Variational stochastic maximum likelihood as applied to the DBM is given in algorithm 20.1. Recall that we describe a simplified variant of the DBM that lacks bias parameters; including them is trivial. 20.4.4 Layer-Wise Pretraining  Unfortunately, training a DBM using stochastic maximum likelihood (as described above) from a random initialization usually results in failure. In some cases, the model fails to learn to represent the distribution adequately.\n\nIn other cases, the  https://www.deeplearningbook.org/contents/generative_models.html    DBM may represent the distribution well, but with no higher likelihood than could be obtained with just an RBM. A DBM with very small weights in all but the first layer represents approximately the same distribution as an RBM. Various techniques that permit joint training have been developed and are described in section 20.4.5", "e7ccd8e8-d49a-412b-bad3-08ddeb388c40": "We often refer to the error rate as the expected 0-1 loss. The 0-1 loss on a particular example is 0 if it is correctly classified and 1 if it is not. For tasks such as density estimation, it does not make sense to measure accuracy, error rate, or any other kind of 0-1 loss. Instead, we must use a different performance metric that gives the model a continuous-valued score for each example. The most common approach is to report the average log-probability the model assigns to some examples. Usually we are interested in how well the machine learning algorithm performs on data that it has not seen before, since this determines how well it will work when deployed in the real world. We therefore evaluate these performance measures using a test set of data that is separate from the data used for training the machine learning system. The choice of performance measure may seem straightforward and objective, but it is often difficult to choose a performance measure that corresponds well to the desired behavior of the system", "258b27dc-f16e-42ee-8c83-9880a4cce44c": "APPLICATIONS  equation 12.8, the gradient can be written as follows:  Olog P(y| C) _ Alog softmax,(a)  12.1 00 00 (12.18) 0 ew =\u2014 \u2014\u2014 12.14 30 log yew ( ) a ai, 6 = ap (tu \u2014 log > e%) (12.15) Ody . 0a; = = 12.1 wot Pu = 105 (12.16)  where a is the vector of presoftmax activations (or scores), with one element per word. The first term is the positive phase term, pushing a, up, while the second term is the negative phase term, pushing a; down for all 7, with weight P(i| C). Since the negative phase term is an expectation, we can estimate it with a Monte Carlo sample. However, that would require sampling from the model itself. Sampling from the model requires computing P(i | C) for all i in the vocabulary, which is precisely what we are trying to avoid.\n\nInstead of sampling from the model, we can sample from another distribution, called the proposal distribution (denoted q), and use appropriate weights to correct for the bias introduced by sampling from the wrong distribution", "d78d7e97-7d0f-41f9-a739-6ed33dc0cbdc": "The tree-backup algorithm is due to Precup, Sutton, and Singh , but the presentation of it here is new. 7.6 The Q(\u03c3) algorithm is new to this text, but closely related algorithms have been explored further by De Asis, Hernandez-Garcia, Holland, and Sutton . In this chapter we develop a uni\ufb01ed view of reinforcement learning methods that require a model of the environment, such as dynamic programming and heuristic search, and methods that can be used without a model, such as Monte Carlo and temporal-di\u21b5erence methods. These are respectively called model-based and model-free reinforcement learning methods. Model-based methods rely on planning as their primary component, while model-free methods primarily rely on learning. Although there are real di\u21b5erences between these two kinds of methods, there are also great similarities. In particular, the heart of both kinds of methods is the computation of value functions.\n\nMoreover, all the methods are based on looking ahead to future events, computing a backed-up value, and then using it as an update target for an approximate value function", "0326fd68-ead4-4ab9-b3f0-54b614586b20": "The variational framework for Gaussian process classi\ufb01cation can also be extended to multiclass (K > 2) problems by using a Gaussian approximation to the softmax function . A second approach uses expectation propagation (Opper and Winther, 2000b; Section 10.7 Minka, 2001b; Seeger, 2003). Because the true posterior distribution is unimodal, as we shall see shortly, the expectation propagation approach can give good results. The third approach to Gaussian process classi\ufb01cation is based on the Laplace approximation, which we now consider in detail", "986f81d7-aaa4-4340-8b2f-475544916cc9": "Now consider the derivative of the term involving ln |A| in (3.86) with respect to \u03b1.\n\nWe have Thus the stationary points of (3.86) with respect to \u03b1 satisfy Multiplying through by 2\u03b1 and rearranging, we obtain Since there are M terms in the sum over i, the quantity \u03b3 can be written The interpretation of the quantity \u03b3 will be discussed shortly. From (3.90) we see that the value of \u03b1 that maximizes the marginal likelihood satis\ufb01es Exercise 3.20 Note that this is an implicit solution for \u03b1 not only because \u03b3 depends on \u03b1, but also because the mode mN of the posterior distribution itself depends on the choice of \u03b1. We therefore adopt an iterative procedure in which we make an initial choice for \u03b1 and use this to \ufb01nd mN, which is given by (3.53), and also to evaluate \u03b3, which is given by (3.91). These values are then used to re-estimate \u03b1 using (3.92), and the process repeated until convergence. Note that because the matrix \u03a6T\u03a6 is \ufb01xed, we can compute its eigenvalues once at the start and then simply multiply these by \u03b2 to obtain the \u03bbi", "11db2562-1070-4dbc-a6cb-d07e98ee4fe1": "Specifically, every real symmetric matrix can be decomposed into an expression using only real-valued eigenvectors and eigenvalues:  A=QAQ|, (2.41)  where Q is an orthogonal matrix composed of eigenvectors of A, and A is a diagonal matrix. The eigenvalue A; ; is associated with the eigenvector in column i of Q, denoted as Q,;. Because Q is an orthogonal matrix, we can think of A as scaling space by \\; in direction v. See figure 2.3 for an example. While any real symmetric matrix A is guaranteed to have an eigendecomposi- tion, the eigendecomposition may not be unique. If any two or more eigenvectors share the same eigenvalue, then any set of orthogonal vectors lying in their span are also eigenvectors with that eigenvalue, and we could equivalently choose a Q using those eigenvectors instead. By convention, we usually sort the entries of A in descending order. Under this convention, the eigendecomposition is unique only if all the eigenvalues are unique", "747749a8-af02-4dd3-96e0-61a25c22c824": "The final debiased contrastive loss looks like:  exp( f(x)\" f(x\") ]  cN\u2122M =E No yg ga  using  importance sampling where both the partition functions Z,, Z5 can be estimated empirically.\n\nhttps://lilianweng.github.io/posts/2021-05-31-contrastive/  Contrastive Representation Learning | Lil'Log   u~gslexP(f(x) ' f(u))] = Eucal \u00bb exPlf(%)\u201d fu) = wl, P((8+ 1) f(x)\" f(u))]  vagy exP(F(X) ' f(\u00a5))] = Ev.pe  = volgen ((8 + DAG)\" F(W))] P Z;  1] # pos : exp of inner products for positive examples 2) # neg : exp of inner products for negative examples 3) 4 N : number of negative examples  Je ot : temperature scaling  s|# tau_plus: class probability  6|# beta : concentration parameter  8] #Original objective 9| standard_loss = -log(pos.sum() / (pos.sum() + neg.sum()))  11] #Debiased objective 122]}Neg = max((-N*tau_plus\u00abpos + neg).sum() / (1-tau_plus), e\u00ab\u00ab*(-1/t)) 13} debiased_loss = -log(pos.sum() / (pos.sum() + Neg))  1s} #Hard sampling objective (Ours)  16] reweight = (beta*neg) / neg.mean() 17|Neg = max((-N*tau_plus*pos + reweight*neg).sum() / (1-tau_plus), e**(-1/t)) hard_loss = -log( pos.sum() / (pos.sum() + Neg))  Vision: Image Embedding  Image Augmentations  Most approaches for contrastive representation learning in the vision domain rely on creating a noise version of a sample by applying a sequence of data augmentation techniques", "552c6cd3-94bc-4c4c-b5f3-88d71cf46dcd": "Earlier in this book we presented Monte Carlo and temporal-di\u21b5erence methods as distinct alternatives, then showed how they can be uni\ufb01ed by n-step methods. Our goal in this chapter is a similar integration of model-based and model-free methods. Having established these as distinct in earlier chapters, we now explore the extent to which they can be intermixed. By a model of the environment we mean anything that an agent can use to predict how the environment will respond to its actions. Given a state and an action, a model produces a prediction of the resultant next state and next reward. If the model is stochastic, then there are several possible next states and next rewards, each with some probability of occurring. Some models produce a description of all possibilities and their probabilities; these we call distribution models. Other models produce just one of the possibilities, sampled according to the probabilities; these we call sample models. For example, consider modeling the sum of a dozen dice", "a25a497a-c4f3-4ed8-a87e-cef3fe0f4a82": "Suppose that we have a design matrix of m example inputs that we will not use for training, only for evaluating how well the model performs. We also have a vector of regression targets providing the correct value of y for each of these examples. Because this dataset will only be used for evaluation, we call it the test set. We refer to the design matrix of inputs as X (test) and the vector of regression targets as y (est)  One way of measuring the performance of the model is to compute the mean squared error of the model on the test set. If gs\") gives the predictions of the model on the test set, then the mean squared error is given by  1 ~ eS\u2019 ies MSEtest = \u2014 So(gl) = yO)? (5.4)  Intuitively, one can see that this error measure decreases to 0 when g{tes*) = y (test),  We can also see that 1 Z eS\u2019 es MSEtest = |\" %) \u2014 yltes (5, (5.5)  so the error increases whenever the Euclidean distance between the predictions and the targets increases", "cb3584cd-0f92-4eb4-a403-bb85dd965cd9": "In addition, on some problems the policy is just simpler to represent parametrically than the value function; these problems are more suited to parameterized policy methods. Parameterized policy methods also have an important theoretical advantage over action-value methods in the form of the policy gradient theorem, which gives an exact formula for how performance is a\u21b5ected by the policy parameter that does not involve derivatives of the state distribution. This theorem provides a theoretical foundation for all policy gradient methods. The REINFORCE method follows directly from the policy gradient theorem. Adding a state-value function as a baseline reduces REINFORCE\u2019s variance without introducing bias. Using the state-value function for bootstrapping introduces bias but is often desirable for the same reason that bootstrapping TD methods are often superior to Monte Carlo methods (substantially reduced variance). The state-value function assigns credit to\u2014critizes\u2014the policy\u2019s action selections, and accordingly the former is termed the critic and the latter the actor, and these overall methods are termed actor\u2013critic methods", "928879e9-6e26-4e07-a48a-5ea2a9783ceb": "Input: two men on bicycles competing in a race . Generated: two men are riding bikes . Input: families waiting in line at an amusement park for their turn to ride . Generated: families at a amusement park . Input: man in a black suit , white shirt and black bowtie playing an instrument with the rest of his symphony surrounding him . Generated: a man is playing music . Input: a white dog with long hair jumps to catch a red and green toy . Generated: a dog is jumping Input: a man in a black shirt is playing golf outside . Generated: a man is playing golf Input: a man wearing sunglasses is sitting on the steps outside , reading a magazine . Generated: a man is sitting outside . Input: a young child is jumping into the arms of a woman wearing a black swimming suit while in a pool . Generated: a child is jumping into a pool . Input: a carefully balanced male stands on one foot near a clean ocean beach area . Generated: a man is on the beach", "81f9b886-aa2d-4120-969c-6368f0f0e9b6": "One approach to accelerating mixing during learning relies not on changing the Monte Carlo sampling technology but rather on changing the parametrization of the model and the cost function. Fast PCD, or FPCD  involves replacing the parameters @ of a traditional model with an expression  0 \u2014 o(slow) 4 @(fast) | (18.16)  There are now twice as many parameters as before, and they are added together element-wise to provide the parameters used by the original model definition. The ast copy of the parameters is trained with a much larger learning rate, allowing it to adapt rapidly in response to the negative phase of learning and push the Markov chain to new territory. This forces the Markov chain to mix rapidly, though his effect occurs only during learning while the fast weights are free to change. Typically one also applies significant weight decay to the fast weights, encouraging hem to converge to small values, after only transiently taking on large values long enough to encourage the Markov chain to change modes", "a4851d7e-0dc1-48fd-a4f8-8321626dd511": "There are N ways to choose the \ufb01rst object, (N \u2212 1) ways to choose the second object, and so on, leading to a total of N! ways to allocate all N objects to the bins, where N! (pronounced \u2018factorial N\u2019) denotes the product N \u00d7(N \u22121)\u00d7\u00b7 \u00b7 \u00b7\u00d72\u00d71. However, we don\u2019t wish to distinguish between rearrangements of objects within each bin. In the ith bin there are ni! ways of reordering the objects, and so the total number of ways of allocating the N objects to the bins is given by which is called the multiplicity. The entropy is then de\ufb01ned as the logarithm of the multiplicity scaled by an appropriate constant We now consider the limit N \u2192 \u221e, in which the fractions ni/N are held \ufb01xed, and apply Stirling\u2019s approximation i ni = N. Here pi = limN\u2192\u221e(ni/N) is the probability of an object being assigned to the ith bin. In physics terminology, the speci\ufb01c arrangements of objects in the bins is called a microstate, and the overall distribution of occupation numbers, expressed through the ratios ni/N, is called a macrostate", "e061ec82-e96a-4d2f-a378-2dd8f3712500": "If we set the derivative of (9.55) with respect to \u00b5k equal to zero and rearrange the terms, we obtain Exercise 9.15 We see that this sets the mean of component k equal to a weighted mean of the data, with weighting coef\ufb01cients given by the responsibilities that component k takes for data points.\n\nFor the maximization with respect to \u03c0k, we need to introduce a Lagrange multiplier to enforce the constraint \ufffd which represents the intuitively reasonable result that the mixing coef\ufb01cient for component k is given by the effective fraction of points in the data set explained by that component. Note that in contrast to the mixture of Gaussians, there are no singularities in which the likelihood function goes to in\ufb01nity. This can be seen by noting that the likelihood function is bounded above because 0 \u2a7d p(xn|\u00b5k) \u2a7d 1. There exist Exercise 9.17 singularities at which the likelihood function goes to zero, but these will not be found by EM provided it is not initialized to a pathological starting point, because the EM algorithm always increases the value of the likelihood function, until a local maximum is found. We illustrate the Bernoulli mixture model in Figure 9.10 by Section 9.4 using it to model handwritten digits", "b959b835-7a1c-464e-9430-7dbe14904f1d": "We do not ordinarily think of rollout algorithms as learning algorithms because they do not maintain long-term memories of values or policies. However, these algorithms take advantage of some of the features of reinforcement learning that we have emphasized in this book. As instances of Monte Carlo control, they estimate action values by averaging the returns of a collection of sample trajectories, in this case trajectories of simulated interactions with a sample model of the environment.\n\nIn this way they are like reinforcement learning algorithms in avoiding the exhaustive sweeps of dynamic programming by trajectory sampling, and in avoiding the need for distribution models by relying on sample, instead of expected, updates. Finally, rollout algorithms take advantage of the policy improvement property by acting greedily with respect to the estimated action values. Monte Carlo Tree Search (MCTS) is a recent and strikingly successful example of decisiontime planning. At its base, MCTS is a rollout algorithm as described above, but enhanced by the addition of a means for accumulating value estimates obtained from the Monte Carlo simulations in order to successively direct simulations toward more highly-rewarding trajectories", "4f58f9ae-95ac-4581-a321-374c0aebe20f": "Now the later estimate is not one step later, but n steps later. Methods in which the temporal di\u21b5erence extends over n steps are called n-step TD methods. The TD methods introduced in the previous chapter all used one-step updates, which is why we called them one-step TD methods. More formally, consider the update of the estimated value of state St as a result of the state\u2013reward sequence, St, Rt+1, St+1, Rt+2, . , RT , ST (omitting the actions). We know that in Monte Carlo updates the estimate of v\u21e1(St) is updated in the direction of the where T is the last time step of the episode. Let us call this quantity the target of the update", "5ad9167d-51cb-4c03-9d49-b92b55b2f0a9": "There has been insu\ufb03cient experience with o\u21b5-policy Monte Carlo methods to assess how serious this problem is. If it is serious, the most important way to address it is probably by incorporating temporaldi\u21b5erence learning, the algorithmic idea developed in the next chapter. Alternatively, if \u03b3 is less than 1, then the idea developed in the next section may also help signi\ufb01cantly. Exercise 5.11 In the boxed algorithm for o\u21b5-policy MC control, you may have been expecting the W update to have involved the importance-sampling ratio \u21e1(At|St) like those shown in Figure 5.5. You want to go as fast as possible, but not so fast as to run o\u21b5 the track. In our simpli\ufb01ed racetrack, the car is at one of a discrete set of grid positions, the cells in the diagram.\n\nThe velocity is also discrete, a number of grid cells moved horizontally and vertically per time step. The actions are increments to the velocity components. Each may be changed by +1, \u22121, or 0 in each step, for a total of nine (3 \u21e5 3) actions", "81ac88bd-4dbc-4d8d-b934-18210cffae61": "Extensions to networks of temporal relationships were developed by Tanner  and then extended to options . The theory of reinforcement learning with a non-Markov state representation was developed explicitly by Singh, Jaakkola, and Jordan . Early reinforcement learning approaches to partial observability were developed by Chrisman , McCallum , Parr and Russell , Littman, Cassandra, and Kaelbling , and by Lin and Mitchell . Skinner\u2019s shaping should not be confused with the \u201cpotential-based shaping\u201d technique introduced by Ng, Harada, and Russell . Their technique has been shown by Wiewiora  to be equivalent to the simpler idea of providing an initial approximation to the value function, as in (17.10). 17.5 We recommend the book by Goodfellow, Bengio, and Courville  for discussion of today\u2019s deep learning techniques.\n\nThe problem of catastrophic interference in ANNs was developed by McCloskey and Cohen , Ratcli\u21b5 , and French . The idea of a replay bu\u21b5er was introduced by Lin  and used prominently in deep learning in the Atari game playing system", "1d5dbcd3-8f55-463b-b99a-076657738145": "Speci\ufb01cally, the parameter of the function approximator has three components, one giving the value of state B, one giving the value of state C, and one giving the value of both states A1 and A2. Other than the selection of the initial state, the system is deterministic. If it starts in A1, then it transitions to B with a reward of 0 and then on to termination with a reward of 1. If it starts in A2, then it transitions to C, and then to termination, with both rewards zero. To a learning algorithm, seeing only the features, the system looks identical to the A-split example. The system seems to always start in A, followed by either B or C with equal probability, and then terminating with a 1 or a 0 depending deterministically on the previous state. As in the A-split example, the true values of B and C are 1 and 0, and the best shared value of A1 and A2 is 1 Because this problem appears externally identical to the A-split example, we transitions are deterministic, so the non-naive residual-gradient algorithm will also converge to these values (it is the same algorithm in this case)", "c72e22af-649d-40d2-a25e-13017a0c6145": "With the KKT approach, we introduce a new function called the generalized Lagrangian or generalized Lagrange function. To define the Lagrangian, we first need to describe S in terms of equations and inequalities. We want a description of S in terms of m functions g\u00ae and n functions h) so that S = {a | Vi, g(x) =0 and Vj,h\u00ae (a) < 0}. The equations involving g are called the equality constraints, and the inequalities involving h\u00ae@) are called inequality constraints. We introduce new variables A; and a; for each constraint, these are called the KKT multipliers. The generalized Lagrangian is then defined as  L(a, X, a) )+ 2d a) + So ajha). (4.14)  We can now solve a constrained minimization problem using unconstrained optimization of the generalized Lagrangian", "478faa10-b265-419f-a30d-f9c14d41b390": "The true values of all the states, A through E, are 1 6, 2 The left graph above shows the values learned after various numbers of episodes on a single run of TD(0).\n\nThe estimates after 100 episodes are about as close as they ever come to the true values\u2014with a constant step-size parameter (\u21b5 = 0.1 in this example), the values \ufb02uctuate inde\ufb01nitely in response to the outcomes of the most recent episodes. The right graph shows learning curves for the two methods for various values of \u21b5. The performance measure shown is the root mean-squared (RMS) error between the value function learned and the true value function, averaged over the \ufb01ve states, then averaged over 100 runs. In all cases the approximate value function was initialized to the intermediate value V (s) = 0.5, for all s. The TD method was consistently better than the MC method on this task. Exercise 6.3 From the results shown in the left graph of the random walk example it appears that the \ufb01rst episode results in a change in only V (A)", "0cd94b82-d353-43f4-9781-1df249ef6b56": "This can be understood quantitatively through an estimate of the variance of our estimate Z:  ~ fo Ks (x(h)  \\? Var (4:) = 4 \u00bb (Be a . (18.46)  This quantity is largest when there is significant deviation in the values of the Bix) Po(x(\u00ae))\u00b0  We now turn to two related strategies developed to cope with the challeng-  importance weights =  ing task of estimating partition functions for complex distributions over high- dimensional spaces: annealed importance sampling and bridge sampling. Both start with the simple importance sampling strategy introduced above, and both attempt to overcome the problem of the proposal po being too far from p; by introducing intermediate distributions that attempt to bridge the gap between pp and p", "3439cd44-74b8-47e4-89da-d41a9c398e50": "Figure 14.9 illustrates how a manifold can be tiled by  516  CHAPTER 14.\n\nAUTOENCODERS  https://www.deeplearningbook.org/contents/autoencoders.html    Figure 14.9: If the tangent planes (see figure 14.6) at each location are known, then they can be tiled to form a global coordinate system or a density function. Each local patch can be thought of as a local Euclidean coordinate system or as a locally flat Gaussian, or \u201cpancake,\u201d with a very small variance in the directions orthogonal to the pancake and a very large variance in the directions defining the coordinate system on the pancake. A mixture of these Gaussians provides an estimated density function, as in the manifold Parzen window algorithm  or in its nonlocal neural-net-based variant . CHAPTER 14. AUTOENCODERS  a large number of locally linear Gaussian-like patches (or \u201cpancakes,\u201d because the Gaussians are flat in the tangent directions)", "3e86044b-f1e7-4e61-9c0d-2924a4d7bc4c": "Thus a data point that is on the decision boundary y(xn) = 0 will have \u03ben = 1, and points with \u03ben > 1 will be misclassi\ufb01ed.\n\nThe exact classi\ufb01cation constraints (7.5) are then replaced with in which the slack variables are constrained to satisfy \u03ben \u2a7e 0. Data points for which \u03ben = 0 are correctly classi\ufb01ed and are either on the margin or on the correct side of the margin. Points for which 0 < \u03ben \u2a7d 1 lie inside the margin, but on the correct side of the decision boundary, and those data points for which \u03ben > 1 lie on the wrong side of the decision boundary and are misclassi\ufb01ed, as illustrated in Figure 7.3. This is sometimes described as relaxing the hard margin constraint to give a soft margin and allows some of the training set data points to be misclassi\ufb01ed. Note that while slack variables allow for overlapping class distributions, this framework is still sensitive to outliers because the penalty for misclassi\ufb01cation increases linearly with \u03be. Our goal is now to maximize the margin while softly penalizing points that lie on the wrong side of the margin boundary", "95817e94-fd39-46d2-aee9-bad01476b4ae": "Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and Hannaneh Hajishirzi. 2017. Bidirectional attention \ufb02ow for machine comprehension. In ICLR. Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D Manning, Andrew Ng, and Christopher Potts. 2013. Recursive deep models for semantic compositionality over a sentiment treebank. In Proceedings of the 2013 conference on empirical methods in natural language processing, pages 1631\u20131642. Joseph Turian, Lev Ratinov, and Yoshua Bengio. 2010. Word representations: A simple and general method for semi-supervised learning. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, ACL \u201910, pages 384\u2013394. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need", "9e29bf20-0d31-43b7-92da-52683bf05332": "As with GANs, it is possible to train a generator net using MMD even if that generator net assigns zero probability to the training points. 20.10.6 Convolutional Generative Networks  When generating images, it is often useful to use a generator network that includes a convolutional structure (see, for example, Goodfellow et al. or Dosovitskiy et al. ). To do so, we use the \u201ctranspose\u201d of the convolution operator, described in section 9.5. This approach often yields more realistic images and does so using fewer parameters than using fully connected layers without parameter sharing.\n\nConvolutional networks for recognition tasks have information flow from the image to some summarization layer at the top of the network, often a class label. As this image flows upward through the network, information is discarded as the representation of the image becomes more invariant to nuisance transformations. In a generator network, the opposite is true. Rich details must be added as the representation of the image to be generated propagates through the network, culminating in the final representation of the image, which is of course the image itself, in all its detailed glory, with object positions and poses and textures and lighting", "75eb924d-fe44-42f7-b634-00520a931b9c": "Previously, the size of the step was simply the norm of the gradient multiplied by the learning rate.\n\nNow, the size of the step depends on how large and how aligned a sequence of gradients are. The step size is largest when many successive gradients point in exactly the same direction. If the momentum algorithm always observes gradient g, then it will accelerate in the direction of \u2014g, until reaching a terminal velocity where the size of each step is  call. l-a  (8.17)  It is thus helpful to think of the momentum hyperparameter in terms of a For example, a = 0.9 corresponds to multiplying the maximum speed by 10 relative to the gradient descent algorithm. Common values of a used in practice include 0.5, 0.9, and 0.99. Like the learning rate, a may also be adapted over time. Typically it begins with a small value and is later raised. Adapting a over time is less important than shrinking \u00a2\u20ac over time. We can view the momentum algorithm as simulating a particle subject to continuous-time Newtonian dynamics. The physical analogy can help build intuition for how the momentum and gradient descent algorithms behave", "54e92eb3-a9c9-42ec-943b-63f193ea8c6f": "Just as with the mcRBM, the mPoT model energy function specifies a mul- tivariate Gaussian, with a conditional distribution over x that has nondiagonal covariance. Learning in the mPoT model\u2014again, like the mcRBM\u2014is com- plicated by the inability to sample from the nondiagonal Gaussian conditional PmPor(& | hi, \u00a9), so Ranzato et al. also advocate direct sampling of p(x) via Hamiltonian (hybrid) Monte Carlo. Spike and Slab Restricted Boltzmann Machines Spike and slab restricted Boltzmann machines  or ssRBMs provide another means of modeling the covariance structure of real-valued data. Compared to mcRBMs, ssRBMs have the advantage of requiring neither matrix inversion nor Hamiltonian Monte Carlo methods.\n\nLike the mcRBM and the mPoT model, the ssRBM\u2019s binary hidden units encode the conditional covariance across pixels through the use of auxiliary real-valued variables", "b02ee85f-eded-453c-a4e2-f59cdb008451": "It is instructive to note the exact representation Tesauro chose. There were a total of 198 input units to the network. For each point on the backgammon board, four units indicated the number of white pieces on the point. If there were no white pieces, then all four units took on the value zero. If there was one piece, then the \ufb01rst unit took on the value 1. This encoded the elementary concept of a \u201cblot,\u201d i.e., a piece that can be hit by the opponent. If there were two or more pieces, then the second unit was set to 1. This encoded the basic concept of a \u201cmade point\u201d on which the opponent cannot land. If there were exactly three pieces on the point, then the third unit was set to 1. This encoded the basic concept of a \u201csingle spare,\u201d i.e., an extra piece in addition to the two pieces that made the point", "4f7bc60e-8f7e-43f8-994b-16518da042e6": "W., M. I. Jordan, M. J. Beal, and D. M. Blei . Hierarchical Dirichlet processes. Journal of the Americal Statistical Association. to appear. Tesauro, G. TD-Gammon, a self-teaching backgammon program, achieves master-level play. Neural Computation 6(2), 215\u2013219. Thiesson, B., D. M. Chickering, D. Heckerman, and C. Meek . ARMA time-series modelling with graphical models. In M. Chickering and J. Halpern (Eds. ), Proceedings of the Twentieth Conference on Uncertainty in Arti\ufb01cial Intelligence, Banff, Canada, pp. 552\u2013560. AUAI Press. Tibshirani, R. Regression shrinkage and selection via the lasso", "83124d2d-7ec0-4c2a-a890-97159901374b": "Computationally intensive nonlinear optimization techniques must be used, and there is the risk of finding a suboptimal local minimum of the error function. Also, the dimensionality of the subspace must be specified before training the network. As we have already noted, many natural sources of data correspond to lowdimensional, possibly noisy, nonlinear manifolds embedded within the higher dimensional observed data space. Capturing this property explicitly can lead to improved density modelling compared with more general methods. Here we consider briefly a range of techniques that attempt to do this. One way to model the nonlinear structure is through a combination of linear models, so that we make a piece-wise linear approximation to the manifold.\n\nThis can be obtained, for instance, by using a clustering technique such as K -means based on Euclidean distance to partition the data set into local groups with standard PCA applied to each group. A better approach is to use the reconstruction error for cluster assignment  as then a common cost function is being optimized in each stage. However, these approaches still suffer from limitations due to the absence of an overall density model", "02142b1e-9815-4d1a-b0df-b70ef53b0f61": "Given a unit of computational e\u21b5ort, is it better devoted to a few expected updates or to b times as many sample updates? shows the estimation error as a function of computation time for expected and sample updates for a variety of branching factors, b. The case considered is that in which all b successor states are equally likely and in which the error in the initial estimate is 1.\n\nThe values at the next states are assumed correct, so the expected update reduces the error to zero upon its completion. In this case, sample updates reduce the error (assuming sample averages, i.e., \u21b5 = 1/t). The key observation is that for moderately large b the error falls dramatically with a tiny fraction of b updates. For these cases, many state\u2013action pairs could have their values improved dramatically, to within a few percent of the e\u21b5ect of an expected update, in the same time that a single state\u2013action pair could undergo an expected update. The advantage of sample updates shown in Figure 8.7 is probably an underestimate of the real e\u21b5ect. In a real problem, the values of the successor states would be estimates that are themselves updated", "539bf100-c036-4463-9e3a-24fa0867f722": "An algorithm for \ufb01nding best matches in logarithmic expected time. ACM Transactions on Mathematical Software, 3(3):209\u2013226. Friston, K. J., Tononi, G., Reeke, G. N., Sporns, O., Edelman, G. M. Value-dependent selection in the brain: Simulation in a synthetic neural model. Neuroscience, 59(2):229\u2013243. Galanter, E., Gerstenhaber, M. On thought: The extrinsic theory. Psychological Review, Gallistel, C. R. .\n\nDeconstructing the law of e\u21b5ect. Games and Economic Behavior, Gardner, M. Mathematical games. Scienti\ufb01c American, 228(1):108\u2013115. Geist, M., Scherrer, B. O\u21b5-policy learning with eligibility traces: A survey. Journal of Gelly, S., Silver, D. Combining online and o\u270fine knowledge in UCT", "d74f64fa-870f-43a3-bf12-0810c7f72c84": "Alopex: A stochastic method for determining visual receptive Hassabis, D., Maguire, E. A. Deconstructing episodic memory with construction. Trends Hauskrecht, M., Meuleau, N., Kaelbling, L. P., Dean, T., Boutilier, C. Hierarchical solution of Markov decision processes using macro-actions. In Proceedings of the Fourteenth Conference on Uncertainty in Arti\ufb01cial Intelligence, pp. 220\u2013229. Morgan Kaufmann. Hawkins, R. D., Kandel, E. R. Is there a cell-biological alphabet for simple forms of Haykin, S. .\n\nNeural networks: A Comprehensive Foundation, Macmillan, New York. He, K., Huertas, M., Hong, S. Z., Tie, X., Hell, J. W., Shouval, H., Kirkwood, A. Distinct eligibility traces for LTP and LTD in cortical synapses", "f9519ed2-95ef-43c4-b5ff-73f798982513": "By a similar argument to that used above, it is easy to see that the marginal associated with a factor is given by the Exercise 8.21 product of messages arriving at the factor node and the local factor at that node in complete analogy with the marginals at the variable nodes.\n\nIf the factors are parameterized functions and we wish to learn the values of the parameters using the EM algorithm, then these marginals are precisely the quantities we will need to calculate in the E step, as we shall see in detail when we discuss the hidden Markov model in Chapter 13. The message sent by a variable node to a factor node, as we have seen, is simply the product of the incoming messages on other links. We can if we wish view the sum-product algorithm in a slightly different form by eliminating messages from variable nodes to factor nodes and simply considering messages that are sent out by factor nodes. This is most easily seen by considering the example in Figure 8.50. So far, we have rather neglected the issue of normalization. If the factor graph was derived from a directed graph, then the joint distribution is already correctly normalized, and so the marginals obtained by the sum-product algorithm will similarly be normalized correctly", "0c094258-9297-46d3-99af-e5cced5acf79": "Is o\u21b5-policy learning possible without importance sampling? Q-learning and Expected Sarsa from Chapter 6 do this for the one-step case, but is there a corresponding multi-step algorithm? In this section we present just such an n-step method, called the tree-backup algorithm. The idea of the algorithm is suggested by the 3-step tree-backup backup diagram shown to the right. Down the central spine and labeled in the diagram are three sample states and rewards, and two sample actions. These are the random variables representing the events occurring after the initial state\u2013action pair St, At. Hanging o\u21b5 to the sides of each state are the actions that were not selected. (For the last state, all the actions are considered to have not (yet) been selected.) Because we have no sample data for the unselected actions, we bootstrap and use the estimates of their values in forming the target for the update. This slightly extends the idea of a backup diagram.\n\nSo far we have always updated the estimated value of the node at the top of the diagram toward a target combining the rewards along the way (appropriately discounted) and the estimated values of the nodes at the bottom", "5c64828e-60d4-48d9-9013-eff35efc3027": "Exercise 4.15 The Newton-Raphson update formula for the logistic regression model then becomes where z is an N-dimensional vector with elements We see that the update formula (4.99) takes the form of a set of normal equations for a weighted least-squares problem.\n\nBecause the weighing matrix R is not constant but depends on the parameter vector w, we must apply the normal equations iteratively, each time using the new weight vector w to compute a revised weighing matrix R. For this reason, the algorithm is known as iterative reweighted least squares, or IRLS . As in the weighted least-squares problem, the elements of the diagonal weighting matrix R can be interpreted as variances because the mean and variance of t in the logistic regression model are given by where we have used the property t2 = t for t \u2208 {0, 1}. In fact, we can interpret IRLS as the solution to a linearized problem in the space of the variable a = wT\u03c6", "54c7c2d9-ac94-4faf-a615-e6defa80cf80": "In many cases, we may derive some general machine learning algorithm in terms of arbitrary matrices but obtain a less expensive (and less descriptive) algorithm by restricting some matrices to be diagonal. Not all diagonal matrices need be square. It is possible to construct a rectangular diagonal matrix. Nonsquare diagonal matrices do not have inverses, but we can still multiply by them cheaply. For a nonsquare diagonal matrix D, the product Dz will involve scaling each element of x and either concatenating some zeros to the result, if D is taller than it is wide, or discarding some of the last elements of the vector, if D is wider than it is tall. A symmetric matrix is any matrix that is equal to its own transpose: A=Al.\n\n(2.35) Symmetric matrices often arise when the entries are generated by some function of two arguments that does not depend on the order of the arguments. For example, if A is a matrix of distance measurements, with A; giving the distance from point i to point j, then Aj; = Aj; because distance functions are symmetric. A unit vector is a vector with unit norm:  ||z||2 = 1", "131ffd89-9e64-43da-b5d1-c1e4a97d40da": "Graphical models can describe the probabilistic relationships between neighboring pixels. Alternatively, the convolutional network can be trained to  out ved ne reas inte ood  https://www.deeplearningbook.org/contents/convnets.html    maximize an approximation or the grapnical model training opjective . 353  CHAPTER 9. CONVOLUTIONAL NETWORKS  9.7 Data Types  The data used with a convolutional network usually consist of several channels, each channel being the observation of a different quantity at some point in space or time. See table 9.1 for examples of data types with different dimensionalities and number of channels. For an example of convolutional networks applied to video, see Chen ef al. So far we have discussed only the case where every example in the train and test data has the same spatial dimensions.\n\nOne advantage to convolutional networks is that they can also process inputs with varying spatial extents. These kinds of input simply cannot be represented by traditional, matrix multiplication-based neural networks. This provides a compelling reason to use convolutional networks even when computational cost and overfitting are not significant issues", "6ed7592b-4f27-43c9-9539-0506bd1c1f17": "In: AAAI Conference on Arti\ufb01cial Intelligence (AAAI)  56.\n\nSun, C., Shrivastava, A., Singh, S., Gupta, A.: Revisiting unreasonable effectiveness of data in deep learning era  arXiv preprint arXiv:1707.02968 57. Takamatsu, S., Sato, I., Nakagawa, H.: Reducing wrong labels in distant supervision for relation extraction. In: Meeting of the Association for Computational Linguistics (ACL)  58. Varma, P., He, B., Bajaj, P., Khandwala, N., Banerjee, I., Rubin, D., R\u00e9, C.: Inferring generative model structure with static analysis. In: Proceedings of NIPS  59. Varma, P., R\u00e9, C.: Snuba: Automating weak supervision to label training data. In: Proceedings of VLDB  60", "ee9095f7-8fef-4326-9ec0-91c002428c86": "Solutions for the remaining exercises are available to course tutors by contacting the publisher (contact details are given on the book web site). Readers are strongly encouraged to work through the exercises unaided, and to turn to the solutions only as required. Although this book focuses on concepts and principles, in a taught course the students should ideally have the opportunity to experiment with some of the key algorithms using appropriate data sets. A companion volume  will deal with practical aspects of pattern recognition and machine learning, and will be accompanied by Matlab software implementing most of the algorithms discussed in this book. First of all I would like to express my sincere thanks to Markus Svens\u00b4en who has provided immense help with preparation of \ufb01gures and with the typesetting of the book in LATEX. His assistance has been invaluable.\n\nI am very grateful to Microsoft Research for providing a highly stimulating research environment and for giving me the freedom to write this book (the views and opinions expressed in this book, however, are my own and are therefore not necessarily the same as those of Microsoft or its af\ufb01liates)", "c91447b4-46ea-4412-9d66-49ee88513b35": "For example, if two labeling functions express similar heuristics, we can include this dependency in the model and avoid a \u201cdouble counting\u201d problem. We observe that such pairwise correlations are the most common, so we focus on them in this paper (though handling higher order dependencies is straightforward).\n\nWe use our structure learning method for generative models  to select a set C of labeling function pairs ( j, k) to model as correlated (see Sect. 3.2). Now we can construct the full generative model as a factor graph. We \ufb01rst apply all the labeling functions to the unlabeled data points, resulting in a label matrix \ufffd, where \ufffdi, j = \u03bb j(xi). We then encode the generative model pw(\ufffd, Y) using three factor types, representing the labeling propensity, accuracy, and pairwise correlations of labeling functions: For a given data point xi, we de\ufb01ne the concatenated vector of these factors for all the labeling functions j = 1, ..., n and potential correlations C as \u03c6i(\ufffd, Y), and the corresponding vector of parameters w \u2208 R2n+|C|", "57291768-ef50-4242-a2ff-84a24531eeca": "This is more of an art than a science, and most guidance on this subject should be regarded with some skepticism. When using the linear schedule, the parameters to choose are \u00ab, \u20ac-, and 7. Usually 7 may be set to the number of iterations required to make a few hundred passes through the training set. Usually \u20ac, should be set to roughly 1 percent the value of \u20ac9. The main question is how to set eo. If it is too large, the learning curve will show violent oscillations, with the cost function often increasing significantly. Gentle oscillations are fine, especially if training with a stochastic cost function, such as the cost function arising from the use of dropout. If the learning rate is too low, learning proceeds slowly, and if the initial learning rate is too low, learning may become stuck with a high cost value. Typically, the optimal initial learning rate, in terms of total training time and the  291  CHAPTER 8.\n\nOPTIMIZATION FOR TRAINING DEEP MODELS  final cost value, is higher than the learning rate that yields the best performance after the first 100 iterations or so", "71c96665-dc42-4423-a6c4-2fb8da6f12c8": "We subsample a small training set on each task by randomly picking 40 instances for each class. We further create small validation sets, i.e., 2 instances per class for SST-5, and 5 instances per class for IMDB and TREC, respectively. The reason we use slightly more validation examples on IMDB and TREC is that the model can easily achieve 100% validation accuracy if the validation sets are too small. Thus, the SST-5 task has 210 labeled examples in total, while IMDB has 90 labels and TREC has 270.\n\nSuch extremely small datasets pose signi\ufb01cant challenges for learning deep neural networks. Since the manipulation parameters are trained using the small validation sets, to avoid possible over\ufb01tting we restrict the training to small number (e.g., 5 or 10) of epochs. For image classi\ufb01cation, we similarly create a small subset of the CIFAR10 data, which includes 40 instances per class for training, and 2 instances per class for validation. Results Table 1 shows the manipulation results on text classi\ufb01cation. For data augmentation, our approach signi\ufb01cantly improves over the base model on all the three datasets", "50561d5c-2cd1-4e6e-b4a9-1b4dd72df9c4": "If we choose an initial point from the distribution (11.63) and then update it using L leapfrog interactions, the probability of the transition going from R to R\u2032 is given by where the factor of 1/2 arises from the probability of choosing to integrate with a positive step size rather than a negative one. Similarly, the probability of starting in momentum variable ri. Because the change to one variable is a function only of the other, any region in phase space will be sheared without change of volume. region R\u2032 and integrating backwards in time to end up in region R is given by It is easily seen that the two probabilities (11.68) and (11.69) are equal, and hence detailed balance holds.\n\nNote that this proof ignores any overlap between the regions Exercise 11.17 R and R\u2032 but is easily generalized to allow for such overlap. It is not dif\ufb01cult to construct examples for which the leapfrog algorithm returns to its starting position after a \ufb01nite number of iterations. In such cases, the random replacement of the momentum values before each leapfrog integration will not be suf\ufb01cient to ensure ergodicity because the position variables will never be updated. Such phenomena are easily avoided by choosing the magnitude of the step size at random from some small interval, before each leapfrog integration", "6cec44f4-9f77-4e08-a509-62dc061003b4": "For example, replacing \u03c6i in Eq. (11) with log \u03c6i in effect changes the softmax normalization in Eq. (12) to linear normalization, which is used in . We empirically validate the proposed data manipulation approach through extensive experiments on learning augmentation and weighting. We study both text and image classi\ufb01cation, in two dif\ufb01cult settings of low data regime and imbalanced labels1. Base Models. We choose strong pretrained networks as our base models for both text and image classi\ufb01cation. Speci\ufb01cally, on text data, we use the BERT (base, uncased) model ; while on image data, we use ResNet-34  pretrained on ImageNet. We show that, even with the largescale pretraining, data manipulation can still be very helpful to boost the model performance on downstream tasks. Since our approach uses validation sets for manipulation parameter learning, for a fair comparison with the base model, we train the base model in two ways. The \ufb01rst is to train the model on the training sets as usual and select the best step using the validation sets; the second is to train on the merged training and validation sets for a \ufb01xed number of steps.\n\nThe step number is set to the average number of steps selected in the \ufb01rst method", "935491fa-1b80-4b88-b82e-2498b757bc28": "Traditional noise injection techniques that add unstructured noise at the input are not able to randomly erase the information about a nose from an image of a face unless the magnitude of the noise is so great that nearly all the information in  the image is removed. Destroying extracted features rather than original values allows the destruction process to make use of all the knowledge about the input distribution that the model has acquired so far. Another important aspect of dropout is that the noise is multiplicative. If the  264  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  noise were additive with fixed scale, then a rectified linear hidden unit h; with added noise \u20ac could simply learn to have h; become very large in order to make the added noise \u20ac insignificant by comparison. Multiplicative noise does not allow such a pathological solution to the noise robustness problem.\n\nAnother deep learning algorithm, batch normalization, reparametrizes the model in a way that introduces both additive and multiplicative noise on the hidden units at training time. The primary purpose of batch normalization is to improve optimization, but the noise can have a regularizing effect, and sometimes makes dropout unnecessary. Batch normalization is described further in section 8.7.1", "390a05b9-f192-43c3-abca-e246aa9d8a9d": "In S. A. Barnett and A. McLaren (Eds. ), Science Survey, Michie, D. Experiments on the mechanisation of game learning. 1. characterization of the model and its parameters. The Computer Journal, 6(3):232\u2013263. Michie, D. On Machine Intelligence. Edinburgh University Press, Edinburgh. Michie, D., Chambers, R. A. BOXES, An experiment in adaptive control. In E. Dale and D. Michie (Eds. ), Machine Intelligence 2, pp. 137\u2013152. Oliver and Boyd, Edinburgh. Miller, R. Meaning and Purpose in the Intact Brain: A Philosophical, Psychological, and Biological Account of Conscious Process. Clarendon Press, Oxford. Miller, W. T., An, E., Glanz, F., Carter, M. The design of CMAC neural networks for Miller, W", "d7185c70-f71d-4963-980a-25e46912ddbd": "An image\u2019s pixel values in each RGB color channel is aggregated to form a color histogram. This his- togram can be manipulated to apply filters that change the color space characteristics of an image. There is a lot of freedom for creativity with color space augmentations. Altering the color distribution of images can be a great solution to lighting challenges faced by testing data (Figs. 3, 4). Image datasets can be simplified in representation by converting the RGB matri-  ces into a single grayscale image. This results in smaller images, height x width x 1, Shorten and Khoshgoftaar J Big Data   6:60  \u2018A  ee |  Original photo  RGB all changed  Red color casting  ee |  Vignette  Green color casting  ye |  More vignette  Blue casting + vignette  Fig. 4 Examples of color augmentations tested by Wu et al. resulting in faster computation. However, this has been shown to reduce per- formance accuracy. Chatifled et al. found a ~ 3% classification accuracy drop between grayscale and RGB images with their experiments on ImageNet  and the PASCAL  VOC dataset", "39beb921-1855-4766-9571-b2304f9323b9": "Greedy layer-wise unsupervised pretraining relies on a single-layer represen- tation learning algorithm such as an RBM, a single-layer autoencoder, a sparse coding model, or another model that learns latent representations. Each layer is pretrained using unsupervised learning, taking the output of the previous layer and producing as output a new representation of the data, whose distribution (or its relation to other variables, such as categories to predict) is hopefully simpler. See algorithm 15.1 for a formal description. Greedy layer-wise training procedures based on unsupervised criteria have long been used to sidestep the difficulty of jointly training the layers of a deep neural net for a supervised task", "d8593338-a59e-4d7e-b09d-71b0de7d5323": "First of all, the data vectors {xn} typically lie close to a nonlinear manifold whose intrinsic dimensionality is smaller than that of the input space as a result of strong correlations between the input variables. We will see an example of this when we consider images of handwritten digits in Chapter 12. If we are using localized basis functions, we can arrange that they are scattered in input space only in regions containing data. This approach is used in radial basis function networks and also in support vector and relevance vector machines. Neural network models, which use adaptive basis functions having sigmoidal nonlinearities, can adapt the parameters so that the regions of input space over which the basis functions vary corresponds to the data manifold. The second property is that target variables may have signi\ufb01cant dependence on only a small number of possible directions within the data manifold. Neural networks can exploit this property by choosing the directions in input space to which the basis functions respond.\n\nHence show that a general linear combination of logistic sigmoid functions of the form is equivalent to a linear combination of \u2018tanh\u2019 functions of the form and \ufb01nd expressions to relate the new parameters {u1, . , uM} to the original parameters {w1,", "caac61a4-1b05-4bbd-b050-0934a902e086": "Because the charge decreases over time, each DRAM cell needs to be recharged\u2014refreshed\u2014every few milliseconds to prevent memory content from being lost.\n\nThis need to refresh the cells is why DRAM is called \u201cdynamic.\u201d Each cell array has a row bu\u21b5er that holds a row of bits that can be transferred into or out of one of the array\u2019s rows. An activate command \u201copens a row,\u201d which means moving the contents of the row whose address is indicated by the command into the row bu\u21b5er. With a row open, the controller can issue read and write commands to the cell array. Each read command transfers a word (a short sequence of consecutive bits) in the row bu\u21b5er to the external data bus, and each write command transfers a word in the external data bus to the row bu\u21b5er. Before a di\u21b5erent row can be opened, a precharge command must be issued which transfers the (possibly updated) data in the row bu\u21b5er back into the addressed row of the cell array. After this, another activate command can open a new row to be accessed", "07092149-ad54-4fdd-881b-9e878401ec67": "The corrupted input is fed to a large neural network that is trained to reproduce the original text y. An uncorrupted text will be reconstructed as itself (low reconstruction error), while a corrupted text will be reconstructed as an uncorrupted version of itself (large reconstruction error). If one interprets the reconstruction error as an energy, it will have the desired property: low energy for \u201cclean\u201d text and higher energy for \u201ccorrupted\u201d text. The general technique of training a model to restore a corrupted version of an input is called denoising auto-  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   encoder.\n\nWhile early forms of this idea go back to the 1980s, it was  revived in 2008 by Pascal Vincent and colleagues at the University of Montr\u00e9al, introduced in the context of NLP by Collobert and Weston, and popularized by the BERT paper from our friends at Google", "cfbefb8b-0473-46a1-bf53-42657cc167e6": "In the case of early stopping, we are controlling the effective capacity of the model by determining how many steps it can take to fit the training set. Most hyperparameters must be  243  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  chosen using an expensive guess and check process, where we set a hyperparameter at the start of training, then run training for several steps to see its effect.\n\nThe \u201ctraining time\u201d hyperparameter is unique in that by definition, a single run of training tries out many values of the hyperparameter. The only significant cost to choosing this hyperparameter automatically via early stopping is running the validation set evaluation periodically during training. Ideally, this is done in parallel to the training process on a separate machine, separate CPU, or separate GPU from the main training process. If such resources are not available, then the cost of these periodic evaluations may be reduced by using a validation set that is  Algorithm 7.1 The early stopping meta-algorithm for determining the best amount of time to train", "492e1c5b-f662-4f85-96bd-0562de751acd": "Houk, J. L. Davis, and D. G. Beiser (Eds.\n\n), Models of Information Processing in the Basal Ganglia, pp. 215\u2013232. MIT Press, Cambridge, MA. Barto, A. G. Reinforcement learning. In M. A. Arbib (Ed. ), Handbook of Brain Theory and Neural Networks, pp. 804\u2013809. MIT Press, Cambridge, MA. Barto, A. G. Adaptive real-time dynamic programming. In C. Sammut and G. I Webb (Eds. ), Encyclopedia of Machine Learning, pp. 19\u201322. Springer Science and Business Media. Barto, A. G. Intrinsic motivation and reinforcement learning. In G. Baldassarre and M. Mirolli (Eds", "4c8038ef-8fcb-49de-9a37-99da9fec73a9": "The way we obtained the manipulation algorithm represents a general means of innovating problem solutions based on unifying formalisms of different learning paradigms.\n\nSpeci\ufb01cally, a unifying formalism not only offers new understandings of the seemingly distinct paradigms, but also allows us to systematically apply solutions to problems in one paradigm to similar problems in another. Previous work along this line has made fruitful results in other domains. For example, an extended formulation of  that connects RL and posterior regularization (PR)  has enabled to similarly export a reward learning algorithm to the context of PR for learning structured knowledge . By establishing a uniform abstration of GANs  and VAEs , Hu et al. exchange techniques between the two families and get improved generative modeling. Other work in the similar spirit includes . By extrapolating algorithms between paradigms, one can go beyond crafting new algorithms from scratch as in most existing studies, which often requires deep expertise and yields unique solutions in a dedicated context. Instead, innovation becomes easier by importing rich ideas from other paradigms, and is repeatable as a new algorithm can be methodically extrapolated to multiple different contexts. A. Abdolmaleki, J. T", "fb866f56-e88a-4a08-ad82-5288bbe2000f": "The score of a candidate span from position i to position j is de\ufb01ned as S\u00b7Ti + E\u00b7Tj, and the maximum scoring span where j \u2265 i is used as a prediction. The training objective is the sum of the log-likelihoods of the correct start and end positions. We \ufb01ne-tune for 3 epochs with a learning rate of 5e-5 and a batch size of 32. Table 2 shows top leaderboard entries as well as results from top published systems . The top results from the SQuAD leaderboard do not have up-to-date public system descriptions available,11 and are allowed to use any public data when training their systems. We therefore use modest data augmentation in our system by \ufb01rst \ufb01ne-tuning on TriviaQA  befor \ufb01ne-tuning on SQuAD. Our best performing system outperforms the top leaderboard system by +1.5 F1 in ensembling and +1.3 F1 as a single system. In fact, our single BERT model outperforms the top ensemble system in terms of F1 score. Without TriviaQA \ufb01ne11QANet is described in Yu et al", "6a2fd546-7601-46c4-a495-7047da1ae899": "In the alternative approach, f(w) is recomputed each time it is needed. When the memory required to store the value of these expressions is low, the back-propagation approach of equation 6.51 is clearly preferable because of its reduced runtime. However, equation 6.52 is also a valid implementation of the chain rule and is useful when memory is limited. 205  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  That algorithm specifies the forward propagation computation, which we could put in a graph G. To perform back-propagation, we can construct a computational graph that depends on G and adds to it an extra set of nodes. These form a subgraph B with one node per node of G. Computation in B proceeds in exactly the reverse of the order of computation in G, and each node of B computes the  dul\u2122  derivative KO} associated with the forward graph node u. This is done using  the chain rule with respect to scalar output ul;  du - du\u2122 Au  OuG) \u2014 du Aud i:je\u20acPa(u)  (6.53)  as specified by algorithm 6.2", "1f3bad3f-c957-47e9-955a-6ab4ffdab4d5": "e Shared factors across tasks: When we have many tasks corresponding to different y; variables sharing the same input x, or when each task is associated with a subset or a function f@ (x) of a global input x, the assumption is that each y; is associated with a different subset from a common pool of  553  CHAPTER 15. REPRESENTATION LEARNING  relevant factors h. Because these subsets overlap, learning all the P(y; | x) via a shared intermediate representation P(h | x) allows sharing of statistical strength between the tasks.\n\nManifolds: Probability mass concentrates, and the regions in which it con- centrates are locally connected and occupy a tiny volume. In the continuous case, these regions can be approximated by low-dimensional manifolds with a much smaller dimensionality than the original space where the data live. Many machine learning algorithms behave sensibly only on this manifold . Some machine learning algorithms, especially autoencoders, attempt to explicitly learn the structure of the manifold. Natural clustering: Many machine learning algorithms assume that each connected manifold in the input space may be assigned to a single class", "a2a9a082-1a6d-409b-aad1-d25c3a6e43e4": "Equation 3.41 provides extra justification for the name \u201csoftplus.\u201d The softplus function is intended as a smoothed version of the positive part function, \u00ab> = 0. The positive part function is the counterpart of the negative part  max at  https://www.deeplearningbook.org/contents/prob.html    function, \u00ab~ = max{0,\u2014zx}. To obtain a smooth function that is analogous to the negative part, one can use 6(\u20142). Just as 2 can be recovered from its positive part and its negative part via the identity x\" \u2014x~ = 2, it is also possible to recover x using the same relationship between \u00a2(x) and \u00a2(\u20142), as shown in equation 3.41. 3.11 Bayes\u2019 Rule  We often find ourselves in a situation where we know P(y | x) and need to know  P(x | y)", "409e55e1-c492-4f9a-94e8-40b1b117fe41": "In this respect, Rt is like primary reward for an animal if we think of the problem the animal faces as the problem of obtaining as much primary reward as possible over its lifetime (and thereby, through the prospective \u201cwisdom\u201d of evolution, improve its chances of solving its real problem, which is to pass its genes on to future generations). However, as we suggest in Chapter 15, it is unlikely that there is a single \u201cmaster\u201d reward signal like Rt in an animal\u2019s brain. Not all reinforcers are rewards or penalties. Sometimes reinforcement is not the result of an animal receiving a stimulus that evaluates its behavior by labeling the behavior good or bad. A behavior pattern can be reinforced by a stimulus that arrives to an animal no matter how the animal behaved.\n\nAs described in Section 14.1, whether the delivery of reinforcer depends, or does not depend, on preceding behavior is the de\ufb01ning di\u21b5erence between instrumental, or operant, conditioning experiments and classical, or Pavlovian, conditioning experiments. Reinforcement is at work in both types of experiments, but only in the former is it feedback that evaluates past behavior", "e68d13a2-5b07-4088-a798-3817db79eef9": "Exercise 2.40 We have already seen how the maximum likelihood expression for the mean of a Gaussian can be re-cast as a sequential update formula in which the mean after Section 2.3.5 observing N data points was expressed in terms of the mean after observing N \u2212 1 data points together with the contribution from data point xN. In fact, the Bayesian paradigm leads very naturally to a sequential view of the inference problem. To see this in the context of the inference of the mean of a Gaussian, we write the posterior distribution with the contribution from the \ufb01nal data point xN separated out so that The term in square brackets is (up to a normalization coef\ufb01cient) just the posterior distribution after observing N \u2212 1 data points.\n\nWe see that this can be viewed as a prior distribution, which is combined using Bayes\u2019 theorem with the likelihood function associated with data point xN to arrive at the posterior distribution after observing N data points. This sequential view of Bayesian inference is very general and applies to any problem in which the observed data are assumed to be independent and identically distributed. So far, we have assumed that the variance of the Gaussian distribution over the data is known and our goal is to infer the mean", "83df33b9-a04d-429d-bbc4-5ec1d1d7d8eb": "He conjectured that these traces are implemented by molecular mechanisms local to each synapse and therefore di\u21b5erent from the electrical activity of both the pre- and the postsynaptic neurons. In the Bibliographical and Historical Remarks section of this chapter we bring attention to some similar proposals made by others. Klopf speci\ufb01cally conjectured that synaptic e\ufb03cacies change in the following way. When a neuron \ufb01res an action potential, all of its synapses that were active in contributing to that action potential become eligible to undergo changes in their e\ufb03cacies. If the action potential is followed within an appropriate time period by an increase of reward, the e\ufb03cacies of all the eligible synapses increase. Symmetrically, if the action potential is followed within an appropriate time period by an increase of punishment, the e\ufb03cacies of eligible synapses decrease", "2a1b1ff3-7da7-482b-9a9c-ac61ed2494be": "Today, we know that the machine learning models described in part II work very well when trained with gradient descent. The optimization algorithm may not be guaranteed to arrive at even a local minimum in a reasonable amount of time, but it often finds a very low value of the cost function quickly enough to be useful. Stochastic gradient descent has many important uses outside the context of deep learning. It is the main way to train large linear models on very large datasets. For a fixed model size, the cost per SGD update does not depend on the training set size m. In practice, we often use a larger model as the training set size increases, but we are not forced to do so. The number of updates required to reach convergence usually increases with training set size. However, as m approaches infinity, the model will eventually converge to its best possible test error before SGD has sampled every example in the training set. Increasing m further will not extend the amount of training time needed to reach the model\u2019s best possible test error.\n\nFrom this point of view, one can argue that the asymptotic cost of training a model with SGD is O(1) as a function of m", "9a94a1fb-1a19-49d1-a9c2-b97349e838e0": "Following the discussions in Section 1.2.5 and 3.1, we assume that t has a Gaussian distribution with an xdependent mean, which is given by the output of the neural network, so that where \u03b2 is the precision (inverse variance) of the Gaussian noise. Of course this is a somewhat restrictive assumption, and in Section 5.6 we shall see how to extend this approach to allow for more general conditional distributions.\n\nFor the conditional distribution given by (5.12), it is suf\ufb01cient to take the output unit activation function to be the identity, because such a network can approximate any continuous function from x to y. Given a data set of N independent, identically distributed observations X = {x1, . , xN}, along with corresponding target values t = {t1, . , tN}, we can construct the corresponding likelihood function Taking the negative logarithm, we obtain the error function which can be used to learn the parameters w and \u03b2. In Section 5.7, we shall discuss the Bayesian treatment of neural networks, while here we consider a maximum likelihood approach", "0442dbd4-c2e2-4dfd-ade7-215574433d87": "d. Data-ef\ufb01cient image recognition with contrastive predictive coding. arXiv preprint arXiv:1905.09272, 2019. Hinton, G. E., Osindero, S., and Teh, Y.-W. A fast learning algorithm for deep belief nets. Neural computation, 18(7):1527\u2013 1554, 2006. Hjelm, R. D., Fedorov, A., Lavoie-Marchildon, S., Grewal, K., Bachman, P., Trischler, A., and Bengio, Y. Learning deep representations by mutual information estimation and maximization. arXiv preprint arXiv:1808.06670, 2018. Ioffe, S. and Szegedy, C. Batch normalization: Accelerating deep network training by reducing internal covariate shift. arXiv preprint arXiv:1502.03167, 2015. Ji, X., Henriques, J. F., and Vedaldi, A", "54033b8f-d86a-4442-97ca-b60daa598b7f": "The estimate b is usually obtained by adding extra outputs to the neural network and training the new outputs to estimate Exy lJ ) Dlogptw)\u201d ] and E,vy) [sgn for each element of w. These extra  outputs can be trained with the mean squared error objective, using respectively  Jy) 2g w)\u201d and tee )? as targets when y is sampled from p(y), for a given w. The estimate b may then be recovered by substituting these estimates into equation 20.68. Mnih and Gregor  preferred to use a single shared output (across all elements 7 of w) trained with the target J(y), using as baseline b(w) ~ Envy) [J(y)I-  Variance reduction methods have been introduced in the reinforcement learning context , generalizing previous work on the case of binary reward by Dayan . See Bengio et al. , Mnih and Gregor , Ba et al. , Mnih et al. , or Xu et al", "ccf3780d-cd0b-47d1-ba64-42bb9e108164": "When viewing an object, information flows from the retina, through the LGN, to V1, then onward to V2, then V4, then IT. This happens within the first 100ms of glimpsing an object. If a person is allowed to continue looking at the object for more time, then information will begin to flow backward as the brain uses top-down feedback to update the activations in the lower level brain areas. If we interrupt the person\u2019s gaze, however, and observe only the firing rates that result from the first 100ms of mostly feedforward activation, then IT proves to be similar to a convolutional network. Convolutional networks can predict IT firing rates and perform similarly to (time-limited) humans on object recognition tasks . That being said, there are many differences between convolutional networks and the mammalian vision system.\n\nSome of these differences are well known to computational neuroscientists but outside the scope of this book. Some of these differences are not yet known, because many basic questions about how the mammalian vision system works remain unanswered. As a brief list:  e The human eye is mostly very low resolution, except for a tiny patch called the fovea", "b7a1050d-f4be-43ba-aef6-868a8092ab78": "From now on, we shall switch to the use of natural logarithms in de\ufb01ning entropy, as this will provide a more convenient link with ideas elsewhere in this book. In this case, the entropy is measured in units of \u2018nats\u2019 instead of bits, which differ simply by a factor of ln 2. We have introduced the concept of entropy in terms of the average amount of information needed to specify the state of a random variable. In fact, the concept of entropy has much earlier origins in physics where it was introduced in the context of equilibrium thermodynamics and later given a deeper interpretation as a measure of disorder through developments in statistical mechanics.\n\nWe can understand this alternative view of entropy by considering a set of N identical objects that are to be divided amongst a set of bins, such that there are ni objects in the ith bin. Consider the number of different ways of allocating the objects to the bins", "4e2fbdf6-0d7c-4561-9850-4f407a1e1397": "A positive \u03b4 means that the action was \u2018good\u2019 because it led to a state with a better-than-expected value; a negative \u03b4 means that the action was \u2018bad\u2019 because it led to a state with a worse-than-expected value. Based on these critiques, the actor continually updates its policy. Two distinctive features of actor\u2013critic algorithms are responsible for thinking that the brain might implement an algorithm like this. First, the two components of an actor\u2013critic algorithm\u2014the actor and the critic\u2014suggest that two parts of the striatum\u2014the dorsal and ventral subdivisions (Section 15.4), both critical for reward-based learning\u2014may function respectively something like an actor and a critic.\n\nA second property of actor\u2013 critic algorithms that suggests a brain implementation is that the TD error has the dual role of being the reinforcement signal for both the actor and the critic, though it has a di\u21b5erent in\ufb02uence on learning in each of these components", "d74b8277-df97-4ca7-af92-bf9560dabd2f": "Data for this problem is generated by sampling a variable x uniformly over the interval (0, 1), to give a set of values {xn}, and the corresponding target values tn are obtained by computing the function xn + 0.3 sin(2\u03c0xn) and then adding uniform noise over the interval (\u22120.1, 0.1). The inverse problem is then obtained by keeping the same data points but exchanging the roles of x and t. Figure 5.19 shows the data sets for the forward and inverse problems, along with the results of \ufb01tting two-layer neural networks having 6 hidden units and a single linear output unit by minimizing a sumof-squares error function. Least squares corresponds to maximum likelihood under a Gaussian assumption. We see that this leads to a very poor model for the highly non-Gaussian inverse problem. We therefore seek a general framework for modelling conditional probability distributions. This can be achieved by using a mixture model for p(t|x) in which both the mixing coef\ufb01cients as well as the component densities are \ufb02exible functions of the input vector x, giving rise to the mixture density network", "9bcb1e92-cd8f-4c57-84e0-5e85ac858add": "While intellectually appealing, this model is challenging to make work in practice, and usually does not perform as well as a classifier as traditional convolutional networks trained with supervised learning.\n\nMany convolutional models work equally well with inputs of many different  \u2019The publication describes the model as a \u201cdeep belief network,\u201d but because it can be described as a purely undirected model with tractable layer-wise mean field fixed-point updates, it best fits the definition of a deep Boltzmann machine. 680  CHAPTER 20. DEEP GENERATIVE MODELS  spatial sizes. For Boltzmann machines, it is difficult to change the input size for various reasons. The partition function changes as the size of the input changes. Moreover, many convolutional networks achieve size invariance by scaling up the size of their pooling regions proportional to the size of the input, but scaling Boltzmann machine pooling regions is awkward. Traditional convolutional neural networks can use a fixed number of pooling units and dynamically increase the size of their pooling regions to obtain a fixed-size representation of a variably sized input. For Boltzmann machines, large pooling regions become too expensive for the naive approach", "ecf7d35e-2150-4b36-a7bf-5bd9ffb3da2a": "In practice, we have to \ufb01nd the joint angles that will give rise to a desired end effector position and, as shown in the right \ufb01gure, this inverse kinematics has two solutions corresponding to \u2018elbow up\u2019 and \u2018elbow down\u2019. We see that \u03c0j is therefore driven towards the average posterior probability for component j. The goal of supervised learning is to model a conditional distribution p(t|x), which for many simple regression problems is chosen to be Gaussian. However, practical machine learning problems can often have signi\ufb01cantly non-Gaussian distributions.\n\nThese can arise, for example, with inverse problems in which the distribution can be multimodal, in which case the Gaussian assumption can lead to very poor predictions. As a simple example of an inverse problem, consider the kinematics of a robot arm, as illustrated in Figure 5.18. The forward problem involves \ufb01nding the end efExercise 5.33 fector position given the joint angles and has a unique solution. However, in practice we wish to move the end effector of the robot to a speci\ufb01c position, and to do this we must set appropriate joint angles", "99f37c57-b3d2-487f-93bf-1a0d018d5582": "Because of this, the \ufb01rst episode was exactly the same (about 1700 steps) for all values of n, and its data are not shown in the \ufb01gure. After the \ufb01rst episode, performance improved for all values of n, but much more rapidly for larger values. Recall that the n = 0 agent is a nonplanning agent, using only direct reinforcement learning (one-step tabular Q-learning). This was by far the slowest agent on this problem, despite the fact that the parameter values (\u21b5 and \") were optimized for it. The nonplanning agent took about 25 episodes to reach (\"-)optimal performance, whereas the n = 5 agent took about \ufb01ve episodes, and the n = 50 agent took only three episodes. the nonplanning agent.\n\nShown are the policies found by the n = 0 and n = 50 agents halfway through the second episode. Without planning (n = 0), each episode adds only one additional step to the policy, and so only one step (the last) has been learned so far. With planning, again only one step is learned during the \ufb01rst episode, but here during the second episode an extensive policy has been developed that by the end of the episode will reach almost back to the start state", "9c7de3e9-3dc4-42ae-8ab4-241016f20286": "Practical Methods of Optimization (Second ed.). Wiley. Forsyth, D. A. and J. Ponce . Computer Vision: A Modern Approach. Prentice Hall. Freund, Y. and R. E. Schapire . Experiments with a new boosting algorithm. In L. Saitta (Ed. ), Thirteenth International Conference on Machine Learning, pp. 148\u2013156. Morgan Kaufmann. Frey, B. J. and D. J. C. MacKay . A revolution: Belief propagation in graphs with cycles.\n\nIn M. I. Jordan, M. J. Kearns, and S. A. Solla (Eds. ), Advances in Neural Information Processing Systems, Volume 10. MIT Press. Friedman, J. H", "f48218cc-57d0-4db9-a660-621f29ce9654": "Informally, this follows from the fact that in a space of dimension D, the additional computational cost of evaluating a gradient compared with evaluating the function itself will typically be a \ufb01xed factor independent of D, whereas the D-dimensional gradient vector conveys D pieces of information compared with the one piece of information given by the function itself. As we discussed in the previous section, for a nonzero step size \u03f5, the discretization of the leapfrog algorithm will introduce errors into the integration of the Hamiltonian dynamical equations. Hybrid Monte Carlo  combines Hamiltonian dynamics with the Metropolis algorithm and thereby removes any bias associated with the discretization. Speci\ufb01cally, the algorithm uses a Markov chain consisting of alternate stochastic updates of the momentum variable r and Hamiltonian dynamical updates using the leapfrog algorithm.\n\nAfter each application of the leapfrog algorithm, the resulting candidate state is accepted or rejected according to the Metropolis criterion based on the value of the Hamiltonian H", "70bdcdfb-a108-4e90-9e4a-7710654246ec": "Finally, we use (10.208) to evaluate the approximation to the model evidence, given by Examples factor approximations for the clutter problem with a one-dimensional parameter space \u03b8 are shown in Figure 10.16. Note that the factor approximations can have in\ufb01nite or even negative values for the \u2018variance\u2019 parameter vn. This simply corresponds to approximations that curve upwards instead of downwards and are not necessarily problematic provided the overall approximate posterior q(\u03b8) has positive variance. Figure 10.17 compares the performance of EP with variational Bayes (mean \ufb01eld theory) and the Laplace approximation on the clutter problem. So far in our general discussion of EP, we have allowed the factors fi(\u03b8) in the distribution p(\u03b8) to be functions of all of the components of \u03b8, and similarly for the approximating factors \ufffdf(\u03b8) in the approximating distribution q(\u03b8). We now consider situations in which the factors depend only on subsets of the variables.\n\nSuch restrictions can be conveniently expressed using the framework of probabilistic graphical models, as discussed in Chapter 8. Here we use a factor graph representation because this encompasses both directed and undirected graphs. the clutter problem", "b4677848-6889-48df-af22-d07eed114755": "Given a set of samples {x;})_,, le  corresponding covariance matrix:  X; and \u00a5 be the transformed samples and  1x 1x w= 2 x; & NW Do Ht) | (x; \u2014 #) & =(xi-pW S=W'SW=TI thusd  (wo')'w  If we get SVD decomposition of \u00a7 = UAUT, we willhave W~-! = /AU'T and W = UV A-!. https://lilianweng.github.io/posts/2021-05-31-contrastive/     Contrastive Representation Learning | Lil'Log  Note that within SVD, U is an or\u2019 diagonal matrix with all positive  A dimensionality reduction strat  Whitening -k.  thogonal matrix with column vectors as eigenvectors and A is a elements as sorted eigenvalues", "e0334e97-3adc-4bb2-b12c-7dd7e1ed8518": "(13.23)  i=d+1  Hence, if the covariance has rank d, the eigenvalues A441 to Ap are 0 and recon- struction error is 0. 496  https://www.deeplearningbook.org/contents/linear_factors.html    CHAPTER 13, LINEAR FACTOR MODELS. Figure 13.3: Flat Gaussian capturing probability concentration near a low-dimensional manifold. The figure shows the upper half of the \u201cpancake\u201d above the \u201cmanifold plane,\u201d which goes through its middle. The variance in the direction orthogonal to the manifold is very small (arrow pointing out of plane) and can be considered \u201cnoise,\u201d while the other variances are large (arrows in the plane) and correspond to \u201csignal\u201d and to a coordinate  system for the reduced-dimension data. 497    https://www.deeplearningbook.org/contents/linear_factors.html   CHAPTER 13. LINEAR FACTOR MODELS  Furthermore, one can also show that the above solution can be obtained by maximizing the variances of the elements of h, under orthogonal W, instead of minimizing reconstruction error", "8afcf7cf-3dfa-4a91-b2ef-eea898db876b": "An Empirical Survey of Data Augmentation for Limited Data Learning in NLP NLP has achieved great progress in the past decade through the use of neural models and large labeled datasets. The dependence on abundant data prevents NLP models from being applied to low-resource settings or novel tasks where signi\ufb01cant time, money, or expertise is required to label massive amounts of textual data. Recently, data augmentation methods have been explored as a means of improving data ef\ufb01ciency in NLP. To date, there has been no systematic empirical overview of data augmentation for NLP in the limited labeled data setting, making it dif\ufb01cult to understand which methods work in which settings. In this paper, we provide an empirical survey of recent progress on data augmentation for NLP in the limited labeled data setting, summarizing the landscape of methods (including token-level augmentations, sentencelevel augmentations, adversarial augmentations and hidden-space augmentations) and carrying out experiments on 11 datasets covering topics/news classi\ufb01cation, inference tasks, paraphrasing tasks, and single-sentence tasks. Based on the results, we draw several conclusions to help practitioners choose appropriate augmentations in different settings and discuss the current challenges and future directions for limited data learning in NLP", "614877ad-b372-4e4b-a865-aa430b296f24": "It achieved a reward-per-step of only about 1, compared with the best possible of about 1.55 on this testbed. The greedy method performed signi\ufb01cantly worse in the long run because it often got stuck performing suboptimal actions. The lower graph shows that the greedy method found the optimal action in only approximately one-third of the tasks. In the other two-thirds, its initial samples of the optimal action were disappointing, and it never returned to it. The \"-greedy methods eventually performed better because they continued to explore and to improve their chances of recognizing the optimal action. The \" = 0.1 method explored more, and usually found the optimal action earlier, but it never selected that action more than 91% of the time.\n\nThe \" = 0.01 method improved more slowly, but eventually would perform better than the \" = 0.1 method on both performance measures shown in the \ufb01gure. It is also possible to reduce \" over time to try to get the best of both high and low values. The advantage of \"-greedy over greedy methods depends on the task. For example, suppose the reward variance had been larger, say 10 instead of 1", "2fcb83ec-9226-4070-9151-a4462de8cd8c": "One limitation of decision trees is that the division of input space is based on hard splits in which only one model is responsible for making predictions for any given value of the input variables. The decision process can be softened by moving to a probabilistic framework for combining models, as discussed in Section 14.5.\n\nFor example, if we have a set of K models for a conditional distribution p(t|x, k) where x is the input variable, t is the target variable, and k = 1, . , K indexes the model, then we can form a probabilistic mixture of the form in which \u03c0k(x) = p(k|x) represent the input-dependent mixing coef\ufb01cients. Such models can be viewed as mixture distributions in which the component densities, as well as the mixing coef\ufb01cients, are conditioned on the input variables and are known as mixtures of experts. They are closely related to the mixture density network model discussed in Section 5.6. It is important to distinguish between model combination methods and Bayesian model averaging, as the two are often confused. To understand the difference, consider the example of density estimation using a mixture of Gaussians in which several Section 9.2 Gaussian components are combined probabilistically", "abf6b191-272d-43bf-8ba9-3da8081f9a43": "Ratio matching consists of minimizing the average over  https://www.deeplearningbook.org/contents/partition.html    CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  examples of the following objective function:  2 / \u201c 1 LM), @) > 1 Pmodel(\u00aei9) _\u2014 J\u201d (18.26) j=1 Pmodel (f(#,3);4)  where f(a, 7) returns x with the bit at position j flipped. Ratio matching avoids he partition function using the same trick as the pseudolikelihood estimator: in a ratio of two probabilities, the partition function cancels out. Marlin et al. found that ratio matching outperforms SML, pseudolikelihood and GSM in terms of the ability of models trained with ratio matching to denoise test set images. Like the pseudolikelihood estimator, ratio matching requires n evaluations of p per data point, making its computational cost per update roughly n times higher chan that of SML. As with the pseudolikelihood estimator, ratio matching can be thought of as pushing down on all fantasy states that have only one variable different from a raining example", "d300b90f-cee5-4d99-9d66-be2c658492fb": "Purely linear models, like logistic regression, are not able to resist adversarial examples because they are forced to be linear. Neural networks are able to represent functions that can range  https://www.deeplearningbook.org/contents/regularization.html    rom nearly linear to nearly locally constant and thus have the flexibility to capture inear trends in the training data while still learning to resist local perturbation. Adversarial examples also provide a means of accomplishing semi-supervised learning. At a point x that is not associated with a label in the dataset, the model itself assigns some label gy. The model\u2019s label Y may not be the true label, but if the model is high quality, then y has a high probability of providing the rue label. We can seek an adversarial example a that causes the classifier to output a label y/ with y\u2019 4 g. Adversarial examples generated using not the true  label but a label provided by a trained model are called virtual adversarial examples", "90ed6020-c3c1-42ad-b075-63e79aa53e7d": "MACHINE LEARNING BASICS  5.10 Building a Machine Learning Algorithm  Nearly all deep learning algorithms can be described as particular instances of a fairly simple recipe: combine a specification of a dataset, a cost function, an optimization procedure and a model.\n\nFor example, the linear regression algorithm combines a dataset consisting of X and y, the cost function  J(w, b) = \u2014Exy~Baata log Pmodel (Y | x), (5.100)  the model specification pode (y |e) = NV (y; zlwt b, 1), and, in most cases, the optimization algorithm defined by solving for where the gradient of the cost is zero using the normal equations. By realizing that we can replace any of these components mostly independently from the others, we can obtain a wide range of algorithms. The cost function typically includes at least one term that causes the learning process to perform statistical estimation. The most common cost function is the negative log-likelihood, so that minimizing the cost function causes maximum ikelihood estimation. The cost function may also include additional terms, such as regularization erms", "9033c5ff-c462-43e7-a9f4-2f5622911deb": "User embeddings and item embeddings can then be conveniently visualized when they are first reduced to a low dimension (two or three), or they can be used to compare users or items against each other, just like word embeddings. One way to obtain these embeddings is by performing a singular value decomposition of the matrix R of actual targets (such as ratings).\n\nThis corresponds to factorizing R = UDV\u2019 (or a normalized variant) into the product of two factors, the lower rank matrices A = UD and B = V\u2019. One problem with the SVD is that it treats the missing entries in an arbitrary way, as if they corresponded to a target value of 0. Instead we would like to avoid  474  https://www.deeplearningbook.org/contents/applications.html    CHAPTER +42\u2014APPHEICAFIONS  paying any cost for the predictions made on missing entries. Fortunately, the sum of squared errors on the observed ratings can also be easily minimized by gradient- based optimization", "0fee7664-5882-4cf2-bc8c-0e2dcc74c6fb": "A feature map is a pattern of activity over an array of units, where each unit performs the same operation on data in its receptive \ufb01eld, which is the part of the data it \u201csees\u201d from the preceding layer (or from the external input in the case of the \ufb01rst convolutional layer). The units of a feature map are identical to one another except that their receptive \ufb01elds, which are all the same size and shape, are shifted to di\u21b5erent locations on the arrays of incoming data. Units in the same feature map share the same weights. This means that a feature map detects the same feature no matter where it is located in the input array.\n\nIn the network in Figure 9.15, for example, the \ufb01rst convolutional layer produces 6 feature maps, each consisting of 28 \u21e5 28 units. Each unit in each feature map has a 5 \u21e5 5 receptive \ufb01eld, and these receptive \ufb01elds overlap (in this case by four columns and four rows). Consequently, each of the 6 feature maps is speci\ufb01ed by just 25 adjustable weights. The subsampling layers of a deep convolutional network reduce the spatial resolution of the feature maps", "39863e79-80bf-4a80-8378-c1859066b4eb": "Consider the regression setting, where we wish to train  https://www.deeplearningbook.org/contents/regularization.html    a function 9 (2) that maps a set of features \u00a9 to a scalar using the least-squares cost function between the model predictions j(a) and the true values y:  J =Ep(xy)  . This form of regularization encourages the parameters to go to regions of parameter space where small perturbations of the weights have a relatively small influence on the output. In other words, it pushes the model into regions where the model is relatively insensitive to small variations in the weights, finding points that are not merely minima, but minima surrounded by flat regions .\n\nIn the simplified case of linear regression (where, for instance, \u00a7(x) = wa +), this regularization term collapses  into NEp(z) , which is not a function of parameters and therefore does not  contribute to the gradient of Jw with respect to the model parameters. 7.5.1 Injecting Noise at the Output Targets  Most datasets have some number of mistakes in the y labels. It can be harmful to maximize log p(y | x) when y is a mistake", "dc76bf0a-08e3-41e1-b4b2-434b742b060d": "For better or worse, the second edition is about twice as large as the \ufb01rst. This book is designed to be used as the primary text for a one- or two-semester course on reinforcement learning.\n\nFor a one-semester course, the \ufb01rst ten chapters should be covered in order and form a good core, to which can be added material from the other chapters, from other books such as Bertsekas and Tsitsiklis , Wiering and van Otterlo , and Szepesv\u00b4ari , or from the literature, according to taste. Depending of the students\u2019 background, some additional material on online supervised learning may be helpful. The ideas of options and option models are a natural addition . A two-semester course can cover all the chapters as well as supplementary material. The book can also be used as part of broader courses on machine learning, arti\ufb01cial intelligence, or neural networks. In this case, it may be desirable to cover only a subset of the material. We recommend covering Chapter 1 for a brief overview, Chapter 2 through Section 2.4, Chapter 3, and then selecting sections from the remaining chapters according to time and interests", "ff5273b6-ac12-48a0-b110-b7888edfbe4a": "Hiett, Andreas Badelt, Jay Ponte, Joe Beck, Justus Piater, Martha Steenstrup, Satinder Singh, Tommi Jaakkola, Dimitri Bertsekas, Torbj\u00a8orn Ekman, Christina Bj\u00a8orkman, Jakob Carlstr\u00a8om, and Olle Palmgren. Finally, we thank Gwyn Mitchell for helping in many ways, and Harry Stanton and Bob Prior for being our champions at MIT Press. Capital letters are used for random variables, whereas lower case letters are used for the values of random variables and for scalar functions. Quantities that are required to be real-valued vectors are written in bold and in lower case (even if random variables). Matrices are bold capitals. The idea that we learn by interacting with our environment is probably the \ufb01rst to occur to us when we think about the nature of learning", "e8ec6c79-a288-42ac-b368-264cda2f0fc2": "Although the experimental rats did not appear to learn much during the \ufb01rst, unrewarded, stage, as soon as they discovered the food that was introduced in the second stage, they rapidly caught up with the rats in the control group. It was concluded that \u201cduring the non-reward period, the rats  were developing a latent learning of the maze which they were able to utilize as soon as reward was introduced\u201d . Latent learning is most closely associated with the psychologist Edward Tolman, who interpreted this result, and others like it, as showing that animals could learn a \u201ccognitive map of the environment\u201d in the absence of rewards or penalties, and that they could use the map later when they were motivated to reach a goal . A cognitive map could also allow a rat to plan a route to the goal that was di\u21b5erent from the route the rat had used in its initial exploration. Explanations of results like these led to the enduring controversy lying at the heart of the behaviorist/cognitive dichotomy in psychology.\n\nIn modern terms, cognitive maps are not restricted to models of spatial layouts but are more generally environment models, or models of an animal\u2019s \u201ctask space\u201d", "424e688c-a469-466c-80d0-ae8a76e4a329": "The approach we explore, called reinforcement learning, is much more focused on goal-directed learning from interaction than are other approaches to machine learning. Reinforcement learning is learning what to do\u2014how to map situations to actions\u2014so as to maximize a numerical reward signal.\n\nThe learner is not told which actions to take, but instead must discover which actions yield the most reward by trying them. In the most interesting and challenging cases, actions may a\u21b5ect not only the immediate 1The relationships to psychology and neuroscience are summarized in Chapters 14 and 15. reward but also the next situation and, through that, all subsequent rewards. These two characteristics\u2014trial-and-error search and delayed reward\u2014are the two most important distinguishing features of reinforcement learning. Reinforcement learning, like many topics whose names end with \u201cing,\u201d such as machine learning and mountaineering, is simultaneously a problem, a class of solution methods that work well on the problem, and the \ufb01eld that studies this problem and its solution methods. It is convenient to use a single name for all three things, but at the same time essential to keep the three conceptually separate. In particular, the distinction between problems and solution methods is very important in reinforcement learning; failing to make this distinction is the source of many confusions", "350dc4c7-7177-4468-a23d-71128b78fb5f": "These approximate values are close to the global minimum of the VE (9.1). Some of the details of the approximate values are best appreciated by reference to the state distribution \u00b5 for this task, shown in the lower portion of the \ufb01gure with a right-side scale. State 500, in the center, is the \ufb01rst state of every episode, but is rarely visited again. On average, about 1.37% of the time steps are spent in the start state. The states reachable in one step from the start state are the second most visited, with about 0.17% of the time steps being spent in each of them. From there \u00b5 falls o\u21b5 almost linearly, reaching about 0.0147% at the extreme states 1 and 1000.\n\nThe most visible e\u21b5ect of the distribution is on the leftmost groups, whose values are clearly shifted higher than the unweighted average of the true values of states within the group, and on the rightmost groups, whose values are clearly shifted lower. This is due to the states in these areas having the greatest asymmetry in their weightings by \u00b5. For example, in the leftmost group, state 100 is weighted more than 3 times more strongly than state 1", "2caa4ead-b9be-4f9e-ac83-e4803b36c479": "However, we then have to compensate for the effects of our modi\ufb01cations to the training data. Suppose we have used such a modi\ufb01ed data set and found models for the posterior probabilities. From Bayes\u2019 theorem (1.82), we see that the posterior probabilities are proportional to the prior probabilities, which we can interpret as the fractions of points in each class. We can therefore simply take the posterior probabilities obtained from our arti\ufb01cially balanced data set and \ufb01rst divide by the class fractions in that data set and then multiply by the class fractions in the population to which we wish to apply the model.\n\nFinally, we need to normalize to ensure that the new posterior probabilities sum to one. Note that this procedure cannot be applied if we have learned a discriminant function directly instead of determining posterior probabilities. Combining models. For complex applications, we may wish to break the problem into a number of smaller subproblems each of which can be tackled by a separate module. For example, in our hypothetical medical diagnosis problem, we may have information available from, say, blood tests as well as X-ray images", "8b5ee54c-7f4c-461c-a16f-02cf3fea0bda": "Curran Associates, Inc., 2016. Alfred M\u00a8uller. Integral probability metrics and their generating classes of functions. Advances in Applied Probability, 29(2):429\u2013443, 1997. Radford M. Neal. Annealed importance sampling. Statistics and Computing, 11(2):125\u2013139, April 2001. Sebastian Nowozin, Botond Cseke, and Ryota Tomioka. f-gan: Training generative neural samplers using variational divergence minimization. pages 271\u2013279, 2016. Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation learning with deep convolutional generative adversarial networks. CoRR, abs/1511.06434, 2015. Aaditya Ramdas, Sashank J. Reddi, Barnabas Poczos, Aarti Singh, and Larry Wasserman.\n\nOn the high-dimensional power of linear-time kernel two-sample testing under mean-di\ufb00erence alternatives. Corr, abs/1411.6314, 2014", "6ccc0029-cf1b-44bd-9456-6efe5af11223": "It is unclear how to generalize this to the setting of energy-based models. We could introduce a binary pooling unit p over n binary detector units d and enforce p = max; d; by setting the energy function to be co whenever that constraint is violated. This does not scale well though, as it requires evaluating 2\u201d different energy configurations to compute the normalization constant. For a small 3 x 3 pooling region this requires 29 = 512 energy function evaluations per pooling unit! Lee et al. developed a solution to this problem called probabilistic max pooling (not to be confused with \u201cstochastic pooling,\u201d which is a technique for implicitly constructing ensembles of convolutional feedforward networks). The strategy behind probabilistic max pooling is to constrain the detector units so at most one may be active at a time. This means there are only n+ 1 total states (one state for each of the n detector units being on, and an additional state corresponding to all the detector units being off). The pooling unit is on if and only if one of the detector units is on", "26e55edd-3ae4-4797-b8fd-acfb21cc5d46": "\u21e4 2.1 Bandit problems have been studied in statistics, engineering, and psychology. In statistics, bandit problems fall under the heading \u201csequential design of experiments,\u201d introduced by Thompson  and Robbins , and studied by Bellman . Berry and Fristedt  provide an extensive treatment of bandit problems from the perspective of statistics.\n\nNarendra and Thathachar  treat bandit problems from the engineering perspective, providing a good discussion of the various theoretical traditions that have focused on them. In psychology, bandit problems have played roles in statistical learning theory . The term greedy is often used in the heuristic search literature . The con\ufb02ict between exploration and exploitation is known in control engineering as the con\ufb02ict between identi\ufb01cation (or estimation) and control . Feldbaum  called it the dual control problem, referring to the need to solve the two problems of identi\ufb01cation and control simultaneously when trying to control a system under uncertainty. In discussing aspects of genetic algorithms, Holland  emphasized the importance of this con\ufb02ict, referring to it as the con\ufb02ict between the need to exploit and the need for new information. 2.2 Action-value methods for our k-armed bandit problem were \ufb01rst proposed by Thathachar and Sastry . These are often called estimator algorithms in the learning automata literature", "e8d5581b-f8cf-444c-bf8d-33e2c2ad842d": "With these conventions, the three \ufb01rst sequences described in the previous paragraph can be given explicitly: The online \u03bb-return algorithm is fully online, determining a new weight vector wt at each step t during an episode, using only information available at time t. Its main drawback is that it is computationally complex, passing over the portion of the episode experienced so far on every step. Note that it is strictly more complex than the o\u270fine \u03bb-return algorithm, which passes through all the steps at the time of termination but does not make any updates during the episode.\n\nIn return, the online algorithm can be expected to perform better than the o\u270fine one, not only during the episode when it makes an update while the o\u270fine algorithm makes none, but also at the end of the episode because updates. This e\u21b5ect can be seen if one looks carefully at Figure 12.8, which compares the two algorithms on the 19-state random walk task. The online \u03bb-return algorithm just presented is currently the best performing temporaldi\u21b5erence algorithm. It is an ideal which online TD(\u03bb) only approximates. As presented, however, the online \u03bb-return algorithm is very complex", "5fb26e74-5596-4a95-a202-bf21e2b4b184": "Mean field inference is also intractable because the variational lower bound involves taking expectations of cliques that encompass entire layers. This problem has remained difficult enough to restrict the popularity of directed discrete networks. https://www.deeplearningbook.org/contents/generative_models.html    One approach tor pertorming interence in a sigmoid beliet network is to con- struct a different lower bound that is specialized for sigmoid belief networks . This approach has only been applied to very small networks. Another approach is to use learned inference mechanisms as described in section 19.5. The Helmholtz machine  is a sigmoid belief network combined with an inference network that predicts the parame- ters of the mean field distribution over the hidden units. Modern approaches  to sigmoid belief networks still use this inference network approach.\n\nThese techniques remain difficult because of the discrete nature of the latent variables. One cannot simply back-propagate through the output of the inference network, but instead must use the relatively unreliable machinery for back-propagating through discrete sampling processes, as described in section 20.9.1", "85698c9a-1ad0-4abe-a5a9-fcf84ade1119": "With the dynamic experience, a learning procedure, using the special case of SE in Equation 3.2, can be written as: Here the SE governs the optimization of the target model p\u03b8 given the updated experience at each \u03c4. We discuss in more detail the SE with dynamic experience (Section 6.1) and other dynamic components (Section 6.2), which further recovers several well-known algorithms in existing learning paradigms. 6.1. Dynamic Experience. The experience can change over time due to di\ufb00erent reasons. For example, the experience can involve optimization, often together with the target model, resulting in a bi-level optimization scheme (Section 6.1.1); or alternatively, the experience may just come from the environment sequentially with an unknown dynamic (Section 6.1.2). 6.1.1. Variational Experience With Optimization", "48d1ddf1-5639-4795-95de-6ffd9cd71cc0": "Finally, show that the binomial distribution is normalized, so that which can be done by \ufb01rst pulling out a factor (1 \u2212 \u00b5)N out of the summation and then making use of the binomial theorem. 2.4 (\u22c6 \u22c6) Show that the mean of the binomial distribution is given by (2.11). To do this, differentiate both sides of the normalization condition (2.264) with respect to \u00b5 and then rearrange to obtain an expression for the mean of n. Similarly, by differentiating (2.264) twice with respect to \u00b5 and making use of the result (2.11) for the mean of the binomial distribution prove the result (2.12) for the variance of the binomial. From the de\ufb01nition (1.141) of the gamma function, we have Use this expression to prove (2.265) as follows", "5e87870f-31ca-4807-a860-91902235d899": "This provides a geometric argument to explain the generalization power of distributed representation: with O(nd) parameters (for n linear threshold features in R4, we can distinctly represent O(n*) regions in input space.\n\nIf instead we made no assumption at all about the data, and used a representation with one unique symbol for each region, and separate parameters for each symbol to recognize its  Potentially, we may want to learn a function whose behavior is distinct in exponentially many regions: in a d-dimensional space with at least 2 different values to distinguish per dimension, we might want f to differ in 27 different regions, requiring O(2%) training examples. 548  https://www.deeplearningbook.org/contents/representation.html    CHAPTER 15. REPRESENTATION LEARNING  corresponding portion of R\u00a2, then specifying O(n*) regions would require O(n\u00ae) examples. More generally, the argument in favor of the distributed representation could be extended to the case where instead of using linear threshold units we use nonlinear, possibly continuous, feature extractors for each of the attributes in the distributed representation", "51afa798-110c-44f4-891d-07a74dcfb49b": "The second theorem says that any symmetric real matrix S is positive de\ufb01nite if all of its diagonal entries are positive and greater than the sum of the absolute values of the corresponding o\u21b5-diagonal entries (Varga 1962, p. 23). For our key matrix, D(I \u2212 \u03b3P), the diagonal entries are positive and the o\u21b5-diagonal entries are negative, so all we have to show is that each row sum plus the corresponding column sum is positive. The row sums are all positive because P is a stochastic matrix and \u03b3 < 1. Thus it only remains to show that the column sums are nonnegative.\n\nNote that the row vector of the column sums of any matrix M can be written as 1>M, where 1 is the column vector with all components equal to 1. Let \u00b5 denote the |S|-vector of the \u00b5(s), where \u00b5 = P>\u00b5 by virtue of \u00b5 being the stationary distribution. The column sums of our key matrix, then, are: all components of which are positive. Thus, the key matrix and its A matrix are positive de\ufb01nite, and on-policy TD(0) is stable", "6e4605e6-6f5d-42f0-aeb9-034e4acb5a1b": "CONVOLUTIONAL NETWORKS  reduction in the input size can also result in improved statistical efficiency and reduced memory requirements for storing the parameters. For many tasks, pooling is essential for handling inputs of varying size. For example, if we want to classify images of variable size, the input to the classification layer must have a fixed size. This is usually accomplished by varying the size of an offset between pooling regions so that the classification layer always receives the same number of summary statistics regardless of the input size. For example, the final pooling layer of the network may be defined to output four sets of summary statistics, one for each quadrant of an image, regardless of the image size. Some theoretical work gives guidance as to which kinds of pooling one should use in various situations .\n\nIt is also possible to dynamically pool features together, for example, by running a clustering algorithm on the locations of interesting features . This approach yields a different set of pooling regions for each image. Another approach is to learn a single pooling structure that is then applied to all images . Pooling can complicate some kinds of neural network architectures that use top-down information, such as Boltzmann machines and autoencoders", "22bc72c3-a2b3-4683-98d6-fc11fc9b15f5": "), Models of Information Processing in the Basal Ganglia, pp. 187\u2013214. MIT Press, Cambridge, MA. Widrow, B., Gupta, N. K., Maitra, S. Punish/reward: Learning with a critic in adaptive threshold systems. IEEE Transactions on Systems, Man, and Cybernetics, 3(5):455\u2013465. Widrow, B., Ho\u21b5, M. E. .\n\nAdaptive switching circuits. In 1960 WESCON Convention Record Part IV, pp. 96\u2013104. Institute of Radio Engineers, New York. Reprinted in J. A. Anderson and E. Rosenfeld, Neurocomputing: Foundations of Research, pp. 126\u2013134. MIT Press, Cambridge, MA, 1988. Widrow, B., Stearns, S. D. Adaptive Signal Processing. Prentice-Hall, Englewood Cli\u21b5s, Wiener, N", "cebe76b0-3008-45f4-8e79-b7b343788128": "However, we are doing so with the opposite di- rection of the KL divergence than we are used to using for fitting an approximation.\n\nWhen we use maximum likelihood learning to fit a model to data, we minimize Dx (Paata||Pmodel)- As illustrated in figure 3.6, this means that maximum likelihood encourages the model to have high probability everywhere that the data has high probability, while our optimization-based inference procedure encourages q to have low probability everywhere the true posterior has low probability. Both directions of the KL divergence can have desirable and undesirable properties. The choice of which to use depends on which properties are the highest priority for each applica- tion. In the inference optimization problem, we choose to use Dxr(q( ) (  v)) for computational reasons. Specifically, computing Der (q( daly \\|p) ADF  vIn hla  https://www.deeplearningbook.org/contents/inference.html    volves evaluating expectations with respect to 7, so by designin g'to be simple, we can simplify the required expectations. The opposite direction of the KL divergence would require computing expectations with respect to the true posterior", "c2d0ea88-d67c-4ca7-8931-64e027e3ecd3": "In the context of deep learning, it is rare to compute a single second derivative of a scalar function. Instead, we are usually interested in properties of the Hessian matrix. If we have a function f : RR\u201d \u2014 R, then the Hessian matrix is of size n x n. In typical deep learning applications, n will be the number of parameters in the model, which could easily number in the billions. The entire Hessian matrix is thus infeasible to even represent. Instead of explicitly computing the Hessian, the typical deep learning approach is to use Krylov methods. Krylov methods are a set of iterative techniques for performing various operations, such as approximately inverting a matrix or finding approximations to its eigenvectors or eigenvalues, without using any operation other than matrix-vector products. To use Krylov methods on the Hessian, we only need to be able to com- pute the product between the Hessian matrix H and an arbitrary vector v", "bffff813-28d1-4290-9b1c-27539075e188": "Also show that in the M step, the initial probability and transition probability parameters are re-estimated using modi\ufb01ed forms of (13.18 ) and (13.19) given by where, for notational convenience, we have assumed that the sequences are of the same length (the generalization to sequences of different lengths is straightforward).\n\nSimilarly, show that the M-step equation for re-estimation of the means of Gaussian emission models is given by Note that the M-step equations for other emission model parameters and distributions take an analogous form. 13.13 (\u22c6 \u22c6) www Use the de\ufb01nition (8.64) of the messages passed from a factor node to a variable node in a factor graph, together with the expression (13.6) for the joint distribution in a hidden Markov model, to show that the de\ufb01nition (13.50) of the alpha message is the same as the de\ufb01nition (13.34). 13.14 (\u22c6 \u22c6) Use the de\ufb01nition (8.67) of the messages passed from a factor node to a variable node in a factor graph, together with the expression (13.6) for the joint distribution in a hidden Markov model, to show that the de\ufb01nition (13.52) of the beta message is the same as the de\ufb01nition (13.35)", "02cec2a8-ca65-4ca5-9e9c-84d38350fceb": "We can actually interpret the singular value decomposition of A in terms of the eigendecomposition of functions of A. The left-singular vectors of A are the eigenvectors of AA\u2019. The right-singular vectors of A are the eigenvectors of A! A. The nonzero singular values of A are the square roots of the eigenvalues of A! A. The same is true for AA\u2019.\n\nPerhaps the most useful feature of the SVD is that we can use it to partially generalize matrix inversion to nonsquare matrices, as we will see in the next section. 2.9 'The Moore-Penrose Pseudoinverse  Matrix inversion is not defined for matrices that are not square. Suppose we want to make a left-inverse B of a matrix A so that we can solve a linear equation  https://www.deeplearningbook.org/contents/linear_algebra.html    Ar=y (2.44) by left-multiplying each side to obtain x= By. (2.45) 43  CHAPTER 2", "66cc38b5-9aa9-46b5-b2d2-4009d26532ae": "Deep learning is a crucial component of modern speech recognition systems used at major companies, including Microsoft, IBM and Google . e Machine translation: In a machine translation task, the input already consists of a sequence of symbols in some language, and the computer program must convert this into a sequence of symbols in another language. This is commonly applied to natural languages, such as translating from English to French. Deep learning has recently begun to have an important impact on this kind of task . https://www.deeplearningbook.org/contents/ml.html    e Structured output: Structured output tasks involve any task where the output is a vector (or other data structure containing multiple values) with important relationships between the different elements. This is a broad  category and subsumes the transcription and translation tasks described above, as well as many other tasks.\n\nOne example is parsing\u2014mapping a natural language sentence into a tree that describes its grammatical structure by tagging nodes of the trees as being verbs, nouns, adverbs, and so on. See Collobert  for an example of deep learning applied to a parsing task", "64244b4a-4415-4a44-b155-991ba8cad037": "They derive specific values of the scaling factor for different types of nonlinear activation functions. This initialization scheme is also motivated by a model of a deep network as a sequence of matrix multiplies without nonlinearities. 299  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  Under such a model, this initialization scheme guarantees that the total number of training iterations required to reach convergence is independent of depth.\n\nIncreasing the scaling factor g pushes the network toward the regime where activations increase in norm as they propagate forward through the network and gradients increase in norm as they propagate backward. Sussillo  showed that setting the gain factor correctly is sufficient to train networks as deep as 1,000 layers, without needing to use orthogonal initializations. A key insight of this approach is that in feedforward networks, activations and gradients can grow or shrink on each step of forward or back-propagation, following a random walk behavior. This is because feedforward networks use a different weight matrix at each layer", "603cf3d0-45df-4aec-936f-c7406d5ee735": "Many regularization approaches are based on limiting the capacity of models, such as neural networks, linear regression, or logistic regression, by adding a pa- rameter norm penalty 2(@) to the objective function J. We denote the regularized objective function by J:  J(0;X,y) = J(O;X,y) + a6), (7.1)  where a \u20ac [0, 00) is a hyperparameter that weights the relative contribution of the norm penalty term, Q, relative to the standard objective function J. Setting a to 0 results in no regularization. Larger values of a correspond to more regularization.\n\nWhen our training algorithm minimizes the regularized objective function J it will decrease both the original objective J on the training data and some measure of the size of the parameters @ (or some subset of the parameters). Different choices for the parameter norm ( can result in different solutions being preferred. In this section, we discuss the effects of the various norms when used as penalties on the model parameters", "ce7562d9-8acf-4418-bb2c-d040140c6c32": "used DQN to show how a reinforcement learning agent can achieve a high level of performance on any of a collection of di\u21b5erent problems without having to use di\u21b5erent problem-speci\ufb01c feature sets. To demonstrate this, they let DQN learn to play 49 di\u21b5erent Atari 2600 video games by interacting with a game emulator.\n\nDQN learned a di\u21b5erent policy for each of the 49 games (because the weights of its ANN were reset to random values before learning on each game), but it used the same raw input, network architecture, and parameter values (e.g., step size, discount rate, exploration parameters, and many more speci\ufb01c to the implementation) for all the games. DQN achieved levels of play at or beyond human level on a large fraction of these games. Although the games were alike in being played by watching streams of video images, they varied widely in other respects. Their actions had di\u21b5erent e\u21b5ects, they had di\u21b5erent state-transition dynamics, and they needed di\u21b5erent policies for learning high scores. The deep convolutional ANN learned to transform the raw input common to all the games into features specialized for representing the action values required for playing at the high level DQN achieved for most of the games", "c52fb7da-f03a-4d7a-a801-ff16165cc08c": "Another elegant feature ofthe EM approach is that we can take the limit a 2 ----t 0, corresponding to standard PCA, and still obtain a valid EM-like algorithm . From (12.55), we see that the only quantity we need to compute in the Estep is JE. Furthermore, the M step is simplifie~ because M = WTW. To emphasize the simplicity of the algorithm, let us define X to be a matrix of size N x D whose nth row is given by the vector X n - x and similarly define 0 to be a matrix of size D x M whose nth row is given by the vector JE. The Estep (12.54) of the EM algorithm for PCA then becomes Again these can be implemented in an on-line form. These equations have a simple interpretation as follows. From our earlier discussion, we see that the E step involves an orthogonal projection of the data points onto the current estimate for the principal subspace. Correspondingly, the M step represents a re-estimation of the principal Fig\".", "ebf83eff-611c-482f-a6ef-b19986b27f94": "Barto, Sutton, and Watkins  argued that ANNs can play signi\ufb01cant roles for approximating functions required for solving sequential decision problems. Williams  related REINFORCE learning rules (Section 13.3) to the error backpropagation method for training multi-layer ANNs. Tesauro\u2019s TD-Gammon (Tesauro 1992, 1994; Section 16.1) in\ufb02uentially demonstrated the learning abilities of TD(\u03bb) algorithm with function approximation by multi-layer ANNs in learning to play backgammon.\n\nThe AlphaGo, AlphaGo Zero, and AlphaZero programs of Silver et al. (2016, 2017a, b; Section 16.6) used reinforcement learning with deep convolutional ANNs in achieving impressive results with the game of Go. Schmidhuber  reviews applications of ANNs in reinforcement learning, including applications of recurrent ANNs. 9.8 LSTD is due to Bradtke and Barto , and was further developed by Boyan , Nedi\u00b4c and Bertsekas , and Yu . The incremental update of the inverse matrix has been known at least since 1949", "c6784215-6b28-4d63-8599-041844da15cb": "How can we estimate the performance gradient with respect to the policy parameter when the gradient depends on the unknown e\u21b5ect of policy changes on the state distribution?\n\nFortunately, there is an excellent theoretical answer to this challenge in the form of the policy gradient theorem, which provides an analytic expression for the gradient of With just elementary calculus and re-arranging of terms, we can prove the policy gradient theorem from \ufb01rst principles. To keep the notation simple, we leave it implicit in all cases that \u21e1 is a function of \u2713, and all gradients are also implicitly with respect to \u2713. First note that the gradient of the state-value function can be written in terms of the action-value function as after repeated unrolling, where Pr(s ! x, k, \u21e1) is the probability of transitioning from state s to state x in k steps under policy \u21e1. It is then immediate that performance with respect to the policy parameter (which is what we need to approximate for gradient ascent (13.1)) that does not involve the derivative of the state distribution", "e6de87a2-0b00-43c4-8f6a-d1aafda8a92c": "The idea of implementing trial-and-error learning in a computer appeared among the earliest thoughts about the possibility of arti\ufb01cial intelligence. In a 1948 report, Alan Turing described a design for a \u201cpleasure-pain system\u201d that worked along the lines of the Law of E\u21b5ect: When a con\ufb01guration is reached for which the action is undetermined, a random choice for the missing data is made and the appropriate entry is made in the description, tentatively, and is applied. When a pain stimulus occurs all tentative entries are cancelled, and when a pleasure stimulus occurs they are all made permanent. Many ingenious electro-mechanical machines were constructed that demonstrated trialand-error learning. The earliest may have been a machine built by Thomas Ross  that was able to \ufb01nd its way through a simple maze and remember the path through the settings of switches. In 1951 W. Grey Walter built a version of his \u201cmechanical tortoise\u201d  capable of a simple form of learning. In 1952 Claude Shannon demonstrated a maze-running mouse named Theseus that used trial and error to \ufb01nd its way through a maze, with the maze itself remembering the successful directions via magnets and relays under its \ufb02oor . J.\n\nA", "de425c4d-1d6c-4fea-bd46-adf0c931abf4": "Abadi, M., Barham, P., Chen, J., Chen, Z., Davis, A., Dean, J., Devin, M., Ghemawat, S., Irving, G., Isard, M., et al. : TensorFlow: A system for large-scale machine learning. In: USENIX Symposium on Operating Systems Design and Implementation (OSDI)  2. Agrawala, A.K. : Learning with a probabilistic teacher. IEEE Trans. Infom. Theory 16, 373\u2013379  3. Alfonseca, E., Filippova, K., Delort, J.-Y., Garrido, G.: Pattern learning for relation extraction with a hierarchical topic model", "ce4c7e70-e911-4e1d-9ab5-52a96810eafe": "This feedback loop means that it is not straightforward to evaluate the learner\u2019s performance using a fixed set of test set input values. The policy itself determines which inputs will be seen. Dudik e\u00a2 al. present techniques for evaluating contextual bandits. 12.5.2 Knowledge Representation, Reasoning and Question Answering  https://www.deeplearningbook.org/contents/applications.html    Deep learning approaches have been very successful in language modeling, machine translation and natural language processing because of the use of embeddings for symbols (Rumelhart e\u00a2 al., SGA) and words .\n\nThese embeddings represent semantic knowledge about individual words  and concepts. A research frontier is to develop embeddings for phrases and for  ATT  CHAPTER 12. APPLICATIONS  relations between words and facts. Search engines already use machine learning for this purpose, but much more remains to be done to improve these more advanced representations. 12.5.2.1 Knowledge, Relations and Question Answering  One interesting research direction is determining how distributed representations can be trained to capture the relations between two entities. These relations allow us to formalize facts about objects and how objects interact with each other. In mathematics, a binary relation is a set of ordered pairs of objects", "e9be91c9-17ff-4979-9aab-4eab43f11e78": "Note that the use of convolution for processing variably sized inputs makes sense only for inputs that have variable size because they contain varying amounts of observation of the same kind of thing\u2014different lengths of recordings over time, different widths of observations over space, and so forth. Convolution does not make sense if the input has variable size because it can optionally include different kinds of observations. For example, if we are processing college applications, and our features consist of both grades and standardized test scores, but not every applicant took the standardized test, then it does not make sense to convolve the same weights over features corresponding to the grades as well as the features  354  CHAPTER 9. CONVOLUTIONAL NETWORKS  Single channel  Multichannel  1-D | Audio waveform: The axis we | Skeleton animation data: Anima- convolve over corresponds to | tions of 3-D computer-rendered time. We discretize time and | characters are generated by alter- measure the amplitude of the | ing the pose of a \u201cskeleton\u201d over waveform once per time step. time", "d62be48c-b065-40bc-9e3e-0a12ee67710d": "What is an \"independent\" political party in the United States, the U.S. political party, and the United computers: This essay discusses how you can build a new browser to view and share your favorite web sites.\\n\\n\\n A browser that is open source can also be built from a web browser, which can be a browser that does not allow browser extensions (e.g. Firefox, Chrome, Opera space: This essay discusses how you can build a life with a healthy diet and how you can use it when you\u2019re ready to move forward.\n\nIt\u2019s a very simple approach to building a life with a healthy diet and what it means to be healthy and healthy for the religion: This essay discusses how you can build a new game without having to play the original game, and how you can make a new title that is completely different to the original. It has been around since 2007, when the \ufb01rst game, The Elder Scrolls IV: Oblivion, was released in the PlayStation science: This essay discusses how we can build on previous research \ufb01ndings about the role of obesity in human metabolism and how we can improve our health.\\n\\n\\n\\n In this essay, we explore why eating a whole whole diet does not help prevent obesity (1)", "478b580a-8514-45c7-8280-9c722ceffb34": "In this model  g=w' a+b, (5.13)  so the mapping from parameters to predictions is still a linear function but the mapping from features to predictions is now an affine function. This extension to  5 Linear regression example 0.55 Optimization of w \u00a9 0) 2 0.50 1 2 0.45 & 0.40 > 0 = a 0.35 -1 = 0.30 -2 0.25 ~3 0.20 \u20141.0 -05 00 05 1.0 0.5 1.0 1.5 xy WI  Figure 5.1: A linear regression problem, with a training set consisting of ten data points, each containing one feature. Because there is only one feature, the weight vector w contains only a single parameter to learn, w1.\n\n(Left)Observe that linear regression learns to set wy such that the line y = w;x comes as close as possible to passing through all the training points. (Right)The plotted point indicates the value of w1 found by the normal equations, which we can see minimizes the mean squared error on the training set. 107  https://www.deeplearningbook.org/contents/ml.html    CHAPTER 5", "0a754b83-fffd-4d70-9699-d1d3f774da44": "These concepts are illustrated by the undirected graph over four variables shown in Figure 8.29. This graph has \ufb01ve cliques of two nodes given by {x1, x2}, {x2, x3}, {x3, x4}, {x4, x2}, and {x1, x3}, as well as two maximal cliques given by {x1, x2, x3} and {x2, x3, x4}. The set {x1, x2, x3, x4} is not a clique because of the missing link from x1 to x4. We can therefore de\ufb01ne the factors in the decomposition of the joint distribution to be functions of the variables in the cliques. In fact, we can consider functions of the maximal cliques, without loss of generality, because other cliques must be subsets of maximal cliques. Thus, if {x1, x2, x3} is a maximal clique and we de\ufb01ne an arbitrary function over this clique, then including another factor de\ufb01ned over a subset of these variables would be redundant", "bdd4b5f1-af7c-4243-99c0-5d681cc1c127": "We therefore consider the general problem of minimizing KL(p\u2225q) when Section 10.7 q(Z) is a factorized approximation of the form (10.5). The KL divergence can then be written in the form where the constant term is simply the entropy of p(Z) and so does not depend on q(Z). We can now optimize with respect to each of the factors qj(Zj), which is easily done using a Lagrange multiplier to give Exercise 10.3 In this case, we \ufb01nd that the optimal solution for qj(Zj) is just given by the corresponding marginal distribution of p(Z). Note that this is a closed-form solution and so does not require iteration. To apply this result to the illustrative example of a Gaussian distribution p(z) over a vector z we can use (2.98), which gives the result shown in Figure 10.2(b).\n\nWe see that once again the mean of the approximation is correct, but that it places signi\ufb01cant probability mass in regions of variable space that have very low probability", "fefc8e61-c5fe-4dc3-aae0-d3ed77bb5607": "Using the standard result E = aN/bN for the mean of a gamma distribution, together with Appendix B Then, using (10.26) and (10.27), we obtain the \ufb01rst and second order moments of We can now substitute these moments into (10.31) and then solve for E to give Exercise 10.9 We recognize the right-hand side as the familiar unbiased estimator for the variance of a univariate Gaussian distribution, and so we see that the use of a Bayesian approach has avoided the bias of the maximum likelihood solution. Section 1.2.4 As well as performing inference over the hidden variables Z, we may also wish to compare a set of candidate models, labelled by the index m, and having prior probabilities p(m). Our goal is then to approximate the posterior probabilities p(m|X), where X is the observed data", "7eb74b8b-4b08-47a7-8428-18ffda549da2": "Recall that we made an analogous interpretation for the Dirichlet prior. These distributions Section 2.2 are examples of the exponential family, and we shall see that the interpretation of a conjugate prior in terms of effective \ufb01ctitious data points is a general one for the exponential family of distributions. Instead of working with the precision, we can consider the variance itself.\n\nThe conjugate prior in this case is called the inverse gamma distribution, although we shall not discuss this further because we will \ufb01nd it more convenient to work with the precision. Now suppose that both the mean and the precision are unknown. To \ufb01nd a conjugate prior, we consider the dependence of the likelihood function on \u00b5 and \u03bb We now wish to identify a prior distribution p(\u00b5, \u03bb) that has the same functional dependence on \u00b5 and \u03bb as the likelihood function and that should therefore take the form where c, d, and \u03b2 are constants. Since we can always write p(\u00b5, \u03bb) = p(\u00b5|\u03bb)p(\u03bb), we can \ufb01nd p(\u00b5|\u03bb) and p(\u03bb) by inspection", "e55e6066-3e17-4095-9b2f-b12a28a81b78": "If we take the derivative with respect to the parameter vector w of the contribution to the error function from a data point n, this takes the form of the \u2018error\u2019 yn \u2212 tn times the feature vector \u03c6n, where yn = wT\u03c6n. Similarly, for the combination of the logistic sigmoid activation function and the cross-entropy error function (4.90), and for the softmax activation function with the multiclass cross-entropy error function (4.108), we again obtain this same simple form.\n\nWe now show that this is a general result of assuming a conditional distribution for the target variable from the exponential family, along with a corresponding choice for the activation function known as the canonical link function. We again make use of the restricted form (4.84) of exponential family distributions. Note that here we are applying the assumption of exponential family distribution to the target variable t, in contrast to Section 4.2.4 where we applied it to the input vector x", "b865e654-4fb8-4e9e-b70a-ad9d5721906f": "Then the environment responds with a transition to the next state\u2019s node via one of the arrows leaving action node (s, a). Each arrow corresponds to a triple (s, s0, a), where s0 is the next state, and we label the arrow with the transition probability, p(s0|s, a), and the expected reward for that transition, r(s, a, s0). Note that the transition probabilities labeling the arrows leaving an action node always sum to 1. In reinforcement learning, the purpose or goal of the agent is formalized in terms of a special signal, called the reward, passing from the environment to the agent.\n\nAt each time step, the reward is a simple number, Rt 2 R. Informally, the agent\u2019s goal is to maximize the total amount of reward it receives. This means maximizing not immediate reward, but cumulative reward in the long run. We can clearly state this informal idea as the reward hypothesis: That all of what we mean by goals and purposes can be well thought of as the maximization of the expected value of the cumulative sum of a received scalar signal (called reward)", "8ec050fd-444d-4a10-939e-4faaa750cae2": "The regularizer pulls w; close to zero. In the second dimension, the objective function is very sensitive to movements away from w*. The corresponding eigenvalue is large, indicating high curvature. As a result, weight decay affects the position ofw2 relatively little. 229  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  Only directions along which the parameters contribute significantly to reducing the objective function are preserved relatively intact.\n\nIn directions that do not contribute to reducing the objective function, a small eigenvalue of the Hessian tells us that movement in this direction will not significantly increase the gradient. Components of the weight vector corresponding to such unimportant directions are decayed away through the use of the regularization throughout training. So far we have discussed weight decay in terms of its effect on the optimization of an abstract, general quadratic cost function. How do these effects relate to machine learning in particular? We can find out by studying linear regression, a model for which the true cost function is quadratic and therefore amenable to the same kind of analysis we have used so far", "b2f9aed7-a8fc-4eba-85b7-f6f60533f52b": "Recall that linear semi-gradient TD methods are e\ufb03cient and stable when trained under the on-policy distribution, and that we showed in Section 9.4 that this has to do with the positive de\ufb01niteness of the matrix A (9.11)4 and the match between the on-policy state distribution \u00b5\u21e1 and the state-transition probabilities p(s|s, a) under the target policy. In o\u21b5-policy learning, we reweight the state transitions using importance sampling so that they become appropriate for learning about the target policy, but the state distribution is still that of the behavior policy. There is a mismatch. A natural idea is to somehow reweight the states, emphasizing some and de-emphasizing others, so as to return the distribution of updates to the on-policy distribution. There would then be a match, and stability and convergence would follow from existing results.\n\nThis is the idea of 4In the o\u21b5-policy case, the matrix A is generally de\ufb01ned as Es\u21e0b Emphatic-TD methods, \ufb01rst introduced for on-policy training in Section 9.11", "afb07fde-10a1-41b7-aa09-f180ad062085": "showed that if the autoencoder p(x | X) forms a consistent estimator of the corresponding true conditional distribution, then the stationary distribution of the above Markov chain forms a consistent estimator (albeit an implicit one) of the data-generating distribution of x.\n\n20.11.2 Clamping and Conditional Sampling  https://www.deeplearningbook.org/contents/generative_models.html    Similarly to Boltzmann machines, denoising autoencoders and their generalizations such as GSNs, described below) can be used to sample from a conditional distri- bution p(xf| Xo), simply by clamping the observed units x, and only resampling he free units xf given x, and the sampled latent variables (if any). For example, MP-DBMs can be interpreted as a form of denoising autoencoder and are able o sample missing inputs. GSNs later generalized some of the ideas present in MP-DBMs to perform the same operation . Alain et al. identified a missing condition from Proposition 1 of Bengio et al", "67f1d90e-a6c1-4743-bd2a-3919d1539a81": "We know from the form of the normalized Gaussian given by (2.43), that this coef\ufb01cient is independent of the mean and depends only on the determinant of the covariance matrix. Thus, by completing the square with respect to xb, we can integrate out xb and the only term remaining from the contributions on the left-hand side of (2.84) that depends on xa is the last term on the right-hand side of (2.84) in which m is given by (2.85). Combining this term with the remaining terms from where \u2018const\u2019 denotes quantities independent of xa.\n\nAgain, by comparison with (2.71), we see that the covariance of the marginal distribution of p(xa) is given by Thus we obtain the intuitively satisfying result that the marginal distribution p(xa) has mean and covariance given by We see that for a marginal distribution, the mean and covariance are most simply expressed in terms of the partitioned covariance matrix, in contrast to the conditional distribution for which the partitioned precision matrix gives rise to simpler expressions. Our results for the marginal and conditional distributions of a partitioned Gaussian are summarized below", "46461e62-477f-4ee6-b78d-aa1ef19c45cb": "In this work, we present a simple framework and its instantiation for contrastive visual representation learning. We carefully study its components, and show the effects of different design choices. By combining our \ufb01ndings, we improve considerably over previous methods for selfsupervised, semi-supervised, and transfer learning. Our approach differs from standard supervised learning on ImageNet only in the choice of data augmentation, the use of a nonlinear head at the end of the network, and the loss function. The strength of this simple framework suggests that, despite a recent surge in interest, self-supervised learning remains undervalued.\n\nWe would like to thank Xiaohua Zhai, Rafael M\u00fcller and Yani Ioannou for their feedback on the draft. We are also grateful for general support from Google Research teams in Toronto and elsewhere. Asano, Y. M., Rupprecht, C., and Vedaldi, A. A critical analysis of self-supervision, or what we can learn from a single image. arXiv preprint arXiv:1904.13132, 2019. Bachman, P., Hjelm, R. D., and Buchwalter, W", "b0ad87f7-72cd-462d-8127-0008f04af50a": "view representation projection prediction  Given an image x, the BYOL loss is constructed as follows:  Create two augmented views: v = t(x); v\u2019 = t'(x) with augmentations sampled tr T,tvT'  \u00abThen they are encoded into representations, yg = fa(v),y\u2019 = fe(v\u2019); Then they are projected into latent variables, zg = go(yo), 2\u2019 = ge(y\u2019); The online network outputs a prediction g9(z9);  Both qg(z9) and z\u2019 are L2-normalized, giving us Ge(z) = go(zo)/|go(zo)| and 2! = 2'/|z'|; BYOL 6  >The loss is MSE between L2-normalized prediction gg(z) and z\u2019;  can be generated by switching v\u2019 and v; that is, feeding v\u2019 to  The other symmetric loss LRrYoe  online network and v to target network. The final loss is Lpryoe + LRrYoe and only parameters 0 are optimized. Unlike most popular contrastive learning based approaches, BYOL does not use negative pairs", "63e125d1-c105-471c-8a60-8548d6c9c13f": "AutoAugment on discrete space    Model AutoAugment ARS-Aug Wide-ResNet-28-10 268 2.33 Shake-Shake (26 2 x 32 days) 247 2.14 Shake-Shake (26 2 x 96 days) 1.99 1.68 Shake-Shake (26 2 x 112 days) 1.89 1.59 AmoebaNet-B (6,128) 1.75 1.49 PyramidNet + ShakeDrop 1.48 1.26  trained with Reinforcement Learning augmentation search performs much better. On the CIFAR-10 dataset this results in 50.99% versus 70.06% accuracy when the models are evaluated on augmented test data. A disadvantage to meta-learning is that it is a relatively new concept and has not been heavily tested. Additionally, meta-learning schemes can be difficult and time-consuming to implement. Practitioners of meta-learning will have to solve problems primarily with  vanishing gradients , amongst others, to train these networks.\n\nShorten and Khoshgoftaar J Big Data  6:60   Comparing Augmentations  As shown throughout \u201cDesign considerations for image Data Augmentation\u201d section, possibilities for Data Augmentation", "084c1ae8-978a-41fd-b99c-fcb4f3e27114": "He spoke of the eternal con\ufb02ict between the promise and perils of any new knowledge, reminding us of the Greek myths of Prometheus, the hero of modern science, who stole \ufb01re from the gods for the bene\ufb01t of mankind, and Pandora, whose box could be opened by a small and innocent action to release untold perils on the world. While accepting that this con\ufb02ict is inevitable, Simon urged us to recognize that as designers of our future and not mere spectators, the decisions we make can tilt the scale in Prometheus\u2019 favor. This is certainly true for reinforcement learning, which can bene\ufb01t society but can also produce undesirable outcomes if it is carelessly deployed. Thus, the safety of arti\ufb01cial intelligence applications involving reinforcement learning is a topic that deserves careful attention.\n\nA reinforcement learning agent can learn by interacting with either the real world or with a simulation of some piece of the real world, or by a mixture of these two sources of experience. Simulators provide safe environments in which an agent can explore and learn without risking real damage to itself or to its environment. In most current applications, policies are learned from simulated experience instead of direct interaction with the real world", "389d1208-8021-48cd-a07d-2003ba50e4b7": "We shall also use \u03b3(znk) to denote the conditional probability of znk = 1, with a similar use of notation for \u03be(zn\u22121,j, znk) and for other probabilistic variables introduced later. Because the expectation of a binary random variable is just the probability that it takes the value 1, we have If we substitute the joint distribution p(X, Z|\u03b8) given by (13.10) into (13.12), and make use of the de\ufb01nitions of \u03b3 and \u03be , we obtain The goal of the E step will be to evaluate the quantities \u03b3(zn) and \u03be(zn\u22121, zn) ef\ufb01ciently, and we shall discuss this in detail shortly. In the M step, we maximize Q(\u03b8, \u03b8old) with respect to the parameters \u03b8 = {\u03c0, A, \u03c6} in which we treat \u03b3(zn) and \u03be(zn\u22121, zn) as constant.\n\nMaximization with respect to \u03c0 and A is easily achieved using appropriate Lagrange multipliers with the results Exercise 13.5 The EM algorithm must be initialized by choosing starting values for \u03c0 and A, which should of course respect the summation constraints associated with their probabilistic interpretation", "4a562317-8ad2-4ece-bb21-57e198f5db89": "We begin by considering the functional form of the network model, including the speci\ufb01c parameterization of the basis functions, and we then discuss the problem of determining the network parameters within a maximum likelihood framework, which involves the solution of a nonlinear optimization problem. This requires the evaluation of derivatives of the log likelihood function with respect to the network parameters, and we shall see how these can be obtained ef\ufb01ciently using the technique of error backpropagation. We shall also show how the backpropagation framework can be extended to allow other derivatives to be evaluated, such as the Jacobian and Hessian matrices. Next we discuss various approaches to regularization of neural network training and the relationships between them. We also consider some extensions to the neural network model, and in particular we describe a general framework for modelling conditional probability distributions known as mixture density networks. Finally, we discuss the use of Bayesian treatments of neural networks. Additional background on neural network models can be found in Bishop .\n\nThe linear models for regression and classi\ufb01cation discussed in Chapters 3 and 4, respectively, are based on linear combinations of \ufb01xed nonlinear basis functions \u03c6j(x) and take the form where f(\u00b7) is a nonlinear activation function in the case of classi\ufb01cation and is the identity in the case of regression", "190a12e8-7a78-443e-982e-32d624ca31f0": "A much more \ufb02exible model is obtained by using a multilevel gating function to give the hierarchical mixture of experts, or HME model . To understand the structure of this model, imagine a mixture distribution in which each component in the mixture is itself a mixture distribution. For simple unconditional mixtures, this hierarchical mixture is trivially equivalent to a single \ufb02at mixture distribution. However, when the mixing Exercise 14.17 coef\ufb01cients are input dependent, this hierarchical model becomes nontrivial. The HME model can also be viewed as a probabilistic version of decision trees discussed in Section 14.4 and can again be trained ef\ufb01ciently by maximum likelihood using an EM algorithm with IRLS in the M step. A Bayesian treatment of the HME has been Section 4.3.3 given by Bishop and Svens\u00b4en  based on variational inference. We shall not discuss the HME in detail here.\n\nHowever, it is worth pointing out the close connection with the mixture density network discussed in Section 5.6. The principal advantage of the mixtures of experts model is that it can be optimized by EM in which the M step for each mixture component and gating model involves a convex optimization (although the overall optimization is nonconvex)", "8c44f626-673f-4647-b8b7-742f59a15d12": "This suggests that it is part of a system that uses an environment model for planning. Reinforcement learning theory is also in\ufb02uencing thinking about neural processes underlying drug abuse. A model of some features of drug addiction is based on the reward prediction error hypothesis.\n\nIt proposes that an addicting stimulant, such as cocaine, destabilizes TD learning to produce unbounded growth in the values of actions associated with drug intake. This is far from a complete model of addiction, but it illustrates how a computational perspective suggests theories that can be tested with further research. The new \ufb01eld of computational psychiatry similarly focuses on the use of computational models, some derived from reinforcement learning, to better understand mental disorders. This chapter only touched the surface of how the neuroscience of reinforcement learning and the development of reinforcement learning in computer science and engineering have in\ufb02uenced one another. Most features of reinforcement learning algorithms owe their design to purely computational considerations, but some have been in\ufb02uenced by hypotheses about neural learning mechanisms. Remarkably, as experimental data has accumulated about the brain\u2019s reward processes, many of the purely computationallymotivated features of reinforcement learning algorithms are turning out to be consistent with neuroscience data", "4606f79c-b935-4517-8b95-2fdd74547841": "GTM: a principled alternative to the Self-Organizing Map. In M. C. Mozer, M. I. Jordan, and T. Petche (Eds. ), Advances in Neural Information Processing Systems, Volume 9, pp. 354\u2013360. MIT Press. Bishop, C. M., M. Svens\u00b4en, and C. K. I. Williams . Magni\ufb01cation factors for the GTM algorithm. In Proceedings IEE Fifth International Conference on Arti\ufb01cial Neural Networks, Cambridge, U.K., pp. 64\u201369. Institute of Electrical Engineers. Bishop, C. M., M. Svens\u00b4en, and C. K. I. Williams . GTM: the Generative Topographic Mapping. Neural Computation 10(1), 215\u2013234. Bishop, C. M. and M. E. Tipping", "38722701-52ee-4c5d-b55e-da5be5c9c527": "Any choice of sampling distribution gq is valid (in the sense of yielding the correct expected value), and q* is the optimal one (in the sense of yielding minimum variance). Sampling from q* is usually infeasible, but other choices of q can be feasible while still reducing the variance somewhat. 590  CHAPTER 17.\n\nMONTE CARLO METHODS  Another approach is to use biased importance sampling, which has the advantage of not requiring normalized p or q. In the case of discrete variables, the biased importance sampling estimator is given by  n p(w) ; Vie ee) f(a! )) \u00a7BIS = (17.14)  (17.15)  rn pla i et Fat) f(a = ne ; (17.16) =1 g(a)  where and g are the unnormalized forms of p and q, and the \u00ab are the samples from g. This estimator is biased because E 4 s, except asymptotically when nm \u2014 oo and the denominator of equation 17.14 converges to 1", "172f3720-8f45-4748-82f7-add696bc8cc5": "This probabilistic reformulation bring~ many ad\\'imlag~s, su~h as tl>l: use I)f EM for parameter eslimalion, rrinciple<J c~tensioos 10 Oli~turc, of PeA model\" and Ba)'~sian formulat;ons that allow tbe number of rrincipal com[>Oncnts to be detennined aUlOmatically from !be data. Finally'. \"c diSl;us< briefly \"\"'eral gencrali,ation, ofthe latent Yariable concept that g<l be~ood tbe linear-Gaussian assumption including non\u00b7Gau\"i\"n I.tcnt yariabies.....hich lea'\" to tbe fr.me....ork of indrl\"'mJ.m compon.nl anal,-.\n\n;., as ....ell a, S'di\"\" 12.4 models ha\"ing a nonlinear rclationship bet....een latent and oose\",e<J ,'lUiable,", "ffed57e7-34cc-4303-b19b-d77ee09223ab": "We can think of the lower layers in the hierarchy depicted in figure 10.13a as playing a role in transforming the raw input into a representation that is more appropriate, at the higher levels of the hidden state. Pascanu et al. go a step further and propose to have a separate MLP (possibly deep) for each of the three blocks enumerated above, as illustrated in figure 10.13b. Considerations of representational capacity suggest allocating enough capacity in each of these three steps, but doing so by adding depth may hurt learning by making optimization difficult. In general, it is easier to optimize shallower architectures, and adding the extra depth of figure 10.13b makes the shortest path from a variable in time step t to a variable in time step t+ 1 become longer. For example, if an MLP with a single hidden layer is used for the state-to-state transition, we have doubled the length of the shortest path between variables in any two different time steps, compared with the ordinary RNN of figure 10.3. However, as argued by Pascanu ef al", "9937ff28-38ef-4855-b090-e5dfd1e6c1ac": "They found that learning was not successful with this reward signal for episodes of realistic duration and that eligibility traces did not help. By experimenting with various reward signals, they found that learning was best with a reward signal that at each time step linearly combined the vertical wind velocity and vertical wind acceleration observed on the previous time step. Learning was by one-step Sarsa, with actions selected according to a soft-max distribution based on normalized action values.\n\nSpeci\ufb01cally, the action probabilities were computed according to (13.2) with action preferences: where \u2713 is a parameter vector with one component for each action and aggregated group of states, and \u02c6q(s, a, \u2713) merely returned the component corresponding to s, a in the usual way for state aggregation methods. The above equation forms the action preferences by normalizing the approximate action values to the interval  then dividing by \u2327, a positive \u201ctemperature parameter.\u201d3 As \u2327 increases, the probability of selecting an action becomes less dependent on its preference; as \u2327 decreases toward zero, the probability of selecting the most highly-preferred action approaches one, making the policy approach the greedy policy. The temperature parameter \u2327 was initialized to 2.0 and incrementally decreased to 0.2 during learning", "b525260a-9cd9-4799-a18a-3c1d773e349f": "Because the output log-likelihood can be computed efficiently (as low as log |V| rather than |V|), its gradients may also be computed efficiently. This includes not only the gradient with respect to the output parameters but also the gradients with respect to the hidden layer activations. It is possible but usually not practical to optimize the tree structure to minimize the expected number of computations. Tools from information theory specify how to choose the optimal binary code given the relative frequencies of the words. To do so, we could structure the tree so that the number of bits associated with a word is approximately equal to the logarithm of the frequency of that word.\n\nIn practice, however, the computational savings are typically not worth the effort because the computation of the output probabilities is only one part of the total computation in the neural language model. For example, suppose there are | fully connected hidden layers of width y,. Let np be the weighted average of the number  462  https://www.deeplearningbook.org/contents/applications.html    CHAPTER 12", "df72bc58-9ca3-47d7-ab74-a1e9362782c0": "5.23 (\u22c6 \u22c6) Extend the results of Section 5.4.5 for the exact Hessian of a two-layer network to include skip-layer connections that go directly from inputs to outputs. 5.24 (\u22c6) Verify that the network function de\ufb01ned by (5.113) and (5.114) is invariant under the transformation (5.115) applied to the inputs, provided the weights and biases are simultaneously transformed using (5.116) and (5.117). Similarly, show that the network outputs can be transformed according (5.118) by applying the transformation (5.119) and (5.120) to the second-layer weights and biases. where w\u22c6 represents the minimum, and the Hessian matrix H is positive de\ufb01nite and constant.\n\nSuppose the initial weight vector w(0) is chosen to be at the origin and is updated using simple gradient descent where \u03c4 denotes the step number, and \u03c1 is the learning rate (which is assumed to be small). Show that, after \u03c4 steps, the components of the weight vector parallel to the eigenvectors of H can be written Show that as \u03c4 \u2192 \u221e, this gives w(\u03c4) \u2192 w\u22c6 as expected, provided |1 \u2212 \u03c1\u03b7j| < 1", "8049bc32-6cc4-4161-9008-0866f2fe42b8": "In PSRs and related approaches, the semantics of the agent state is instead grounded in predictions about future observations and actions, which are readily observable.\n\nIn PSRs, a Markov state is de\ufb01ned as a d-vector of the probabilities of d specially chosen \u201ccore\u201d tests as de\ufb01ned above (17.6). The vector is then updated by a state-update function u that is analogous to Bayes rule, but with a semantics grounded in observable data, which arguably makes it easier to learn. This approach has been extended in many ways, including end-tests, compositional tests, powerful \u201cspectral\u201d methods, and closed-loop and temporally abstract tests learned by TD methods. Some of the best theoretical developments are for systems known as Observable Operator Models (OOMs) and Sequential Systems . The fourth and \ufb01nal step in our brief outline of how to handle partial observability in reinforcement learning is to re-introduce approximation. As discussed in the introduction to Part II, to approach arti\ufb01cial intelligence ambitiously one must embrace approximation. This is just as true for states as it is for value functions. We must accept and work with an approximate notion of state", "9ff795ee-dc39-4a9c-b994-085a4dbff632": "For instance in speech recognition, we might wish to \ufb01nd the most probable phoneme sequence for a given series of acoustic observations. Because the graph for the hidden Markov model is a directed tree, this problem can be solved exactly using the max-sum algorithm. We recall from our discussion in Section 8.4.5 that the problem of \ufb01nding the most probable sequence of latent states is not the same as that of \ufb01nding the set of states that are individually the most probable. The latter problem can be solved by \ufb01rst running the forward-backward (sum-product) algorithm to \ufb01nd the latent variable marginals \u03b3(zn) and then maximizing each of these individually . However, the set of such states will not, in general, correspond to the most probable sequence of states.\n\nIn fact, this set of states might even represent a sequence having zero probability, if it so happens that two successive states, which in isolation are individually the most probable, are such that the transition matrix element connecting them is zero. In practice, we are usually interested in \ufb01nding the most probable sequence of states, and this can be solved ef\ufb01ciently using the max-sum algorithm, which in the context of hidden Markov models is known as the Viterbi algorithm", "6c42e194-28c0-467e-be19-bb6a38750748": "Where do these intermediate distributions come from? Just as the original proposal distribution pp is a design choice, so is the sequence of distributions Pm +++Pyn\u20141- That is, it can be specifically constructed to suit the problem domain.\n\nOne general purpose and popular choice for the intermediate distributions is to use the weighted geometric average of the target distribution p; and the starting proposal distribution (for which the partition function is known) po:  Pn, XPi'py (18.50)  In order to sample from these intermediate distributions, we define a series of Markov chain transition functions T,, ,(a\u2019 | ) that define the conditional probability distribution of transitioning to x\u2019 given we are currently at 2. The transition operator T;,,(x\u2019 | #) is defined to leave p,, (a) invariant:  pry) = | my, (a!) | 1) da (18.51)  These transitions may be constructed as any Markov chain Monte Carlo method (e.g., Metropolis-Hastings, Gibbs), including methods involving multiple passes through all the random variables or other kinds of iterations. 624  CHAPTER 18", "b4c3676f-480b-4b12-a9fd-a1413aa2d4de": "7 . ' . \u2018 0.75 . \u2018 f a Oo \" ? es 3070 \u00a9 a a . 2 . iss a 065 \u00a9 a \u2018 7 : rs 0.60 . No augmentation sa * Aug. (train) 0.55 * \u00a9 Aug. (train + test) 0.50 125 500 1000 1500 2000 125 500 1000 1500 2000 125 500 1000 1500 2000 Inception-v4 ResNet-152 DenseNet-161 Dataset Length Fig. 32 Impact of test-time data augmentation for skin lesion classification   Perez et al. present a study on the effectiveness of test-time augmentation with many augmentation techniques. These augmentations tested include color augmen- tation, rotation, shearing, scaling, flipping, random cropping, random erasing, elastic, mixing, and combinations between the techniques. Table 9 shows the higher perfor- mance achieved when augmenting test images as well as training images", "fe6c677c-01e7-47a1-a465-aaa33a1f0778": "studied the effect of pretraining on machine learning models for chemical activity prediction and found that, on average, pretraining was  https://www.deeplearningbook.org/contents/representation.html       slightly harmful, but for many tasks was significantly helpful. Because unsupervised pretraining is sometimes helpful but often harmful, it is important to understand when and why it works in order to determine whether it is applicable to a particular  ask. At the outset, it is important to clarify that most of this discussion is restricted o greedy unsupervised pretraining in particular. There are other, completely different paradigms for performing semi-supervised learning with neural networks, such as virtual adversarial training, described in section 7.13. It is also possible to  rain an autoencoder or generative model at the same time as the supervised model. Examples of this single-stage approach include the discriminative RBM  and the ladder network , in which the total objective is an explicit sum of the two terms (one using the labels, and one only using the input). Unsupervised pretraining combines two different ideas", "da5e9f7c-4cf1-49c8-a46c-cc186edd4603": "We are given a joint distribution over observed data D and stochastic variables \u03b8 in the form of a product of factors We also wish to approximate the model evidence p(D). 1. Initialize all of the approximating factors \ufffdfi(\u03b8). 2. Initialize the posterior approximation by setting (b) Remove \ufffdfj(\u03b8) from the posterior by division (c) Evaluate the new posterior by setting the suf\ufb01cient statistics (moments) of qnew(\u03b8) equal to those of q\\j(\u03b8)fj(\u03b8), including evaluation of the normalization constant 4. Evaluate the approximation to the model evidence A special case of EP, known as assumed density \ufb01ltering (ADF) or moment matching , is obtained by initializing all of the approximating factors except the \ufb01rst to unity and then making one pass through the factors updating each of them once. Assumed density \ufb01ltering can be appropriate for on-line learning in which data points are arriving in a sequence and we need to learn from each data point and then discard it before considering the next point", "83a9b8ff-cdac-451d-82ca-826987c5053c": "It is also perhaps surprising that we are able to achieve such signi\ufb01cant improvements on top of models which are already quite large relative to the existing literature. For example, the largest Transformer explored in Vaswani et al. is (L=6, H=1024, A=16) with 100M parameters for the encoder, and the largest Transformer we have found in the literature is (L=64, H=512, A=2) with 235M parameters . By contrast, BERTBASE contains 110M parameters and BERTLARGE contains 340M parameters.\n\nIt has long been known that increasing the model size will lead to continual improvements on large-scale tasks such as machine translation and language modeling, which is demonstrated by the LM perplexity of held-out training data shown in Table 6. However, we believe that this is the \ufb01rst work to demonstrate convincingly that scaling to extreme model sizes also leads to large improvements on very small scale tasks, provided that the model has been suf\ufb01ciently pre-trained. Peters et al. presented mixed results on the downstream task impact of increasing the pre-trained bi-LM size from two to four layers and Melamud et al. mentioned in passing that increasing hidden dimension size from 200 to 600 helped, but increasing further to 1,000 did not bring further improvements", "be5cfe66-cdb9-437a-b19e-e9e793e8725c": "This is because for a transition from a reward-predicting state to another reward-predicting state, we have \u03b4t\u22121 = Rt + Vt \u2212 Vt\u22121 = 0 + R? \u2212 R? = 0, and for the transition from the latest reward-predicting state to the rewarding state, we have \u03b4t\u22121 = Rt +Vt \u2212Vt\u22121 = R? +0\u2212R? = 0. On the other hand, the TD error on a transition from any state to the earliest reward-predicting state is positive because of the mismatch between this state\u2019s low value and the larger value of the following reward-predicting state.\n\nIndeed, if the value of a state preceding the earliest reward-predicting state were zero, then after the transition to the earliest reward-predicting state, we would have that \u03b4t\u22121 = Rt + Vt \u2212 Vt\u22121 = 0 + R? \u2212 0 = R?. The \u2018learning complete\u2019 graph of \u03b4 in Figure 15.4 shows this positive value at the earliest reward-predicting state, and zeros everywhere else. The positive TD error upon transitioning to the earliest reward-predicting state is analogous to the persistence of dopamine responses to the earliest stimuli predicting reward", "984bdfef-fc6a-468e-8268-5e7867ea3312": "The number of points in column i, corresponding to X = xi, is denoted by ci, and the number of points in row j, corresponding to Y = yj, is denoted by rj. and the probability of selecting the blue box is 6/10. We write these probabilities as p(B = r) = 4/10 and p(B = b) = 6/10. Note that, by de\ufb01nition, probabilities must lie in the interval . Also, if the events are mutually exclusive and if they include all possible outcomes (for instance, in this example the box must be either red or blue), then we see that the probabilities for those events must sum to one.\n\nWe can now ask questions such as: \u201cwhat is the overall probability that the selection procedure will pick an apple?\u201d, or \u201cgiven that we have chosen an orange, what is the probability that the box we chose was the blue one?\u201d. We can answer questions such as these, and indeed much more complex questions associated with problems in pattern recognition, once we have equipped ourselves with the two elementary rules of probability, known as the sum rule and the product rule. Having obtained these rules, we shall then return to our boxes of fruit example", "d37a728c-f154-477d-9427-a79e136a2a00": "We need to keep track of up to 10 10 = 100 regions, and we need at least that gnany examples to cover all those regions. (Right)With three dimensions, this grows to 10 = 1,000 regions and at least that many examples. For d dimensions and v values to be distinguished along  each axis, we seem to need O( v4) regions and examples. This is an instance of the curse of dimensionality. Figure graciously provided by Nicolas Chapados. One challenge posed by the curse of dimensionality is a statistical challenge. As illustrated in figure 5.9, a statistical challenge arises because the number of possible configurations of x is much larger than the number of training examples.\n\nTo understand the issue, let us consider that the input space is organized into a grid, as in the figure. We can describe low-dimensional space with a small number of grid cells that are mostly occupied by the data. When generalizing to a new data point, we can usually tell what to do simply by inspecting the training examples that lie in the same cell as the new input", "bd023ab6-fb92-4449-b480-5885eedb400b": "left-hand plot shows the original distribution (yellow) along with the Laplace (red) and variational (green) approximations, and the right-hand plot shows the negative logarithms of the corresponding curves. However, we shall suppose the model is such that working with the true posterior distribution is intractable. We therefore consider instead a restricted family of distributions q(Z) and then seek the member of this family for which the KL divergence is minimized. Our goal is to restrict the family suf\ufb01ciently that they comprise only tractable distributions, while at the same time allowing the family to be suf\ufb01ciently rich and \ufb02exible that it can provide a good approximation to the true posterior distribution.\n\nIt is important to emphasize that the restriction is imposed purely to achieve tractability, and that subject to this requirement we should use as rich a family of approximating distributions as possible. In particular, there is no \u2018over-\ufb01tting\u2019 associated with highly \ufb02exible distributions. Using more \ufb02exible approximations simply allows us to approach the true posterior distribution more closely. One way to restrict the family of approximating distributions is to use a parametric distribution q(Z|\u03c9) governed by a set of parameters \u03c9", "a639aa45-c2a6-451e-a607-1d90fbdfc25a": "The equation S = k ln W is carved on Boltzmann\u2019s tombstone.\n\nThe constrained maximization can be performed using Lagrange multipliers so that Appendix E we maximize the following functional with respect to p(x) Using the calculus of variations, we set the derivative of this functional to zero giving Appendix D The Lagrange multipliers can be found by back substitution of this result into the three constraint equations, leading \ufb01nally to the result Exercise 1.34 and so the distribution that maximizes the differential entropy is the Gaussian. Note that we did not constrain the distribution to be nonnegative when we maximized the entropy. However, because the resulting distribution is indeed nonnegative, we see with hindsight that such a constraint is not necessary. If we evaluate the differential entropy of the Gaussian, we obtain Exercise 1.35 Thus we see again that the entropy increases as the distribution becomes broader, i.e., as \u03c32 increases. This result also shows that the differential entropy, unlike the discrete entropy, can be negative, because H(x) < 0 in (1.110) for \u03c32 < 1/(2\u03c0e)", "e848ffd2-4119-4d5b-bd4e-1935d504fb72": "The timing and shape of this CR is critical to its adaptive signi\ufb01cance\u2014covering the eye too early reduces vision (even though the nictitating membrane is translucent), while covering it too late is of little protective value. Capturing CR features like these is challenging for models of classical conditioning.\n\nThe TD model does not include as part of its de\ufb01nition any mechanism for translating the time course of the US prediction, \u02c6v(St,wt), into a pro\ufb01le that can be compared with the properties of an animal\u2019s CR. The simplest choice is to let the time course of a simulated CR equal the time course of the US prediction. In this case, features of simulated CRs and how they change over trials depend only on the stimulus representation chosen and the values of the model\u2019s parameters \u21b5, \u03b3, and \u03bb. occurred 25 time steps after the onset of the CS, and \u21b5 = .05, \u03bb = .95 and \u03b3 = .97. With the CSC representation (Figure 14.4 left), the curve of the US prediction formed by the TD model increases exponentially throughout the interval between the CS and the US until it reaches a maximum exactly when the US occurs (at time step 25)", "5471d01a-0886-40cc-b03d-dfae529cd77f": "Early stopping is also useful because it reduces the computational cost of the training procedure. Besides the obvious reduction in cost due to limiting the number of training iterations, it also has the benefit of providing regularization without requiring the addition of penalty terms to the cost function or the computation of the gradients of such additional terms. How early stopping acts as a regularizer: So far we have stated that early stopping is a regularization strategy, but we have supported this claim only by showing learning curves where the validation set error has a U-shaped curve. What  246  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  https://www.deeplearningbook.org/contents/regularization.html    wy  Figure 7.4: An illustration of the effect of early stopping. (Left)The solid contour lines indicate the contours of the negative log-likelihood. The dashed line indicates the trajectory taken by SGD beginning from the origin. Rather than stopping at the point w* that minimizes the cost, early stopping results in the trajectory stopping at an earlier point w. (Right)An illustration of the effect of L? regularization for comparison", "b008bd59-9c02-474f-b9a6-e6fc0380e455": "Different Computer Vision tasks require certain con- straints on the test-time augmentations that can be used. For example, image recogni- tion can easily aggregate predictions across warped images.\n\nHowever, it is difficult to aggregate predictions on geometrically transformed images in object detection and  semantic segmentation. Curriculum learning  Aside from the study of Data Augmentation, many researchers have been interested in trying to find a strategy for selecting training data that beats random selection. In the context of Data Augmentation, research has been published investigating the rela-  tionship between original and augmented data across training epochs. Some research   Shorten and Khoshgoftaar J Big Data  6:60   Table 10 Comparison of resolution across three very popular open-source image datasets  Dataset Resolution MNIST handwritten digits 28x 28x1 CIFAR-10/100 32x 32x 3 ImageNet 256 x 256 x 3  suggests that it is best to initially train with the original data only and then finish training with the original and augmented data, although there is no clear consensus. In the SamplePairing  study, one epoch on ImageNet and 100 epochs on other datasets are completed without SamplePairing before mixed image data is added to the training", "e79189c5-ab88-4705-95ac-d941014b2b7a": "All of these distributions are members of the exponential family and are widely used as building blocks for more sophisticated probabilistic models.\n\nThis is the distribution for a single binary variable x \u2208 {0, 1} representing, for example, the result of \ufb02ipping a coin. It is governed by a single continuous parameter \u00b5 \u2208  that represents the probability of x = 1. The Bernoulli is a special case of the binomial distribution for the case of a single observation. Its conjugate prior for \u00b5 is the beta distribution. This is a distribution over a continuous variable \u00b5 \u2208 , which is often used to represent the probability for some binary event. It is governed by two parameters a and b that are constrained by a > 0 and b > 0 to ensure that the distribution can be normalized. The beta is the conjugate prior for the Bernoulli distribution, for which a and b can be interpreted as the effective prior number of observations of x = 1 and x = 0, respectively. Its density is \ufb01nite if a \u2a7e 1 and b \u2a7e 1, otherwise there is a singularity at \u00b5 = 0 and/or \u00b5 = 1", "b4db1c0d-93ba-407c-92e9-87491999ae19": "Shorten and Khoshgoftaar J Big Data  6:60  55. 56. 93. 94,  95. Olaf R, Philipp F, Thomas B. U-Net: convolutional networks for biomedical image segmentation.\n\nIn: MICCAI. Springer; 2015, p. 234-41. Hessam B, Maxwell H, Mohammad R, Ali F. Label refinery: improving imagenet classification through label pro- gression. arXiv preprint. 2018. Francisco JM-B, Fiammetta S, Jose MJ, Daniel U, Leonardo F. Forward noise adjustment scheme for data augmen- tation. arXiv preprints. 2018. Dua D, Karra TE. UCI machine learning repository . Irvine, CA: University of California, School of Information and Computer Science; 2017. Ken C, Karen S, Andrea V, Andrew Z. Return of the devil in the details: delving deep into convolutional nets. In: Proceedings of BMVC", "023cb4be-5d80-4885-9f6b-efeb923bec02": "The phasic responses of these neurons had shifted from the reward itself to stimuli predicting the availability of the reward. In a followup study, Romo and Schultz found that most of the dopamine neurons whose activity they monitored did not respond to the sight and sound of the bin opening outside the context of the behavioral task. These observations suggested that the dopamine neurons were responding neither to the initiation of a movement nor to the sensory properties of the stimuli, but were rather signaling an expectation of reward.\n\nSchultz\u2019s group conducted many additional studies involving both SNpc and VTA dopamine neurons. A particular series of experiments was in\ufb02uential in suggesting that the phasic responses of dopamine neurons correspond to TD errors and not to simpler errors like those in the Rescorla\u2013Wagner model (14.3). In the \ufb01rst of these experiments , monkeys were trained to depress a lever after a light was illuminated as a \u2018trigger cue\u2019 to obtain a drop of apple juice. As Romo and Schultz had observed earlier, many dopamine neurons initially responded to the reward\u2014the drop of juice (Figure 15.2, top panel)", "b005e038-a267-43ed-a439-a41c2eada598": "Many regularization strategies have the advantage of allowing the user to control the strength of the regularization by adjusting the value of a single hyperparameter. Unsupervised pretraining does not offer a clear way to adjust the strength of the regularization arising from the unsupervised stage. Instead, there are very  531  CHAPTER 15. REPRESENTATION LEARNING  vv\u00a5y With pretraining  e@@ Without pretraining  https://www.deeplearningbook.org/contents/representation.html    \u2014500 \u20141000 Oe  500 \u20144000 \u20143000 \u20142000 \u20141000 0 1000 2000 3000 4000  Figure 15.1: Visualization via nonlinear projection of the learning trajectories of different neural networks in function space (not parameter space, to avoid the issue of many-to-one mappings from parameter vectors to functions), with different random initializations and with or without unsupervised pretraining. Each point corresponds to a different neural network at a particular time during its training process. This figure is adapted with permission from Erhan ei al. A coordinate in function space is an infinite- dimensional vector associating every input x with an output y", "45242168-786e-4f8b-954d-1bb082c775cf": "This means that an autoencoder with a single hidden layer is able to represent the identity function along the domain of the data arbitrarily well. However, the mapping from input to code is shallow. This means that we are not able to enforce arbitrary constraints, such as that the code should be sparse. A deep autoencoder, with at least one additional hidden layer inside the encoder itself, can approximate any mapping from input to code arbitrarily well, given enough hidden units. Depth can exponentially reduce the computational cost of representing some functions. Depth can also exponentially decrease the amount of training data needed to learn some functions. See section 6.4.1 for a review of the advantages of depth in feedforward networks", "ed041fc5-64ff-4ccb-b34a-71d4a8442468": "Despite these complications, aligning the classical/instrumental distinction with the prediction/control distinction is a convenient \ufb01rst approximation in connecting reinforcement learning to animal learning. In psychology, the term reinforcement is used to describe learning in both classical and instrumental conditioning. Originally referring only to the strengthening of a pattern of behavior, it is frequently also used for the weakening of a pattern of behavior. A stimulus considered to be the cause of the change in behavior is called a reinforcer, whether or not it is contingent on the animal\u2019s previous behavior.\n\nAt the end of this chapter we discuss this terminology in more detail and how it relates to terminology used in machine learning. While studying the activity of the digestive system, the celebrated Russian physiologist Ivan Pavlov found that an animal\u2019s innate responses to certain triggering stimuli can come to be triggered by other stimuli that are quite unrelated to the inborn triggers. His experimental subjects were dogs that had undergone minor surgery to allow the intensity of their salivary re\ufb02ex to be accurately measured. In one case he describes, the dog did not salivate under most circumstances, but about 5 seconds after being presented with food it produced about six drops of saliva over the next several seconds", "5ed39faf-e0c3-49ba-950e-e40548ca0a4f": "Satisfying this constraint requires some careful design effort. Suppose we were : a ta re ee hy onts  https://www.deeplearningbook.org/contents/mlp.html   LO USE a WNCar ULL ALG LLIPeSlold 1b8 Value LO ODLALLL aA VALIG PrOvDaDIILy: . T P(y=1| #) = max {0,min 1, ha oyy. (6.18)  This would indeed define a valid conditional distribution, but we would not be able to train it very effectively with gradient descent. Any time that w!h +b strayed  178  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  outside the unit interval, the gradient of the output of the model with respect to its parameters would be 0. A gradient of 0 is typically problematic because the learning algorithm no longer has a guide for how to improve the corresponding parameters. Instead, it is better to use a different approach that ensures there is always a strong gradient whenever the model has the wrong answer", "34a8f61f-af41-4b15-a2c4-094a87a45d9c": "softmax(x); (4.1)  There is still one small problem. Underflow in the numerator can still cause he expression as a whole to evaluate to zero. This means that if we implement og softmax(ax) by first running the softmax subroutine then passing the result to he log function, we could erroneously obtain \u2014oo. Instead, we must implement a separate function that calculates log softmax in a numerically stable way. The og softmax function can be stabilized using the same trick as we used to stabilize che softmax function. For the most part, we do not explicitly detail all the numerical considerations involved in implementing the various algorithms described in this book. Developers  https://www.deeplearningbook.org/contents/numerical.html    ot low-level libraries should keep numerical issues in mind when implementing deep learning algorithms.\n\nMost readers of this book can simply rely on low- level libraries that provide stable implementations. In some cases, it is possible to implement a new algorithm and have the new implementation automatically  79  CHAPTER 4. NUMERICAL COMPUTATION  stabilized", "1d1bcbd8-d9ad-42b5-91df-cd8e598da1ba": "(7.56) y  We can index into the family of submodels by element-wise multiplication of the input with a binary vector d:  P(y =y | v;d) = softmax (wa Ov)+ b) .\n\n(7.57) y  The ensemble predictor is defined by renormalizing the geometric mean over all ensemble members\u2019 predictions:  Pensemble(Y =Yy | v)  Pensemble(Y =Y | v) = ~ ; (7.58) Ly Pensemble(\u00a5 = y! | v) where PensemblelY =Y | v) = 9nr Il Ply =y | Vv; d)", "5926d2ba-179d-4891-9ba3-ce45dc23965d": "This has become a more pressing issue in recent years as deep learning has gained in popularity in industrial products, and as the great impact of faster hardware was demonstrated with GPUs. Another factor that motivates current research on specialized hardware for deep networks is that the rate of progress of a single CPU or GPU core has slowed down, and most recent improvements in  446  CHAPTER 12. APPLICATIONS  computing speed have come from parallelization across cores (either in CPUs or GPUs).\n\nThis is very different from the situation of the 1990s (the previous neural network era), when the hardware implementations of neural networks (which might take two years from inception to availability of a chip) could not keep up with the rapid progress and low prices of general-purpose CPUs. Building specialized hardware is thus a way to push the envelope further, at a time when new hardware designs are being developed for low-power devices such as phones, aiming for  https://www.deeplearningbook.org/contents/applications.html    general-public applications ot deep learning  suggests that between 8 and 16 bits of precision can suffice for using or training deep neural networks with back-propagation", "d7c7a079-b494-4e3f-875b-e2160f415867": "We develop a new RL formulation for text generation based on soft Q-learning and path consistency learning. We conduct experiments on learning with noisy and negative data, black box adversarial attack, prompting a pretrained language model for controllable generation, and standard supervised tasks. This formulation opens up new opportunities to integrate more advances made in the fertile RL literature to improve text generation problems. A well-documented limitation of RL methods is the importance of the reward function. The proposed methods are no different in this aspect. This is especially relevant as our reward function could involve a learned model itself, which we proactively leveraged in Sec. 4.2. We refer interested readers to Deng et al. for more algorithmic considerations.\n\nWe also noticed that adapting the pretraining-\ufb01netuning paradigm to the proposed methods requires careful designs. A hypothesis points to the discrepancy between MLE objectives (commonly used in pretraining context) and SQL objectives. As discussed in Sec. 3.1, the SQL formulation re-interprets the \u201clogit\u201d as the Q-value, for many good reasons", "2d8ffef9-9f90-4e01-9ac3-630e7ee31520": "Minimization with respect to h is fast because f(a) provides a good initial value of h, and the cost function constrains h to remain near f(a) anyway. Simple gradient descent can obtain reasonable values of h in as few as ten steps. The training procedure used by PSD is different from first training a sparse coding model and then training f(a) to predict the values of the sparse coding features. The PSD training procedure regularizes the decoder to use parameters for which f(a) can infer good code values. Predictive sparse coding is an example of learned approximate inference. In section 19.5, this topic is developed further. The tools presented in chapter 19 make it clear that PSD can be interpreted as training a directed sparse coding probabilistic model by maximizing a lower bound on the log-likelihood of the model. 521  CHAPTER 14. AUTOENCODERS  In practical applications of PSD, the iterative optimization is used only during training.\n\nThe parametric encoder f is used to compute the learned features when  https://www.deeplearningbook.org/contents/autoencoders.html    the model is deployed", "fee86717-22b0-4203-98ea-c93bbf3373fa": "The relationship between forward mode and backward mode is analogous to the relationship between left-multiplying versus right-multiplying a sequence of matrices, such as  ABCD, (6.58)  where the matrices can be thought of as Jacobian. For example, if D is a column vector while A has many rows, the graph will have a single output and many inputs, and starting the multiplications from the end and going backward requires only matrix-vector products. This order corresponds to the backward mode. Instead, starting to multiply from the left would involve a series of matrix-matrix products, which makes the whole computation much more expensive. If A has fewer rows than D has columns, however, it is cheaper to run the multiplications left-to-right, corresponding to the forward mode.\n\nIn many communities outside machine learning, it is more common to implement differentiation software that acts directly on traditional programming language code, such as Python or C code, and automatically generates programs that differentiate functions written in these languages. In the deep learning community, computational graphs are usually represented by explicit data structures created  https://www.deeplearningbook.org/contents/mlp.html    by specialized libraries", "7552f325-889b-4307-a2c7-11fc2d89d859": "Exercise 12.12 Show in detail the steps outlined above for deriving (12.29) from (12.27).\n\nStart with the update (12.15), substitute G\u03bba At \u03bb = 1, these algorithms become closely related to corresponding Monte Carlo algorithms. One might expect that an exact equivalence would hold for episodic problems and o\u270fine updating, but in fact the relationship is subtler and slightly weaker than that. Under these most favorable conditions still there is not an episode by episode equivalence of updates, only of their expectations. This should not be surprising as these methods make irrevocable updates as a trajectory unfolds, whereas true Monte Carlo methods would make no update for a trajectory if any action within it has zero probability under the target policy. In particular, all of these methods, even at \u03bb = 1, still bootstrap in the sense that their targets depend on the current value estimates\u2014it\u2019s just that the dependence cancels out in expected value. Whether this is a good or bad property in practice is another question. Recently, methods have been proposed that do achieve an exact equivalence", "1f4d39ca-ee04-4124-b9f4-84fc4c7fd3b5": "Here b is shaded to indicate that it is observed. Because observingb blocks the only path from a toc, we say that a and c are separated from each other given b. The observation of b also blocks one path between a and d, but there is a second, active path between them. Therefore, a and d are not separated given b.  path exists. In directed nets, determining whether a path is active is somewhat more complicated. See figure 16.8 for a guide to identifying active paths in a directed model. See figure 16.9 for an example of reading some properties from a graph. It is important to remember that separation and d-separation tell us only about those conditional independences that are implied by the graph. There is no requirement that the graph imply all independences that are present. In particular, it is always legitimate to use the complete graph (the graph with all possible edges) to represent any distribution. In fact, some distributions contain independences that are not possible to represent with existing graphical notation", "6e5c155e-cde0-4254-b33b-428627b0812b": "How can we perform ef\ufb01cient inference and learning in directed probabilistic models, in the presence of continuous latent variables with intractable posterior distributions, and large datasets? We introduce a stochastic variational inference and learning algorithm that scales to large datasets and, under some mild differentiability conditions, even works in the intractable case. Our contributions are two-fold. First, we show that a reparameterization of the variational lower bound yields a lower bound estimator that can be straightforwardly optimized using standard stochastic gradient methods. Second, we show that for i.i.d. datasets with continuous latent variables per datapoint, posterior inference can be made especially ef\ufb01cient by \ufb01tting an approximate inference model (also called a recognition model) to the intractable posterior using the proposed lower bound estimator. Theoretical advantages are re\ufb02ected in experimental results. How can we perform ef\ufb01cient approximate inference and learning with directed probabilistic models whose continuous latent variables and/or parameters have intractable posterior distributions? The variational Bayesian (VB) approach involves the optimization of an approximation to the intractable posterior. Unfortunately, the common mean-\ufb01eld approach requires analytical solutions of expectations w.r.t", "a8a63ef2-71e8-415a-a67f-d1e577a7a785": "it is envisaged that in a particular sensory situation neurone B, by chance, \ufb01res a \u2018meaningful burst\u2019 of activity, which is then translated into motor acts, which then change the situation.\n\nIt must be supposed that the meaningful burst has an in\ufb02uence, at the neuronal level, on all of its own synapses which are active at the time ... thereby making a preliminary selection of the synapses to be strengthened, though not yet actually strengthening them. ...The strengthening signal ... makes the \ufb01nal selection ... and accomplishes the de\ufb01nitive change in the appropriate synapses. (Miller, 1981, p. 81) Miller\u2019s hypothesis also included a critic-like mechanism, which he called a \u201csensory analyzer unit,\u201d that worked according to classical conditioning principles to provide reinforcement signals to neurons so that they would learn to move from lower- to higher-valued states, thus anticipating the use of the TD error as a reinforcement signal in the actor\u2013critic architecture", "752e8d9b-8f24-4cc9-b8b1-e3806ad0ab8a": "(xi,yi)ESc  V2  Vi  (a) Few-shot (b) Zero-shot  The distribution over classes for a given test input x is a softmax over the inverse of distances between the test data embedding and prototype vectors. exp(\u2014d,,(fo(x), V-))  Ply = c|x) =~ softmax(\u2014d,,(fo(x), v.)) \u2014 > ; cexp(\u2014d (fo(x), Vv '))  where d, can be any distance function as long as is differentiable. In the paper, they used the squared euclidean distance. The loss function is the negative log-likelihood: \u00a3(0) = \u2014 log Po(y = c|x).\n\nModel-Based  Model-based meta-learning models make no assumption on the form of P9(y|x). Rather it  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log   depends on a model designed specifically for fast learning \u2014 a model that updates its parameters rapidly with a few training steps", "cf97a6f6-09d2-413a-b65d-14cb9346faa4": "If we use q(x) to construct a coding scheme for the purpose of transmitting values of x to a receiver, then the average additional amount of information (in nats) required to specify the value of x (assuming we choose an ef\ufb01cient coding scheme) as a result of using q(x) instead of the true distribution p(x) is given by This is known as the relative entropy or Kullback-Leibler divergence, or KL divergence , between the distributions p(x) and q(x). Note that it is not a symmetrical quantity, that is to say KL(p\u2225q) \u0338\u2261 KL(q\u2225p). We now show that the Kullback-Leibler divergence satis\ufb01es KL(p\u2225q) \u2a7e 0 with equality if, and only if, p(x) = q(x). To do this we \ufb01rst introduce the concept of convex functions.\n\nA function f(x) is said to be convex if it has the property that every chord lies on or above the function, as shown in Figure 1.31", "d2f5770d-de45-48fb-88dd-0eac0803dcd9": "The latter may be valid states, but to be able to accurately value them is a di\u21b5erent skill from evaluating positions in real games. We will also see in Part II that the on-policy distribution has signi\ufb01cant advantages when function approximation is used. Whether or not function approximation is used, one might expect on-policy focusing to signi\ufb01cantly improve the speed of planning. Focusing on the on-policy distribution could be bene\ufb01cial because it causes vast, uninteresting parts of the space to be ignored, or it could be detrimental because it causes the same old parts of the space to be updated over and over. We conducted a small experiment to assess the e\u21b5ect empirically. To isolate the e\u21b5ect of the update distribution, we used entirely one-step expected tabular updates, as de\ufb01ned by (8.1).\n\nIn the uniform case, we cycled through all state\u2013action pairs, updating each in place, and in the on-policy case we simulated episodes, all starting in the same state, updating each state\u2013action pair that occurred under the current \"-greedy policy (\"=0.1). The tasks were undiscounted episodic tasks, generated randomly as follows", "cc50cc9d-dac2-480a-9009-63017c0ba870": "It is useful to distinguish between stationary and nonstationary sequential distributions. In the stationary case, the data evolves in time, but the distribution from which it is generated remains the same. For the more complex nonstationary situation, the generative distribution itself is evolving with time. Here we shall focus on the stationary case.\n\nFor many applications, such as \ufb01nancial forecasting, we wish to be able to predict the next value in a time series given observations of the previous values. Intuitively, we expect that recent observations are likely to be more informative than more historical observations in predicting future values. The example in Figure 13.1 shows that successive observations of the speech spectrum are indeed highly correlated. Furthermore, it would be impractical to consider a general dependence of future observations on all previous observations because the complexity of such a model would grow without limit as the number of observations increases. This leads us to consider Markov models in which we assume that future predictions are independent of all but the most recent observations. Although such models are tractable, they are also severely limited. We can obtain a more general framework, while still retaining tractability, by the introduction of latent variables, leading to state space models", "25d6e509-c9cf-4172-97da-1ac1e7ebd0cd": "who used GANs to make their simulated data as realistic as possible (Fig. 27). Using simulated data to build Computer Vision models has been heavily investigated. One example of this is from Richter et al. They use computer graphics from mod- ern open-world games such as Grand Theft Auto to produce semantic segmentation datasets.\n\nThe authors highlight anecdotes of the manual annotation costs required to build these pixel-level datasets. They mention the CamVid dataset  requires 60 min per image to manually annotate, and the Cityscapes dataset  requires 90 min per image. This high labor and time cost motivates the use and development of synthetic datasets. Neural Style Transfer is a very interesting strategy to improve the generaliza- tion ability of simulated datasets. A disadvantage of Neural Style Transfer Data Augmentation is the effort required to select styles to transfer images into. If the style set is too small, further biases could be introduced into the dataset. Trying to replicate the experiments of Tobin et al. will require a massive amount of additional memory and compute to transform and store 79,433 new images from each image", "b7b1b415-c5a9-48b2-84b8-35a5c98c1fd4": "Chapter 11  Practical Methodology  Successfully applying deep learning techniques requires more than just a good knowledge of what algorithms exist and the principles that explain how they work. A good machine learning practitioner also needs to know how to choose an algorithm for a particular application and how to monitor and respond to feedback obtained from experiments in order to improve a machine learning system. During day-to-day development of machine learning systems, practitioners need to decide whether to gather more data, increase or decrease model capacity, add or remove regularizing features, improve the optimization of a model, improve approximate inference in a model, or debug the software implementation of the model. All these operations are at the very least time consuming to try out, so it is important to be able to determine the right course of action rather than blindly guessing. Most of this book is about different machine learning models, training algo- rithms, and objective functions. This may give the impression that the most important ingredient to being a machine learning expert is knowing a wide variety of machine learning techniques and being good at different kinds of math. In prac- tice, one can usually do much better with a correct application of a commonplace algorithm than by sloppily applying an obscure algorithm", "7f0a93b3-9b6e-4880-86d6-4267b0adaa28": "An advantage of Fourier basis features in this regard is that it is easy to select features by setting the ci vectors to account for suspected interactions among the state variables and by limiting the values in the cj vectors so that the approximation can \ufb01lter out high frequency components considered to be noise.\n\nOn the other hand, because Fourier features are non-zero over the entire state space (with the few zeros excepted), they represent global properties of states, which can make it di\ufb03cult to \ufb01nd good ways to represent local properties. 2There are families of polynomials more complicated than those we have discussed, for example, di\u21b5erent families of orthogonal polynomials, and these might work better, but at present there is little experience with them in reinforcement learning. proximation, consider the e\u21b5ect of the size and density of the circles. Corresponding to each circle is a single weight (a component of w) that is a\u21b5ected by learning. If we train at one state, a point in the space, then the weights of all circles intersecting that state will be a\u21b5ected", "17112285-51d4-496d-b0f8-89bad861eb0c": "Policies learned in strong turbulence were more conservative in that they preferred small bank angles, whereas in weak turbulence, the best action was to turn as much as possible by banking sharply. Systematic study of the bank angles preferred by the policies learned under the di\u21b5erent conditions led the authors to suggest that by detecting when vertical wind acceleration crosses a certain threshold the controller can adjust its policy to cope with di\u21b5erent turbulence regimes. Reddy et al. also conducted experiments to investigate the e\u21b5ect of the discount-rate parameter \u03b3 on the performance of the learned policies. They found that the altitude gained in an episode increased as \u03b3 increased, reaching a maximum for \u03b3 = .99, suggesting that e\u21b5ective thermal soaring requires taking into account long-term e\u21b5ects of control decisions. This computational study of thermal soaring illustrates how reinforcement learning access to di\u21b5erent sets of environmental cues and control actions contributes to both the engineering objective of designing autonomous gliders and the scienti\ufb01c objective of improving understanding of the soaring skills of birds", "82f89bb0-341f-4a53-8df8-25478f520211": "Ratner, A., Bach, S.H., Ehrenberg, H.R., Fries, J.A., Wu, S., R\u00e9, C.: Snorkel: Rapid training data creation with weak supervision  CoRR, arXiv:1711.10160 43. Ratner, A., De Sa, C., Wu, S., Selsam, D., R\u00e9, C.: Data programming: Creating large training sets, quickly. In: Neural Information Processing Systems (NIPS)  44. Ratner, A., Hancock, B., Dunnmon, J., Goldman, R., R\u00e9, C.: Snorkel metal: Weak supervision for multi-task learning. In: Proceedings of the Second Workshop on Data Management for End-To-End Machine Learning, page 3. ACM  45. Ratner, A., Hancock, B., Dunnmon, J., Sala, F., Pandey, S., R\u00e9, C.: Training complex models with multi-task weak supervision. AAAI  46. Ratner, A., Hancock, B., R\u00e9, C.: The role of massively multi-task and weak supervision in software 2.0", "7e3f9e26-9c42-4de5-b567-edfd9864b3d9": "While data augmentation has been widely used in both supervised and unsupervised representation learning (Krizhevsky et al., 3Although max performance is not reached in 100 epochs, reasonable results are achieved, allowing fair and ef\ufb01cient ablations.\n\nA Simple Framework for Contrastive Learning of Visual Representations 2012; H\u00e9naff et al., 2019; Bachman et al., 2019), it has not been considered as a systematic way to de\ufb01ne the contrastive prediction task. Many existing approaches de\ufb01ne contrastive prediction tasks by changing the architecture. For example, Hjelm et al. ; Bachman et al. achieve global-to-local view prediction via constraining the receptive \ufb01eld in the network architecture, whereas Oord et al. ; H\u00e9naff et al. achieve neighboring view prediction via a \ufb01xed image splitting procedure and a context aggregation network. We show that this complexity can be avoided by performing simple random cropping (with resizing) of target images, which creates a family of predictive tasks subsuming the above mentioned two, as shown in Figure 3", "e5619336-cbbd-483e-bb86-970d4ffbc45a": "Journal of the Royal Statistical Society, B 58, 267\u2013288. Tikhonov, A. N. and V. Y. Arsenin . Solutions of Ill-Posed Problems. V. H. Winston. Tino, P. and I. T. Nabney .\n\nHierarchical GTM: constructing localized non-linear projection manifolds in a principled way. IEEE Transactions on Pattern Analysis and Machine Intelligence 24(5), 639\u2013656. Tino, P., I. T. Nabney, and Y. Sun . Using directional curvatures to visualize folding patterns of the GTM projection manifolds. In Tipping, M. E. Probabilistic visualisation of high-dimensional binary data. In M. S. Kearns, S. A. Solla, and D. A. Cohn (Eds", "b9b1f97f-12eb-4314-af90-a0b4f11b4586": "We can make use of the evidence framework, discussed in Section 3.5, together with the Gaussian approximation to the posterior obtained using the Laplace approximation, to obtain a practical procedure for choosing the values of such hyperparameters. The marginal likelihood, or evidence, for the hyperparameters is obtained by integrating over the network weights This is easily evaluated by making use of the Laplace approximation result (4.135). Exercise 5.39 where W is the total number of parameters in w, and the regularized error function is de\ufb01ned by We see that this takes the same form as the corresponding result (3.86) for the linear regression model. In the evidence framework, we make point estimates for \u03b1 and \u03b2 by maximizing ln p(D|\u03b1, \u03b2). Consider \ufb01rst the maximization with respect to \u03b1, which can be done by analogy with the linear regression case discussed in Section 3.5.2.\n\nWe \ufb01rst de\ufb01ne the eigenvalue equation \u03b2Hui = \u03bbiui (5.177) where H is the Hessian matrix comprising the second derivatives of the sum-ofsquares error function, evaluated at w = wMAP", "80ae028a-fe24-4cff-b227-60b658f5ba0b": "This is applied to image-to-image translation. Neural Style Transfer , dis- cussed further in the section below, learns a single image to single image translation. However, CycleGAN learns to translate from a domain of images to another domain, such as horses to zebras. This is implemented via forward and backward consistency loss functions.\n\nA generator takes in images of horses and learns to map them to zebras such that the discriminator cannot tell if they were originally a part of the zebra set or not, as discussed above. After this, the generated zebras from horse images are passed through a network which translates them back into horses. A second discriminator determines if this re-translated image belongs to the horse set or not. Both of these discriminator losses are aggregated to form the cycle-consistency loss. The use of CycleGANs was tested by Zhu et al. in the task of Emotion Clas- sification. Using the emotion recognition dataset, FER2013 , Facial Expression Recognition Database, they build a CNN classifier to recognize 7 different emotions: angry, disgust, fear, happy, sad, surprise, and neutral", "e02059c1-0618-44e8-bbd7-20d2f77fabea": "If x and y are compatible, the energy is a small number; if they are incompatible, the energy is a larger number. Training an EBM consists of two parts: (1) showing it examples of x and y that are compatible and training it to produce a low energy, and (2) finding a way to ensure that for a particular x, the y values that are incompatible with x produce a higher energy than the y values that are compatible with x. Part one is simple, but part two is where the difficulty lies. https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   For image recognition, our model takes two images, x and y, as inputs. If x and y are slightly distorted versions of the same image, the model is trained to produce a low energy on its output", "e2a61d84-5fdd-4324-a05b-d0be4dd6313f": "In this chapter we discuss this hypothesis, the neuroscience \ufb01ndings that led to it, and why it is a signi\ufb01cant contribution to understanding brain reward systems. We also discuss parallels between reinforcement learning and neuroscience that are less striking than this dopamine/TD-error parallel but that provide useful conceptual tools for thinking about reward-based learning in animals. Other elements of reinforcement learning have the potential to impact the study of nervous systems, but their connections to neuroscience are still relatively undeveloped. We discuss several of these evolving connections that we think will grow in importance over time. As we outlined in the history section of this book\u2019s introductory chapter (Section 1.7), objective of this chapter is to acquaint readers with ideas about brain function that have contributed to our approach to reinforcement learning. Some elements of reinforcement learning are easier to understand when seen in light of theories of brain function.\n\nThis is particularly true for the idea of the eligibility trace, one of the basic mechanisms of reinforcement learning, that originated as a conjectured property of synapses, the structures by which nerve cells\u2014neurons\u2014communicate with one another. In this chapter we do not delve very deeply into the enormous complexity of the neural systems underlying reward-based learning in animals: this chapter is too short, and we are not neuroscientists", "e8074267-566e-4648-9b38-65b517b8acd1": "The origin of the problem is illustrated in Figure 1.21, which shows that, if we divide a region of a space into regular cells, then the number of such cells grows exponentially with the dimensionality of the space. The problem with an exponentially large number of cells is that we would need an exponentially large quantity of training data in order to ensure that the cells are not empty. Clearly, we have no hope of applying such a technique in a space of more than a few variables, and so we need to \ufb01nd a more sophisticated approach. We can gain further insight into the problems of high-dimensional spaces by returning to the example of polynomial curve \ufb01tting and considering how we would Section 1.1 extend this approach to deal with input spaces having several variables.\n\nIf we have D input variables, then a general polynomial with coef\ufb01cients up to order 3 would take the form As D increases, so the number of independent coef\ufb01cients (not all of the coef\ufb01cients are independent due to interchange symmetries amongst the x variables) grows proportionally to D3. In practice, to capture complex dependencies in the data, we may need to use a higher-order polynomial", "f1fe9b2f-e854-4790-b9d9-7a7d00cb8759": "Warde-Farley, S. Ozair, A. Courville, and Y. Bengio. Generative adversarial nets. In NIPS, pages 2672\u20132680, 2014. K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 770\u2013778, 2016. G. E. Hinton, P. Dayan, B. J. Frey, and R. M. Neal. The\" wake-sleep\" algorithm for unsupervised neural networks. Science, 268:1158, 1995. Z. Hu, Z. Yang, X. Liang, R. Salakhutdinov, and E. P. Xing. Toward controlled generation of text. In ICML, 2017. Z. Hu, Z", "e2b1bc76-b14b-44ea-ab33-fae0ebd2324f": "The Journal of Neuroscience, 25(26):6235\u20136242. Park, J., Kim, J., Kang, D. An RLS-based natural actor\u2013critic algorithm for locomotion of a two-linked robot arm. Computational Intelligence and Security:65\u201372. Parks, P. C., Militzer, J. Improved allocation of weights for associative memory storage Parr, R. Hierarchical Control and Learning for Markov Decision Processes. Ph.D. thesis, Parr, R., Li, L., Taylor, G., Painter-Wake\ufb01eld, C., Littman, M. L. An analysis of linear models, linear value-function approximation, and feature selection for reinforcement learning. In Proceedings of the 25th international conference on Machine learning, pp. 752\u2013759). Parr, R., Russell, S. Approximating optimal policies for partially observable stochastic Pavlov, P. I. Conditioned Re\ufb02exes. Oxford University Press, London", "60c7d44b-5751-438e-bcc1-8581f9d57e52": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding We introduce a new language representation model called BERT, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models , BERT is designed to pretrain deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be \ufb01netuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial taskspeci\ufb01c architecture modi\ufb01cations. BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5% (7.7% point absolute improvement), MultiNLI accuracy to 86.7% (4.6% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement)", "3ecbbd50-470a-4dca-8d8b-b30046f1f269": "This can be verified directly by noting that the marginal density (12.35), and hence the likelihood function, is unchanged if we make the transformation W -) WR where R is an orthogonal matrix satisfying RRT = I, because the matrix C given by (12.36) is itself invariant. Extending the model to allow more general Gaussian latent distributions does not change this conclusion because, as we have seen, such a model is equivalent to the zero-mean isotropic Gaussian latent variable model. Another way to see why a Gaussian latent variable distribution in a linear model is insufficient to find independent components is to note that the principal components represent a rotation of the coordinate system in data space such as to diagonalize the covariance matrix, so that the data distribution in the new coordinates is then uncorrelated. Although zero correlation is a necessary condition for independence it is not, however, sufficient. In practice, a common choice for the latent-variable distribution is given by which has heavy tails compared to a Gaussian, reflecting the observation that many real-world distributions also exhibit this property.\n\nThe original ICA model  was based on the optimization of an objective function defined by information maximization", "120dc020-1c11-4e11-90cd-74ab9d2632d5": "The left-hand plot shows the error in the predicted posterior mean versus the number of \ufb02oating point operations, and the right-hand plot shows the corresponding results for the model evidence. We shall focus on the case in which the approximating distribution is fully factorized, and we shall show that in this case expectation propagation reduces to loopy belief propagation . To start with, we show this in the context of a simple example, and then we shall explore the general case. First of all, recall from (10.17) that if we minimize the Kullback-Leibler divergence KL(p\u2225q) with respect to a factorized distribution q, then the optimal solution for each factor is simply the corresponding marginal of p. Now consider the factor graph shown on the left in Figure 10.18, which was introduced earlier in the context of the sum-product algorithm", "d5407398-afa5-4f91-bcf0-673fc02f7168": "It corresponds to a two-class model in which the input vector x is \ufb01rst transformed using a \ufb01xed nonlinear transformation to give a feature vector \u03c6(x), and this is then used to construct a generalized linear model of the form where the nonlinear activation function f(\u00b7) is given by a step function of the form The vector \u03c6(x) will typically include a bias component \u03c60(x) = 1. In earlier discussions of two-class classi\ufb01cation problems, we have focussed on a target coding scheme in which t \u2208 {0, 1}, which is appropriate in the context of probabilistic models. For the perceptron, however, it is more convenient to use target values t = +1 for class C1 and t = \u22121 for class C2, which matches the choice of activation function.\n\nThe algorithm used to determine the parameters w of the perceptron can most easily be motivated by error function minimization. A natural choice of error function would be the total number of misclassi\ufb01ed patterns. However, this does not lead to a simple learning algorithm because the error is a piecewise constant function of w, with discontinuities wherever a change in w causes the decision boundary to move across one of the data points", "f05a2ed0-e7cb-4b62-9813-ce6b4803e9d6": "For example, in this book we have emphasized the deep similarities between dynamic programming and temporal-di\u21b5erence methods, even though one was designed for planning and the other for model-free learning. Dyna-Q includes all of the processes shown in the diagram above\u2014planning, acting, model-learning, and direct RL\u2014all occurring continually. The planning method is the random-sample one-step tabular Q-planning method on page 161. The direct RL method is one-step tabular Q-learning. The model-learning method is also table-based and assumes the environment is deterministic. After each transition St, At ! Rt+1, St+1, the model records in its table entry for St, At the prediction that Rt+1, St+1 will deterministically follow. Thus, if the model is queried with a state\u2013action pair that has been experienced before, it simply returns the last-observed next state and next reward as its prediction.\n\nDuring planning, the Q-planning algorithm randomly samples only from state\u2013action pairs that have previously been experienced (in Step 1), so the model is never queried with a pair about which it has no information", "6c7912be-d2be-48ab-9273-532b5055b371": "The coef\ufb01cient of this correction is given by the Kalman gain matrix. Thus we can view the Kalman \ufb01lter as a process of making successive predictions and then correcting these predictions in the light of the new observations. This is illustrated graphically in Figure 13.21. certainty in the state variable due to diffusion is compensated by the arrival of new data. In the left-hand plot, the blue curve shows the distribution p(zn\u22121|x1, . , xn\u22121), which incorporates all the data up to step n \u2212 1. The diffusion arising from the nonzero variance of the transition probability p(zn|zn\u22121) gives the distribution p(zn|x1, . , xn\u22121), shown in red in the centre plot. Note that this is broader and shifted relative to the blue curve (which is shown dashed in the centre plot for comparison). The next data observation xn contributes through the emission density p(xn|zn), which is shown as a function of zn in green on the right-hand plot. Note that this is not a density with respect to zn and so is not normalized to one", "cbc5e388-cc14-4cb7-b1f1-55c8d9473224": "In this example we empirically compare the prediction abilities of TD(0) and constant-\u21b5 MC when applied to the following Markov reward process: A Markov reward process, or MRP, is a Markov decision process without actions. We will often use MRPs when focusing on the prediction problem, in which there is no need to distinguish the dynamics due to the environment from those due to the agent. In this MRP, all episodes start in the center state, C, then proceed either left or right by one state on each step, with equal probability. Episodes terminate either on the extreme left or the extreme right. When an episode terminates on the right, a reward of +1 occurs; all other rewards are zero. For example, a typical episode might consist of the following state-and-reward sequence: C, 0, B, 0, C, 0, D, 0, E, 1. Because this task is undiscounted, the true value of each state is the probability of terminating on the right if starting from that state. Thus, the true value of the center state is v\u21e1(C) = 0.5", "a11e2e33-d450-4a15-a8e7-fc76ad7f7628": "The performance of a particular learning algorithm is then assessed by taking the average over this ensemble of data sets. Consider the integrand of the \ufb01rst term in (3.37), which for a particular data set D takes the form {y(x; D) \u2212 h(x)}2. (3.38) Because this quantity will be dependent on the particular data set D, we take its average over the ensemble of data sets. If we add and subtract the quantity ED inside the braces, and then expand, we obtain {y(x; D) \u2212 ED + ED \u2212 h(x)}2 We now take the expectation of this expression with respect to D and note that the \ufb01nal term will vanish, giving We see that the expected squared difference between y(x; D) and the regression function h(x) can be expressed as the sum of two terms. The \ufb01rst term, called the squared bias, represents the extent to which the average prediction over all data sets differs from the desired regression function. The second term, called the variance, measures the extent to which the solutions for individual data sets vary around their average, and hence this measures the extent to which the function y(x; D) is sensitive to the particular choice of data set", "9b0249e9-9177-49d3-8259-da3c44c0af21": "Because a skilled player can play so as never to lose, let us assume that we are playing against an imperfect player, one whose play is sometimes incorrect and allows us to win. For the moment, in fact, let us consider draws and losses to be equally bad for us. How might we construct a player that will \ufb01nd the imperfections in its opponent\u2019s play and learn to maximize its chances of winning? Although this is a simple problem, it cannot readily be solved in a satisfactory way through classical techniques. For example, the classical \u201cminimax\u201d solution from game theory is not correct here because it assumes a particular way of playing by the opponent.\n\nFor example, a minimax player would never reach a game state from which it could lose, even if in fact it always won from that state because of incorrect play by the opponent. Classical optimization methods for sequential decision problems, such as dynamic programming, can compute an optimal solution for any opponent, but require as input a complete speci\ufb01cation of that opponent, including the probabilities with which the opponent makes each move in each board state. Let us assume that this information is not available a priori for this problem, as it is not for the vast majority of problems of practical interest", "aa406ef4-f735-49ec-9f0d-1cc65fea36ba": "Two images are taken from the reference and target class and used to generate new data in the target class  Using CycleGANs to translate images from the other 7 classes into the minority classes was very effective in improving the performance of the CNN model on emo- tion recognition. Employing these techniquess, accuracy improved 5\u201410%. To further understand the effectiveness of adding GAN-generated instances, a t-SNE visualiza- tion is used. t-SNE  is a visualization technique that learns to map between high- dimensional vectors into a low-dimensional space to facilitate the visualization of decision boundaries (Fig. 21). Another interesting GAN architecture for use in Data Augmentation is Conditional GANSs . Conditional GANs add a conditional vector to both the generator and the discriminator in order to alleviate problems with mode collapse. In addition to inputting a random vector z to the generator, Conditional GANs also input a y vector which could be something like a one-hot encoded class label, e.g. This class label targets a  specific class for the generator and the discriminator (Fig. 22)", "9576daf4-ec52-4f2b-92fe-cc878ed4bd15": "More generally, it would also apply to any model de\ufb01ned by a directed probabilistic graph in which each factor is a conditional distribution corresponding to one of the nodes, or an undirected graph in which each factor is a clique potential. We are interested in evaluating the posterior distribution p(\u03b8|D) for the purpose of making predictions, as well as the model evidence p(D) for the purpose of model comparison. From (10.188) the posterior is given by Here we are considering continuous variables, but the following discussion applies equally to discrete variables with integrals replaced by summations. We shall suppose that the marginalization over \u03b8, along with the marginalizations with respect to the posterior distribution required to make predictions, are intractable so that some form of approximation is required.\n\nExpectation propagation is based on an approximation to the posterior distribution which is also given by a product of factors in which each factor \ufffdfi(\u03b8) in the approximation corresponds to one of the factors fi(\u03b8) in the true posterior (10.189), and the factor 1/Z is the normalizing constant needed to ensure that the left-hand side of (10.191) integrates to unity", "d26e2535-d6b8-41b2-bec6-c191356abfb8": "To begin with the simplest possible baseline, che first implementation of the output layer of the model consisted of n different softmax units to predict a sequence of n characters. These softmax units were rained exactly the same as if the task were classification, with each softmax unit rained independently. Our recommended methodology is to iteratively refine the baseline and test whether each change makes an improvement. The first change to the Street View  ranscription system was motivated by a theoretical understanding of the coverage metric and the structure of the data.\n\nSpecifically, the network refused to classify  tom 1 ay Voovstes eu 1 1 malas lo m\\ 4 4 6  https://www.deeplearningbook.org/contents/guidelines.html    all INpul & wieuever tue propavulty OL Lue OULpUL Sequeuce PLY | &) \\ \u00a9 Lor some threshold t. Initially, the definition of p(y ) was ad-hoc, based on simply multiplying all the softmax outputs together. This motivated the development of a specialized output layer and cost function that actually computed a principled  og-likelihood", "02ab5060-a70f-489f-b80e-bb4076f45f74": "Suppose that the current value of the parameter vector is \u03b8old. In the E step, the lower bound L(q, \u03b8old) is maximized with respect to q(Z) while holding \u03b8old \ufb01xed. The solution to this maximization problem is easily seen by noting that the value of ln p(X|\u03b8old) does not depend on q(Z) and so the largest value of L(q, \u03b8old) will occur when the Kullback-Leibler divergence vanishes, in other words when q(Z) is equal to the posterior distribution p(Z|X, \u03b8old). In this case, the lower bound will equal the log likelihood, as illustrated in Figure 9.12. In the subsequent M step, the distribution q(Z) is held \ufb01xed and the lower bound L(q, \u03b8) is maximized with respect to \u03b8 to give some new value \u03b8new.\n\nThis will cause the lower bound L to increase (unless it is already at a maximum), which will necessarily cause the corresponding log likelihood function to increase", "fec13890-d4d3-48b3-af90-2cddc0508bc2": "DEEP GENERATIVE MODELS  can then back-propagate through samples of z drawn from q(z | \u00a9) = q(z; f(a; 0)) to obtain a gradient with respect to 6. Learning then consists solely of maximizing \u00a3 with respect to the parameters of the encoder and decoder. All the expectations in \u00a3 may be approximated by Monte Carlo sampling. The variational autoencoder approach is elegant, theoretically pleasing, and simple to implement. It also obtains excellent results and is among the state-of-the- art approaches to generative modeling. Its main drawback is that samples from variational autoencoders trained on images tend to be somewhat blurry. The causes of this phenomenon are not yet known. One possibility is that the blurriness is an intrinsic effect of maximum likelihood, which minimizes Dxr(paatal|Pmodel)- AS illustrated in figure 3.6, this means that the model will assign high probability to points that occur in the training set but may also assign high probability to other points", "d397a042-2e12-4b52-9e30-1b0223c183fd": "nan nae tn dha 2 AAAI fee tne 2 Laren ttn Ate nn-e ANG  https://www.deeplearningbook.org/contents/inference.html    AIUIIUs Le LeaSUl 1S Liat LU SPCCLUIC LULICLIOL ACIUCVES MINiital CULLUOPYyY. AS functions place more probability density on the two points x = wt+oand x =p-o, and place less probability density on all other values of Z, they lose entropy while maintaining the desired variance.\n\nHowever, any function placing exactly zero mass  on all but two points does not integrate to one and is not a valid probability distribution. Thus there is no single minimal entropy probability distribution function, much as there is no single minimal positive real number. Instead, we can say that there is a sequence of probability distributions converging toward putting mass only on these two points. This degenerate scenario may be described as a mixture of Dirac distributions. Because Dirac distributions are not described by a single probability distribution function, no Dirac or mixture of Dirac distribution corresponds to a single specific point in function space", "7aa953d5-9206-4a73-b47d-c132c7e1cc0d": "@ = by 2.12 Ay .x = be 2.13 2.14 Amt = bm 2.15 or even more explicitly as Aj i2,+Ajo%9+---+ Ai ntn = by 2.16 33  CHAPTER 2. LINEAR ALGEBRA Ajit} + Ag 2r9 free Aantn = bo (2.17) (2.18) Amv t Am 2@2 forse AmnIn = bm. (2.19)  Matrix-vector product notation provides a more compact representation for equations of this form. 2.3 Identity and Inverse Matrices  Linear algebra offers a powerful tool called matrix inversion that enables us to analytically solve equation 2.11 for many values of A. To describe matrix inversion, we first need to define the concept of an identity matrix. An identity matrix is a matrix that does not change any vector when we multiply that vector by that matrix. We denote the identity matrix that preserves n-dimensional vectors as I,,. Formally, I, \u20ac R\"*\u201d\", and  Vee R\u201d\" I,x =a", "dfa32f21-006e-4aa2-acf1-f52a8117f416": "Completing the square in the usual way, we obtain Similarly, the optimal solution for the factor q(\u03b1) is obtained from ln q(\u03b1) = Ew  + ln p(\u03b1) + const.\n\nSubstituting for ln p(w|\u03b1) using (10.165), and for ln p(\u03b1) using (10.166), we obtain We recognize this as the log of a gamma distribution, and so we obtain We also need to optimize the variational parameters \u03ben, and this is also done by maximizing the lower bound \ufffdL(q, \u03be). Omitting terms that are independent of \u03be, and integrating over \u03b1, we have Note that this has precisely the same form as (10.159), and so we can again appeal to our earlier result (10.163), which can be obtained by direct optimization of the marginal likelihood function, leading to re-estimation equations of the form We have obtained re-estimation equations for the three quantities q(w), q(\u03b1), and \u03be, and so after making suitable initializations, we can cycle through these quantities, updating each in turn", "ce752b77-331d-4b18-b58f-9ebb52d5ad57": "One technique that is often used to control the over-\ufb01tting phenomenon in such cases is that of regularization, which involves adding a penalty term to the error function (1.2) in order to discourage the coef\ufb01cients from reaching large values. The simplest such penalty term takes the form of a sum of squares of all of the coef\ufb01cients, leading to a modi\ufb01ed error function of the form M, and the coef\ufb01cient \u03bb governs the relative importance of the regularization term compared with the sum-of-squares error term.\n\nNote that often the coef\ufb01cient w0 is omitted from the regularizer because its inclusion causes the results to depend on the choice of origin for the target variable , or it may be included but with its own regularization coef\ufb01cient (we shall discuss this topic in more detail in Section 5.5.1). Again, the error function in (1.4) can be minimized exactly in closed form. Techniques such as this are known Exercise 1.2 in the statistics literature as shrinkage methods because they reduce the value of the coef\ufb01cients. The particular case of a quadratic regularizer is called ridge regression . In the context of neural networks, this approach is known as weight decay. same data set as before but now using the regularized error function given by (1.4)", "55f84fe0-df5f-4eb8-ab29-a5364213c0ef": "Maximizing this evidence function with respect to \u03b1 again leads to the re-estimation equation given by (5.178). The use of the evidence procedure to determine \u03b1 is illustrated in Figure 5.22 for the synthetic two-dimensional data discussed in Appendix A. Finally, we need the predictive distribution, which is de\ufb01ned by (5.168). Again, this integration is intractable due to the nonlinearity of the network function. The simplest approximation is to assume that the posterior distribution is very narrow and hence make the approximation We can improve on this, however, by taking account of the variance of the posterior distribution. In this case, a linear approximation for the network outputs, as was used in the case of regression, would be inappropriate due to the logistic sigmoid outputunit activation function that constrains the output to lie in the range (0, 1). Instead, we make a linear approximation for the output unit activation in the form where aMAP(x) = a(x, wMAP), and the vector b \u2261 \u2207a(x, wMAP) can be found by backpropagation", "529d4735-2cac-4837-9b05-a2e329cc02df": "After 1000 iterations we are still far from an optimal solution, as we can see from the VE, which remains almost 2.\n\nThe system is actually converging to an optimal solution, but progress is extremely slow because the PBE is already so close to zero. GTD2 and TDC both involve two learning processes, a primary one for w and a secondary one for v. The logic of the primary learning process relies on the secondary learning process having \ufb01nished, at least approximately, whereas the secondary learning process proceeds without being in\ufb02uenced by the \ufb01rst. We call this sort of asymmetrical dependence a cascade. In cascades we often assume that the secondary learning process is proceeding faster and thus is always at its asymptotic value, ready and accurate to assist the primary learning process. The convergence proofs for these methods often make this assumption explicitly. These are called two-time-scale proofs. The fast time scale is that of the secondary learning process, and the slower time scale is that of the primary learning process", "dcd5e3ee-ac8d-4683-8d51-410f400b5a6d": "12.23 (*) III!I Draw a directed probabilistic graphical model representing a discrete mixture of probabilistic PCA models in which each PCA model has its own values of W, JL, and 0-2\u2022 Now draw a modified graph in which these parameter values are shared between the components of the mixture. 12.24 (***) We saw in Section 2.3.7 that Student's t-distribution can be viewed as an infinite mixture of Gaussians in which we marginalize with respect to a continuous latent variable. By exploiting this representation, formulate an EM algorithm for maximizing the log likelihood function for a multivariate Student's t-distribution given an observed set of data points, and derive the forms of the E and M step equations. 12.25 (**)III!I Consider a linear-Gaussian latent-variable model having a latent space distribution p(z) = N(xIO, I) and a conditional distribution for the observed variable p(xlz) = N(xlWz + IL, <p) where <P is an arbitrary symmetric, positivedefinite noise covariance matrix", "093a9ddc-8694-48b6-9a74-892877cf3514": "Shorten and Khoshgoftaar J Big Data  https://doi.org/10.1186/s40537-019-0197-0   6:60  \u00a9 Journal of Big Data  SURVEY PAPER Open Access  A survey on  , \u00ae Image Data Augmentation pa  for Deep Learning  Connor Shorten*\u00ae and Taghi M. Khoshgoftaar  *Correspondence: cshorten2015@fau.edu Department of Computer and Electrical Engineering and Computer Science, Florida Atlantic University, Boca Raton, USA  g) Springer Open  Abstract  Deep convolutional neural networks have performed remarkably well on many Computer Vision tasks. However, these networks are heavily reliant on big data to avoid overfitting. Overfitting refers to the phenomenon when a network learns a function with very high variance such as to perfectly model the training data. Unfor- tunately, many application domains do not have access to big data, such as medical image analysis. This survey focuses on Data Augmentation, a data-space solution to the problem of limited data. Data Augmentation encompasses a suite of techniques that enhance the size and quality of training datasets such that better Deep Learning models can be built using them", "d3bcdfa3-b4fe-4875-ba70-6165d19dffbd": "In the supervised and semisupervised setting, hidden level augmentations work well, with cutoff performing the best. We analyze several data augmentation methods and check whether the label is preserved for these and if this affects its performance. We look at 25 examples for the best performing data augmentation method and the worst performing data augmentation method for 20 News Group and RTE. For 20 News Group, Random Deletion was the best performing, and Language Model was the worst performing. In both cases, there were no examples where the label \ufb02ipped, which makes sense since the input is usually several paragraphs with multiple references to the topic. Several examples are shown in Appendix. For RTE, Language Model was the worst performing and Cutoff was the best performing augmentation. Language Model \ufb02ipped 24% of the labels with 4% uncertain, while Cutoff \ufb02ipped 4% of the labels with 12% uncertain. We show several examples of when the label \ufb02ipped for RTE in the Table 6.", "73c298c9-7f39-4208-9902-58f2c32ae162": "Suppose \u03bb is 3 and 4 for rental requests at the \ufb01rst and second locations and 3 and 2 for returns. To simplify the problem slightly, we assume that there can be no more than 20 cars at each location (any additional cars are returned to the nationwide company, and thus disappear from the problem) and a maximum of \ufb01ve cars can be moved from one location to the other in one night. We take the discount rate to be \u03b3 = 0.9 and formulate this as a continuing \ufb01nite MDP, where the time steps are days, the state is the number of cars at each location at the end of the day, and the actions are the net numbers of cars moved between the two locations overnight. Figure 4.2 shows the sequence of policies found by policy iteration starting from the policy that never moves any cars. Policy iteration often converges in surprisingly few iterations, as the example of Jack\u2019s car rental illustrates, and as is also illustrated by the example in Figure 4.1.\n\nThe bottomleft diagram of Figure 4.1 shows the value function for the equiprobable random policy, and the bottom-right diagram shows a greedy policy for this value function. The policy improvement theorem assures us that these policies are better than the original random policy", "2541654e-16b9-4360-8558-01e7dbe16ac9": "They are different from both things, and that is all we know. These issues illustrate some of the reasons that we may prefer a distributed representation to a one-hot representation. A distributed representation could have two attributes for each vehicle\u2014one representing its color and one representing  https://www.deeplearningbook.org/contents/ml.html    whether it is a car or a truck. It is still not entirely clear what the optimal distributed representation is (how can the learning algorithm know whether the two attributes we are interested in are color and car-versus-truck rather than  manufacturer and age? ), but having many attributes reduces the burden on the algorithm to guess which single attribute we care about, and gives us the ability to measure similarity between objects in a fine-grained way by comparing many  148  CHAPTER 5. MACHINE LEARNING BASICS  attributes instead of just testing whether one attribute matches. 5.9 Stochastic Gradient Descent  Nearly all of deep learning is powered by one very important algorithm: stochastic gradient descent (SGD). Stochastic gradient descent is an extension of the gradient descent algorithm introduced in section 4.3", "c4e4a599-aec4-4d2d-babe-b009f97ecf35": "In Section 4.1.7, we described the perceptron algorithm that is guaranteed to \ufb01nd a solution in a \ufb01nite number of steps.\n\nThe solution that it \ufb01nds, however, will be dependent on the (arbitrary) initial values chosen for w and b as well as on the order in which the data points are presented. If there are multiple solutions all of which classify the training data set exactly, then we should try to \ufb01nd the one that will give the smallest generalization error. The support vector machine approaches this problem through the concept of the margin, which is de\ufb01ned to be the smallest distance between the decision boundary and any of the samples, as illustrated in Figure 7.1. In support vector machines the decision boundary is chosen to be the one for which the margin is maximized. The maximum margin solution can be motivated using computational learning theory, also known as statistical learning theory. HowSection 7.1.5 ever, a simple insight into the origins of maximum margin has been given by Tong and Koller  who consider a framework for classi\ufb01cation based on a hybrid of generative and discriminative approaches. They \ufb01rst model the distribution over input vectors x for each class using a Parzen density estimator with Gaussian kernels of the data points, as shown on the left \ufb01gure", "b9175301-1ecb-411d-a11a-fb03097e9719": "GANs applied to the MNIST data are able to produce convincing results.\n\nHowever, MNIST images are far less challenging than other image datasets due to low intra-class vari- ance and resolution, to name a couple differences of many. This is in heavy contrast with other datasets studied in most academic Computer Vision papers such as Ima- geNet or CIFAR-10. For immediate reference, an ImageNet image is of resolution 256 x 256 x 3, totaling 196,608 pixels, a 250x increase in pixel count compared with MNIST. Many research papers have been published that modify the GAN framework through different network architectures, loss functions, evolutionary methods, and many more. This research has significantly improved the quality of samples created by GANs. There have been many new architectures proposed for expanding on the con- cept of GANs and producing higher resolution output images, many of which are out of the scope of this paper. Amongst these new architectures, DCGANs, Progressively Growing GANs, CycleGANs, and Conditional GANs seem to have the most applica- tion potential in Data Augmentation", "9db0c784-c531-41c4-94b3-34f756319cf7": "We should not overlook the most obvious way in which heuristic search focuses updates: on the current state. Much of the e\u21b5ectiveness of heuristic search is due to its search tree being tightly focused on the states and actions that might immediately follow the current state. You may spend more of your life playing chess than checkers, but when you play checkers, it pays to think about checkers and about your particular checkers position, your likely next moves, and successor positions.\n\nNo matter how you select actions, it is these states and actions that are of highest priority for updates and where you most urgently want your approximate value function to be accurate. Not only should your computation be preferentially devoted to imminent events, but so should your limited memory resources. In chess, for example, there are far too many possible positions to store distinct value estimates for each of them, but chess programs based on heuristic search can easily store distinct estimates for the millions of positions they encounter 2There are interesting exceptions to this . looking ahead from a single position. This great focusing of memory and computational resources on the current decision is presumably the reason why heuristic search can be so e\u21b5ective", "2f16bc49-33cf-4bf2-bc9d-f6643882d531": "Instead, some models are most easily described using a directed graph, or most easily described using an undirected graph. 570  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  OOO O-O-O P ODO  (c) (d)  Figure 16.8: All the kinds of active paths of length two that can exist between random variables a and b. (a) Any path with arrows proceeding directly froma to b or vice versa. This kind of path becomes blocked if s is observed. We have already seen this kind of path in the relay race example. (b) Variables a and b are connected by a common causes.\n\nFor example, suppose s is a variable indicating whether or not there is a hurricane, anda and b measure the wind speed at two different nearby weather monitoring outposts. If we observe very high winds at station a, we might expect to also see high winds at b. This kind of path can be blocked by observing s. If we already know there is a hurricane, we expect to see high winds at b, regardless of what is observed at a", "e42d310f-00bd-4963-8163-c095f7c63874": "It is therefore necessary to introduce some form of approximation.\n\nLater in the book we shall consider a range of techniques based on analytical approximations Chapter 10 Here we introduce a simple, but widely used, framework called the Laplace approximation, that aims to \ufb01nd a Gaussian approximation to a probability density de\ufb01ned over a set of continuous variables. Consider \ufb01rst the case of a single continuous variable z, and suppose the distribution p(z) is de\ufb01ned by where Z = \ufffd f(z) dz is the normalization coef\ufb01cient. We shall suppose that the value of Z is unknown. In the Laplace method the goal is to \ufb01nd a Gaussian approximation q(z) which is centred on a mode of the distribution p(z). The \ufb01rst step is to \ufb01nd a mode of p(z), in other words a point z0 such that p\u2032(z0) = 0, or equivalently A Gaussian distribution has the property that its logarithm is a quadratic function of the variables", "daa798ad-ef50-4bcf-bcb2-b915c077f394": "Aviral Kumar, Justin Fu, George Tucker, and Sergey Levine. 2019. Stabilizing off-policy q-learning via bootstrapping error reduction. In NeurIPS. Brian Lester, Rami Al-Rfou, and Noah Constant. 2021. The power of scale for parameter-ef\ufb01cient prompt tuning. arXiv preprint arXiv:2104.08691. Jiwei Li, Will Monroe, Alan Ritter, Dan Jurafsky, Michel Galley, and Jianfeng Gao. 2016. Deep reinforcement learning for dialogue generation. In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 1192\u2013 1202. Bill Yuchen Lin, Wangchunshu Zhou, Ming Shen, Pei Zhou, Chandra Bhagavatula, Yejin Choi, and Xiang Ren. 2020. CommonGen: A constrained text generation challenge for generative commonsense reasoning. In Findings of the Association for Computational Linguistics: EMNLP 2020, pages 1823\u20131840, Online", "2faf349f-5db7-42a9-80d7-aba664666d13": "So far we have given a rather heuristic motivation for the de\ufb01nition of information (1.92) and the corresponding entropy (1.93). We now show that these de\ufb01nitions indeed possess useful properties. Consider a random variable x having 8 possible states, each of which is equally likely. In order to communicate the value of x to a receiver, we would need to transmit a message of length 3 bits. Notice that the entropy of this variable is given by Now consider an example  of a variable having 8 possible states {a, b, c, d, e, f, g, h} for which the respective probabilities are given by ( 1 64). The entropy in this case is given by We see that the nonuniform distribution has a smaller entropy than the uniform one, and we shall gain some insight into this shortly when we discuss the interpretation of entropy in terms of disorder. For the moment, let us consider how we would transmit the identity of the variable\u2019s state to a receiver. We could do this, as before, using a 3-bit number", "13d77923-8a56-4176-9e0e-66598fc4e2ec": "In Figure 2.25, we apply the model (2.250) to the data smoothing parameter and that if it is set too small (top panel), the result is a very noisy density model, whereas if it is set too large (bottom panel), then the bimodal nature of the underlying distribution from which the data is generated (shown by the green curve) is washed out. The best density model is obtained for some intermediate value of h (middle panel). set used earlier to demonstrate the histogram technique. We see that, as expected, the parameter h plays the role of a smoothing parameter, and there is a trade-off between sensitivity to noise at small h and over-smoothing at large h. Again, the optimization of h is a problem in model complexity, analogous to the choice of bin width in histogram density estimation, or the degree of the polynomial used in curve \ufb01tting. We can choose any other kernel function k(u) in (2.249) subject to the condiwhich ensure that the resulting probability distribution is nonnegative everywhere and integrates to one.\n\nThe class of density model given by (2.249) is called a kernel density estimator, or Parzen estimator", "7d82345e-6f0b-43f2-962b-9b2044473ff0": "C. Hardie, K. J. Barnard, and E. E. Armstrong. Joint MAP registration and high-resolution image estimation using a sequence of undersampled images. IEEE Transactions on Image Processing, 6(12):1621\u20131633, December 1997. Geo\ufb00rey McLachlan and Thriyambakam Krishnan. The EM Algorithm and Extensions. John Wiley & Sons, New York, 1996. Geo\ufb00rey McLachlan and David Peel. Finite Mixture Models. John Wiley & Sons, New York, 2000. Yair Weiss. Bayesian motion estimation and segmentation. PhD thesis, Massachusetts Institute of Technology, May 1998.", "a30cc8c7-98ed-455b-b01f-817896475105": "From the de\ufb01nition of ev\u21e4 we know that it is the unique solution to However, this equation is the same as the previous one, except for the substitution of v\u21e1 for ev\u21e4. Because ev\u21e4 is the unique solution, it must be that v\u21e1 = ev\u21e4. In essence, we have shown in the last few pages that policy iteration works for \"-soft policies. Using the natural notion of greedy policy for \"-soft policies, one is assured of improvement on every step, except when the best policy has been found among the \"-soft policies. This analysis is independent of how the action-value functions are determined at each stage, but it does assume that they are computed exactly. This brings us to roughly the same point as in the previous section.\n\nNow we only achieve the best policy among the \"-soft policies, but on the other hand, we have eliminated the assumption of exploring starts. All learning control methods face a dilemma: They seek to learn action values conditional on subsequent optimal behavior, but they need to behave non-optimally in order to explore all actions (to \ufb01nd the optimal actions)", "26e8ddcc-0182-4cc8-971e-4fa7dd0f9c22": "Consider the illustration of a convex function f(x) shown in the left-hand plot in Figure 10.11. In this example, the function \u03bbx is a lower bound on f(x) but it is not the best lower bound that can be achieved by a linear function having slope \u03bb, because the tightest bound is given by the tangent line. Let us write the equation of the tangent line, having slope \u03bb as \u03bbx \u2212 g(\u03bb) where the (negative) intercept g(\u03bb) clearly depends on the slope \u03bb of the tangent. To determine the intercept, we note that the line must be moved vertically by an amount equal to the smallest vertical distance between the line and the function, as shown in Figure 10.11. Thus Now, instead of \ufb01xing \u03bb and varying x, we can consider a particular x and then adjust \u03bb until the tangent plane is tangent at that particular x. Because the y value of the tangent line at a particular x is maximized when that value coincides with its contact point, we have f(x) = max \u03bb {\u03bbx \u2212 g(\u03bb)}", "a7ec12bf-d02f-434f-bb11-4eed64deb124": "If one is interested in only the value at one point, or any \ufb01xed small set of points, then this Monte Carlo method can be far more e\ufb03cient than the iterative method based on local consistency. If a model is not available, then it is particularly useful to estimate action values (the values of state\u2013action pairs) rather than state values. With a model, state values alone are su\ufb03cient to determine a policy; one simply looks ahead one step and chooses whichever action leads to the best combination of reward and next state, as we did in the chapter on DP. Without a model, however, state values alone are not su\ufb03cient. One must explicitly estimate the value of each action in order for the values to be useful in suggesting a policy. Thus, one of our primary goals for Monte Carlo methods is to estimate q\u21e4. To achieve this, we \ufb01rst consider the policy evaluation problem for action values. The policy evaluation problem for action values is to estimate q\u21e1(s, a), the expected return when starting in state s, taking action a, and thereafter following policy \u21e1", "ea18efc3-619f-42a8-b236-fd9b58d4aa7b": "The Atari 2600 is a home video game console that was sold in various versions by Atari Inc. from 1977 to 1992. It introduced or popularized many arcade video games that are now considered classics, such as Pong, Breakout, Space Invaders, and Asteroids. Although much simpler than modern video games, Atari 2600 games are still entertaining and challenging for human players, and they have been attractive as testbeds for developing and evaluating reinforcement learning methods .\n\nBellemare, Naddaf, Veness, and Bowling  developed the publicly available Arcade Learning Environment (ALE) to encourage and simplify using Atari 2600 games to study learning and planning algorithms. These previous studies and the availability of ALE made the Atari 2600 game collection a good choice for Mnih et al.\u2019s demonstration, which was also in\ufb02uenced by the impressive human-level performance that TD-Gammon was able to achieve in backgammon. DQN is similar to TD-Gammon in using a multi-layer ANN as the function approximation method for a semi-gradient form of a TD algorithm, with the gradients computed by the backpropagation algorithm", "d33a29e6-56e5-482c-9d10-143970fd63bc": "For example, paraphrasing works well for general text classi\ufb01cation tasks, but may fail for some subtle scenarios like classifying bias because paraphrasing might change the label in this setting. Automatically learning data augmentation strategies or searching for an optimal augmentation policy for given datasets/tasks/models could enhance the generalizability of data augmentation techniques . We would like to thank the members of Georgia Tech SALT and UNC-NLP groups for their feedback. This work is supported by grants from Amazon and Salesforce, ONR Grant N00014-181-2871, DARPA YFA17-D17AP00022.\n\nAlberto Abad, Peter Bell, Andrea Carmantini, and Steve Renais. 2020. Cross lingual transfer learning for zero-resource domain adaptation. ICASSP 2020 - 2020 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). Ateret Anaby-Tavor, Boaz Carmeli, Esther Goldbraich, Amir Kantor, George Kour, Segev Shlomov, Naama Tepper, and Naama Zwerdling. 2020", "68596345-774d-40fa-b86f-566d1a39f39f": "On the other hand, the TD error (when combined with eligibility traces) tells the critic the direction and magnitude in which to change the parameters of the value function in order to improve its predictive accuracy. The critic works to reduce \u03b4\u2019s magnitude to be as close to zero as possible using a learning rule like the TD model of classical conditioning (Section 14.2). The di\u21b5erence between the critic and actor learning rules is relatively simple, but this di\u21b5erence has a profound e\u21b5ect on learning and is essential to how the actor\u2013critic algorithm works.\n\nThe di\u21b5erence lies solely in the eligibility traces each type of learning rule uses. More than one set of learning rules can be used in actor\u2013critic neural networks like those in Figure 15.5b but, to be speci\ufb01c, here we focus on the actor\u2013critic algorithm for continuing problems with eligibility traces presented in Section 13.6", "53f3977d-7c37-4bad-a30d-7519a1519aef": "The use of a distributed representation combined with a linear classifier thus expresses a prior belief that the classes to be recognized are linearly separable as a function of the underlying causal factors captured by h. We will typically want to learn categories such as the set of all images of all green objects or the set of all images of cars, but not categories that require nonlinear XOR logic. For example, we typically do not want to partition the data into the set of all red cars and green trucks as one class and the set of all green cars and red trucks as another class. The ideas discussed so far have been abstract, but they may be experimentally validated. Zhou et al.\n\nfound that hidden units in a deep convolutional network trained on the ImageNet and Places benchmark datasets learn features that are often interpretable, corresponding to a label that humans would naturally assign. In practice it is certainly not always the case that hidden units learn something that has a simple linguistic name, but it is interesting to see this emerge near the top levels of the best computer vision deep networks. What such features have in  common is that one could imagine learning about each of them without having to see all the configurations of all the others. Radford et al", "86810733-ae01-4fb8-800e-5d0f76ae57ce": "Zhu, J., Chen, N., & Xing, E. P. Bayesian inference with posterior regularization and applications to in\ufb01nite latent svms. The Journal of Machine Learning Research, 15(1), 1799\u20131847. Zhu, J., & Xing, E. P. Maximum entropy discrimination markov networks. Journal of Machine Learning Research, 10(11). Zhu, Y., Gao, T., Fan, L., Huang, S., Edmonds, M., Liu, H., Gao, F., Zhang, C., Qi, S., Wu, Y. N., et al. .\n\nDark, beyond deep: A paradigm shift to cognitive AI with humanlike common sense. Engineering, 6(3), 310\u2013345. Ziebart, B. D., Maas, A. L., Bagnell, J. A., & Dey, A. K. Maximum entropy inverse reinforcement learning", "a7f942cb-7503-4abd-8966-87c1402d720d": "We use a learning rate of 2e\u22125, batch size of 16, ratio of unlabeled to labeled data of 3, and dropout ratio of 0.1 for different augmentation methods. News/Topic Classi\ufb01cation Tasks The results are shown in Table 4. We observe that overall, in both the supervised settings and semi-supervised setting, all the methods perofrmly similarly, with 2 points of each other. This indicates that data augmentation methods work well with limited labeled data, and with more labeled data, its effectiveness is removed. Inference Tasks As shown in Table 5, we observe that most augmentation methods hurt the performance in both the supervised and semisupervised setting, with a greater drop in performance in the semi-supervised setting. Similarity and Paraphrase Tasks Similar to inference tasks, we observe in Table 5 that most augmentation methods hurt the performance in both the supervised and semi-supervised setting, with a greater drop in performance in the semisupervised setting. Single Sentence Tasks Unlike inference tasks and paraphrase tasks, augmentations methods help performance, as seen in Table 5, except for CoLA.\n\nWe hypothesize the reason is because most augmentatiom methods seek to preserves meaning, not grammatical correctness, which is what CoLA measures", "cb90f542-deab-48b9-bcf9-9bb5526bf7a9": "The \ufb01rst step embodies a \u2018teacher\u2019s update\u2019 where the teacher q ingests experience f and builds on current states of the student p\u03b8(n); the second step is reminiscent of a \u2018student\u2019s update\u2019 where the student p\u03b8 updates its states by maximizing its alignment (here measured by CE) with the teacher. Besides, the auxiliary q is an easy-to-manipulate intermediate form in the training that permits rich approximate inference tools for tractable optimization.\n\nWe have the \ufb02exibility of choosing its surrogate functions, ranging from the principled variational approximations for the target distribution in a properly relaxed space (e.g., mean \ufb01elds) where gaps and bounds can be characterized, to the arbitrary neural network-based \u2018inference networks\u2019 that are highly expressive and easy to compute. As can be easily shown (e.g., see Section 4.1.3), popular training heuristics, such as EM, variational EM, wake-sleep, forward and backward propagation, and so on, are all direct instantiations or variants of the above teacher-student mechanism with di\ufb00erent choices of the form of q", "4134dae3-ac6e-4977-ae63-c3b1efa78948": "Q-learning (o\u21b5-policy TD control) for estimating \u21e1 \u21e1 \u21e1\u21e4 Algorithm parameters: step size \u21b5 2 (0, 1], small \" > 0 Initialize Q(s, a), for all s 2 S+, a 2 A(s), arbitrarily except that Q(terminal, \u00b7) = 0 What is the backup diagram for Q-learning? The rule (6.8) updates a state\u2013action pair, so the top node, the root of the update, must be a small, \ufb01lled action node. The update is also from action nodes, maximizing over all those actions possible in the next state.\n\nThus the bottom nodes of the backup diagram should be all these action nodes. Finally, remember that we indicate taking the maximum of these \u201cnext action\u201d nodes with an arc across them (Figure 3.4-right). Can you guess now what the diagram is? If so, please do make a guess before turning to the answer in Figure 6.4 on page 134. highlighting the di\u21b5erence between on-policy (Sarsa) and o\u21b5-policy (Q-learning) methods", "b0831043-c722-44d7-bd8d-aa196b840758": "In Association for Computational Linguistics Findings. Daniel Furrer, Marc van Zee, Nathan Scales, and Nathanael Sch\u00a8arli. 2020. Compositional generalization in semantic parsing: Pre-training vs. specialized architectures. Fei Gao, Jinhua Zhu, Lijun Wu, Yingce Xia, Tao Qin, Xueqi Cheng, Wengang Zhou, and Tie-Yan Liu. 2019. Soft contextual data augmentation for neural machine translation. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5539\u20135544. Siddhant Garg and Goutham Ramakrishnan. 2020. BAE: BERT-based adversarial examples for text classi\ufb01cation. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 6174\u20136181, Online. Association for Computational Linguistics. Dan Garrette and Jason Baldridge. 2013", "760eb06f-ca0b-4f93-9a29-0bf58144b07e": "Generating sentences from a continuous space. In Proceedings of The 20th SIGNLL Conference on Computational Natural Language Learning, pages 10\u201321, Berlin, Germany. Association for Computational Linguistics. Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel HerbertVoss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. 2020.\n\nLanguage models are few-shot learners. In Advances in Neural Information Processing Systems, volume 33, pages 1877\u20131901. Curran Associates, Inc", "8647917c-689d-41e6-a51b-4505fb4cf9ff": "van Seijen, H., Whiteson, S., van Hasselt, H., Wiering, M. Exploiting best-match Varga, R. S. .\n\nMatrix Iterative Analysis. Englewood Cli\u21b5s, NJ: Prentice-Hall. Vasilaki, E., Fr\u00b4emaux, N., Urbanczik, R., Senn, W., Gerstner, W. Spike-based reinforcement learning in continuous state and action space: when policy gradient methods fail. PLoS Computational Biology, 5(12). Viswanathan, R., Narendra, K. S. Games of stochastic automata. IEEE Transactions Wagner, A. R. Evolution of an elemental theory of Pavlovian conditioning. Learning & Walter, W. G. An imitation of life. Scienti\ufb01c American, 182(5):42\u201345. Walter, W. G. A machine that learns. Scienti\ufb01c American, 185(2):60\u201363", "bec1a1b5-4ab8-4f52-a3bc-d37eab546d19": "We can continue to add more powers of x as additional features, for example, to obtain a polynomial of degree 9:  Ga=b+  uyat. (5.17) i=l  Machine learning algorithms will eendzally perform best when their capacity is appropriate for the true complexity of the task they need to perform and the amount of training data they are provided with. Models with insufficient capacity  https://www.deeplearningbook.org/contents/ml.html    are unable to solve complex tasks. Models with high capacit can solve complex tasks, but when their capacity is higher than needed to solve the present task, they may overfit. Figure 5.2 shows this principle in action. We compare a linear, quadratic and degree-9 predictor attempting to fit a problem where the true underlying  110  CHAPTER 5. MACHINE LEARNING BASICS  Underfitting Appropriate capacity Overfitting  X% v9 T%  Figure 5.2: We fit three models to this example training set. The training data was generated synthetically, by randomly sampling x values and choosing y deterministically by evaluating a quadratic function", "5a11cd99-79a5-47f9-822f-e41fb3b045c4": "Value Estimation  The key idea in TD learning is to update the value function V (.S;) towards an estimated return Ris + YV (S11) (known as \u201cTD target\"). To what extent we want to update the value function is controlled by the learning rate hyperparameter a:  V(S;) \u2014 (1\u2014a)V(S;) +aG;  V(St) \u2014 V(S:) + a(G: \u2014 V(S;)) V(St) \u2014 V(St) + a(Rea + WV (Sts1) \u2014 VOS%))  Similarly, for action-value estimation: Q(S1, Ar) \u2014 Q(S;, At) + (Rez + YQ(St41, Atzi) \u2014 Q(St, At))  Next, let's dig into the fun part on how to learn optimal policy in TD learning (aka \u201cTD control\u201d).\n\nBe prepared, you are gonna see many famous names of classic algorithms in this section. SARSA: On-Policy TD control  \u201cSARSA' refers to the procedure of updaing Q-value by following a sequence of ++) S4, At, Rizr, Sti1, Atyi,-.-", "be8fd581-fae8-41a4-8695-59d9cfc03135": ", mK, conditioned on the parameters \u00b5 and on the total number N of observations. From (2.29) this takes the form Note that the variables mk are subject to the constraint We now introduce a family of prior distributions for the parameters {\u00b5k} of the multinomial distribution (2.34). By inspection of the form of the multinomial distribution, we see that the conjugate prior is given by k \u00b5k = 1. Here \u03b11, . , \u03b1K are the parameters of the distribution, and \u03b1 denotes (\u03b11, . , \u03b1K)T. Note that, because of the summation constraint, the distribution over the space of the {\u00b5k} is con\ufb01ned to a simplex of dimensionality K \u2212 1, as illustrated for K = 3 in Figure 2.4. The normalized form for this distribution is by Exercise 2.9 which is called the Dirichlet distribution", "63b4f0d8-0443-4523-a7f1-15b8da42ba9e": "Forester (Ed. ), Cybernetics. Transactions of the Eighth Conference, pp. 173\u2013180. Josiah Macy Jr. Foundation. Shannon, C. E. \u201cTheseus\u201d maze-solving mouse. http://cyberneticzoo.com/mazesolvers/1952-theseus-maze-solving-mouse--claude-shannon-american/. Shelton, C. R. Importance Sampling for Reinforcement Learning with Multiple Objectives. Ph.D. thesis, Massachusetts Institute of Technology, Cambridge MA. Shepard, D. A two-dimensional interpolation function for irregularly-spaced data. In Proceedings of the 23rd ACM National Conference, pp. 517\u2013524. ACM, New York. Sherman, J., Morrison, W. J", "8f096430-e7d2-45ef-8439-f9862e27a646": "Regularization of an estimator works by trading increased bias for reduced variance. An effective regularizer is one that makes a profitable rade, reducing variance significantly while not overly increasing the bias.\n\nWhen we discussed generalization and overfitting in chapter 5, we focused on three situations, where the model family being trained either (1) excluded the true data-generating process\u2014corresponding to underfitting and inducing bias, or (2) matched the true data-generating process, or (3) included the generating process but also many other possible generating processes\u2014the overfitting regime where variance rather han bias dominates the estimation error. The goal of regularization is to take a model from the third regime into the second regime. In practice, an overly complex model family does not necessarily include the arget function or the true data-generating process, or even a close approximation  of either. We almost never have access to the true data-generating process so we can never know for sure if the model family being estimated includes the  generating process or not. Most applications of deep learning algorithms, however, are to domains where the true data-generating process is almost certainly outside the model family", "e8be68f3-b324-4888-bf0b-636ec45acc1f": "Indeed, experience with engineering applications has highlighted the importance of building into reinforcement learning systems knowledge that is analogous to what evolution provides to animals. Ludvig, Bellemare, and Pearson  and Shah  review reinforcement learning in the contexts of psychology and neuroscience.\n\nThese publications are useful companions to this chapter and the following chapter on reinforcement learning and neuroscience. 14.1 Dayan, Niv, Seymour, and Daw  focused on interactions between classical and instrumental conditioning, particularly situations where classicallyconditioned and instrumental responses are in con\ufb02ict. They proposed a Qlearning framework for modeling aspects of this interaction. Modayil and Sutton  used a mobile robot to demonstrate the e\u21b5ectiveness of a control method combining a \ufb01xed response with online prediction learning. Calling this Pavlovian control, they emphasized that it di\u21b5ers from the usual control methods of reinforcement learning, being based on predictively executing \ufb01xed responses and not on reward maximization. The electro-mechanical machine of Ross  and especially the learning version of Walter\u2019s turtle  were very early illustrations of Pavlovian control. 14.2.1 Kamin  \ufb01rst reported blocking, now commonly known as Kamin blocking, summary of the blocking phenomenon, the research it stimulated, and its lasting in\ufb02uence on animal learning theory", "b496774f-ab8e-417e-9b5c-0d98d65b458d": "This is much less efficient, in the sense of how much infor- mation can be gleaned early in an experiment, than manual search by a human practitioner, since one can usually tell early on if some set of hyperparameters is completely pathological. Swersky et al.\n\nhave introduced an early version of an algorithm that maintains a set of multiple experiments. At various time points, the hyperparameter optimization algorithm can choose to begin a new experiment, to \u201cfreeze\u201d a running experiment that is not promising, or to \u201cthaw\u201d and resume an experiment that was earlier frozen but now appears promising given more information. 11.5 Debugging Strategies  When a machine learning system performs poorly, it is usually difficult to tell whether the poor performance is intrinsic to the algorithm itself or whether there is a bug in the implementation of the algorithm. Machine learning systems are difficult to debug for various reasons. In most cases, we do not know a priori what the intended behavior of the algorithm is. In fact, the entire point of using machine learning is that it will discover useful behavior that we were not able to specify ourselves", "40fa55d5-de7d-4b80-a19a-62844289b0c4": "CONVOLUTIONAL NETWORKS  Generally, we do not use only a linear operation to transform from the inputs to the outputs in a convolutional layer. We generally also add some bias term to each output before applying the nonlinearity. This raises the question of how to share parameters among the biases. For locally connected layers, it is natural to give each unit its own bias, and for tiled convolution, it is natural to share the biases with the same tiling pattern as the kernels. For convolutional layers, it is typical to have one bias per channel of the output and share it across all locations within each convolution map. If the input is of known, fixed size, however, it is also possible to learn a separate bias at each location of the output map.\n\nSeparating the biases may slightly reduce the statistical efficiency of the model, but it allows the model to correct for differences in the image statistics at different locations. For example, when using implicit zero padding, detector units at the edge of the image receive less total input and may need larger biases", "b9385d4a-7a81-4251-b98f-24698dfffa48": "DEEP FEEDFORWARD NETWORKS  It would perhaps be better to call the softmax function \u201csoftargmax,\u201d but the current name is an entrenched convention. 6.2.2.4 Other Output Types  The linear, sigmoid, and softmax output units described above are the most common. Neural networks can generalize to almost any kind of output layer that we wish. The principle of maximum likelihood provides a guide for how to design a good cost function for nearly any kind of output layer. In general, if we define a conditional distribution p(y | x; @), the principle of maxinsenelle ieee dhipkses the agurallagtsyark as egpasscutivess function f(x; 4).\n\nhttps://www.deeplearningbook.org/contents/mlp.html    = W provides the parameters for a distribution over \u00a5. Our loss function can then be interpreted as \u2014 log p(y; w(a)). He By ee of this function are not direct predictions of the value y", "1e260b9f-c0d2-4b6c-8dc4-55b18fec4df0": "generate adversarial exam- ples to improve performance on the MNIST classification task.\n\nUsing a technique for generating adversarial examples known as the \u201cfast gradient sign method\u2019, a maxout network  misclassified 89.4% of adversarial examples with an average confidence of 97.6%. This test is done on the MNIST dataset. With adversarial training, the error rate of adversarial examples fell from 89.4% to 17.9% (Fig. 15). Li et al. experiment with a novel adversarial training approach and compare the  performance on original testing data and adversarial examples", "7ea4ab92-562e-4efb-abdc-fcc80daa6184": "Using (10.37) and (10.38) we can \ufb01rst perform the summation over \ufffdz to give Because the remaining integrations are intractable, we approximate the predictive density by replacing the true posterior distribution p(\u03c0, \u00b5, \u039b|X) with its variational approximation q(\u03c0)q(\u00b5, \u039b) to give where we have made use of the factorization (10.55) and in each term we have implicitly integrated out all variables {\u00b5j, \u039bj} for j \u0338= k The remaining integrations can now be evaluated analytically giving a mixture of Student\u2019s t-distributions Exercise 10.19 in which the kth component has mean mk, and the precision is given by in which \u03bdk is given by (10.63). When the size N of the data set is large the predictive distribution (10.81) reduces to a mixture of Gaussians. Exercise 10.20 We have seen that the variational lower bound can be used to determine a posterior distribution over the number K of components in the mixture model", "587de0b0-d488-4d95-9732-1b221fbdca9a": "Next, prove the results (10.220)\u2013 (10.222) by using (10.207) and completing the square in the exponential. Finally, use (10.208) to derive the result (10.223). For most probabilistic models of practical interest, exact inference is intractable, and so we have to resort to some form of approximation.\n\nIn Chapter 10, we discussed inference algorithms based on deterministic approximations, which include methods such as variational Bayes and expectation propagation. Here we consider approximate inference methods based on numerical sampling, also known as Monte Carlo techniques. Although for some applications the posterior distribution over unobserved variables will be of direct interest in itself, for most situations the posterior distribution is required primarily for the purpose of evaluating expectations, for example in order to make predictions. The fundamental problem that we therefore wish to address in this chapter involves \ufb01nding the expectation of some function f(z) with respect to a probability distribution p(z). Here, the components of z might comprise discrete or continuous variables or some combination of the two. Thus in the case of continuous variables, we wish to evaluate the expectation where the integral is replaced by summation in the case of discrete variables", "2acb1e4b-2106-4fff-a038-f28bcf9db69a": "The activations of the hidden units in the \ufb01rst hidden layer while the activations of the output units are given by Suppose we perform a linear transformation of the input data of the form Then we can arrange for the mapping performed by the network to be unchanged by making a corresponding linear transformation of the weights and biases from the inputs to the units in the hidden layer of the form Exercise 5.24 Similarly, a linear transformation of the output variables of the network of the form can be achieved by making a transformation of the second-layer weights and biases using If we train one network using the original data and one network using data for which the input and/or target variables are transformed by one of the above linear transformations, then consistency requires that we should obtain equivalent networks that differ only by the linear transformation of the weights as given.\n\nAny regularizer should be consistent with this property, otherwise it arbitrarily favours one solution over another, equivalent one. Clearly, simple weight decay (5.112), that treats all weights and biases on an equal footing, does not satisfy this property. We therefore look for a regularizer which is invariant under the linear transformations (5.116), (5.117), (5.119) and (5.120)", "84274483-b077-4308-933f-4f519b3edf36": "First, the optimization algorithm used for training may not be able to find the value of the parameters that corresponds o the desired function. Second, the training algorithm might choose the wrong function as a result of overfitting. Recall from section 5.2.1 that the no free lunch heorem shows that there is no universally superior machine learning algorithm.\n\nFeedforward networks provide a universal system for representing functions in the sense that, given a function, there exists a feedforward network that approximates  he function. There is no universal procedure for examining a training set of specific examples and choosing a function that will generalize to points not in the  https://www.deeplearningbook.org/contents/mlp.html    training set. According to the universal approximation theorem, there exists a network large enough to achieve any degree of accuracy we desire, but the theorem does not  say how large this network will be. Barron  provides some bounds on the size of a single-layer network needed to approximate a broad class of functions. Unfortunately, in the worst case, an exponential number of hidden units (possibly with one hidden unit corresponding to each input configuration that needs to be distinguished) may be required", "937fe110-d861-4ec0-9dbf-a0d69f027d5a": "Some methods may in fact diverge, with their VE approaching in\ufb01nity in the limit. In the last two sections we outlined a framework for combining a wide range of reinforcement learning methods for value prediction with a wide range of function approximation methods, using the updates of the former to generate training examples for the latter. We also described a VE performance measure which these methods may aspire to minimize. The range of possible function approximation methods is far too large to cover all, and anyway too little is known about most of them to make a reliable evaluation or recommendation. Of necessity, we consider only a few possibilities.\n\nIn the rest of this chapter we focus on function approximation methods based on gradient principles, and on linear gradient-descent methods in particular. We focus on these methods in part because we consider them to be particularly promising and because they reveal key theoretical issues, but also because they are simple and our space is limited. We now develop in detail one class of learning methods for function approximation in value prediction, those based on stochastic gradient descent (SGD). SGD methods are among the most widely used of all function approximation methods and are particularly well suited to online reinforcement learning", "93970af5-aa44-4f07-8bd0-0a89ea7bb4d7": "In the tree-backup update, the target includes all these things plus the estimated values of the dangling action nodes hanging o\u21b5 the sides, at all levels. This is why it is called a treebackup update; it is an update from the entire tree of estimated action values. More precisely, the update is from the estimated action values of the leaf nodes of the tree. The action nodes in the interior, corresponding to the actual actions taken, do not participate. Each leaf node contributes to the target with a weight proportional to its probability of occurring under the target policy \u21e1. Thus each \ufb01rst-level action a contributes with a weight of \u21e1(a|St+1), except that the action actually taken, At+1, does not contribute at all. Its probability, \u21e1(At+1|St+1), is used to weight all the second-level action values. Thus, each non-selected second-level action a0 contributes with weight \u21e1(At+1|St+1)\u21e1(a0|St+2)", "b87141c7-8fc6-433d-8e28-c922bdcf06f6": "Finally, there are undirected links connecting each factor node to all of the variables nodes on which that factor depends. Consider, for example, a distribution that is expressed in terms of the factorization This can be expressed by the factor graph shown in Figure 8.40. Note that there are two factors fa(x1, x2) and fb(x1, x2) that are de\ufb01ned over the same set of variables. In an undirected graph, the product of two such factors would simply be lumped together into the same clique potential. Similarly, fc(x2, x3) and fd(x3) could be combined into a single potential over x2 and x3. The factor graph, however, keeps such factors explicit and so is able to convey more detailed information about the underlying factorization. f(x1, x2, x3) = \u03c8(x1, x2, x3) representing the same distribution as the undirected graph. (c) A different factor graph representing the same distribution, whose factors satisfy fa(x1, x2, x3)fb(x1, x2) = \u03c8(x1, x2, x3)", "b461845d-8444-4c37-90a7-2022ec02eb6a": "Association for Computational Linguistics.\n\nPeter F Brown, Peter V Desouza, Robert L Mercer, Vincent J Della Pietra, and Jenifer C Lai. 1992. Class-based n-gram models of natural language. Computational linguistics, 18(4):467\u2013479. Daniel Cer, Mona Diab, Eneko Agirre, Inigo LopezGazpio, and Lucia Specia. 2017. Semeval-2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation. In Proceedings of the 11th International Workshop on Semantic Evaluation , pages 1\u201314, Vancouver, Canada. Association for Computational Linguistics. Ciprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge, Thorsten Brants, Phillipp Koehn, and Tony Robinson. 2013. One billion word benchmark for measuring progress in statistical language modeling. arXiv preprint arXiv:1312.3005. Z. Chen, H. Zhang, X. Zhang, and L. Zhao", "9d6e96c8-df10-4f5b-95d9-3c6bf8caa4fc": "Generalization in reinforcement learning: Safely approximating the value function. In Advances in Neural Information Processing Systems 7 , pp. 369\u2013376. MIT Press, Cambridge, MA. Bradtke, S. J. Reinforcement learning applied to linear quadratic regulation.\n\nIn Advances in Neural Information Processing Systems 5 , pp. 295\u2013302. Morgan Kaufmann. Bradtke, S. J. Incremental Dynamic Programming for On-Line Adaptive Optimal Control. Bradtke, S. J., Barto, A. G. Linear least\u2013squares algorithms for temporal di\u21b5erence Bradtke, S. J., Ydstie, B. E., Barto, A. G. Adaptive linear quadratic control using policy iteration. In Proceedings of the American Control Conference, pp. 3475\u20133479. American Automatic Control Council, Evanston, IL. Brafman, R", "5858ff76-0f9b-4329-b074-36e66a81a3d9": "MIT Press. Williams, O., A. Blake, and R. Cipolla . Sparse Bayesian learning for ef\ufb01cient visual tracking. IEEE Transactions on Pattern Analysis and Machine Intelligence 27(8), 1292\u20131304. Williams, P. M. Using neural networks to model conditional multivariate densities. Neural Computation 8(4), 843\u2013854. Winn, J. and C. M. Bishop . Variational message passing. Journal of Machine Learning Research 6, 661\u2013694. Page numbers in bold indicate the primary source of information for the corresponding topic.", "8a61b289-88f9-42c7-9131-506f246eb32c": "Samples taken from GANs can be augmented with traditional augmentations such as lighting filters, or even used in neural network augmentation strategies such as Smart Augmentation or Neural Augmentation to cre- ate even more samples. These samples can be fed into further GANs and dramatically increase the size of the original dataset. The extensibility of the GAN framework is amongst many reasons they are so interesting to Deep Learning researchers. Test-time augmentation is analogous to ensemble learning in the data space. Instead of aggregating the predictions of different learning algorithms, we aggregate predictions across augmented images.\n\nWe can even extend the solution algorithm to parameterize prediction weights from different augmentations. This seems like a good solution for sys-  tems concerned with achieving very high performance scores, more so than prediction Shorten and Khoshgoftaar J Big Data  6:60   speed. Determining the effectiveness of test-time augmentation by primarily exploring test-time geometric transformations and Neural Style Transfer, is an area of future work. An interesting question for practical Data Augmentation is how to determine post- augmented dataset size. There is no consensus as to which ratio of original to final dataset size will result in the best performing model", "be0299c5-8cf3-4fb2-be2c-7e152eeecff8": "Example 6.4 illustrates a general di\u21b5erence between the estimates found by batch TD(0) and batch Monte Carlo methods. Batch Monte Carlo methods always \ufb01nd the estimates that minimize mean-squared error on the training set, whereas batch TD(0) always \ufb01nds the estimates that would be exactly correct for the maximum-likelihood model of the Markov process.\n\nIn general, the maximum-likelihood estimate of a parameter is the parameter value whose probability of generating the data is greatest. In this case, the maximum-likelihood estimate is the model of the Markov process formed in the obvious way from the observed episodes: the estimated transition probability from i to j is the fraction of observed transitions from i that went to j, and the associated expected reward is the average of the rewards observed on those transitions. Given this model, we can compute the estimate of the value function that would be exactly correct if the model were exactly correct. This is called the certainty-equivalence estimate because it is equivalent to assuming that the estimate of the underlying process was known with certainty rather than being approximated. In general, batch TD(0) converges to the certainty-equivalence estimate. This helps explain why TD methods converge more quickly than Monte Carlo methods", "9c5a3271-94df-4a7f-9624-4f0f6e090222": "Formally, we consider a Markov decision process (MDP) as illustrated in Figure 3, where t = (x, y) is the state-action pair. For example, in playing a video game, the state x is the game screen by the environment (the game engine) and y can be any game actions.\n\nAt time t, the A base concept that plays a central role in characterizing the learning in this setting is the action value function, also known as the Q function, which is the expected discounted future reward of taking action y in state x and continuing with the policy p\u03b8: where the expectation is taken by following the state dynamics induced by the policy (thus the dependence of Q\u03b8 on policy parameters \u03b8). We next discuss how Q\u03b8(x, y) can be used to specify the experience function in di\ufb00erent ways, which in turn derives various known algorithms in reinforcement learning (RL) . Note that here we are primarily interested in learning the conditional model (policy) p\u03b8(y|x). Yet we can still de\ufb01ne the joint distribution as p\u03b8(x, y) = p\u03b8(y|x)p0(x). 4.3.1. Expected future reward", "a12d771f-7f7a-4d77-b326-d1db9c1897f2": "The predictive distribution over t, given a new input x, is easily evaluated for this model using the Gaussian variational posterior for the parameters where we have evaluated the integral by making use of the result (2.115) for the linear-Gaussian model. Here the input-dependent variance is given by Note that this takes the same form as the result (3.59) obtained with \ufb01xed \u03b1 except that now the expected value E appears in the de\ufb01nition of SN. Another quantity of importance is the lower bound L de\ufb01ned by Evaluation of the various terms is straightforward, making use of results obtained in Exercise 10.27 10.4. Exponential Family Distributions In Chapter 2, we discussed the important role played by the exponential family of distributions and their conjugate priors.\n\nFor many of the models discussed in this book, the complete-data likelihood is drawn from the exponential family. However, in general this will not be the case for the marginal likelihood function for the observed data. For example, in a mixture of Gaussians, the joint distribution of observations xn and corresponding hidden variables zn is a member of the exponential family, whereas the marginal distribution of xn is a mixture of Gaussians and hence is not. Up to now we have grouped the variables in the model into observed variables and hidden variables", "2a7ce84e-af3d-48c2-ba06-13ca1db569ec": "359  CHAPTER 9. CONVOLUTIONAL NETWORKS  These grandmother cells have been shown to actually exist in the human brain, in a region called the medial temporal lobe . Researchers tested whether individual neurons would respond to photos of famous individuals. They found what has come to be called the \u201cHalle Berry neuron,\u201d an individual neuron that is activated by the concept of Halle Berry.\n\nThis neuron fires when a person sees a photo of Halle Berry, a drawing of Halle Berry, or even text containing the words \u201cHalle Berry.\u201d Of course, this has nothing to do with Halle Berry herself; other neurons responded to the presence of Bill Clinton, Jennifer Aniston, and so  https://www.deeplearningbook.org/contents/convnets.html    forth. These medial temporal lobe neurons are somewhat more general than modern convolutional networks, which would not automatically generalize to identifying  a person or object when reading its name. The closest analog to a convolutional network\u2019s last layer of features is a brain area called the inferotemporal cortex (IT)", "791df5dd-31e7-4a69-923d-04d69655a1aa": "In the episodic case, the extension is straightforward, but in the continuing case we have to take a few steps backward and re-examine how we have used discounting to de\ufb01ne an optimal policy.\n\nSurprisingly, once we have genuine function approximation we have to give up discounting and switch to a new \u201caverage-reward\u201d formulation of the control problem, with new \u201cdi\u21b5erential\u201d value functions. Starting \ufb01rst in the episodic case, we extend the function approximation ideas presented in the last chapter from state values to action values. Then we extend them to control following the general pattern of on-policy GPI, using \"-greedy for action selection. We show results for n-step linear Sarsa on the Mountain Car problem. Then we turn to the continuing case and repeat the development of these ideas for the average-reward case with di\u21b5erential values. The extension of the semi-gradient prediction methods of Chapter 9 to action values is straightforward. In this case it is the approximate action-value function, \u02c6q \u21e1 q\u21e1, that is represented as a parameterized functional form with weight vector w", "e51f81db-b4ac-4247-9185-f199a8131c8d": "Today, that does not appear to be the case.\n\nThe problem remains an active area of research, but experts now suspect that, for sufficiently large neural networks, most local minima have a low cost function value, and that it is not important to find a true global minimum rather than to find a point in parameter space that has low but not minimal cost . Many practitioners attribute nearly all difficulty with neural network optimiza- ion to local minima. We encourage practitioners to carefully test for specific problems. A test that can rule out local minima as the problem is plotting the norm of the gradient over time. If the norm of the gradient does not shrink to insignificant size, the problem is neither local minima nor any other kind of critical point. In high-dimensional spaces, positively establishing that local minima are  he problem can be very difficult. Many structures other than local minima also have small gradients. 8.2.3 Plateaus, Saddle Points and Other Flat Regions  For many high-dimensional nonconvex functions, local minima (and maxima) are in fact rare compared to another kind of point with zero gradient: a saddle point. Some points around a saddle point have greater cost than the saddle point, while others have a lower cost", "98491fe2-a784-488a-92af-64789ab66ecd": "a minimum of the training error has been reached then represents a way of limiting the effective network complexity. In the case of a quadratic error function, we can verify this insight, and show that early stopping should exhibit similar behaviour to regularization using a simple weight-decay term. This can be understood from Figure 5.13, in which the axes in weight space have been rotated to be parallel to the eigenvectors of the Hessian matrix.\n\nIf, in the absence of weight decay, the weight vector starts at the origin and proceeds during training along a path that follows the local negative gradient vector, then the weight vector will move initially parallel to the w2 axis through a point corresponding roughly to \ufffdw and then move towards the minimum of the error function wML. This follows from the shape of the error surface and the widely differing eigenvalues of the Hessian. Stopping at a point near \ufffdw is therefore similar to weight decay", "b2e59cae-b820-41c5-b9ef-22f8c8fd7c71": "Generative models used in this setting have been based on conditional VAE , GAN  or pre-trained language models like GPT-2 . Overall, these conditional generation methods can create novel and diverse data that might be unseen in the original dataset, but require signi\ufb01cant training effort. Adversarial methods create augmented examples by adding adversarial perturbations to the original data, which dramatically in\ufb02uences the model\u2019s predictions and con\ufb01dence without changing human judgements.\n\nThese adversarial examples  could be leveraged in adversarial training  to increase neural models\u2019 robustness, and can also be utilized as data augmentation to increase the models\u2019 generalization ability .1 White-Box methods rely on model architecture and parameters being accessible and create adversarial examples directly using a model\u2019s gradients. Unlike image pixel values that are continuous, textual tokens are discrete and cannot be directly modi\ufb01ed based on gradients. To this end, adversarial perturbations are added directly to token embeddings or sentence hidden representations  which creates \u201cvirtual adversarial examples\u201d. Other approaches vectorize modi\ufb01cation operations as the difference of one-hot vectors (Ebrahimi et al., 2018b,a), or \ufb01nd real word neighbors in a model\u2019s hidden representations via its gradients", "1a66f19b-6ac6-4363-ad6a-d44edcb11215": "DEEP FEEDFORWARD NETWORKS  \u00a9 ia a  vuracy (percent)  \u00b0 = >  https://www.deeplearningbook.org/contents/mlp.html    ure  93.5 93.0  92.5  92.0 3 4 5 6 7 8 9 10 11  Test acc  Figure 6.6: Effect of depth. Empirical results showing that deeper networks generalize better when used to transcribe multidigit numbers from photographs of addresses. Data from Goodfellow et al. The test set accuracy consistently increases with increasing depth. See figure 6.7 for a control experiment demonstrating that other increases to the model size do not yield the same effect. Many neural network architectures have been developed for specific tasks.\n\nSpecialized architectures for computer vision called convolutional networks are described in chapter 9. Feedforward networks may also be generalized to the recurrent neural networks for sequence processing, described in chapter 10, which have their own architectural considerations. In general, the layers need not be connected in a chain, even though this is the most common practice. Many architectures build a main chain but then add extra architectural features to it, such as skip connections going from layer i to layer 4+ 2 or higher", "4bf1bb7a-6f52-4be3-8772-df0e5d8a0957": "Theoretical Neuroscience: Computational and Mathematical Modeling of Neural Systems. MIT Press, Cambridge, MA. Dayan, P., Niv, Y. Reinforcement learning: the good, the bad and the ugly. Current Dayan, P., Niv, Y., Seymour, B., Daw, N. D. .\n\nThe misbehavior of value and the discipline De Asis, K., Hernandez-Garcia, J. F., Holland, G. Z., Sutton, R. S. Multi-step Reinforcement Learning: A Unifying Algorithm. ArXiv:1703.01327. de Farias, D. P. The Linear Programming Approach to Approximate Dynamic Programming: Theory and Application. Stanford University PhD thesis. de Farias, D. P., Van Roy, B. The linear programming approach to approximate dynamic In Proceedings of the Fourteenth International Joint Conference on Arti\ufb01cial Intelligence (IJCAI-95), pp. 1121\u20131127", "49c1a744-b53a-414d-a3fc-48e59a2f5f65": "CONVOLUTIONAL NETWORKS  Output of softmax: 1,000 class probabilities  Output of matrix multiply: 1,000 units  Output of reshape to vector: 16,384 units  Output of poolng with stride 4: 16x16x64  Output o convolution + ReLU: 64x64x64  Output of poolng with stride 4: 64x64x64  Output o: convolution + ReLU: 256x256x64  Output of softmax: 1,000 class probabilities  Output of matrix multiply: 1,000 units  Output of reshape to vector: 576 units  Output of pooling to 3x3 grid: 3x3x64  Output 0: convolution + ReLU: 64x64x64  Output of poolng with stride 4: 64x64x64  Output 0: convolution + ReLU: 256x256x64  Output of softmax: 1,000 class probabilities  Output of average pooling: 1x1x1,000  Output 0! convolution: 16x16x1,000  Output of pooling with stride 4: 16x16x64  Output o: convolution + ReLU: 64x64x64  Output of pooling with stride 4: 64x64x64  Output 0: convolution + ReLU: 256x256x64  256x256x\u00ab Figure 9.11: Examples of architectures for classification with convolutional networks", "e3404bad-52d1-46ac-9f3e-f2b96bb92b89": "SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  wise clipping, the direction of the update is not aligned with the true gradient or the minibatch gradient, but it is still a descent direction. It has also been proposed  to clip the back-propagated gradient (with respect to hidden units), but no comparison has been published between these variants; we conjecture that all these methods behave similarly. 10.11.2 Regularizing to Encourage Information Flow  Gradient clipping helps to deal with exploding gradients, but it does not help with vanishing gradients. To address vanishing gradients and better capture long-term dependencies, we discussed the idea of creating paths in the computational graph of the unfolded recurrent architecture along which the product of gradients associated with arcs is near 1", "1d82320b-f6d3-42d9-8ce9-19d95271f3a2": "(10.130) We see that the functions f(x) and g(\u03bb) play a dual role, and are related through (10.129) and (10.130). Let us apply these duality relations to our simple example f(x) = exp(\u2212x).\n\nFrom (10.129) we see that the maximizing value of x is given by \u03be = \u2212 ln(\u2212\u03bb), and back-substituting we obtain the conjugate function g(\u03bb) in the form as obtained previously. The function \u03bb\u03be \u2212g(\u03bb) is shown, for \u03be = 1 in the right-hand plot in Figure 10.10. As a check, we can substitute (10.131) into (10.130), which gives the maximizing value of \u03bb = \u2212 exp(\u2212x), and back-substituting then recovers the original function f(x) = exp(\u2212x). For concave functions, we can follow a similar argument to obtain upper bounds, in which max\u2019 is replaced with \u2018min\u2019, so that If the function of interest is not convex (or concave), then we cannot directly apply the method above to obtain a bound", "58733b49-3b6e-4bc7-8c22-6d9570b1e541": "Semi-gradient TD methods are not true gradient methods. In such bootstrapping methods (including DP), the weight vector appears in the update target, yet this is not taken into account in computing the gradient\u2014thus they are semi-gradient methods. As such, they cannot rely on classical SGD results. Nevertheless, good results can be obtained for semi-gradient methods in the special case of linear function approximation, in which the value estimates are sums of features times corresponding weights. The linear case is the most well understood theoretically and works well in practice when provided with appropriate features. Choosing the features is one of the most important ways of adding prior domain knowledge to reinforcement learning systems.\n\nThey can be chosen as polynomials, but this case generalizes poorly in the online learning setting typically considered in reinforcement learning. Better is to choose features according the Fourier basis, or according to some form of coarse coding with sparse overlapping receptive \ufb01elds. Tile coding is a form of coarse coding that is particularly computationally e\ufb03cient and \ufb02exible. Radial basis functions are useful for one- or two-dimensional tasks in which a smoothly varying response is important", "b14fa393-a655-4fba-ae96-62e93098b253": "For instance, one common criticism of the Bayesian approach is that the prior distribution is often selected on the basis of mathematical convenience rather than as a re\ufb02ection of any prior beliefs. Even the subjective nature of the conclusions through their dependence on the choice of prior is seen by some as a source of dif\ufb01culty.\n\nReducing the dependence on the prior is one motivation for so-called noninformative priors. Section 2.4.3 However, these lead to dif\ufb01culties when comparing different models, and indeed Bayesian methods based on poor choices of prior can give poor results with high con\ufb01dence. Frequentist evaluation methods offer some protection from such problems, and techniques such as cross-validation remain useful in areas such as model Section 1.3 comparison. This book places a strong emphasis on the Bayesian viewpoint, re\ufb02ecting the huge growth in the practical importance of Bayesian methods in the past few years, while also discussing useful frequentist concepts as required. Although the Bayesian framework has its origins in the 18th century, the practical application of Bayesian methods was for a long time severely limited by the dif\ufb01culties in carrying through the full Bayesian procedure, particularly the need to marginalize (sum or integrate) over the whole of parameter space, which, as we shall see, is required in order to make predictions or to compare different models", "ab90d733-48c5-4582-942a-535a8a1d9e9e": "Future work  Future work in Data Augmentation will be focused on many different areas such as establishing a taxonomy of augmentation techniques, improving the quality of GAN samples, learning new ways to combine meta-learning and Data Augmentation, discov- ering relationships between Data Augmentation and classifier architecture, and extend- ing these principles to other data types. We are interested in seeing how the time-series component in video data impacts the use of static image augmentation techniques. Data Augmentation is not limited to the image domain and can be useful for text, bioinfor- matics, tabular records, and many more. Our future work intends to explore performance benchmarks across geometric and color space augmentations across several datasets from different image recognition tasks. These datasets will be constrained in size to test the effectiveness with respect to limited data problems. Zhang et al. test their novel GAN augmentation technique on the SVHN dataset across 50, 80, 100, 200, and 500 training instances.\n\nSimilar to this work, we will look to further establish benchmarks for different levels of limited data. Improving the quality of GAN samples and testing their effectiveness on a wide range of datasets is another very important area for future work", "af5863a6-58b9-478d-870e-d8ce91e724cf": "from torchvision import transforms def get_color_distortion(s=1.0): # s is the strength of color distortion.\n\ncolor_jitter = transforms.ColorJitter(0.8*s, 0.8*s, 0.8*s, 0.2*s) rnd_color_jitter = transforms.RandomApply(, p=0.8) rnd_gray = transforms.RandomGrayscale(p=0.2) color_distort = transforms.Compose() 12Our code and results are based on Tensor\ufb02ow, the Pytorch code here is a reference. A Simple Framework for Contrastive Learning of Visual Representations Gaussian blur This augmentation is in our default policy. We \ufb01nd it helpful, as it improves our ResNet-50 trained for 100 epochs from 63.2% to 64.5%. We blur the image 50% of the time using a Gaussian kernel. We randomly sample \u03c3 \u2208 , and the kernel size is set to be 10% of the image height/width. In both Figure 9 and Figure B.1, we use a linear scaling of learning rate similar to  when training with different batch sizes", "67c08829-82e1-4a58-bd56-3691c497ca85": "We therefore need to \ufb01nd a measure of performance which depends only on the training data and which does not suffer from bias due to over-\ufb01tting. Historically various \u2018information criteria\u2019 have been proposed that attempt to correct for the bias of maximum likelihood by the addition of a penalty term to compensate for the over-\ufb01tting of more complex models. For example, the Akaike information criterion, or AIC , chooses the model for which the quantity is largest. Here p(D|wML) is the best-\ufb01t log likelihood, and M is the number of adjustable parameters in the model.\n\nA variant of this quantity, called the Bayesian information criterion, or BIC, will be discussed in Section 4.4.1. Such criteria do not take account of the uncertainty in the model parameters, however, and in practice they tend to favour overly simple models. We therefore turn in Section 3.4 to a fully Bayesian approach where we shall see how complexity penalties arise in a natural and principled way. In the polynomial curve \ufb01tting example we had just one input variable x. For practical applications of pattern recognition, however, we will have to deal with spaces of high dimensionality comprising many input variables", "e9ac1855-c5d5-4f2d-9fef-60b306669a53": "If we used localized basis functions such as Gaussians, then in regions away from the basis function centres, the contribution from the second term in the predictive variance (3.59) will go to zero, leaving only the noise contribution \u03b2\u22121.\n\nThus, the model becomes very con\ufb01dent in its predictions when extrapolating outside the region occupied by the basis functions, which is generally an undesirable behaviour. This problem can be avoided by adopting an alternative Bayesian approach to regression known as a Gaussian process. Section 6.4 Note that, if both w and \u03b2 are treated as unknown, then we can introduce a conjugate prior distribution p(w, \u03b2) that, from the discussion in Section 2.3.6, will be given by a Gaussian-gamma distribution . In this case, the Exercise 3.12 The posterior mean solution (3.53) for the linear basis function model has an interesting interpretation that will set the stage for kernel methods, including Gaussian processes. If we substitute (3.53) into the expression (3.3), we see that the predictive Chapter 6 where SN is de\ufb01ned by (3.51). Thus the mean of the predictive distribution at a point x is given by a linear combination of the training set target variables tn, so that we can write is known as the smoother matrix or the equivalent kernel", "e3c49685-b058-4d5f-a2a8-e7d076c30dbf": "It will be inter- esting to see if better results can be achieved by erasing different shaped patches such as circles rather than 1 x m rectangles. An extension of this will be to parameterize the geometries of random erased patches and learn an optimal erasing configuration. A disadvantage to random erasing is that it will not always be a label-preserving trans- formation.\n\nIn handwritten digit recognition, if the top part of an \u20188\u2019 is randomly cropped out, it is not any different from a \u20186: In many fine-grained tasks such as the Stanford Cars dataset , randomly erasing sections of the image (logo, etc.) may make the car brand unrecognizable. Therefore, some manual intervention may be necessary depending on the dataset and task. Anote on combining augmentations  Of the augmentations discussed, geometric transformations, color space transforma- tions, kernel filters, mixing images, and random erasing, nearly all of these transforma- tions come with an associated distortion magnitude parameter as well. This parameter encodes the distortional difference between a 45\u00b0 rotation and a 30\u00b0 rotation", "057197da-ca25-467e-a0cd-e7c55005fc6e": "Chapter 6 is the most important for the subject and for the rest of the book. A course focusing on machine learning or neural networks should cover Chapters 9 and 10, and a course focusing on arti\ufb01cial intelligence or planning should cover Chapter 8. Throughout the book, sections and chapters that are more di\ufb03cult and not essential to the rest of the book are marked with a \u21e4. These can be omitted on \ufb01rst reading without creating problems later on.\n\nSome exercises are also marked with a \u21e4 to indicate that they are more advanced and not essential to understanding the basic material of the chapter. Most chapters end with a section entitled \u201cBibliographical and Historical Remarks,\u201d wherein we credit the sources of the ideas presented in that chapter, provide pointers to further reading and ongoing research, and describe relevant historical background. Despite our attempts to make these sections authoritative and complete, we have undoubtedly left out some important prior work. For that we again apologize, and we welcome corrections and extensions for incorporation into the electronic version of the book. Like the \ufb01rst edition, this edition of the book is dedicated to the memory of A. Harry Klopf. It was Harry who introduced us to each other, and it was his ideas about the brain and arti\ufb01cial intelligence that launched our long excursion into reinforcement learning", "7fca4f1a-0f45-4f8f-ae9f-e308b0be0ca5": "However, assembling enormous datasets can be a very daunting task due to the manual effort of collecting and labeling data. Limited datasets is an especially prevalent challenge in medical image analysis. Given big data, deep convolutional net- works have been shown to be very powerful for medical image analysis tasks such as skin lesion classification as demonstrated by Esteva et al. This has inspired the use of CNNs on medical image analysis tasks  such as liver lesion classification, brain scan analysis, continued research in skin lesion classification, and more. Many of the images studied are derived from computerized tomography (CT) and magnetic resonance imag- ing (MRI) scans, both of which are expensive and labor-intensive to collect. It is espe-  cially difficult to build big medical image datasets due to the rarity of diseases, patient Shorten and Khoshgoftaar J Big Data  6:60   privacy, the requirement of medical experts for labeling, and the expense and manual effort needed to conduct medical imaging processes. These obstacles have led to many studies on image Data Augmentation, especially GAN-based oversampling, from the application perspective of medical image classification.\n\nMany studies on the effectiveness of Data Augmentation utilize popular academic image datasets to benchmark results", "cc6ee4d8-76c7-41f6-b04e-06967b3586ae": "STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  16.2.4 Energy-Based Models  Many interesting theoretical results about undirected models depend on the as- sumption that Vx, p(x) > 0. A convenient way to enforce this condition is to use an energy-based model (EBM) where  P(x) = exp(\u2014E(x)), (16.7)  and E(x) is known as the energy function.\n\nBecause exp(z) is positive for all z, this guarantees that no energy function will result in a probability of zero for any state x. Being completely free to choose the energy function makes learning simpler. If we learned the clique potentials directly, we would need to use constrained optimization to arbitrarily impose some specific minimal probability value. By learning the energy function, we can use unconstrained optimization.\u201d The probabilities in an energy-based model can approach arbitrarily close to zero but never reach it. Any distribution of the form given by equation 16.7 is an example of a Boltz- mann distribution. For this reason, many energy-based models are called Boltzmann machines", "7214f0a3-8c33-439b-96ad-1e712995c180": "DEEP FEEDFORWARD NETWORKS  Figure 6.11: The computational graph used to compute the cost to train our example of a single-layer MLP using the cross-entropy loss and weight decay. explore two different branches. On the shorter branch, it adds H'G to the gradient on we), using the back-propagation rule for the second argument to the matrix multiplication operation. The other branch corresponds to the longer chain descending further along the network. First, the back-propagation algorithm computes VyJ = GW)' using the back-propagation rule for the first argument to the matrix multiplication operation. Next, the relu operation uses its back- propagation rule to zero out components of the gradient corresponding to entries of U\u00ae that are less than 0. Let the result be called G\u2019. The last step of the back-propagation algorithm is to use the back-propagation rule for the second argument of the matmul operation to add XG\u2019 to the gradient on W", "5be4c71b-1a91-4cb5-9114-9573a0d90db7": "This type of function is sometimes also called a \u2018squashing function\u2019 because it maps the whole real axis into a \ufb01nite interval. The logistic sigmoid has been encountered already in earlier chapters and plays an important role in many classi\ufb01cation algorithms. It satis\ufb01es the following symmetry property as is easily veri\ufb01ed. The inverse of the logistic sigmoid is given by and is known as the logit function.\n\nIt represents the log of the ratio of probabilities ln  for the two classes, also known as the log odds. Note that in (4.57) we have simply rewritten the posterior probabilities in an equivalent form, and so the appearance of the logistic sigmoid may seem rather vacuous. However, it will have signi\ufb01cance provided a(x) takes a simple functional form. We shall shortly consider situations in which a(x) is a linear function of x, in which case the posterior probability is governed by a generalized linear model. For the case of K > 2 classes, we have which is known as the normalized exponential and can be regarded as a multiclass generalization of the logistic sigmoid", "b8e73661-4632-4dd2-a152-fd23df795a74": "(Right)This directed model has interactions between latent variables when the visible variables are observed, because every two latent variables are coparents. Some probabilistic models are able to provide tractable inference over the latent variables despite having one of the graph structures depicted above. This is possible if the conditional probability distributions are chosen to introduce additional independences beyond those described by the graph.\n\nFor example, probabilistic PCA has the graph structure shown in the right yet still has simple inference because of special properties of the specific conditional distributions it uses (linear-Gaussian conditionals with mutually orthogonal basis vectors). https://www.deeplearningbook.org/contents/inference.html    630  CHAPTER 19. APPROXIMATE INFERENCE  19.1 Inference as Optimization  Many approaches to confronting the problem of difficult inference make use of the observation that exact inference can be described as an optimization problem. Approximate inference algorithms may then be derived by approximating the underlying optimization problem. To construct the optimization problem, assume we have a probabilistic model consisting of observed variables v and latent variables h", "135175af-dcd6-4da9-9094-42632d1fc90a": ".\n\nAnother nonlinear extension of ICA is the approach of nonlinear independent components estimation, or NICE , which stacks a series of invertible transformations (encoder stages) with the property that the determinant of the Jacobian of each transformation can be computed efficiently. This makes it possible to compute the likelihood exactly, and like ICA, NICE attempts to transform the data into a space where it has a factorized marginal distribution, but it is more likely to succeed thanks to the nonlinear encoder. Because the encoder is associated with a decoder that is its perfect inverse, generating samples from the model is straightforward (by first sampling from p(h) and then applying the decoder). Another generalization of ICA is to learn groups of features, with statistical  ire  https://www.deeplearningbook.org/contents/linear_factors.html    dependence allowed within a group but discouraged between groups . When the TOUpS of related units are chosen to be nonoverlapping, this is called independent subspace analysis. It is also possible to assign spatial coordinates to each hidden unit and form overlapping groups of spatially neighboring units. This encourages nearby units to learn similar features", "849a8af0-e4b1-45a1-9f1a-179ee4847474": "The connectivity is the same as for the original neural auto-regressive network of Bengio and Bengio , but NADE introduces an additional parameter sharing scheme, as illustrated in figure 20.10.\n\nThe parameters of the hidden units of different groups j are shared. The weights Wei from the i-th input 2; to the k-th element of the j-th group  hi he hg  https://www.deeplearningbook.org/contents/generative_models.html    aa 'Wio L7 \u201cWw  CeOMO  Figure 20.10: An illustration of the neural autoregressive density estimator (NADE). The hidden units are organized in groupsh\u201d) so that only the inputs x1,...,2; participate in computing h and predicting P(x; | xj-1,...,\u00ab1), for j > i. NADE is \u2018differentiated from earlier neural auto-regressive networks by the use of a particular weight sharing pattern: Ww; \u2018,, = Wx, is shared (indicated in the figure by the use of the same line pattern for every instance of a replicated weight) for all the weights going out froma; to the k-th unit of any group j >i", "1d21c617-5e42-4f86-925b-3b8755a6d7f5": "Schraudolph, N. N. Local gain adaptation in stochastic gradient descent. In Proceedings of the International Conference on Arti\ufb01cial Neural Networks, pp. 569\u2013574. IEEE, London. Schraudolph, N. N. Fast curvature matrix-vector products for second-order gradient Schraudolph, N. N., Yu, J., Aberdeen, D. Fast online policy gradient learning with SMD Schulman, J., Chen, X., Abbeel, P. Equivalence between policy gradients and soft Schultz, D. G., Melsa, J. L. State Functions and Linear Control Systems. McGraw-Hill, Schultz, W. Predictive reward signal of dopamine neurons. Journal of Neurophysiology, Schultz, W., Apicella, P., Ljungberg, T. .\n\nResponses of monkey dopamine neurons to reward and conditioned stimuli during successive steps of learning a delayed response task. The Journal of Neuroscience, 13(3):900\u2013913", "0af8302f-a752-4bca-9fb6-49c2465fd33f": "If we take the particular case of a two-dimensional input space x = (x1, x2) we can expand out the terms and thereby identify the corresponding nonlinear feature mapping We see that the feature mapping takes the form \u03c6(x) = (x2 therefore comprises all possible second order terms, with a speci\ufb01c weighting between them. More generally, however, we need a simple way to test whether a function constitutes a valid kernel without having to construct the function \u03c6(x) explicitly. A necessary and suf\ufb01cient condition for a function k(x, x\u2032) to be a valid kernel  is that the Gram matrix K, whose elements are given by k(xn, xm), should be positive semide\ufb01nite for all possible choices of the set {xn}. Note that a positive semide\ufb01nite matrix is not the same thing as a matrix whose elements are nonnegative. Appendix C One powerful technique for constructing new kernels is to build them out of simpler kernels as building blocks", "049009de-37f2-4b48-8cdb-652831205ccf": "In the case of bagging, each model is trained to convergence on its respective training set.\n\nIn the case of dropout, typically most models are not explicitly trained at all\u2014usually, the model is large enough that it would be infeasible to sample all possible subnetworks within the lifetime of the universe. Instead, a tiny fraction of the possible subnetworks are each trained for a single step, and the parameter sharing causes the remaining subnetworks to arrive at good settings of the parameters. These are the only differences. Beyond these, dropout follows the bagging algorithm. For example, the training set encountered by each subnetwork is indeed a subset of the original training set sampled with replacement. To make a prediction, a bagged ensemble must accumulate votes from all its members. We refer to this process as inference in this context. So far, our description of bagging and dropout has not required that the model be explicitly probabilistic. Now, we assume that the model\u2019s role is to output a probability distribution. In the case of bagging, each model 7 produces a probability distribution  257  CHAPTER 7", "cb3d0397-5b3d-457c-800f-2325592bb040": "Do the same for the posterior distribution of the means q\u22c6(\u00b5k|\u039bk).\n\nNext consider the posterior distribution q\u22c6(\u03c0) for the mixing coef\ufb01cients and show that this too becomes sharply peaked around the maximum likelihood solution. Similarly, show that the responsibilities become equal to the corresponding maximum likelihood values for large N, by making use of the following asymptotic result for the digamma function for large x Finally, by making use of (10.80), show that for large N, the predictive distribution becomes a mixture of Gaussians. 10.21 (\u22c6) Show that the number of equivalent parameter settings due to interchange symmetries in a mixture model with K components is K!. 10.22 (\u22c6 \u22c6) We have seen that each mode of the posterior distribution in a Gaussian mixture model is a member of a family of K! equivalent modes. Suppose that the result of running the variational inference algorithm is an approximate posterior distribution q that is localized in the neighbourhood of one of the modes. We can then approximate the full posterior distribution as a mixture of K! such q distributions, once centred on each mode and having equal mixing coef\ufb01cients", "75f078a8-bfaa-409d-973c-be0dc3bbd4b5": "The classifier is also often able to ignore many parts of the input. For example, when recognizing an object in a photo, it is usually possible to ignore the background of the photo. It is possible to ask probabilistic models to do many other tasks. These tasks are often more expensive than classification. Some of them require producing multiple output values.\n\nMost require a complete understanding of the entire structure of  file:///Users/lichenghu/Desktop/DSC-291%20copy/structed_models.html    the input, with no option to ignore sections of it. These tasks include the following: ' A natural image is an image that might be captured by a camera in a reasonably ordinary environment, as opposed to a synthetically rendered image, a screenshot of a web page, etc. 556  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  e Density estimation: Given an input x, the machine learning system returns an estimate of the true density p(x) under the data-generating distribution. This requires only a single output, but it also requires a complete understanding of the entire input", "3b726367-c7c3-4ae7-ba69-977b2e7f0218": "Google\u2019s multilingual neural machine translation system: Enabling zero-shot translation. Transactions of the Association for Computational Linguistics, 5:339\u2013351. Sosuke Kobayashi. 2018. Contextual augmentation: Data augmentation by words with paradigmatic relations. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 2 (Short Papers), pages 452\u2013457, New Orleans, Louisiana. Association for Computational Linguistics. Oleksandr Kolomiyets, Steven Bethard, and MarieFrancine Moens. 2011. Model-portability experiments for textual temporal analysis. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 271\u2013276, Portland, Oregon, USA. Association for Computational Linguistics.\n\nAlex Krizhevsky, I. Sutskever, and G. Hinton. 2012. Imagenet classi\ufb01cation with deep convolutional neural networks. Advances in neural information processing systems, 25(2)", "b21ae364-4eee-497d-b854-b67a53e06125": "We denote the action selected on time step t as At, and the corresponding reward as Rt. The value then of an arbitrary action a, denoted q\u21e4(a), is the expected reward given that a is selected: If you knew the value of each action, then it would be trivial to solve the k-armed bandit problem: you would always select the action with highest value. We assume that you do not know the action values with certainty, although you may have estimates. We denote the estimated value of action a at time step t as Qt(a).\n\nWe would like Qt(a) to be close to q\u21e4(a). If you maintain estimates of the action values, then at any time step there is at least one action whose estimated value is greatest. We call these the greedy actions. When you select one of these actions, we say that you are exploiting your current knowledge of the values of the actions. If instead you select one of the nongreedy actions, then we say you are exploring, because this enables you to improve your estimate of the nongreedy action\u2019s value", "da4cd253-f58e-4db4-b896-1708d1fb74b0": "Finally, if there were more than three pieces, the fourth unit was set to a value proportionate to the number of additional pieces beyond three.\n\nLetting n denote the total number of pieces on the point, if n > 3, then the fourth unit took on the value (n\u22123)/2. This encoded a linear representation of \u201cmultiple spares\u201d at the given point. With four units for white and four for black at each of the 24 points, that made a total of 192 units. Two additional units encoded the number of white and black pieces on the bar (each took the value n/2, where n is the number of pieces on the bar), and two more encoded the number of black and white pieces already successfully removed from the board (these took the value n/15, where n is the number of pieces already borne o\u21b5). Finally, two units indicated in a binary fashion whether it was white\u2019s or black\u2019s turn to move. The general logic behind these choices should be clear. Basically, Tesauro tried to represent the position in a straightforward way, while keeping the number of units relatively small", "b06eb2ca-dc5e-484d-86e2-02d8e40ebee7": "A background in physics is not required as this section is self-contained and the key results are all derived from \ufb01rst principles. The dynamical approach to stochastic sampling has its origins in algorithms for simulating the behaviour of physical systems evolving under Hamiltonian dynamics. In a Markov chain Monte Carlo simulation, the goal is to sample from a given probability distribution p(z). The framework of Hamiltonian dynamics is exploited by casting the probabilistic simulation in the form of a Hamiltonian system. In order to remain in keeping with the literature in this area, we make use of the relevant dynamical systems terminology where appropriate, which will be de\ufb01ned as we go along. The dynamics that we consider corresponds to the evolution of the state variable z = {zi} under continuous time, which we denote by \u03c4.\n\nClassical dynamics is described by Newton\u2019s second law of motion in which the acceleration of an object is proportional to the applied force, corresponding to a second-order differential equation over time", "b7b9bd55-32dc-4632-8fe4-4c42339067db": "In the mcRBM or mPoT models, an overcomplete representation would mean that to capture variation in a particular direction in the observation space would require removing potentially all constraints with positive projection in that direction. This would suggest that these models are less well  suited to the overcomplete setting. The primary disadvantage of the spike and slab restricted Boltzmann machine is that some settings of the parameters can correspond to a covariance matrix that is not positive definite. Such a covariance matrix places more unnormalized probability on values that are farther from the mean, causing the integral over all possible outcomes to diverge. Generally this issue can be avoided with simple heuristic tricks. There is not yet any theoretically satisfying solution.\n\nUsing constrained optimization to explicitly avoid the regions where the probability is undefined is difficult to do without being overly conservative and also preventing the model from accessing high-performing regions of parameter space. Qualitatively, convolutional variants of the ssRBM produce excellent samples of natural images. Some examples are shown in figure 16.1. The ssRBM allows for several extensions", "eda344fb-5d93-415c-a50c-863c7e1553c1": "This force pushes the particle downhill along the cost function surface. The gradient descent algorithm would simply take a single step based on each gradient, but the Newtonian scenario used by the momentum algorithm instead uses this force to alter the velocity of the particle. We can think of the particle as being like a hockey puck sliding down an icy surface. Whenever it descends a steep part of the surface, it gathers speed and continues sliding in that direction  until it begins to go uphill again. One other force is necessary.\n\nIf the only force is the gradient of the cost function, then the particle might never come to rest. Imagine a hockey puck sliding down one side of a valley and straight up the other side, oscillating back and forth forever, assuming the ice is perfectly frictionless. To resolve this problem, we add one other force, proportional to \u2014v(t). In physics terminology, this force corresponds to viscous drag, as if the particle must push through a resistant medium such as syrup. This causes the particle to gradually lose energy over time and eventually converge to a local minimum", "f4fcb684-947f-4895-ab1c-b957f45368ff": "(3) Snorkel uses these labels to train a discriminative classi\ufb01cation model, such as a deep neural network ended; they can leverage information from multiple contexts simultaneously, such as combining information from a document\u2019s title, named entities in the text, and knowledge bases. This heterogeneity was cumbersome enough to completely block users of early versions of Snorkel. To address this challenge, we built an interface layer around the abstract concept of a labeling function (LF). We developed a \ufb02exible language for expressing weak supervision strategies and supporting data structures. We observed accelerated user productivity with these tools, which we validated in a user study where SMEs build models 2.8\u00d7 faster and increase predictive performance an average 45.5% versus seven hours of hand labeling. Trade-offs in Modeling of Sources Snorkel learns the accuracies of weak supervision sources without access to ground truth using a generative model . Furthermore, it also learns correlations and other statistical dependencies among sources, correcting for dependencies in labeling functions that skew the estimated accuracies .\n\nThis paradigm gives rise to previously unexplored trade-off spaces between predictive performance and speed", "e32fadbf-feba-46db-b5a1-f9e40a818dd9": "Here we shall focus on a widely used model known as a linear dynamical system.\n\nAs we have seen, the HMM corresponds to the state space model shown in Figure 13.5 in which the latent variables are discrete but with arbitrary emission probability distributions. This graph of course describes a much broader class of probability distributions, all of which factorize according to (13.6). We now consider extensions to other distributions for the latent variables. In particular, we consider continuous latent variables in which the summations of the sum-product algorithm become integrals. The general form of the inference algorithms will, however, be the same as for the hidden Markov model. It is interesting to note that, historically, hidden Markov models and linear dynamical systems were developed independently. Once they are both expressed as graphical models, however, the deep relationship between them immediately becomes apparent. One key requirement is that we retain an ef\ufb01cient algorithm for inference which is linear in the length of the chain. This requires that, for instance, when we take a quantity \ufffd\u03b1(zn\u22121), representing the posterior probability of zn given observations x1,", "de0d799a-91f2-4aa2-9483-4cb7ba8d1011": "Other issues like the introduction of the OS6 operating system space: comet asteroid spaceship In summary, this asteroid asteroid ship is about to make its maiden \ufb02ight to explore deep-space.\\n\\n \"The asteroid craft was a very early attempt at the discovery of a new home for the world\u2019s \ufb01rst black hole,\" NASA said in a news release. \"Today we religion: faith faith faith salvation In summary, Christian beliefs are not a new way to use the time spent thinking about God\u2019s world as a source for faith. Faith is an effort to think of the world without fear that it might become a dangerous place for the human family.\n\nBecause it represents the very essence that science: climate research chemistry In summary of the study, this review aims to determine how in a single study where the same number of data was analysed, a new methodology is needed to better understand who produced a different graph than the one suggested. The paper will be published in issue #5, Issue #18. military: the cavalry battalion a In summary, the army are a unit of the same type and in all, so there is no need to declare one", "1eb1af5d-493e-4bbc-b699-daf1405dfac4": "The main drawback to this approach is that we will only be able to train the inference network on values of v that have high probability under the model. Early in learning, the model distribution will not resemble the data distribution, so the inference network will not have an opportunity to learn on samples that resemble data. In section 18.2 we saw that one possible explanation for the role of dream sleep in human beings and animals is that dreams could provide the negative phase samples that Monte Carlo training algorithms use to approximate the negative gradient of the log partition function of undirected models. Another possible explanation for biological dreaming is that it is providing samples from p(h, v) which can be used to train an inference network to predict h given v. In some senses, this explanation is more satisfying than the partition function explanation. Monte Carlo algorithms generally do not perform well if they are run using only the positive phase of the gradient for several steps then with only the negative phase of the gradient for several steps. Human beings and animals are usually awake for several consecutive hours then asleep for several consecutive hours.\n\nIt is not readily apparent how this schedule could support Monte Carlo training of an undirected model", "44876aef-e1ec-4781-b0cf-69766b56d824": "There are many possible choices of encoders and decoders, depending on the type of data and model. In our example we used relatively simple neural networks, namely multi-layered perceptrons (MLPs). For the encoder we used a MLP with Gaussian output, while for the decoder we used MLPs with either Gaussian or Bernoulli outputs, depending on the type of data. In this case let p\u03b8(x|z) be a multivariate Bernoulli whose probabilities are computed from z with a fully-connected neural network with a single hidden layer: where f\u03c3(.) is the elementwise sigmoid activation function, and where \u03b8 = {W1, W2, b1, b2} are the weights and biases of the MLP. In this case let encoder or decoder be a multivariate Gaussian with a diagonal covariance structure: where {W3, W4, W5, b3, b4, b5} are the weights and biases of the MLP and part of \u03b8 when used as decoder", "e1ba6a3f-06b8-4db5-9ff8-eee9df8946eb": "Note that these recursions require that the forward pass be completed \ufb01rst so that the quantities \u00b5n and Vn will be available for the backward pass.\n\nFor the EM algorithm, we also require the pairwise posterior marginals, which can be obtained from (13.65) in the form \u03be(zn\u22121, zn) = (cn)\u22121 \ufffd\u03b1(zn\u22121)p(xn|zn)p(zn|z\u22121)\ufffd\u03b2(zn) Substituting for \ufffd\u03b1(zn) using (13.84) and rearranging, we see that \u03be(zn\u22121, zn) is a Gaussian with mean given with components \u03b3(zn\u22121) and \u03b3(zn), and a covariance between zn and zn\u22121 given by Exercise 13.31 So far, we have considered the inference problem for linear dynamical systems, assuming that the model parameters \u03b8 = {A, \u0393, C, \u03a3, \u00b50, V0} are known. Next, we consider the determination of these parameters using maximum likelihood . Because the model has latent variables, this can be addressed using the EM algorithm, which was discussed in general terms in Chapter 9", "1804cbb2-9638-48e0-a009-6f3f52e709db": "For a = b = 1, it reduces to a uniform distribution. The beta distribution is a special case of the K-state Dirichlet distribution for K = 2. The binomial distribution gives the probability of observing m occurrences of x = 1 in a set of N samples from a Bernoulli distribution, where the probability of observing x = 1 is \u00b5 \u2208 . denotes the number of ways of choosing m objects out of a total of N identical objects. Here m!, pronounced \u2018factorial m\u2019, denotes the product m \u00d7 (m \u2212 1) \u00d7 . , \u00d72 \u00d7 1.\n\nThe particular case of the binomial distribution for N = 1 is known as the Bernoulli distribution, and for large N the binomial distribution is approximately Gaussian. The conjugate prior for \u00b5 is the beta distribution. The Dirichlet is a multivariate distribution over K random variables 0 \u2a7d \u00b5k \u2a7d 1, where k = 1, . ., K, subject to the constraints Denoting \u00b5 = (\u00b51, . , \u00b5K)T and \u03b1 = (\u03b11,", "64672158-2e35-4ff6-8dec-12e7311cb925": "Another strategy is to place a penalty on the activations of the units in a neural network,  encouraging their activations to be sparse. This indirectly imposes a complicated penalty on the model parameters. We have already discussed (in section 7.1.2) how L! penalization induces a sparse parametrization\u2014meaning that many of the parameters become zero  (or close to zero). Representational sparsity, on the other hand, describes a  representation where many of the elements of the representation are zero (or close to zero)", "ccaad645-a382-4a72-ad97-e63bcb442052": "Because a goal of their study was to try to determine what minimal set of sensory cues are necessary for e\u21b5ective soaring, both to shed light on the cues birds might use for soaring and to minimize the sensing complexity required for automated glider soaring, the authors tried various sets of signals as input to the reinforcement learning agent.\n\nThey started by using state aggregation (Section 9.3) of a four-dimensional state space with dimensions giving local vertical wind speed, local vertical wind acceleration, torque depending on the di\u21b5erence between the vertical wind velocities at the left and right wing tips, and the local temperature. Each dimension was discretized into three bins: positive high, negative high, and small. Results, described below, showed that only two of these dimensions were critical for e\u21b5ective soaring behavior. The overall objective of thermal soaring is to gain as much altitude as possible from each rising column of air. Reddy et al. tried a straightforward reward signal that rewarded the agent at the end of each episode based on the altitude gained over the episode, a large negative reward signal if the glider touched the ground, and zero otherwise", "d39113ca-82a1-4845-9ac4-21babfd2713a": "The methods also di\u21b5er in several ways with respect to their e\ufb03ciency and speed of convergence. The remaining two chapters describe how these three classes of methods can be combined to obtain the best features of each of them.\n\nIn one chapter we describe how the strengths of Monte Carlo methods can be combined with the strengths of temporaldi\u21b5erence methods via multi-step bootstrapping methods. In the \ufb01nal chapter of this part of the book we show how temporal-di\u21b5erence learning methods can be combined with model learning and planning methods (such as dynamic programming) for a complete and uni\ufb01ed solution to the tabular reinforcement learning problem. The most important feature distinguishing reinforcement learning from other types of learning is that it uses training information that evaluates the actions taken rather than instructs by giving correct actions. This is what creates the need for active exploration, for an explicit search for good behavior. Purely evaluative feedback indicates how good the action taken was, but not whether it was the best or the worst action possible. Purely instructive feedback, on the other hand, indicates the correct action to take, independently of the action actually taken. This kind of feedback is the basis of supervised learning, which includes large parts of pattern classi\ufb01cation, arti\ufb01cial neural networks, and system identi\ufb01cation", "1773e277-0492-430f-a821-c77fbbbb1b56": "The techniques required to obtain good performance on GPU are very different from those used on CPU. For example, good CPU-based code is usually designed to read information from the cache as much as possible. On GPU, most writable memory locations are not cached, so it can actually be faster to compute the same value twice, rather than compute it once and read it back from memory. GPU code is also inherently multithreaded and the different threads must be coordinated with each other carefully. For example, memory operations are faster if they can be coalesced. Coalesced reads or writes occur when several threads can each read or write a value that they need simultaneously, as part of a single memory transaction. Different models of GPUs are able to coalesce different kinds of read patterns and different kinds of write patterns. Typically, memory operations are easier to coalesce if among n threads, thread i accesses byte i+ 7 of memory, and 7 is a multiple of some power of 2. The exact specifications differ between models of GPU.\n\nAnother common consideration for GPUs is making sure that each thread in a group executes the same instruction simultaneously. This means that branching can be difficult on GPU", "9a908ec4-f876-4595-8471-aaa1221026d4": "To evaluate a policy an evolutionary method holds the policy \ufb01xed and plays many games against the opponent, or simulates many games using a model of the opponent. The frequency of wins gives an unbiased estimate of the probability of winning with that policy, and can be used to direct the next policy selection. But each policy change is made only after many games, and only the \ufb01nal outcome of each game is used: what happens during the games is ignored.\n\nFor example, if the player wins, then all of its behavior in the game is given credit, independently of how speci\ufb01c moves might have been critical to the win. Credit is even given to moves that never occurred! Value function methods, in contrast, allow individual states to be evaluated. In the end, evolutionary and value function methods both search the space of policies, but learning a value function takes advantage of information available during the course of play. This simple example illustrates some of the key features of reinforcement learning methods. First, there is the emphasis on learning while interacting with an environment, in this case with an opponent player. Second, there is a clear goal, and correct behavior requires planning or foresight that takes into account delayed e\u21b5ects of one\u2019s choices", "0ca8624f-87bd-490b-9e59-01cfc0d35e42": "The state with all units off is assigned energy zero.\n\nWe can think of this as describing a model with a single variable that has n+ 1 states, or equivalently as a model that has n + 1 variables that assigns energy co to all but n+ 1 joint assignments of variables. While efficient, probabilistic max pooling does force the detector units to be mutually exclusive, which may be a useful regularizing constraint in some contexts or a harmful limit on model capacity in other contexts. It also does not support  1 + \" : vay 1 : 1\" : u : 1  https://www.deeplearningbook.org/contents/generative_models.html    to obtain th pOOlllg TexIOls,. UVELla J PLL POOLLLY, TERIOUs are Usually requirea to obtain the best performance from feedforward convolutional networks, so this constraint probably greatly reduces the performance of convolutional Boltzmann machines. Lee et al. demonstrated that probabilistic max pooling could be used to build convolutional deep Boltzmann machines. * This model is able to perform operations such as filling in missing portions of its input", "33fdadc0-0b4c-45fc-bcad-e8e5e00b5f0e": "It may simply be that convolutional networks were more computationally efficient than fully connected networks, so it was easier to run multiple experiments with them and tune their implementation and hyperparameters. Larger networks also seem  o be easier to train. With modern hardware, large fully connected networks appear to perform reasonably on many tasks, even when using datasets that were available and activation functions that were popular during the times when fully connected networks were believed not to work well.\n\nIt may be that the primary barriers to the success of neural networks were psychological (practitioners did not expect neural networks to work, so they did not make a serious effort to use neural networks). Whatever the case, it is fortunate that convolutional networks performed well decades ago. In many ways, they carried the torch for the rest of deep learning and paved the way to the acceptance of neural networks in general. Convolutional networks provide a way to specialize neural networks to work with data that has a clear grid-structured topology and to scale such models to very large size. This approach has been the most successful on a two-dimensional image topology. To process one-dimensional sequential data, we turn next to another powerful specialization of the neural networks framework: recurrent neural networks", "892813e8-31d5-4fe8-b490-8e0257f7e535": "Models that use probabilistic max pooling may still accept variably sized input images as long as  https://www.deeplearningbook.org/contents/generative_models.html    the output of the model is a feature map that can scale in size proportional to the input image. Pixels at the boundary of the image also pose some difficulty, which is exacer- bated by the fact that connections in a Boltzmann machine are symmetric. If we do not implicitly zero pad the input, there will be fewer hidden units than visible units, and the visible units at the boundary of the image will not be modeled well because they lie in the receptive field of fewer hidden units. However, if we do implicitly zero pad the input, then the hidden units at the boundary will be driven by fewer input pixels and may fail to activate when needed.\n\n20.7 Boltzmann Machines for Structured or Sequential Outputs  In the structured output scenario, we wish to train a model that can map from some input a to some output y, and the different entries of y are related to each other and must obey some constraints. For example, in the speech synthesis task,  681  CHAPTER 20", "0447c10a-fa4f-4fde-8b93-ada79326003a": "If we follow the evolution of the Hamiltonian equations for a \ufb01nite time, then the volume of this region will remain unchanged as will the value of H in this region, and hence the probability density, which is a function only of H, will also be unchanged. Although H is invariant, the values of z and r will vary, and so by integrating the Hamiltonian dynamics over a \ufb01nite time duration it becomes possible to make large changes to z in a systematic way that avoids random walk behaviour. Evolution under the Hamiltonian dynamics will not, however, sample ergodically from p(z, r) because the value of H is constant.\n\nIn order to arrive at an ergodic sampling scheme, we can introduce additional moves in phase space that change the value of H while also leaving the distribution p(z, r) invariant. The simplest way to achieve this is to replace the value of r with one drawn from its distribution conditioned on z. This can be regarded as a Gibbs sampling step, and hence from Section 11.3 we see that this also leaves the desired distribution invariant", "98935a67-e0f4-4bd3-93a8-f49f8a3a6c96": "Equivalently, the  383  CHAPTER 10.\n\nSEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  assumption is that the conditional probability distribution over the variables at time t+ 1 given the variables at time tis stationary , meaning that the relationship between the previous time step and the next time step does not depend on t. In principle, it would be possible to use \u00a2 as an extra input at each time step and let the learner discover any time-dependence while sharing as much as it can between different time steps. This would already be much better than using a different conditional probability distribution for each t, but the network would then have to extrapolate when faced with new values of t.  To complete our view of an RNN as a graphical model, we must describe how to draw samples from the model. The main operation that we need to perform is simply to sample from the conditional distribution at each time step. However, there is one additional complication. The RNN must have some mechanism for determining the length of the sequence. This can be achieved in various ways. When the output is a symbol taken from a vocabulary, one can add a special symbol corresponding to the end of a sequence", "41d908cc-e661-4c48-b968-ac6022aaac2b": "MACHINE LEARNING BASICS  https://www.deeplearningbook.org/contents/ml.html    = Vellx ee yoo (5.8) => Vw (xeerw - ye) (xOw - ye) =0 (5.9)  => Vw (wT x(a) Tx (train gy _ 2w X (train) T ay(train) + yin) Ty(eain) ) =0 (5.10) = 2X (train)T y (train), _ 2.X (train) Ty (train) =0 (5.11) =swe= (x(n Xx(rain)) -1 X (train) T ay(train) (5.12)  The system of equations whose solution is given by equation 5.12 is known as the normal equations. Evaluating equation 5.12 constitutes a simple learning algorithm. For an example of the linear regression learning algorithm in action, see figure 5.1. It is worth noting that the term linear regression is often used to refer to a slightly more sophisticated model with one additional parameter\u2014an intercept term b", "387dacac-d097-42b9-b327-c7167857a602": "(5.70) Expressed as a Gaussian conditional distribution on y \u2018\u2122), we have ply (train) | X (train) w) _ N (yt), X (ain)ay, I) (5.71)  ox exp (su _ X (train) w)! (y (train) _ xp) ) , (5.72)  where we follow the standard MSE formulation in assuming that the Gaussian variance on y is one. In what follows, to reduce the notational burden, we refer to (X (rain) y (train) as simply (X, y). To determine the posterior distribution over the model parameter vector w, we first need to specify a prior distribution.\n\nThe prior should reflect our naive belief about the value of these parameters. While it is sometimes difficult or unnatural to express our prior beliefs in terms of the parameters of the model, in practice we typically assume a fairly broad distribution, expressing a high degree of uncertainty about @", "5034e489-f5da-4091-860c-c21b63574b85": "In forming a GVF, for example, what should the cumulant, the policy, and the termination function be? The current state of the art is to select these manually, but far greater power and generality would come from making these task choices automatically, particularly when they derive from what the agent has previously constructed as a result of representation learning or experience with previous subproblems.\n\nIf GVF design is automated, then the design choices themselves will have to be explicitly represented. Rather than the task choices being in the mind of the designer and built into the code, they will have to be in the machine itself in such a way that they can be set and changed, monitored, \ufb01ltered, and searched among automatically. Tasks could then be built hierarchically upon others much like features are in an ANN. The tasks are the questions, and the contents of the ANN are the answers to those questions. We expect there will need to be a full hierarchy of questions to match the hierarchy of answers provided by modern deep learning methods. The \ufb01fth issue that we would like to highlight for future research is that of the interaction between behavior and learning via some computational analog of curiosity", "bed37ec7-ef79-415c-8dfb-e1b6be38a36a": "Thus if we take the exponential of both sides and normalize, we have In practice, we shall \ufb01nd it more convenient to work with the form (10.9) and then reinstate the normalization constant (where required) by inspection. This will become clear from subsequent examples. The set of equations given by (10.9) for j = 1, . , M represent a set of consistency conditions for the maximum of the lower bound subject to the factorization constraint. However, they do not represent an explicit solution because the expression on the right-hand side of (10.9) for the optimum q\u22c6 j (Zj) depends on expectations computed with respect to the other factors qi(Zi) for i \u0338= j.\n\nWe will therefore seek a consistent solution by \ufb01rst initializing all of the factors qi(Zi) appropriately and then cycling through the factors and replacing each in turn with a revised estimate given by the right-hand side of (10.9) evaluated using the current estimates for all of the other factors. Convergence is guaranteed because bound is convex with respect to each of the factors qi(Zi) . Our approach to variational inference is based on a factorized approximation to the true posterior distribution", "99b54f5c-56cf-429f-9055-0ad44976c955": "Exercises 8.1 (\u22c6) www By marginalizing out the variables in order, show that the representation (8.5) for the joint distribution of a directed graph is correctly normalized, provided each of the conditional distributions is normalized.\n\n8.2 (\u22c6) www Show that the property of there being no directed cycles in a directed graph follows from the statement that there exists an ordered numbering of the nodes such that for each node there are no links going to a lower-numbered node. 8.3 (\u22c6 \u22c6) Consider three binary variables a, b, c \u2208 {0, 1} having the joint distribution given in Table 8.2. Show by direct evaluation that this distribution has the property that a and b are marginally dependent, so that p(a, b) \u0338= p(a)p(b), but that they become independent when conditioned on c, so that p(a, b|c) = p(a|c)p(b|c) for both c = 0 and c = 1. 8.4 (\u22c6 \u22c6) Evaluate the distributions p(a), p(b|c), and p(c|a) corresponding to the joint distribution given in Table 8.2", "50dfe7b4-0191-492d-8710-5944fbe6a56f": "In this case, it is just as easy for you to cause your roommate to get sick as it is for your roommate to make you sick, so there is not a clean unidirectional narrative on which to base the model. This motivates using an undirected model. As with directed models, if two nodes in an undirected model are connected by an edge, then the random variables corresponding to those nodes interact with each other directly. Unlike directed models, the edge in an undirected model has no arrow and is not associated with a conditional probability distribution.\n\nWe denote the random variable representing your health as h,, the random variable representing your roommate\u2019s health as h,, and the random variable representing your colleague\u2019s health as h,. See figure 16.3 for a drawing of the graph representing this scenario. Formally, an undirected graphical model is a structured probabilistic model  563  CHAPTER 16. STRUCTURED PROBABILISTIC MODELS FOR DEEP LEARNING  OOO  Figure 16.3: An undirected graph representing how your roommate\u2019s healthh,, your  health h,, and your work colleague\u2019s health h affect each other", "4395da93-c986-419d-9450-f79711202cd1": "We introduced an algorithm that we deemed WGAN, an alternative to traditional GAN training. In this new model, we showed that we can improve the stability of learning, get rid of problems like mode collapse, and provide meaningful learning curves useful for debugging and hyperparameter searches. Furthermore, we showed that the corresponding optimization problem is sound, and provided extensive theoretical work highlighting the deep connections to other distances between distributions. We would like to thank Mohamed Ishmael Belghazi, Emily Denton, Ian Goodfellow, Ishaan Gulrajani, Alex Lamb, David Lopez-Paz, Eric Martin, Maxime Oquab, Aditya Ramesh, Ronan Riochet, Uri Shalit, Pablo Sprechmann, Arthur Szlam, Ruohan Wang, for helpful comments and advice. Martin Arjovsky and L\u00b4eon Bottou. Towards principled methods for training generative adversarial networks. In International Conference on Learning Representations, 2017. Under review. Gintare Karolina Dziugaite, Daniel M. Roy, and Zoubin Ghahramani", "7050aa3a-e762-4e42-b461-f338f44d3c7c": "This simpli\ufb01es simulations as well as theory, but we regard these simple eligibility traces as a placeholders for traces closer to Klopf\u2019s original conception, which would have computational advantages in complex reinforcement learning systems by re\ufb01ning the credit-assignment process. Klopf\u2019s hedonistic neuron hypothesis is not as implausible as it may at \ufb01rst appear. A well-studied example of a single cell that seeks some stimuli and avoids others is the bacterium Escherichia coli.\n\nThe movement of this single-cell organism is in\ufb02uenced by chemical stimuli in its environment, behavior known as chemotaxis. It swims in its liquid environment by rotating hairlike structures called \ufb02agella attached to its surface. (Yes, it rotates them!) Molecules in the bacterium\u2019s environment bind to receptors on its surface. Binding events modulate the frequency with which the bacterium reverses \ufb02agellar rotation. Each reversal causes the bacterium to tumble in place and then head o\u21b5 in a random new direction", "45aabc77-eb9e-42ad-a0ff-64e2089ee88f": "In particular, points that are misclassi\ufb01ed by one of the base classi\ufb01ers are given greater weight when used to train the next classi\ufb01er in the sequence. Once all the classi\ufb01ers have been trained, their predictions are then combined through a weighted majority voting scheme, as illustrated schematically in Figure 14.1.\n\nConsider a two-class classi\ufb01cation problem, in which the training data comprises input vectors x1, . , xN along with corresponding binary target variables t1, . , tN where tn \u2208 {\u22121, 1}. Each data point is given an associated weighting parameter wn, which is initially set 1/N for all data points. We shall suppose that we have a procedure available for training a base classi\ufb01er using weighted data to give a function y(x) \u2208 {\u22121, 1}. At each stage of the algorithm, AdaBoost trains a new classi\ufb01er using a data set in which the weighting coef\ufb01cients are adjusted according to the performance of the previously trained classi\ufb01er so as to give greater weight to the misclassi\ufb01ed data points. Finally, when the desired number of base classi\ufb01ers have been trained, they are combined to form a committee using coef\ufb01cients that give different weight to different base classi\ufb01ers", "81ab0a17-8487-43f7-97bf-3cdde90d43d5": "Because the table-based model has an astronomical number of parameters, it will require an astronomically large training set to fit accurately.\n\nAny such model will overfit the training set very badly unless additional assumptions are made linking the different entries in the table (as in back-off or smoothed n-gram models; section 12.4.1). e Runtime\u2014the cost of inference: Suppose we want to perform an inference task where we use our model of the joint distribution P(x) to compute some other distribution, such as the marginal distribution P(x1) or the conditional distribution P(x2 | x1). Computing these distributions will require summing across the entire table, so the runtime of these operations is as high as the intractable memory cost of storing the model. Runtime\u2014the cost of sampling: Likewise, suppose we want to draw a sample from the model. The naive way to do this is to sample some value u ~ U(0, 1), then iterate through the table, adding up the probability values until they exceed u and return the outcome corresponding to that position in the table. This requires reading through the whole table in the worst case, so it has the same exponential cost as the other operations", "66014063-43d7-4a25-ab9b-d72f3a5af9dc": "We therefore consider a Taylor expansion of ln f(z) centred on the mode z0 so that Note that the \ufb01rst-order term in the Taylor expansion does not appear since z0 is a local maximum of the distribution. Taking the exponential we obtain We can then obtain a normalized distribution q(z) by making use of the standard result for the normalization of a Gaussian, so that The Laplace approximation is illustrated in Figure 4.14. Note that the Gaussian approximation will only be well de\ufb01ned if its precision A > 0, in other words the stationary point z0 must be a local maximum, so that the second derivative of f(z) at the point z0 is negative.\n\nwhere \u03c3(z) is the logistic sigmoid function de\ufb01ned by \u03c3(z) = (1 + e\u2212z)\u22121. The left plot shows the normalized distribution p(z) in yellow, together with the Laplace approximation centred on the mode z0 of p(z) in red. The right plot shows the negative logarithms of the corresponding curves", "6b7cdaf3-334f-4d0e-b32c-f2b6fce7e2ab": "The final layer of a feedforward network is called the output layer. During neural network training, we drive f(x) to match f*(z). The training data provides us with noisy, approximate examples of f*(a) evaluated at different training points. Each example a is accompanied by a label y ~ f*(ax). The training examples specify directly what the output layer must do at each point x; it must produce a value that is close to y. The behavior of the other layers is not directly specified by the training data. The learning algorithm must decide how to use those layers to produce the desired output, but the training data do not say what each individual layer should do. Instead, the learning algorithm must decide how to use these layers to best implement an approximation of f*.\n\nBecause the training data does not show the desired output for each of these layers, they are called hidden layers. Finally, these networks are called neural because they are loosely inspired by neuroscience. Each hidden layer of the network is typically vector valued. The dimensionality of these hidden layers determines the width of the model", "877d85b0-9179-4027-829d-a1cf49f7d994": "REINFORCE with Baseline (episodic), for estimating \u21e1\u2713 \u21e1 \u21e1\u21e4 Input: a di\u21b5erentiable policy parameterization \u21e1(a|s, \u2713) Input: a di\u21b5erentiable state-value function parameterization \u02c6v(s,w) Algorithm parameters: step sizes \u21b5\u2713 > 0, \u21b5w > 0 Initialize policy parameter \u2713 2 Rd0 and state-value weights w 2 Rd (e.g., to 0) Generate an episode S0, A0, R1, . , ST \u22121, AT \u22121, RT , following \u21e1(\u00b7|\u00b7, \u2713) Loop for each step of the episode t = 0, 1, . , T \u2212 1: This algorithm has two step sizes, denoted \u21b5\u2713 and \u21b5w (where \u21b5\u2713 is the \u21b5 in (13.11)).\n\nChoosing the step size for values (here \u21b5w) is relatively easy; in the linear case we have rules of thumb for setting it, such as \u21b5w = 0.1/E much less clear how to set the step size for the policy parameters, \u21b5\u2713, whose best value depends on the range of variation of the rewards and on the policy parameterization", "579e51ed-ef22-471b-88bb-3b92e6b6c518": "Experiments conducted in the late 1980s and 1990s in the laboratory of neuroscientist Wolfram Schultz showed that dopamine neurons respond to rewarding events with substantial bursts of activity, called phasic responses, only if the animal does not expect those events, suggesting that dopamine neurons are signaling reward prediction errors instead of reward itself.\n\nFurther, these experiments showed that as an animal learns to predict a rewarding event on the basis of preceding sensory cues, the phasic activity of dopamine neurons shifts to earlier predictive cues while decreasing to later predictive cues. This parallels the backing-up e\u21b5ect of the TD error as a reinforcement learning agent learns to predict reward. Other experimental results \ufb01rmly establish that the phasic activity of dopamine neurons is a reinforcement signal for learning that reaches multiple areas of the brain by means of profusely branching axons of dopamine producing neurons. These results are consistent with the distinction we make between a reward signal, Rt, and a reinforcement signal, which is the TD error \u03b4t in most of the algorithms we present. Phasic responses of dopamine neurons are reinforcement signals, not reward signals", "7555b003-33cf-4901-b57c-45d7ca3001a2": "This is a useful property near a local minimum, but it can be a harmful property near a saddle point.\n\nAs discussed in section 8.2.3, Newton\u2019s method is only appropriate when the nearby critical point is a minimum (all the eigenvalues of the Hessian are positive), whereas gradient descent is not attracted to saddle points unless the gradient points toward them. Optimization algorithms that use only the gradient, such as gradient descent, are called first-order optimization algorithms. Optimization algorithms that also use the Hessian matrix, such as Newton\u2019s method, are called second-order optimization algorithms . The optimization algorithms employed in most contexts in this book are applicable to a wide variety of functions but come with almost no guarantees. Deep learning algorithms tend to lack guarantees because the family of functions used in deep learning is quite complicated. In many other fields, the dominant approach to optimization is to design optimization algorithms for a limited family of functions. In the context of deep learning, we sometimes gain some guarantees by restrict- ing ourselves to functions that are either Lipschitz continuous or have Lipschitz continuous derivatives", "6180a799-3ade-43e3-94e3-e7dd401fdc60": "We can further increase the capability of such models by allowing the mixing coef\ufb01cients themselves to be functions of the input variable, so that This is known as a mixture of experts model  in which the mixing coef\ufb01cients \u03c0k(x) are known as gating functions and the individual component densities pk(t|x) are called experts. The notion behind the terminology is that different components can model the distribution in different regions of input space (they are \u2018experts\u2019 at making predictions in their own regions), and the gating functions determine which components are dominant in which region.\n\nThe gating functions \u03c0k(x) must satisfy the usual constraints for mixing coef\ufb01cients, namely 0 \u2a7d \u03c0k(x) \u2a7d 1 and \ufffd k \u03c0k(x) = 1. They can therefore be represented, for example, by linear softmax models of the form (4.104) and (4.105). If the experts are also linear (regression or classi\ufb01cation) models, then the whole model can be \ufb01tted ef\ufb01ciently using the EM algorithm, with iterative reweighted least squares being employed in the M step . Such a model still has signi\ufb01cant limitations due to the use of linear models for the gating and expert functions", "0e84086f-8303-41b6-ad53-207a49bd65fe": "URs are often preparatory in some way, like the salivation of Pavlov\u2019s dog, or protective in some way, like an eye blink in response to something irritating to the eye, or freezing in response to seeing a predator. Experiencing the CS-US predictive relationship over a series of trials causes the animal to learn that the CS predicts the US so that the animal can respond to the CS with a CR that prepares the animal for, or protects it from, the predicted US. Some CRs are similar to the UR but begin earlier and di\u21b5er in ways that increase their e\u21b5ectiveness. In one intensively studied type of experiment, for example, a tone CS reliably predicts a pu\u21b5 of air (the US) to a rabbit\u2019s eye, triggering a UR consisting of the closure of a protective inner eyelid called the nictitating membrane. After one or more trials, the tone comes to trigger a CR consisting of membrane closure that begins before the air pu\u21b5 and eventually becomes timed so that peak closure occurs just when the air pu\u21b5 is likely to occur", "1fc596be-7f4f-4b50-a0d6-6c231e495aec": ") as a function and 6, as a value point.\n\nThe Taylor expansion of g  the value point 0 is:  g{ = VoL (61)  = VoL (0) + V3  = g) \u2014 gH g\u00ae = gf) \u2014 gH g\u00ae  Plug in the expanded form of g  9FOMAML = gs  JMAML = gt \u2014 7 = Io \u2014 ,(1 = gi  The Reptile gradient beco  f'(a)  9   9JFOMAML >= g 9JMAML = gl _ aH} gi JReptile \u2014 g + gi!) (1) 1  at anumber a is:  using Taylor expansion. Recall that Taylor expansion of a function  uO  9 (x \u2014a)?+---  rT (a \u2014 a)  a  0  ( at  1 L (5)(8; \u2014 9) + 9 VL (89)(O1 \u2014 09)? +. _ @ o3 n(t)g y(A(0))2 3 Vol Go)(95')\u00b0 +++  + O(a?) ( ; because 6 \u201409=\u2014ag\\  (1)  1", "f8ee8abd-2d09-458d-8f64-4f2da52cde8d": "Inclusion of this new data point leads to a revised distribution p(zn|x1, . , xn) for the state density shown in blue.\n\nWe see that observation of the data has shifted and narrowed the distribution compared to p(zn|x1, . , xn\u22121) (which is shown in dashed in the right-hand plot for comparison). If we consider a situation in which the measurement noise is small compared to the rate at which the latent variable is evolving, then we \ufb01nd that the posterior distribution for zn depends only on the current measurement xn, in accordance with Exercise 13.27 the intuition from our simple example at the start of the section. Similarly, if the latent variable is evolving slowly relative to the observation noise level, we \ufb01nd that the posterior mean for zn is obtained by averaging all of the measurements obtained up to that time. Exercise 13.28 One of the most important applications of the Kalman \ufb01lter is to tracking, and this is illustrated using a simple example of an object moving in two dimensions in Figure 13.22. So far, we have solved the inference problem of \ufb01nding the posterior marginal for a node zn given observations from x1 up to xn", "96ea456a-1e97-4180-95c8-91a0b908a348": "An eigenvector of a square matrix A is a nonzero vector v such that multi- plication by A alters only the scale of v:  Av =v. (2.39)  The scalar \\ is known as the eigenvalue corresponding to this eigenvector. (One can also find a left eigenvector such that v' A = dAv!, but we are usually concerned with right eigenvectors.) If v is an eigenvector of A, then so is any rescaled vector sv for s \u20ac R,s \u00a30. Moreover, sv still has the same eigenvalue.\n\nFor this reason, we usually look only for unit eigenvectors. Suppose that a matrix A has n linearly independent eigenvectors fo, weeg vl} with corresponding eigenvalues {\\1,...,\\n}", "b2394cec-139d-479c-b1f5-22ee380bc207": "nmurally form two groups comprising a set of ,mall ,'alues separated by a ,ign;flcant gap from a \",t of relativel)\" large ,'alues, indicating a natural cholcc f<>r AI, In practice. such a gap i, oflen ''''' seen Flgu.. 12.12 Synt\"'elic <lata illustrating too EM algorithm !of PCA defined by (12.58) and . (8) A data set X with the data points shown in 1JI'e\u00abl, t\"ll\"tM' W'i1!1l!>e t'IM pMdpal \"\"\"\"\"\"\",IS (shown as eigenveclor1 scaled by It>e squafll 'OOIS 04 the eigeJ'l\\lllluel)", "03894c46-768e-4c08-bfe1-de70e48e36f8": "PRACTICAL METHODOLOGY  network designed to detect a disease outputs \u00a7 = P(y =1| x), estimating the probability that a person whose medical results are described by features a has the disease. We choose to report a detection whenever this score exceeds some threshold. By varying the threshold, we can trade precision for recall. In many cases, we wish to summarize the performance of the classifier with a single number rather than a curve. To do so, we can convert precision p and recall r into an F-score given by 2pr a7  (11.1)  Another option is to report the total area lying beneath the PR curve. In some applications, it is possible for the machine learning system to refuse to make a decision. This is useful when the machine learning algorithm can estimate how confident it should be about a decision, especially if a wrong decision can be harmful and if a human operator is able to occasionally take over. The Street View transcription system provides an example of this situation. The task is to ranscribe the address number from a photograph to associate the location where che photo was taken with the correct address in a map", "3a32394a-dbfb-459e-87ec-972e611a98de": "Motivated by the weak relationship between dopamine neuron activity and stimulus-triggered eye and body movements, Romo and Schultz  and Schultz and Romo  took the \ufb01rst steps toward the reward prediction error hypothesis by recording the activity of dopamine neurons and muscle activity while monkeys moved their arms. They trained two monkeys to reach from a resting hand position into a bin containing a bit of apple, a piece of cookie, or a raisin, when the monkey saw and heard the bin\u2019s door open. The monkey could then grab and bring the food to its mouth. After a monkey became good at this, it was trained on two additional tasks. The purpose of the \ufb01rst task was to see what dopamine neurons do when movements are self-initiated. The bin was left open but covered from above so that the monkey could not see inside but could reach in from below", "8712678c-0160-44b4-b488-474f483dac2b": "MACHINE LEARNING BASICS  might be greater than zero, if two identical inputs are associated with different outputs) on any regression dataset.\n\nFinally, we can also create a nonparametric learning algorithm by wrapping a parametric learning algorithm inside another algorithm that increases the number of parameters as needed. For example, we could imagine an outer loop of learning that changes the degree of the polynomial learned by linear regression on top of a polynomial expansion of the input. The ideal model is an oracle that simply knows the true probability distribution that generates the data. Even such a model will still incur some error on many problems, because there may still be some noise in the distribution. In the case of supervised learning, the mapping from gx to y may be inherently stochastic, or y may be a deterministic function that involves other variables besides those included in aw. The error incurred by an oracle making predictions from the true distribution p(a, y) is called the Bayes error. Training and generalization error vary as the size of the training set varies. Expected generalization error can never increase as the number of training examples increases", "8d04c7df-2ca1-4789-8493-68550debbeb0": "Given a greedy strategy for growing the tree, there remains the issue of when to stop adding nodes. A simple approach would be to stop when the reduction in residual error falls below some threshold. However, it is found empirically that often none of the available splits produces a signi\ufb01cant reduction in error, and yet after several more splits a substantial error reduction is found. For this reason, it is common practice to grow a large tree, using a stopping criterion based on the number of data points associated with the leaf nodes, and then prune back the resulting tree. The pruning is based on a criterion that balances residual error against a measure of model complexity. If we denote the starting tree for pruning by T0, then we de\ufb01ne T \u2282 T0 to be a subtree of T0 if it can be obtained by pruning nodes from T0 (in other words, by collapsing internal nodes by combining the corresponding regions). Suppose the leaf nodes are indexed by \u03c4 = 1,", "8262d816-d9c8-41a7-9a2d-ea0e62ca4783": "This is achieved by including nonzero Gaussian means by the addition of Gaussian RBM-like hidden units.\n\nLike the mcRBM, the PoT conditional distribution over the observation is a multivariate Gaussian (with nondiagonal covariance) distribution; however, unlike the mcRBM, the complementary conditional distribution over the hidden variables is given by conditionally independent Gamma distributions. The Gamma distribution G(k, #) is a probability distribution over positive real numbers, with mean k6. It is not necessary to have a more detailed understanding of the Gamma distribution to understand the basic ideas underlying the mPoT model. The mPoT energy function is  Empor(@, h\u2019\u2122, RO) (20.48) _ m (c) 1 j)T 2 ; (c) = E,,(x,h'\u2122) +> (H (145 z) ) +a =a) town ). J (20.49)  where 9) is the covariance weight vector associated with unit no, and E,,(x, ni) is as defined in equation 20.44", "77b61e52-f3fa-462f-b629-2ca15ab12ca3": "We can try to approximate this distribution using some parametric distribution q(x|\u03b8), governed by a set of adjustable parameters \u03b8, for example a multivariate Gaussian.\n\nOne way to determine \u03b8 is to minimize the Kullback-Leibler divergence between p(x) and q(x|\u03b8) with respect to \u03b8. We cannot do this directly because we don\u2019t know p(x). Suppose, however, that we have observed a \ufb01nite set of training points xn, for n = 1, . , N, drawn from p(x). Then the expectation with respect to p(x) can be approximated by a \ufb01nite sum over these points, using (1.35), so that The second term on the right-hand side of (1.119) is independent of \u03b8, and the \ufb01rst term is the negative log likelihood function for \u03b8 under the distribution q(x|\u03b8) evaluated using the training set. Thus we see that minimizing this Kullback-Leibler divergence is equivalent to maximizing the likelihood function. Now consider the joint distribution between two sets of variables x and y given by p(x, y)", "a83ed730-39b2-41c4-bd81-592f8000f018": "We can then de\ufb01ne the distance between value functions using the norm \u00b5. For any value function v, the operation of \ufb01nding its closest value function in the subspace of representable value functions is a projection operation. We de\ufb01ne a The subspace of all value functions representable as  Unlike the original Bellman equation, for most function approximators (e the projected Bellman equation can be solved exactly. If it can\u2019t be solved minimize the mean-squared projected Bellman error: The minimum is achieved at the projection \ufb01xpoint, at which . Baird  extended it to TDL based on stochastic gradient d Engel, Mannor, and Meir  extended it to least squares (O(n2)) methods known as Gaussian Process TDL. In the literature, BE minimization is often referred to as Bellman residual minimization.\n\nThe third goal for approximation is to approximately solve the projected Bellman equation: Unlike the original Bellman equation, for most function approximators (e.g., linear ones) the projected Bellman equation can be solved exactly. The original TDL methods  converge to this solution, as does least-squares TDL", "e0ce4177-c3f8-4d3e-ad53-181d2de47df4": "All the four operations in EDA help improve the classification accuracy, but get to optimal at different a's.\n\nhttps://lilianweng.github.io/posts/2021-05-31-contrastive/  Contrastive Representation Learning | Lil'Log   SST-2 (N=7,447) CR (N=4,082) SUBJ (N=9,000)  Accuracy Accuracy  0.4 0.4 0.4 0 20 40 60 80 100 0 20 40 60 80 100 0 20 40 60 80 100 (a) Percent of Dataset (%) (b) Percent of Dataset (%) () Percent of Dataset (%) TREC (N=5,452) PC (N=39,418) All Datasets p> : | Beeeess gl g z 0.8 ey 0.8 8 0.8 : : 4 3 0.6 # 3 0.6 & 0.6 <7 <<\u201d s o 0.48 0.4 \u2014\u2014 Zz 04 0 20 40 60 80 100 0 20 40 60 80 100 0 20 40 60 80 100 (@) Percent of Dataset (%) () Percent of Dataset (%) re) Percent of Dataset (%)  In Contextual Augmentation , new substitutes for word w; at position 7 can be smoothly sampled from a given probability distribution, p(.| S \\ {w;}), which is predicted by a bidirectional LM like BERT", "a84c3f85-de80-4bc7-a176-fbbfa7f463e2": "The learner must predict the clean example a from its corrupted version @, or more generally predict the conditional probability distribution p(a | #). e Density estimation or probability mass function estimation: In the density estimation problem, the machine learning algorithm is asked to learn a function Pmode : R\u201d + R, where pode) (2) can be interpreted as a probability density function (if x is continuous) or a probability mass function (if x is discrete) on the space that the examples were drawn from. To do such a task well (we will specify exactly what that means when we discuss performance measures P), the algorithm needs to learn the structure of the data it has seen. It must know where examples cluster tightly and where they are unlikely to occur. Most of the tasks described above require the learning algorithm to at least implicitly capture the structure of the probability distribution. Density estimation enables us to explicitly capture that distribution.\n\nIn principle, we can then perform computations on that distribution to solve the other tasks as well. For example, if we have performed density estimation to obtain  https://www.deeplearningbook.org/contents/ml.html    a probability distribution p(\u00ae), we can use that distribution to solve the missing value imputation task", "4c3d7e50-e967-4944-bdde-cb63c1188957": "These two factors make it possible to learn a single model f that operates on all time steps and all sequence lengths, rather than needing to learn a separate model g\u00ae for all possible time steps. Learning a single shared model allows generalization to sequence lengths that did not appear in the training set, and enables the model to be estimated with far fewer training examples than would be required without parameter sharing. 371  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  Both the recurrent graph and the unrolled graph have their uses. The recurrent graph is succinct. The unfolded graph provides an explicit description of which computations to perform.\n\nThe unfolded graph also helps illustrate the idea of information flow forward in time (computing outputs and losses) and backward in time (computing gradients) by explicitly showing the path along which this information flows. 10.2. Recurrent Neural Networks  Armed with the graph-unrolling and parameter-sharing ideas of section 10.1, we can design a wide variety of recurrent neural networks", "4716faa4-711a-4a59-80af-91c4b6024d4b": "In the continuous version of the derivation, we use Leibniz\u2019s rule for differentiation under the integral sign to obtain the identity  Ve [00x = | Vorkxax.\n\n(18.14)  This identity is applicable only under certain regularity conditions on p and Vep(x). In measure theoretic terms, the conditions are: (1) The unnormalized distribution p must be a Lebesgue-integrable function of a for every value of 8. (2) The gradient Vo p(x) must exist for all @ and almost all g. (3) There must exist an integrable function R(a) that bounds V p(x) in the sense that max; \\s@- P(x) | < R(x) for all 6 and almost all x. Fortunately, most machine learning models of interest have  these properties. This identity Vo log Z= Ex p(x) Vo log p(x) (18. 15)  is the basis for a variety of Monte Carlo methods for approximately maximizing che likelihood of models with intractable partition functions. The Monte Carlo approach to learning undirected models provides an intuitive framework in which we can think of both the positive phase and the negative phase", "6300dea8-c6a7-43ae-9646-684b8e64b99f": "After replacing dot products with kernel evaluations, we can make predictions using the function  f(a) =b+ > ajk(w, x). (5.83)  This function is nonlinear with respect to x, but the relationship between (a) and f(a) is linear. Also, the relationship between @ and f(z) is linear. The kernel-based function is exactly equivalent to preprocessing the data by applying \u00a2(a) to all inputs, then learning a linear model in the new transformed space. The kernel trick is powerful for two reasons. First, it enables us to learn models that are nonlinear as a function of x using convex optimization techniques that are guaranteed to converge efficiently. This is possible because we consider @ fixed and optimize only a, that is, the optimization algorithm can view the decision function as being linear in a different space. Second, the kernel function k often  139  CHAPTER 5.\n\nMACHINE LEARNING BASICS  admits an implementation that is significantly more computationally efficient than naively constructing two \u00a2(a) vectors and explicitly taking their dot product", "e31ebb38-9d69-45cd-8e50-805432885e53": "We take an MNIST image with 784 pixels and transform it by translating it vertically.\n\nThe amount of vertical translation defines a coordinate along a 1-D manifold that traces out a curved path through image space. This plot shows a few points along this manifold. For visualization, we have projected the manifold into  https://www.deeplearningbook.org/contents/autoencoders.html    Z-D space using PUA. An \u201d-dimensional manifold has an 7-dimensional tangent plane at every point. This tangent plane touches the manifold exactly at that point and is oriented parallel to the surface at that point. It defines the space of directions in which it is possible to move while remaining on the manifold. This 1-D manifold has a single  tangent line. We indicate an example tangent line at one point, with an image showing how this tangent direction appears in image space. Gray pixels indicate pixels that do not change as we move along the tangent line, white pixels indicate pixels that brighten, and black pixels indicate pixels that darken. 514  CHAPTER 14", "3b640d00-da09-42f9-85d1-96159dea1643": "This follows from the fact that the composition of successive linear transformations is itself a linear transformation.\n\nHowever, if the number of hidden units is smaller than either the number of input or output units, then the transformations that the network can generate are not the most general possible linear transformations from inputs to outputs because information is lost in the dimensionality reduction at the hidden units. In Section 12.4.2, we show that networks of linear units give rise to principal component analysis. In general, however, there is little interest in multilayer networks of linear units. The network architecture shown in Figure 5.1 is the most commonly used one in practice. However, it is easily generalized, for instance by considering additional layers of processing each consisting of a weighted linear combination of the form (5.4) followed by an element-wise transformation using a nonlinear activation function. Note that there is some confusion in the literature regarding the terminology for counting the number of layers in such networks. Thus the network in Figure 5.1 may be described as a 3-layer network (which counts the number of layers of units, and treats the inputs as units) or sometimes as a single-hidden-layer network (which counts the number of layers of hidden units)", "80403ab1-2af7-4777-8b16-f87bfa49be79": "This allows us to use the inequality (10.152) and place a lower bound on L(q), which will therefore also be a lower bound on the log marginal likelihood With this factorization we can appeal to the general result (10.9) to \ufb01nd expressions for the optimal factors. Consider \ufb01rst the distribution q(w). Discarding terms that are independent of w, we have We now substitute for ln h(w, \u03be) using (10.153), and for ln p(w|\u03b1) using (10.165), giving We see that this is a quadratic function of w and so the solution for q(w) will be Gaussian", "4ac64b92-160f-4f1c-acc2-ab31f6bbac10": "However, it also presents us with some unique opportunities for achieving useful approximations. For example, in approximating optimal behavior, there may be many states that the agent faces with such a low probability that selecting suboptimal actions for them has little impact on the amount of reward the agent receives. Tesauro\u2019s backgammon player, for example, plays with exceptional skill even though it might make very bad decisions on board con\ufb01gurations that never occur in games against experts. In fact, it is possible that TD-Gammon makes bad decisions for a large fraction of the game\u2019s state set. The online nature of reinforcement learning makes it possible to approximate optimal policies in ways that put more e\u21b5ort into learning to make good decisions for frequently encountered states, at the expense of less e\u21b5ort for infrequently encountered states. This is one key property that distinguishes reinforcement learning from other approaches to approximately solving MDPs. Let us summarize the elements of the reinforcement learning problem that we have presented in this chapter. Reinforcement learning is about learning from interaction how to behave in order to achieve a goal.\n\nThe reinforcement learning agent and its environment interact over a sequence of discrete time steps", "db9a8df7-0010-4487-90fb-fd6f6484ed3d": "Therefore, when k=1:  gromamt = Vo,\u00a3(0,) = g? guamt = VoL (01) -(Z\u2014 aV QL 60) = gi!) \u2014 Hy 9 The Reptile gradient is defined as:  reptile = (99 \u2014 42)/a = gh) + gi  Up to now we have:  GT Rertile FoMAML  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Lo:  Next let's try further expand g  f(x) that is differentiable  f(a) +  We can consider Vol (", "645789f5-15a1-4485-9ca1-2865485911b9": "Similar to the MLE framework for supervised learning, unsupervised learning via MLE can also be reformulated as a constraint optimization problem with entropy maximization. Consider learning a multivariate model with latent variables, where each data instance is partitioned into observed variables x \u2208 X and latent variables y \u2208 Y. For example, in the problem of image clustering, x \u2208 Rd is the observed image of d pixels and y \u2208 {1, . , K} is the unobserved cluster indicator (where K is the number of clusters).\n\nThe goal is to learn a model p\u03b8(x, y) that captures the joint distribution of x and y. Since y is unobserved, we minimize the Direct optimization of the marginal log-likelihood is typically intractable due to the summation over y. Earlier work thus developed di\ufb00erent solvers with varying levels of approximations. It can be shown that the intractable negative log-likelihood above can be upper bounded by a more tractable term known as the variational free energy", "6282bdfc-457b-49d0-b531-8398dac67745": "The lower bound L(q) then becomes a function of \u03c9, and we can exploit standard nonlinear optimization techniques to determine the optimal values for the parameters. An example of this approach, in which the variational distribution is a Gaussian and we have optimized with respect to its mean and variance, is shown in Figure 10.1. Here we consider an alternative way in which to restrict the family of distributions q(Z). Suppose we partition the elements of Z into disjoint groups that we denote by Zi where i = 1, . , M. We then assume that the q distribution factorizes with respect to these groups, so that It should be emphasized that we are making no further assumptions about the distribution. In particular, we place no restriction on the functional forms of the individual factors qi(Zi). This factorized form of variational inference corresponds to an approximation framework developed in physics called mean \ufb01eld theory .\n\nAmongst all distributions q(Z) having the form (10.5), we now seek that distribution for which the lower bound L(q) is largest", "e7fbad97-1744-42e8-ac8a-9e50362cb3ce": "Very few changes in the ideas already presented in this chapter are required in order to extend eligibility-traces to action-value methods.\n\nTo learn approximate action values, \u02c6q(s, a, w), rather than approximate state values, \u02c6v(s,w), we need to use the action-value form of the n-step return, from Chapter 10: with Gt:t+n .= Gt if t + n \u2265 T. Using this, we can form the action-value form of the truncated \u03bb-return, which is otherwise identical to the state-value form (12.9). The action-value form of the o\u270fine \u03bb-return algorithm (12.4) simply uses \u02c6q rather than \u02c6v: t:1. The compound backup diagram for this forward view is shown in The temporal-di\u21b5erence method for action values, known as Sarsa(\u03bb), approximates this forward view. It has the same update rule as given earlier for TD(\u03bb): except, naturally, using the action-value form of the TD error: Complete pseudocode for Sarsa(\u03bb) with linear function approximation, binary features, and either accumulating or replacing traces is given in the box on the next page", "6bcaaad7-e377-4253-a1ee-1bfee3a6d279": "Formally, the softmax function is given by  _exp(%i) (6.29)  cows  softmax(z); =  https://www.deeplearningbook.org/contents/mlp.html    S25 eXP( 27)  As with the logistic sigmoid, the use of the \u00a9xp function works well when training the softmax to output a target value y using maximum log-likelihood. In this case, we wish to maximize log P(y = 1; z) = logsoftmax(z), Defining the softmax in terms of exp is natural because the log in the log-likelihood can undo the exp of the softmax:  log softmax(z); = 2; \u2014 log )> exp(z;).\n\n(6.30) j  The first term of equation 6.30 shows that the input z; always has a direct contribution to the cost function. Because this term cannot saturate, we know that learning can proceed, even if the contribution of z; to the second term of equation 6.30 becomes very small. When maximizing the log-likelihood, the first term encourages z; to be pushed up, while the second term encourages all of z to be pushed down", "3fb6e2f0-108d-40e3-9695-fff53a66576e": "}4,  exp(v'fi/r) \u2014_exp(v\"f,/7)  P(ilv) = ~ Ve exp(vjfi/t) tp DL exp(vj.fi/7)  Because there is only one instance per class, the training is unstable and fluctuates a lot. To improve the training smoothness, they introduced an extra term for positive samples in the loss function based on the proximal optimization method.\n\nThe final NCE loss objective looks like:  https://lilianweng.github.io/posts/2021-05-31-contrastive/  Contrastive Representation Learning | Lil'Log   Linstance = \u2014Ep,  \u2014 MEp,  Pl h(i, v) = Plilv) rp) where the noise distribution is uniform P, = 1/N  where {yD} are embeddings stored in the memory bank from the previous iteration. The difference between iterations jv? \u2014 vi) [2 will gradually vanish as the learned embedding converges. MoCo & MoCo-V2  Momentum Contrast  provides a framework of unsupervised learning visual representation as a dynamic dictionary look-up", "836ea7f9-f883-4606-8d52-da1fd69f5102": "If we assume that the posterior distribution is sharply peaked, as will occur for sufficiently large data sets, then the re-estimation equations obtained by maximizing the marginal likelihood with respect to ai take the simple form which follows from (3.98), noting that the dimensionality of Wi is D. These reestimations are interleaved with the EM algorithm updates for determining Wand a 2 \u2022 The E-step equations are again given by (12.54) and (12.55). Similarly, the Mstep equation for a 2 is again given by (12.57). The only change is to the M-step equation for W, which is modified to give where A = diag(ai)' The value of I-\" is given by the sample mean, as before", "1cd06e7b-bd98-42c2-ac27-fb5eee09afc8": "This encourages the agent to keep testing all accessible state transitions and even to \ufb01nd long sequences of actions in order to carry out such tests.1 Of course all this testing has its cost, but in many cases, as in the shortcut maze, this kind of computational curiosity is well worth the extra exploration. Exercise 8.4 (programming) The exploration bonus described above actually changes the estimated values of states and actions. Is this necessary? Suppose the bonus \uf8ffp\u2327 was used not in updates, but solely in action selection.\n\nThat is, suppose the action selected was always that for which Q(St, a) + \uf8ff Exercise 8.5 How might the tabular Dyna-Q algorithm shown on page 164 be modi\ufb01ed to handle stochastic environments? How might this modi\ufb01cation perform poorly on changing environments such as considered in this section? How could the algorithm be modi\ufb01ed to handle stochastic environments and changing environments? \u21e4 In the Dyna agents presented in the preceding sections, simulated transitions are started in state\u2013action pairs selected uniformly at random from all previously experienced pairs. But a uniform selection is usually not the best; planning can be much more e\ufb03cient if simulated transitions and updates are focused on particular state\u2013action pairs. For example, consider 1The Dyna-Q+ agent was changed in two other ways as well", "3ec457f0-429f-4a97-b34d-5ea6a169c5d6": "Require: Initial parameter 0  kol  while stopping criterion not met do Sample a minibatch of m examples from the training set fa, nr 7 (my with corresponding targets y @, Compute gradient estimate: g < 1Ve Fi L(f (a; 6), y) Apply update: 6 <+ @\u2014 \u00ab4g kok+1  end while >  https://www.deeplearningbook.org/contents/optimization.html    descent, so batch gradient descent can_use a fixed learning rate.\n\nA sufficient condition to guarantee convergence of SGD is that  S- \u20ac, = 00, and (8.12) k=l SoG < x. (8.13) k=l  In practice, it is common to decay the learning rate linearly until iteration 7: \u20ack = (1 _ ajeg+ Qe, (8.14)  with a = x. After iteration 7, it is common to leave \u20ac constant. The learning rate may be chosen by trial and error, but it is usually best to choose it by monitoring learning curves that plot the objective function as a function of time", "c39a8e00-9164-4447-8b7d-7e7b6014025e": "; Set s\u00a24.1 =51,41,%+41 and preprocess $,,; =$(S++1) Store transition (\u00a2,,1.7150;41) in D Sample random minibatch of transitions (,a)s7505.\n\n:) from D  sety, = rj if episode terminates at step j +1 Y= n+ maxy O(4),.0'30-) otherwise Perform a gradient descent step on (\u00bb -@Q (65.45 0) ) ; with respect to the network parameters 0 Every C steps reset OQ=Q End For End For  https://lilianweng.github.io/posts/2018-02-19-rl-overview/  A (Long) Peek into Reinforcement Learning | Lil'Log   There are many extensions of DQN to improve the original design, such as DQN with dueling architecture  which estimates state-value function V(s) and advantage function A(s, a) with shared network parameters. Combining TD and MC Learning  In the previous section on value estimation in TD learning, we only trace one step further down the action chain when calculating the TD target. One can easily extend it to take multiple steps to estimate the return", "0b09f184-cfac-4160-85d6-634970f01784": "Rather than combine all of this heterogeneous information into one huge input space, it may be more effective to build one system to interpret the Xray images and a different one to interpret the blood data. As long as each of the two models gives posterior probabilities for the classes, we can combine the outputs systematically using the rules of probability. One simple way to do this is to assume that, for each class separately, the distributions of inputs for the X-ray images, denoted by xI, and the blood data, denoted by xB, are This is an example of conditional independence property, because the indepenSection 8.2 dence holds when the distribution is conditioned on the class Ck.\n\nThe posterior probability, given both the X-ray and blood data, is then given by Thus we need the class prior probabilities p(Ck), which we can easily estimate from the fractions of data points in each class, and then we need to normalize the resulting posterior probabilities so they sum to one. The particular conditional independence assumption (1.84) is an example of the naive Bayes model. Section 8.2.2 Note that the joint marginal distribution p(xI, xB) will typically not factorize under this model", "7acf5d79-6c60-4976-b423-8f6ad52093a4": "To see, this consider an extreme example in which we take a data set and double its size by duplicating every data point. Note that this simply multiplies the error function by a factor of 2 and so is equivalent to using the original error function. Batch methods will require double the computational effort to evaluate the batch error function gradient, whereas online methods will be unaffected.\n\nAnother property of on-line gradient descent is the possibility of escaping from local minima, since a stationary point with respect to the error function for the whole data set will generally not be a stationary point for each data point individually. Nonlinear optimization algorithms, and their practical application to neural network training, are discussed in detail in Bishop and Nabney . Our goal in this section is to \ufb01nd an ef\ufb01cient technique for evaluating the gradient of an error function E(w) for a feed-forward neural network. We shall see that this can be achieved using a local message passing scheme in which information is sent alternately forwards and backwards through the network and is known as error backpropagation, or sometimes simply as backprop. It should be noted that the term backpropagation is used in the neural computing literature to mean a variety of different things", "d6e480c0-8edc-4096-be91-65b2d8595dab": "Case study: Learning with imperfect experience.\n\nTo illustrate, let us consider a set of concrete problems concerning with distinct types of experience, which were often studied by researchers in di\ufb00erent areas: (1) The \ufb01rst problem is to integrate structured knowledge constraints in model training, where some components of the constraints, as well as the constraint weights, cannot be speci\ufb01ed a priori and are to be induced automatically; (2) The second problem concerns supervised learning, where one has access to only a small set of data instances with imbalanced labels, and we want to automate the data manipulation (e.g., augmentation and reweighting) to maximize the training performance; (3) The last problem is to stabilize the notoriously di\ufb03cult training of generative adversarial networks (GANs) for a wide range of image and text generation tasks. The three problems, though seemingly unrelated at \ufb01rst sight, can all be reduced to the same underlying problem in the uni\ufb01ed SE view, namely, learning with imperfect experience f (e.g., underspeci\ufb01ed knowledge constraints, small imbalanced data, and unstable discriminator). We want to automatically adapt/improve the imperfect experience in order to better supervise the target model training", "d21ac959-788a-4eb1-bb07-47eb74c599b3": "For example, we know that f(# \u2014 \u20ac signe (x))) is less than fay for small enough \u20ac. We can thus reduce f(x) by moving # in small steps with the opposite sign of the derivative. This technique is called gradient descent . See figure 4.1 for an example of this technique. When f\u2019(x) = 0, the derivative provides no information about which direction to move. Points where f'(2) = 0 are known as critical points, or stationary points. A local minimum is a point where f(x) is lower than at all neighboring points, so it is no longer possible to decrease f(x) by making infinitesimal steps. A local maximum is a point where f(x) is higher than at all neighboring points,  81  CHAPTER 4. NUMERICAL COMPUTATION  Minimum Maximum Saddle point  Figure 4.2: Types of critical points. Examples of the three types of critical points in one dimension", "076d08a3-7609-458d-b30f-138467eb775e": "To model this we can use a linear dynamical system governed by (13.75) and (13.76), with latent variables {z1, . , zN} in which C becomes the identity matrix and where the transition probability A = 0 because the observations are independent. Let the parameters m0 and V0 of the initial state be denoted by \u00b50 and \u03c32 0, respectively, and suppose that \u03a3 becomes \u03c32. Write down the corresponding Kalman \ufb01lter equations starting from the general results (13.89) and (13.90), together with (13.94) and (13.95). Show that these are equivalent to the results (2.141) and (2.142) obtained directly by considering independent data.\n\n13.26 (\u22c6 \u22c6 \u22c6) Consider a special case of the linear dynamical system of Section 13.3 that is equivalent to probabilistic PCA, so that the transition matrix A = 0, the covariance \u0393 = I, and the noise covariance \u03a3 = \u03c32I. By making use of the matrix inversion identity (C.7) show that, if the emission density matrix C is denoted W, then the posterior distribution over the hidden states de\ufb01ned by (13.89) and (13.90) reduces to the result (12.42) for probabilistic PCA", "84fe7710-a642-4253-9f47-10ea3c4cd26b": "distribution (5.16) for a multioutput neural network is equivalent to minimizing the sum-of-squares error function (5.11). where y(x, w) is the output of a neural network with input vector x and weight vector w, and \u03a3 is the covariance of the assumed Gaussian noise on the targets. Given a set of independent observations of x and t, write down the error function that must be minimized in order to \ufb01nd the maximum likelihood solution for w, if we assume that \u03a3 is \ufb01xed and known. Now assume that \u03a3 is also to be determined from the data, and write down an expression for the maximum likelihood solution for \u03a3. Note that the optimizations of w and \u03a3 are now coupled, in contrast to the case of independent target variables discussed in Section 5.2.\n\n5.4 (\u22c6 \u22c6) Consider a binary classi\ufb01cation problem in which the target values are t \u2208 {0, 1}, with a network output y(x, w) that represents p(t = 1|x), and suppose that there is a probability \u03f5 that the class label on a training data point has been incorrectly set", "da251e0f-a917-4ba3-87bc-26f3969b72d0": "We shall see an example of this shortly. Here, however, we note that the problem is suf\ufb01ciently simple that a closed form solution can be found. In particular, because E = m1 and E = m2, we see that the two equations are satis\ufb01ed if we take E = \u00b51 and E = \u00b52, and it is easily shown that this is the only solution provided the distribution is nonsingular. This result is illustrated in Figure 10.2(a).\n\nWe see that the Exercise 10.2 mean is correctly captured but that the variance of q(z) is controlled by the direction of smallest variance of p(z), and that the variance along the orthogonal direction is signi\ufb01cantly under-estimated. It is a general result that a factorized variational approximation tends to give approximations to the posterior distribution that are too compact. By way of comparison, suppose instead that we had been minimizing the reverse Kullback-Leibler divergence KL(p\u2225q). As we shall see, this form of KL divergence is used in an alternative approximate inference framework called expectation propagation", "64886139-4105-46c1-b29c-53cf6f924c71": "Let's denote the learner model as My parameterized by 0, the meta-learner as Ro with parameters O, and the loss function L.  Why LSTM? The meta-learner is modeled as a LSTM, because:  There is similarity between the gradient-based update in backpropagation and the cell-state update in LSTM. Knowing a history of gradients benefits the gradient update; think about how momentum works. The update for the learner's parameters at time step t with a learning rate a; is: = O14 _ arVo, Lt  It has the same form as the cell state update in LSTM, if we set forget gate f; = 1, input gate it = My, Cell state c, = 6, and new cell state & = \u2014Vo,_,L::  c= frOgyt+tuO& = O44 _ arVo, Lt  While fixing f; = 1 and 7; = a; might not be the optimal, both of them can be learnable and  https://lilianweng.github.io/posts/2018-11-30-meta-learning/  Meta-Learning: Learning to Learn Fast | Lil'Log   adaptable to different datasets", "b95fcad2-e049-4c24-8f26-8dcb727b69e3": "Although a model is required, the model need only generate sample transitions, not the complete probability distributions of all possible transitions that is required for dynamic programming (DP). In surprisingly many cases it is easy to generate experience sampled according to the desired probability distributions, but infeasible to obtain the distributions in explicit form. Monte Carlo methods are ways of solving the reinforcement learning problem based on averaging sample returns. To ensure that well-de\ufb01ned returns are available, here we de\ufb01ne Monte Carlo methods only for episodic tasks. That is, we assume experience is divided into episodes, and that all episodes eventually terminate no matter what actions are selected. Only on the completion of an episode are value estimates and policies changed.\n\nMonte Carlo methods can thus be incremental in an episode-by-episode sense, but not in a step-by-step (online) sense. The term \u201cMonte Carlo\u201d is often used more broadly for any estimation method whose operation involves a signi\ufb01cant random component. Here we use it speci\ufb01cally for methods based on averaging complete returns (as opposed to methods that learn from partial returns, considered in the next chapter)", "b0e3e4f6-ebaa-4d12-95a9-5ccb6e0b72d0": "In principle, updates can be distributed any way one likes (to assure convergence, all states or state\u2013action pairs must be visited in the limit an in\ufb01nite number of times; although an exception to this is discussed in Section 8.7 below), but in practice exhaustive sweeps are often used. The second approach is to sample from the state or state\u2013action space according to some distribution. One could sample uniformly, as in the Dyna-Q agent, but this would su\u21b5er from some of the same problems as exhaustive sweeps. More appealing is to distribute updates according to the on-policy distribution, that is, according to the distribution observed when following the current policy.\n\nOne advantage of this distribution is that it is easily generated; one simply interacts with the model, following the current policy. In an episodic task, one starts in a start state (or according to the starting-state distribution) and simulates until the terminal state. In a continuing task, one starts anywhere and just keeps simulating. In either case, sample state transitions and rewards are given by the model, and sample actions are given by the current policy. In other words, one simulates explicit individual trajectories and performs updates at the state or state\u2013action pairs encountered along the way", "2d685e1c-1dee-413f-a1c3-d7c1b9f252ab": "14.9 (\u22c6) www Show that the sequential minimization of the sum-of-squares error function for an additive model of the form (14.21) in the style of boosting simply involves \ufb01tting each new base classi\ufb01er to the residual errors tn\u2212fm\u22121(xn) from the previous model. 14.10 (\u22c6) Verify that if we minimize the sum-of-squares error between a set of training values {tn} and a single predictive value t, then the optimal solution for t is given by the mean of the {tn}. 14.11 (\u22c6 \u22c6) Consider a data set comprising 400 data points from class C1 and 400 data points from class C2. Suppose that a tree model A splits these into (300, 100) at the \ufb01rst leaf node and (100, 300) at the second leaf node, where (n, m) denotes that n points are assigned to C1 and m points are assigned to C2. Similarly, suppose that a second tree model B splits them into (200, 400) and (200, 0)", "48446fe6-64bf-493f-a48e-22b8cf61ddb3": "Regularized autoencoders defy such an interpretation because the regularizer depends on the data and is therefore by definition not a prior in the formal sense of the word. We can still think of these regularization ferms as implicitly expressing a preference over functions. Rather than thinking of the sparsity penalty as a regularizer for the copying ask, we can think of the entire sparse autoencoder framework as approximating  502  CHAPTER 14. AUTOENCODERS  maximum likelihood training of a generative model that has latent variables. Suppose we have a model with visible variables x and latent variables h, with an explicit joint distribution Dmodel(@, A.) = Pmodel(h)Pmodel (e | h).\n\nWe refer to Pmodel(h) as the model\u2019s prior distribution over the latent variables, representing the model\u2019s beliefs prior to seeing xz. This is different from the way we have previously used the word \u201cprior,\u201d to refer to the distribution p(@) encoding our beliefs about the model\u2019s parameters before we have seen the training data", "3214e675-f799-440f-b57f-40ff053fb48f": "For example, we may assume that y = f(a) +, where e stands for the part of y that is not predictable from z. In function estimation, we are interested in approximating f with a model or  estimate f . Function estimation is really just the same as estimating a parameter 0; the function estimator f is simply a point estimator in function space. The linear regression example (discussed in section 5.1.4) and the polynomial regression example (discussed in section 5.2) both illustrate scenarios that may be interpreted as either estimating a parameter w or estimating a function f mapping from x to y. We now review the most commonly studied properties of point estimators and discuss what they tell us about these estimators.\n\n5.4.2 Bias The bias of an estimator is defined as bias( Am) = E(A@mn) \u2014 9, (5.20)  where the expectation is over the data (seen as samples from a random variable) and @ is the true underlying value of 8 used to define the data-generating distri- bution. An estimator @m is said to be unbiased if bias(@;,) = 0, which implies that E (Om) = 6", "0ff34a2b-eed1-4937-be65-0e6ecccae744": "This is probably due to their great simplicity: they can be applied online, with a minimal amount of computation, to experience generated from interaction with an environment; they can be expressed nearly completely by single equations that can be implemented with small computer programs. In the next few chapters we extend these algorithms, making them slightly more complicated and signi\ufb01cantly more powerful. All the new algorithms will retain the essence of those introduced here: they will be able to process experience online, with relatively little computation, and they will be driven by TD errors. The special cases of TD methods introduced in the present chapter should rightly be called one-step, tabular, model-free TD methods. In the next two chapters we extend them to n-step forms (a link to Monte Carlo methods) and forms that include a model of the environment (a link to planning and dynamic programming). Then, in the second part of the book we extend them to various forms of function approximation rather than tables (a link to deep learning and arti\ufb01cial neural networks).\n\nFinally, in this chapter we have discussed TD methods entirely within the context of reinforcement learning problems, but TD methods are actually more general than this. They are general methods for learning to make long-term predictions about dynamical systems", "f564a1f9-3a01-4bb5-8600-d55c6c698006": "Contemporary Animal Learning Theory. Cambridge University Press. Dickinson, A. Actions and habits: the development of behavioral autonomy. Phil. Trans.\n\nDickinson, A., Balleine, B. W. The role of learning in motivation. In C. R. Gallistel (Ed. ), Stevens\u2019 Handbook of Experimental Psychology, volume 3, pp. 497\u2013533. Wiley, NY. Dietterich, T. G., Buchanan, B. G. The role of the critic in learning systems. In O. G. Selfridge, E. L. Rissland, and M. A. Arbib (Eds. ), Adaptive Control of Ill-De\ufb01ned Systems, pp. 127\u2013147. Plenum Press, NY. Dietterich, T. G., Flann, N. S", "cd465751-4bbf-4c83-8104-66800df47cd2": "In Advances in Neural Information Processing Systems, pages 6000\u20136010. Pascal Vincent, Hugo Larochelle, Yoshua Bengio, and Pierre-Antoine Manzagol. 2008. Extracting and composing robust features with denoising autoencoders. In Proceedings of the 25th international conference on Machine learning, pages 1096\u20131103. ACM. Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel Bowman. 2018a. Glue: A multi-task benchmark and analysis platform for natural language understanding.\n\nIn Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pages 353\u2013355. Wei Wang, Ming Yan, and Chen Wu. 2018b. Multigranularity hierarchical attention fusion networks for reading comprehension and question answering. In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association for Computational Linguistics. Alex Warstadt, Amanpreet Singh, and Samuel R Bowman", "5c0ba23b-9659-4326-a03e-176e747de387": "CONDENSATION \u2013 conditional density propagation for visual tracking. International Journal of Computer Vision 29(1), 5\u201318. Ito, Y. Representation of functions by superpositions of a step or sigmoid function and their applications to neural network theory. Neural Networks 4(3), 385\u2013394. Jaakkola, T. and M. I. Jordan . Bayesian parameter estimation via variational methods. Statistics and Computing 10, 25\u201337. Jaakkola, T. S. Tutorial on variational approximation methods. In M. Opper and D. Saad (Eds. ), Advances in Mean Field Methods, pp. 129\u2013159. MIT Press. Jaakkola, T. S. and D. Haussler . Exploiting generative models in discriminative classi\ufb01ers. In M. S. Kearns, S. A. Solla, and D", "683f18f2-03bd-4efe-9e9e-3da4d246fb02": "The total number of independent parameters {wij} and {vi} in the covariance matrix is therefore D(D + 1)/2 corresponding to a general symmetric covariance matrix. Section 2.3 Graphs having some intermediate level of complexity correspond to joint Gaussian distributions with partially constrained covariance matrices. Consider for example the graph shown in Figure 8.14, which has a link missing between variables x1 and x3. Using the recursion relations (8.15) and (8.16), we see that the mean and covariance of the joint distribution are given by Exercise 8.7 We can readily extend the linear-Gaussian graphical model to the case in which the nodes of the graph represent multivariate Gaussian variables. In this case, we can write the conditional distribution for node i in the form where now Wij is a matrix (which is nonsquare if xi and xj have different dimensionalities)", "9cc1bdac-96ef-459a-bc6f-826321854da2": "de Freitas, A. Doucet, and M. I. Jordan . An introduction to MCMC for machine learning. Machine Learning 50, 5\u201343. Attias, H. Independent factor analysis. Neural Computation 11(4), 803\u2013851. Attias, H. Inferring parameters and structure of latent variable models by variational Bayes. In K. B. Laskey and H. Prade (Eds. ), Bishop, C. M. A fast procedure for retraining the multilayer perceptron. International Journal of Neural Systems 2(3), 229\u2013236. Bishop, C. M. .\n\nExact calculation of the Hessian matrix for the multilayer perceptron. Neural Computation 4(4), 494\u2013501. Bishop, C. M. Novelty detection and neural network validation. IEE Proceedings: Vision, Image and Signal Processing 141(4), 217\u2013222", "6b134912-d268-45d0-a034-4cec16bed1c7": "when downsampling images to different resolutions.\n\nThe researchers found that com- posing an ensemble of models trained with high and low-resolution images performed better than any one model individually. This ensemble prediction is found by averag- ing the softmax predictions. The models trained on 256 x 256 images and 512 x 512 images achieve 7.96% and 7.42% top-5 error rates, respectively. When aggregated they achieved a lower top-5 error rate of 6.97%. Therefore, different downsampled images can be viewed as another Data Augmentation scheme (Fig. 33). With the advance of Super-Resolution Convolutional Neural Networks presented by Chong et al. or SRGANs, Super-Resolution Generative Adversarial Networks, presented by Ledig et al. , it is interesting to consider if upsampling images to an even higher resolution would result in better models. Quality upsampling on CIFAR-10 images from even 32 x 32 x 3 to 64 x 64 x 3 could lead to better and more robust image classifiers. Resolution is also a very important topic with GANs", "50ec0fdb-9bf2-4fe4-811b-5a4f435a10ab": "Other sim- ple image manipulations such as color augmentations, mixing images, kernel filters, and random erasing can also be extended to oversample data in the same manner as geo- metric augmentations. This can be useful for ease of implementation and quick exper- imentation with different class ratios. One problem of oversampling with basic image transformations is that it could cause overfitting on the minority class which is being oversampled. The biases present in the minority class are more prevalent post-sampling with these techniques. Oversampling methods based on Deep Learning such as adversarial training, Neu- ral Style Transfer, GANs, and meta-learning schemes can also be used as a more intel- ligent oversampling strategy. Neural Style Transfer is an interesting way to create new images. These new images can be created either through extrapolating style with a for-  eign style or by interpolating styles amongst instances within the dataset", "d938bc88-29a0-4811-9a1a-cf3c43e8d217": "If we have multiple target variables, and we assume that they are independent conditional on x and w with shared noise precision \u03b2, then the conditional distribution of the target values is given by Following the same argument as for a single target variable, we see that the maximum likelihood weights are determined by minimizing the sum-of-squares error function (5.11). The noise precision is then given by Exercise 5.2 where K is the number of target variables. The assumption of independence can be dropped at the expense of a slightly more complex optimization problem. Exercise 5.3 Recall from Section 4.3.6 that there is a natural pairing of the error function (given by the negative log likelihood) and the output unit activation function. In the regression case, we can view the network as having an output activation function that is the identity, so that yk = ak. The corresponding sum-of-squares error function has the property \u2202E \u2202ak = yk \u2212 tk (5.18) which we shall make use of when discussing error backpropagation in Section 5.3", "4d476b7f-604e-4335-b0c0-f07ffbc5c400": "Similarly, a nonzero value for \ufffdan implies \u03f5 +\ufffd\u03ben \u2212 yn + tn = 0, and such points must lie either on or below the lower boundary of the \u03f5-tube. Furthermore, the two constraints \u03f5+\u03ben +yn \u2212tn = 0 and \u03f5+\ufffd\u03ben \u2212yn +tn = 0 are incompatible, as is easily seen by adding them together and noting that \u03ben and \ufffd\u03ben are nonnegative while \u03f5 is strictly positive, and so for every data point xn, either an or \ufffdan (or both) must be zero. The support vectors are those data points that contribute to predictions given by (7.64), in other words those for which either an \u0338= 0 or \ufffdan \u0338= 0. These are points that lie on the boundary of the \u03f5-tube or outside the tube. All points within the tube have an = \ufffdan = 0", "a6616fe6-583c-420c-93a5-7e84a3064898": "If we use a learning rate of \u00a2, then the new point a will be given by 2 \u2014 eg. Substituting this into our approximation, we obtain  f(e@\u00ae \u2014 eg) & f(x) - eg'g+ 5\u00a29 Ho. (4.9)  There are three terms here: the original value of the function, the expected improvement due to the slope of the function, and the correction we must apply to account for the curvature of the function. When this last term is too large, the gradient descent step can actually move uphill. When g'H g is zero or negative, the Taylor series approximation predicts that increasing \u00a2 forever will decrease f forever. In practice, the Taylor series is unlikely to remain accurate for large e\u20ac, so one must resort to more heuristic choices of \u20ac in this case.\n\nWhen g' Hg is positive, solving for the optimal step size that decreases the Taylor series approximation of  the function the most yields \u00ab__9'9 (4.10) e=", "5c6caec3-25ab-4c19-a3be-3ec625705735": "Christensen and Korf  experimented with regression methods for modifying coe\ufb03cients of linear value function approximations in the game of chess. Chapman and Kaelbling  and Tan  adapted decision-tree methods for learning value functions. Explanation-based learning methods have also been adapted for learning value functions, yielding compact representations . In this chapter we return to the control problem, now with parametric approximation of the action-value function \u02c6q(s, a, w) \u21e1 q\u21e4(s, a), where w 2 Rd is a \ufb01nite-dimensional weight vector. We continue to restrict attention to the on-policy case, leaving o\u21b5-policy methods to Chapter 11. The present chapter features the semi-gradient Sarsa algorithm, the natural extension of semi-gradient TD(0) (last chapter) to action values and to on-policy control", "fb1d2aca-a571-4992-9e94-1d6da790a6d0": "Learning a part-of-speech tagger from two hours of annotation. In Proceedings of the 2013 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 138\u2013147, Atlanta, Georgia. Association for Computational Linguistics. Xavier Glorot, Antoine Bordes, and Yoshua Bengio. 2011.\n\nDomain adaptation for large-scale sentiment classi\ufb01cation: A deep learning approach. In International Conference of Machine Learning. Karan Goel, Nazneen Rajani, Jesse Vig, Samson Tan, Jason Wu, Stephan Zheng, Caiming Xiong, Mohit Bansal, and Christopher R\u00b4e. 2021. Robustness gym: Unifying the nlp evaluation landscape. Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. 2014. Generative adversarial nets. In Z. Ghahramani, M. Welling, C", "43bd21b4-965f-4b85-9a05-c35c81a387e7": "They are interesting in the context of regularization, however, because one can reduce the error rate on the original i.i.d. est set via adversarial training\u2014training on adversarially perturbed examples from the training set . Goodfellow et al. showed that one of the primary causes of these adversarial examples is excessive linearity. Neural networks are built out of primarily linear building blocks. In some experiments the overall function they implement proves to be highly linear as a result. These linear functions are easy o optimize. Unfortunately, the value of a linear function can change very rapidly if it has numerous inputs. If we change each input by e, then a linear function with weights w can change by as much as \u00a2||w||1, which can be a very large amount if w is highdimensional.\n\nAdversarial training discourages this highly sensitive locally linear behavior by encouraging the network to be locally constant in the neighborhood of the training data. This can be seen as a way of explicitly introducing a local constancy prior into supervised neural nets. Adversarial training helps to illustrate the power of using a large function family in combination with aggressive regularization", "81a48e99-f0e2-4790-a465-a516310f84a5": "Show that the predictive variance is given by (7.91).\n\n7.15 (\u22c6 \u22c6) www Using the results (7.94) and (7.95), show that the marginal likelihood (7.85) can be written in the form (7.96), where \u03bb(\u03b1n) is de\ufb01ned by (7.97) and the sparsity and quality factors are de\ufb01ned by (7.98) and (7.99), respectively. 7.16 (\u22c6) By taking the second derivative of the log marginal likelihood (7.97) for the regression RVM with respect to the hyperparameter \u03b1i, show that the stationary point given by (7.101) is a maximum of the marginal likelihood. 7.19 (\u22c6 \u22c6) Verify that maximization of the approximate log marginal likelihood function (7.114) for the classi\ufb01cation relevance vector machine leads to the result (7.116) for re-estimation of the hyperparameters. Probabilities play a central role in modern pattern recognition. We have seen in Chapter 1 that probability theory can be expressed in terms of two simple equations corresponding to the sum rule and the product rule. All of the probabilistic inference and learning manipulations discussed in this book, no matter how complex, amount to repeated application of these two equations", "36f12e29-0206-4db4-8356-80ba91cad703": "Would this have any e\u21b5ect, or would it leave the task unchanged as in the continuing task above? Why or why not? Give an example. \u21e4 task, we count a penalty (negative reward) of \u22121 for each stroke until we hit the ball into the hole. The state is the location of the ball. The value of a state is the negative of the number of strokes to the hole from that location. Our actions are how we aim and swing at the ball, of course, and which club we select. Let us take the former as given and consider just the choice of club, which we assume is either a putter or a driver.\n\nThe upper part of Figure 3.3 shows a possible state-value function, vputt(s), for the policy that Exercise 3.18 The value of a state depends on the values of the actions possible in that state and on how likely each action is to be taken under the current policy. We can think of this in terms of a small backup diagram rooted at the state and considering each possible action: Give the equation corresponding to this intuition and diagram for the value at the root node, v\u21e1(s), in terms of the value at the expected leaf node, q\u21e1(s, a), given St = s", "12efb870-69b6-4ea1-bb48-50318caaea2a": "These methods require an additional vector of \u201cprovisional weights\u201d that keep track of updates which have been made but may need to be retracted (or emphasized) depending on the actions taken later. The state and state\u2013action versions of these methods are called PTD(\u03bb) and PQ(\u03bb) respectively, where the \u2018P\u2019 stands for Provisional. The practical consequences of all these new o\u21b5-policy methods have not yet been established.\n\nUndoubtedly, issues of high variance will arise as they do in all o\u21b5-policy methods using importance sampling (Section 11.9). If \u03bb < 1, then all these o\u21b5-policy algorithms involve bootstrapping and the deadly triad applies (Section 11.3), meaning that they can be guaranteed stable only for the tabular case, for state aggregation, and for other limited forms of function approximation. For linear and more-general forms of function approximation the parameter vector may diverge to in\ufb01nity as in the examples in Chapter 11. As we discussed there, the challenge of o\u21b5-policy learning has two parts", "ca998af9-e801-4220-8b3e-ac9ccea8860b": "https://lilianweng.github.io/posts/2021-05-31-contrastive/     Contrastive Representation Learning | Lil'Log   Memory Bank  Computing embeddings for a large number of negative samples in every batch is extremely expensive. One common approach is to store the representation in memory to trade off data staleness for cheaper compute. Instance Discrimination with Memoy Bank  Instance contrastive learning  pushes the class-wise supervision to the extreme by considering each instance as a distinct class of its own. It implies that the number of \u201cclasses\u201d  will be the same as the number of samples in the training dataset.\n\nHence, it is unfeasible to train a softmax layer with these many heads, but instead it can be approximated by NCE. CNN backbone ja 1th image lowdim \u2014 L2norm Ya", "5dc7c7e5-8bda-40f1-bf4d-2afd0d366515": "If we now multiply both sides by \u03c0k and sum over k making use of the constraint (9.9), we \ufb01nd \u03bb = \u2212N. Using this to eliminate \u03bb and rearranging we obtain so that the mixing coef\ufb01cient for the kth component is given by the average responsibility which that component takes for explaining the data points. It is worth emphasizing that the results (9.17), (9.19), and (9.22) do not constitute a closed-form solution for the parameters of the mixture model because the responsibilities \u03b3(znk) depend on those parameters in a complex way through (9.13). However, these results do suggest a simple iterative scheme for \ufb01nding a solution to the maximum likelihood problem, which as we shall see turns out to be an instance of the EM algorithm for the particular case of the Gaussian mixture model. We \ufb01rst choose some initial values for the means, covariances, and mixing coef\ufb01cients. Then we alternate between the following two updates that we shall call the E step algorithm in Figure 9.1. See the text for details. and the M step, for reasons that will become apparent shortly", "fdd21fd0-0cbd-4e32-a04d-7e3b7249ac89": "Graphs of the training and test set RMS errors are shown, for various values of M, in Figure 1.5. The test set error is a measure of how well we are doing in predicting the values of t for new data observations of x. We note from Figure 1.5 that small values of M give relatively large values of the test set error, and this can be attributed to the fact that the corresponding polynomials are rather in\ufb02exible and are incapable of capturing the oscillations in the function sin(2\u03c0x). Values of M in the range 3 \u2a7d M \u2a7d 8 give small values for the test set error, and these also give reasonable representations of the generating function sin(2\u03c0x), as can be seen, for the case of M = 3, from Figure 1.4. For M = 9, the training set error goes to zero, as we might expect because this polynomial contains 10 degrees of freedom corresponding to the 10 coef\ufb01cients w0, . , w9, and so can be tuned exactly to the 10 data points in the training set. However, the test set error has become very large and, as we saw in Figure 1.4, the corresponding function y(x, w\u22c6) exhibits wild oscillations", "4ba10f2f-e8df-43ea-8c92-41093cfd2f7c": "Fundamentally, the choice of \u03f5 determines the complexity of the generative model.12 We study the trade-off between predictive performance and computational cost that this induces. We \ufb01nd that generally there is an \u201celbow point\u201d beyond which the number of correlations selected\u2014and thus the computational cost\u2014explodes, and that this point is a safe trade-off point between predictive performance and computation time.\n\nPredictive Performance At one extreme, a very large value of \u03f5 will not include any correlations in the generative model, making it identical to the independent model. As \u03f5 is decreased, correlations will be added. At \ufb01rst, when \u03f5 is still high, only the strongest correlations will be included. As these correlations are added, we observe that the generative model\u2019s predictive performance tends to improve. Figure 9, left, shows the result of varying \u03f5 in a simulation where more than half the labeling functions are correlated. After adding a few key dependencies, the generative model resolves the discrepancies among the labeling functions. Figure 9, middle, shows the effect of varying \u03f5 for the CDR task. Predictive performance improves as \u03f5 decreases until the model over\ufb01ts", "88f47fe2-f80a-437e-b1f6-77926b8dce67": "For some algorithms, the reward signal alone is the critical multiplier in the parameterreward signal.\n\nBut for most of the algorithms we discuss in this book, reinforcement signals include terms in addition to the reward signal, an example being a TD error \u03b4t = Rt+1 + \u03b3V (St+1) \u2212 V (St), which is the reinforcement signal for TD state-value learning (and analogous TD errors for action-value learning). In this reinforcement signal, Rt+1 is the primary reinforcement contribution, and the temporal di\u21b5erence in predicted values, \u03b3V (St+1) \u2212 V (St) (or an analogous temporal di\u21b5erence for action values), is the conditioned reinforcement contribution. Thus, whenever \u03b3V (St+1) \u2212 V (St) = 0, \u03b4t signals \u2018pure\u2019 primary reinforcement; and whenever Rt+1 = 0, it signals \u2018pure\u2019 conditioned reinforcement, but it often signals a mixture of these. Note as we mentioned in Section 6.1, this \u03b4t is not available until time t + 1. We therefore think of \u03b4t as the reinforcement signal at time t + 1, which is \ufb01tting because it reinforces predictions and/or actions made earlier at step t", "bd88b130-36d9-4289-948e-229c23403d62": "In this section, we present Boltzmann machines that define a probability density over real-valued data.\n\n20.5.1 Gaussian-Bernoulli RBMs  Restricted Boltzmann machines may be developed for many exponential family conditional distributions . Of these, the most common is the RBM with binary hidden units and real-valued visible units, with the conditional distribution over the visible units being a Gaussian distribution whose mean is a function of the hidden units. There are many ways of parametrizing Gaussian-Bernoulli RBMs. One choice is whether to use a covariance matrix or a precision matrix for the Gaussian distribution. Here we present the precision formulation. The modification to obtain the covariance formulation is straightforward. We wish to have the conditional distribution  p(v | h) = N(v;Wh, 37). (20.38)  We can find the terms we need to add to the energy function by expanding the  673  CHAPTER 20", "c7987d1a-106d-448a-9aaf-1509a109f524": "This is because they do not update their value estimates on the basis of the value estimates of successor states. In other words, it is because they do not bootstrap. In designing Monte Carlo control methods we have followed the overall schema of generalized policy iteration (GPI) introduced in Chapter 4. GPI involves interacting processes of policy evaluation and policy improvement. Monte Carlo methods provide an alternative policy evaluation process. Rather than use a model to compute the value of each state, they simply average many returns that start in the state. Because a state\u2019s value is the expected return, this average can become a good approximation to the value. In control methods we are particularly interested in approximating action-value functions, because these can be used to improve the policy without requiring a model of the environment\u2019s transition dynamics. Monte Carlo methods intermix policy evaluation and policy improvement steps on an episode-by-episode basis, and can be incrementally implemented on an episode-by-episode basis", "193aa5cb-9943-4cc3-8a00-10a19c95b790": "Pattern Classi\ufb01cation (Second ed.). Wiley. Durbin, R., S. Eddy, A. Krogh, and G. Mitchison . Biological Sequence Analysis. Cambridge University Press. Dybowski, R. and S. Roberts .\n\nAn anthology of probabilistic models for medical informatics. In D. Husmeier, R. Dybowski, and S. Roberts (Eds. ), Probabilistic Modeling in Bioinformatics and Medical Informatics, pp. 297\u2013349. Springer. Efron, B. Bootstrap methods: another look at the jackknife. Annals of Statistics 7, 1\u201326. Elkan, C. Using the triangle inequality to accelerate k-means. In Proceedings of the Twelfth International Conference on Machine Learning, pp. 147\u2013153. AAAI. Ephraim, Y., D", "c2f3a38c-6234-4c90-930c-79c73d08a468": "Ambiguity arises because it is not clear if each clique actually has a corresponding factor whose scope encompasses the entire clique\u2014for example, a clique containing three nodes may correspond to a factor over all three nodes, or may correspond to three factors that each contain only a pair of the nodes.\n\nFactor graphs resolve this ambiguity by explicitly representing the scope of each \u00a2 function. Specifically, a factor graph is a graphical representation of an undirected model that consists of a bipartite undirected graph. Some of the nodes are drawn as circles. These nodes correspond to random variables, as in a standard undirected model. The rest of the nodes are drawn as squares. These nodes correspond to the factors @ of the unnormalized probability distribution. Variables and factors may be connected with undirected edges. A variable and a factor are connected  576  CHAPTER 16", "21003a1d-3683-4cbd-8d96-25dd188c86d1": "It has a great merit that there is no computation involved in the \u2018training\u2019 phase because this simply requires storage of the training set. However, this is also one of its great weaknesses because the computational cost of evaluating the density grows linearly with the size of the data set. One of the dif\ufb01culties with the kernel approach to density estimation is that the parameter h governing the kernel width is \ufb01xed for all kernels. In regions of high data density, a large value of h may lead to over-smoothing and a washing out of structure that might otherwise be extracted from the data. However, reducing h may lead to noisy estimates elsewhere in data space where the density is smaller. Thus the optimal choice for h may be dependent on location within the data space. This issue is addressed by nearest-neighbour methods for density estimation. We therefore return to our general result (2.246) for local density estimation, and instead of \ufb01xing V and determining the value of K from the data, we consider a \ufb01xed value of K and use the data to \ufb01nd an appropriate value for V", "e98baacc-c77d-4e2f-b27d-59a9bc3d5de4": "REPRESENTATION LEARNING  he hg  h=[1,1,0)\" h=(1,0,1)\"  https://www.deeplearningbook.org/contents/representation.html    hatiiit  h= \" h= (0,1, 1)\" h= (0,0, 1)\"  Figure 15.7: Illustration of how a learning algorithm based on a distributed representation breaks up the input space into regions. In this example, there are three binary features hi, hg, and h3. Each feature is defined by thresholding the output of a learned linear transformation. Each feature divides R? into two half-planes. Let hi be the set of input points for which h; = 1, and h; be the set of input points for which h; = 0. In this illustration, each line represents the decision boundary for oneh;, with the corresponding arrow pointing to the h7 side of the boundary.\n\nThe representation as a whole takes on a unique value at each possible intersection of these half-planes. For example, the representation value ' corresponds to the region hf N hx NAF", "3f353707-3b54-497d-be0b-8b5280286577": "2.52 (\u22c6 \u22c6) For large m, the von Mises distribution (2.179) becomes sharply peaked around the mode \u03b80.\n\nBy de\ufb01ning \u03be = m1/2(\u03b8 \u2212 \u03b80) and making the Taylor expansion of the cosine function given by show that as m \u2192 \u221e, the von Mises distribution tends to a Gaussian. 2.54 (\u22c6) By computing \ufb01rst and second derivatives of the von Mises distribution (2.179), and using I0(m) > 0 for m > 0, show that the maximum of the distribution occurs when \u03b8 = \u03b80 and that the minimum occurs when \u03b8 = \u03b80 + \u03c0 (mod 2\u03c0). 2.55 (\u22c6) By making use of the result (2.168), together with (2.184) and the trigonometric identity (2.178), show that the maximum likelihood solution mML for the concentration of the von Mises distribution satis\ufb01es A(mML) = r where r is the radius of the mean of the observations viewed as unit vectors in the two-dimensional Euclidean plane, as illustrated in Figure 2.17", "ba2a7ddc-0037-41bd-86c4-3eebda3c1a72": "For example, the simple reinforcement learning player would learn to set up multi-move traps for a shortsighted opponent. It is a striking feature of the reinforcement learning solution that it can achieve the e\u21b5ects of planning and lookahead without using a model of the opponent and without conducting an explicit search over possible sequences of future states and actions. While this example illustrates some of the key features of reinforcement learning, it is so simple that it might give the impression that reinforcement learning is more limited than it really is.\n\nAlthough tic-tac-toe is a two-person game, reinforcement learning also applies in the case in which there is no external adversary, that is, in the case of a \u201cgame against nature.\u201d Reinforcement learning also is not restricted to problems in which behavior breaks down into separate episodes, like the separate games of tic-tac-toe, with reward only at the end of each episode. It is just as applicable when behavior continues inde\ufb01nitely and when rewards of various magnitudes can be received at any time. Reinforcement learning is also applicable to problems that do not even break down into discrete time steps like the plays of tic-tac-toe", "107df2f3-3cf3-4f8f-8e49-1ea652c30d2a": "Learning a deep convolutional network for image super-resolution. In: ECCV. Berlin: Springer; 2014. , p. 184-99.\n\nChristian L, Lucas T, Ferenc H, Jose C, Andrew C, Alejandro A, Andrew A, Alykhan T, Johannes T, Zehan W, Wenzhe S. Photo-realistic single image super-resolution using a generative adversarial network. arXiv preprint. 2016. Han Z, Tao X, Hongsheng L, Shaoting Z, Xiaogang W, Xiaolei H, Dimitris M. StackGAN: text to photo-realistic image synthesis with stacked generative adversarial networks. In: ICCV, 2017.  . Trishul CG, Yutaka S, Johnson A, Karthik K. Project adam: building an efficient and scalable deep learning training  system. In: Proceedings of OSDI. 2014. P", "030f4a10-7cf1-44cf-8e68-0e16b5535128": "Self-improving reactive agents based on reinforcement learning, planning and Lin, L.-J., Mitchell, T. Reinforcement learning with hidden states. In Proceedings of the Second International Conference on Simulation of Adaptive Behavior: From Animals to Animats, pp. 271\u2013280. MIT Press, Cambridge, MA. observable environments: Scaling up.\n\nIn Proceedings of the 12th International Conference on Machine Learning , pp. 362\u2013370. Morgan Kaufmann. Littman, M. L., Dean, T. L., Kaelbling, L. P. On the complexity of solving Markov decision problems. In Proceedings of the Eleventh Annual Conference on Uncertainty in Arti\ufb01cial Intelligence, pp. 394\u2013402. Littman, M. L., Sutton, R. S., Singh . Predictive representations of state. In Advances Liu, J. S. Monte Carlo Strategies in Scienti\ufb01c Computing. Springer-Verlag, Berlin. Ljung, L", "b7564d1f-5f67-44fd-a3c9-5414d3a6d504": "For example, the target in the update given by (16.3) is \u03b3 maxa \u02c6q(St+1, a, wt). Its dependence on wt complicates the process compared to the simpler supervised-learning situation in which the targets do not depend on the parameters being updated. As discussed in Chapter 11 this can lead to oscillations and/or divergence. To address this problem Mnih et al. used a technique that brought Q-learning closer to the simpler supervised-learning case while still allowing it to bootstrap.\n\nWhenever a certain number, C, of updates had been done to the weights w of the action-value network, they inserted the network\u2019s current weights into another network and held these duplicate weights \ufb01xed for the next C updates of w. The outputs of this duplicate network over the next C updates of w were used as the Q-learning targets. Letting \u02dcq denote the output of this duplicate network, then instead of (16.3) the update rule was: A \ufb01nal modi\ufb01cation of standard Q-learning was also found to improve stability", "fdbaa567-5f2a-4f18-acc3-315639e229df": "When your goal is to build the best possible real-world product or service, you can typically collect more data but must determine the value of reducing error further and weigh  https://www.deeplearningbook.org/contents/guidelines.html    this against the cost_of collecting more data. Data collection can require time, money, or human suffering (for example, if your data collection process involves performing invasive medical tests). When your goal is to answer a scientific question about which algorithm performs better on a fixed benchmark, the benchmark  417  CHAPTER 11.\n\nPRACTICAL METHODOLOGY  specification usually determines the training set, and you are not allowed to collect more data. How can one determine a reasonable level of performance to expect? Typically, in the academic setting, we have some estimate of the error rate that is attainable based on previously published benchmark results. In the real-word setting, we have some idea of the error rate that is necessary for an application to be safe, cost-effective, or appealing to consumers. Once you have determined your realistic desired error rate, your design decisions will be guided by reaching this error rate. Another important consideration besides the target value of the performance metric is the choice of which metric to use", "cd8ce9f2-e45b-4cdf-82f8-332c2d53a427": "For any node that may be reached by going backward from z through two or more paths, we simply sum the gradients arriving from different paths at that node. More formally, each node in the graph G corresponds to a variable. To achieve maximum generality, we describe this variable as being a tensor V. Tensors in general can have any number of dimensions. They subsume scalars, vectors, and matrices. We assume that each variable V is associated with the following subroutines:  get_operation(V): This returns the operation that computes V, repre- sented by the edges coming into V in the computational graph. For example, there may be a Python or C++ class representing the matrix multiplication operation, and the get_operation function. Suppose we have a variable that is created by matrix multiplication, C = AB. Then get_operation(V) returns a pointer to an instance of the corresponding C++ class. e get consumers(V,G): This returns the list of variables that are children of V in the computational graph G", "e1a53b65-ef97-430f-81bd-eb8e24dfa957": "The value of a state is estimated as its group\u2019s component, and when the state is updated, that component alone is updated. State aggregation is a special case of SGD (9.7) in which the gradient, r\u02c6v(St,wt), is 1 for St\u2019s group\u2019s component and 0 for the other components. Example 9.1: State Aggregation on the 1000-state Random Walk Consider a 1000-state version of the random walk task (Examples 6.2 and 7.1 on pages 125 and 144). The states are numbered from 1 to 1000, left to right, and all episodes begin near the center, in state 500. State transitions are from the current state to one of the 100 neighboring states to its left, or to one of the 100 neighboring states to its right, all with equal probability. Of course, if the current state is near an edge, then there may be fewer than 100 neighbors on that side of it", "d14eb29f-f7b3-484b-b92f-f8d4a1d5339f": "Using a combination of bridge sampling, short-chain AIS and parallel tempering, Desjardins et al. devised a scheme to track the partition function of an RBM throughout the training process. The strategy is based on the maintenance of independent estimates of the partition functions of the RBM at every temperature operating in the parallel tempering scheme. The authors combined bridge sampling estimates of the ratios of partition functions of neighboring chains (i.e., from parallel tempering) with AIS estimates across time to come up with a low variance estimate of the partition functions at every iteration of learning. The tools described in this chapter provide many different ways of overcoming the problem of intractable partition functions, but there can be several other difficulties involved in training and using generative models. Foremost among these is the problem of intractable inference, which we confront next. https://www.deeplearningbook.org/contents/partition.html    628  https://www.deeplearningbook.org/contents/partition.html", "ebb62313-2817-40e8-a3a2-233ad379b5ce": "For graphical demonstrations of sparse connectivity, see figure 9.2 and figure 9.3.\n\nIn a deep convolutional network, units in the deeper layers may indirectly interact with a larger portion of the input, as shown in figure 9.4. This allows the network to efficiently describe complicated interactions between many variables by  constructing such interactions from simple building blocks that each describe only sparse interactions. Parameter sharing refers to using the same parameter for more than one function in a model. In a traditional neural net, each element of the weight matrix  RRR  https://www.deeplearningbook.org/contents/convnets.html    Figure 9.2: Sparse connectivity, viewed from below. We highlight one input unit,73, and highlight the output units in s that are affected by this unit. (Top)Whens is formed by convolution with a kernel of width 3, only three outputs are affected bya. (Bottom)When  s is formed by matrix multiplication, connectivity is no longer sparse, so all the outputs are affected by 23. CHAPTER 9", "17e94393-a894-4bf2-846f-b883f93fda92": "We can de\ufb01ne the total within-class variance for the whole data set to be simply s2 2.\n\nThe Fisher criterion is de\ufb01ned to be the ratio of the between-class variance to the within-class variance and is given by We can make the dependence on w explicit by using (4.20), (4.23), and (4.24) to rewrite the Fisher criterion in the form Exercise 4.5 where SB is the between-class covariance matrix and is given by and SW is the total within-class covariance matrix, given by Differentiating (4.26) with respect to w, we \ufb01nd that J(w) is maximized when Note that if the within-class covariance is isotropic, so that SW is proportional to the unit matrix, we \ufb01nd that w is proportional to the difference of the class means, as discussed above. The result (4.30) is known as Fisher\u2019s linear discriminant, although strictly it is not a discriminant but rather a speci\ufb01c choice of direction for projection of the data down to one dimension. However, the projected data can subsequently be used to construct a discriminant, by choosing a threshold y0 so that we classify a new point as belonging to C1 if y(x) \u2a7e y0 and classify it as belonging to C2 otherwise", "3274c033-fb49-4716-b2b2-fbdae257f752": "In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics. Jeremy Howard and Sebastian Ruder. 2018. Universal language model \ufb01ne-tuning for text classi\ufb01cation. In ACL. Association for Computational Linguistics. Yacine Jernite, Samuel R. Bowman, and David Sontag. 2017.\n\nDiscourse-based objectives for fast unsupervised sentence representation learning. CoRR, abs/1705.00557. Mandar Joshi, Eunsol Choi, Daniel S Weld, and Luke Zettlemoyer. 2017. Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension. In ACL. Ryan Kiros, Yukun Zhu, Ruslan R Salakhutdinov, Richard Zemel, Raquel Urtasun, Antonio Torralba, and Sanja Fidler. 2015. Skip-thought vectors. In Advances in neural information processing systems, pages 3294\u20133302", "953cdb36-79de-4d60-ac13-5fc8dd9e17a5": "Traditionally, these distributions are more commonly expressed in an equivExercise 13.24 alent form in terms of noisy linear equations given by where the noise terms have the distributions The parameters of the model, denoted by \u03b8 = {A, \u0393, C, \u03a3, \u00b50, V0}, can be determined using maximum likelihood through the EM algorithm. In the E step, we need to solve the inference problem of determining the local posterior marginals for the latent variables, which can be solved ef\ufb01ciently using the sum-product algorithm, as we discuss in the next section. We now turn to the problem of \ufb01nding the marginal distributions for the latent variables conditional on the observation sequence. For given parameter settings, we also wish to make predictions of the next latent state zn and of the next observation xn conditioned on the observed data x1, . , xn\u22121 for use in real-time applications. These inference problems can be solved ef\ufb01ciently using the sum-product algorithm, which in the context of the linear dynamical system gives rise to the Kalman \ufb01lter and Kalman smoother equations", "870d5de3-7a1e-45e7-857d-ae4573c0d6c9": "The description of the symbol-to-symbol based approach subsumes the symbol-  210  CHAPTER 6. DEEP FEEDFORWARD NETWORKS  to-number approach. The symbol-to-number approach can be understood as performing exactly the same computations as are done in the graph built by the symbol-to-symbol approach. The key difference is that the symbol-to-number approach does not expose the graph. AREA Oanaral Racl_Dranaeatian  https://www.deeplearningbook.org/contents/mlp.html    Vive at en a Up Ug The back-propagation algorithm is very simple. To compute the gradient of some scalar 2 with respect to one of its ancestors \u00a9 in the graph, we begin by observing that the gradient with respect to z is given by de = 1.\n\nWe can then compute the gradient with respect to each parent of z in the graph by multiplying the current gradient by the Jacobian of the operation that produced z. We continue multiplying by Jacobians, traveling backward through the graph in this way until we reach a", "496bacc7-29f6-435f-b88e-873e5c51d21d": "But in many cases of interest, and certainly in the lives of all natural intelligences, the sensory input gives only partial information about the state of the world. Some objects may be occluded by others, or behind the agent, or miles away. In these cases, potentially important aspects of the environment\u2019s state are not directly observable, and it is a strong, unrealistic, and limiting assumption to assume that the learned value function is implemented as a table over the environment\u2019s state space. The framework of parametric function approximation that we developed in Part II is far less restrictive and, arguably, no limitation at all. In Part II we retained the assumption that the learned value functions (and policies) are functions of the environment\u2019s state, but allowed these functions to be arbitrarily restricted by the parameterization. It is somewhat surprising and not widely recognized that function approximation includes important aspects of partial observability. For example, if there is a state variable that is not observable, then the parameterization can be chosen such that the approximate value does not depend on that state variable.\n\nThe e\u21b5ect is just as if the state variable were not observable", "23f69753-36e8-4ec0-b133-bcaab908c183": "Gri\ufb03th, A. K. A comparison and evaluation of three machine learning procedures as applied to the game of checkers. Arti\ufb01cial Intelligence, 5(2):137\u2013148. Grondman, I., Busoniu, L., Lopes, G. A., Babuska, R. A survey of actor\u2013critic reinforcement learning: Standard and natural policy gradients. IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews), 42(6):1291\u20131307. Grossberg, S. A neural model of attention, reinforcement, and discrimination learning. discrimination during associative learning. Neural Networks, 2(2):79\u2013102. Gullapalli, V. .\n\nA stochastic reinforcement algorithm for learning real-valued functions. Gullapalli, V., Barto, A. G. Shaping as a method for accelerating reinforcement learning. Hackman, L. Faster Gradient-TD Algorithms. M.Sc", "04a879b3-9f9d-44a3-ac32-00235af838be": "The final, k-th state\u2019s probability is given by 1 \u2014 1! p. Note that we must constrain 17 1. Multinoulli distributions are often used to refer to distributions over categories of objects, so we do not usually assume that state  https://www.deeplearningbook.org/contents/prob.html    1 has numerical value 1, and so on. For this reason, we do not usually need to compute the expectation or variance of multinoulli-distributed random variables. The Bernoulli and multinoulli distributions are sufficient to describe any distri- bution over their domain. They are able to describe any distribution over their domain not so much because they are particularly powerful but rather because their domain is simple; they model discrete variables for which it is feasible to enumerate all the states.\n\nWhen dealing with continuous variables, there are uncountably many states, so any distribution described by a small number of parameters must impose strict limits on the distribution. 3.9.3. Gaussian Distribution  The most commonly used distribution over real numbers is the normal distribu- tion, also known as the Gaussian distribution:  N (a; p,07) = (pee ( - (a 1)", "8575a426-6ad0-4f9c-8921-9441b14aa324": "Plot (a) shows the data points in green, together with the initial con\ufb01guration of the mixture model in which the one standard-deviation contours for the two Gaussian components are shown as blue and red circles.\n\nPlot (b) shows the result of the initial E step, in which each data point is depicted using a proportion of blue ink equal to the posterior probability of having been generated from the blue component, and a corresponding proportion of red ink given by the posterior probability of having been generated by the red component. Thus, points that have a signi\ufb01cant probability for belonging to either cluster appear purple. The situation after the \ufb01rst M step is shown in plot (c), in which the mean of the blue Gaussian has moved to the mean of the data set, weighted by the probabilities of each data point belonging to the blue cluster, in other words it has moved to the centre of mass of the blue ink. Similarly, the covariance of the blue Gaussian is set equal to the covariance of the blue ink. Analogous results hold for the red component. Plots (d), (e), and (f) show the results after 2, 5, and 20 complete cycles of EM, respectively. In plot (f) the algorithm is close to convergence", "de78ad15-e931-46dc-a5a5-04b93d9cbae4": ", Rk = rk, \u03c6(Sk) = \u03c6k}. The dist then is a complete characterization of a source of data trajectories. To know P everything about the statistics of the data, but it is still less than knowing th particular, the VE and BE objectives are readily computed from the MDP as d Section 3, but these cannot be determined from P alone.\n\nThe problem can be seen in very simple, POMDP-like examples, in which the data produced by two di\u21b5erent MDPs is identical in every respect, yet the BE i In such a case the BE is literally not a function of the data, and thus there is estimate it from data. One of the simplest examples is the pair of MDPs shown These MDPs have only one action (or, equivalently, no actions), so they are in e\u21b5 chains. Where two edges leave a state, both possibilities are assumed to occur probability. The numbers on the edges indicate the reward emitted if that edge is The MDP on the left has two states that are represented distinctly; each has weight so that they can take on any value", "5f5f2814-d0b7-4b1c-8d72-19a4b8c7bf0c": "MoreSonpally, we ae interested in computing  bias(62) =E[62 (5.37)  m m  J-o  https://www.deeplearningbook.org/contents/ml.html    We begin by evaluating the term a:  E =E E 3 (x @) in) (5.38) i=1 \u2014\u2014 13? (5.39)  Returning to equation 5.37, we conclude that the bias of 6 is \u2014o?/m. Therefore, the sample variance is a biased estimator. 124  CHAPTER 5. MACHINE LEARNING BASICS  The unbiased sample variance estimator  ra ea By (0)  (5.40)  provides an alternative approach. As the name suggests this estimator is unbiased. That is, we find that E = o? :  - 1 Siw .\\2 - Ela] =E Pe (o\" - jim) | (5.41) = Ele (5.42) ~_m_ (mals 5 - a ( = ) (5.43) =o? (5.44)  We have two estimators: one is biased, and the other is not", "123dc41d-67cc-478a-91bf-788d83af8e2d": "5.1\u20132 Singh and Sutton  distinguished between every-visit and \ufb01rst-visit MC methods and proved results relating these methods to reinforcement learning algorithms. The blackjack example is based on an example used by Widrow, Gupta, and Maitra . The soap bubble example is a classical Dirichlet problem whose Monte Carlo solution was \ufb01rst proposed by Kakutani . Barto and Du\u21b5  discussed policy evaluation in the context of classical Monte Carlo algorithms for solving systems of linear equations.\n\nThey used the analysis of Curtiss  to point out the computational advantages of Monte Carlo policy evaluation for large problems. 5.3\u20134 Monte Carlo ES was introduced in the 1998 edition of this book. That may have been the \ufb01rst explicit connection between Monte Carlo estimation and control methods based on policy iteration. An early use of Monte Carlo methods to estimate action values in a reinforcement learning context was by Michie and Chambers . In pole balancing (page 56), they used averages of episode durations to assess the worth (expected balancing \u201clife\u201d) of each possible action in each state, and then used these assessments to control action selections. Their method is similar in spirit to Monte Carlo ES with every-visit MC estimates", "94b23259-dfc2-4430-88be-bed855e3dbd0": "The strength or e\u21b5ectiveness by which the neurotransmitter released at a synapse in\ufb02uences the postsynaptic neuron is the synapse\u2019s e\ufb03cacy.\n\nOne way a nervous system can change through experience is through changes in synaptic e\ufb03cacies as a result of combinations of the activities of the presynaptic and postsynaptic neurons, and sometimes by the presence of a neuromodulator, which is a neurotransmitter having e\u21b5ects other than, or in addition to, direct fast excitation or inhibition. Brains contain several di\u21b5erent neuromodulation systems consisting of clusters of neurons with widely branching axonal arbors, with each system using a di\u21b5erent neurotransmitter. Neuromodulation can alter the function of neural circuits, mediate motivation, arousal, attention, memory, mood, emotion, sleep, and body temperature. Important here is that a neuromodulatory system can distribute something like a scalar signal, such as a reinforcement signal, to alter the operation of synapses in widely distributed sites critical for learning. The ability of synaptic e\ufb03cacies to change is called synaptic plasticity", "261001cc-3106-4c09-a8e4-70a3482b716d": "We can also use this synthetic data set to illustrate the \u2018responsibilities\u2019 by evaluating, for every data point, the posterior probability for each component in the mixture distribution from which this data set was generated.\n\nIn particular, we can represent the value of the responsibilities \u03b3(znk) associated with data point xn by plotting the corresponding point using proportions of red, blue, and green ink given by \u03b3(znk) for k = 1, 2, 3, respectively, as shown in Figure 9.5(c). So, for instance, a data point for which \u03b3(zn1) = 1 will be coloured red, whereas one for which \u03b3(zn2) = \u03b3(zn3) = 0.5 will be coloured with equal proportions of blue and green ink and so will appear cyan. This should be compared with Figure 9.5(a) in which the data points were labelled using the true identity of the component from which they were generated. Suppose we have a data set of observations {x1, . , xN}, and we wish to model this data using a mixture of Gaussians", "3e5d1f55-5b07-4521-8f16-6774c9a436e1": "APPLICATIONS  (0,0,0) \u2014 (0,0,1) (0,1,0) \u2014 (0,1,1) (1,0,0) \u2014 (1,0,1) (1,1,0) (1,1,1)  Figure 12.4: Illustration of a simple hierarchy of word categories, with 8 words up, ..,w7 organized into a three-level hierarchy. The leaves of the tree represent actual specific words. Internal nodes represent groups of words. Any node can be indexed by the sequence of binary decisions (0 = left, 1 = right) to reach the node from the root. Super-class (0) contains the classes (0,0) and (0,1), which respectively contain the sets of words {up, wi } and {tw2, ws}, and similarly super-class (1) contains the classes (1, 0) and (1,1), which respectively contain the words (w,ws) and (we,w7)", "ba04d474-f7a7-47f9-af4b-08016848dad8": "In this case, there are no parameters wij and so there are just D parameters bi and D parameters vi. From the recursion relations (8.15) and (8.16), we see that the mean of p(x) is given by (b1, . , bD)T and the covariance matrix is diagonal of the form diag(v1, . , vD). The joint distribution has a total of 2D parameters and represents a set of D independent univariate Gaussian distributions. Now consider a fully connected graph in which each node has all lower numbered nodes as parents.\n\nThe matrix wij then has i \u2212 1 entries on the ith row and hence is a lower triangular matrix (with no entries on the leading diagonal). Then the total number of parameters wij is obtained by taking the number D2 of elements in a D \u00d7D matrix, subtracting D to account for the absence of elements on the leading diagonal, and then dividing by 2 because the matrix has elements only below the diagonal, giving a total of D(D\u22121)/2", "1ed82d2b-e418-41d3-ab75-4d391ba68e50": "If the tree is condensed, so that any clique that is a subset of another clique is absorbed into the larger clique, this gives a junction tree. As a consequence of the triangulation step, the resulting tree satis\ufb01es the running intersection property, which means that if a variable is contained in two cliques, then it must also be contained in every clique on the path that connects them.\n\nThis ensures that inference about variables will be consistent across the graph. Finally, a two-stage message passing algorithm, essentially equivalent to the sum-product algorithm, can now be applied to this junction tree in order to \ufb01nd marginals and conditionals. Although the junction tree algorithm sounds complicated, at its heart is the simple idea that we have used already of exploiting the factorization properties of the distribution to allow sums and products to be interchanged so that partial summations can be performed, thereby avoiding having to work directly with the joint distribution. The role of the junction tree is to provide a precise and ef\ufb01cient way to organize these computations", "ef44a100-5fac-40a6-97ee-9af2f287fc9a": "For additional general coverage of reinforcement learning, we refer the reader to the books by Szepesv\u00b4ari , Bertsekas and Tsitsiklis , Kaelbling , and Sugiyama, Hachiya, and Morimura . Books that take a control or operations research perspective include those of Si, Barto, Powell, and Wunsch , Powell , Lewis and Liu , and Bertsekas . Cao\u2019s  review places reinforcement learning in the context of other approaches to learning and optimization of stochastic dynamic systems. Three special issues of the journal Machine Learning focus on reinforcement learning: Sutton , Kaelbling , and Singh . Useful surveys are provided by Barto ; Kaelbling, Littman, and Moore ; and Keerthi and Ravindran . The volume edited by Weiring and van Otterlo  provides an excellent overview of recent developments. In this part of the book we describe almost all the core ideas of reinforcement learning algorithms in their simplest forms: that in which the state and action spaces are small enough for the approximate value functions to be represented as arrays, or tables", "fde40e3e-f1fa-4d0b-9416-b783628fb18a": "For example, if we want to match all the moments of the form ax;, then we need to minimize the difference between a number of values that is quadratic in the dimension of 2.\n\nMoreover, even matching all the first and second moments would only be sufficient to fit a multivariate Gaussian distribution, which captures only linear relationships between values. Our ambitions for neural networks are to capture complex nonlinear relationships, which would require far more moments. GANs avoid this problem of exhaustively enumerating all moments by using a dynamically updated discriminator which automatically focuses its attention on whichever statistic the generator network is matching the least effectively. Instead, generative moment matching networks can be trained by minimizing a cost function called maximum mean discrepancy, or MMD . This cost function measures the error in the first moments in an infinite-dimensional space, using an implicit mapping to feature space defined by a kernel function to make computations on infinite-dimensional vectors tractable. The MMD cost is zero if and only if the two distributions being compared are equal. Visually, the samples from generative moment matching networks are somewhat disappointing. Fortunately, they can be improved by combining the generator network with an autoencoder", "b125d64f-4c55-4c8d-91b3-af8f71064699": "In other words, they are trained to make sure we do not wrongly reject an input when the object is present. The final classifier is trained to have high precision. At test time, we run inference by running the classifiers in a sequence, abandoning any example as soon as any one element in  https://www.deeplearningbook.org/contents/applications.html    the cascade rejects It. Uverall, this allows us to verity the presence ot objects with high confidence, using a high capacity model, but does not force us to pay the cost of full inference for every example. There are two different ways that the cascade can achieve high capacity.\n\nOne way is to make the later members of the cascade  individually have high capacity. In this case, the system as a whole obviously has high capacity, because some of its individual members do. It is also possible to make a cascade in which every individual model has low capacity but the system as a whole has high capacity as a result of the combination of many small models. Viola and Jones  used a cascade of boosted decision trees to implement a fast and robust face detector suitable for use in handheld digital cameras", "1f858372-730a-4673-adb5-1e32b9f73805": "Narendra and Wheeler  studied a Monte Carlo method for ergodic \ufb01nite Markov chains that used the return accumulated between successive visits to the same state as a reward for adjusting a learning automaton\u2019s action probabilities. 5.5 E\ufb03cient o\u21b5-policy learning has become recognized as an important challenge that arises in several \ufb01elds. For example, it is closely related to the idea of \u201cinterventions\u201d and \u201ccounterfactuals\u201d in probabilistic graphical (Bayesian) models . O\u21b5-policy methods using importance sampling have a long history and yet still are not well understood. Weighted importance sampling, which is also sometimes called normalized importance sampling , is discussed by Rubinstein , Hesterberg , Shelton , and Liu  among others.\n\nThe target policy in o\u21b5-policy learning is sometimes referred to in the literature as the \u201cestimation\u201d policy, as it was in the \ufb01rst edition of this book. 5.9 Per-decision importance sampling was introduced by Precup, Sutton, and Singh . They also combined o\u21b5-policy learning with temporal-di\u21b5erence learning, eligibility traces, and approximation methods, introducing subtle issues that we consider in later chapters", "50760670-5416-41c7-872c-8bec245aac9f": "Thus a completely disconnected graph (no links) will be a trivial D map for any distribution. Alternatively, we can consider a speci\ufb01c distribution and ask which graphs have the appropriate conditional independence properties. If every conditional independence statement implied by a graph is satis\ufb01ed by a speci\ufb01c distribution, then the graph is said to be an I map (for \u2018independence map\u2019) of that distribution. Clearly a fully connected graph will be a trivial I map for any distribution. If it is the case that every conditional independence property of the distribution is re\ufb02ected in the graph, and vice versa, then the graph is said to be a perfect map for that distribution. A perfect map is therefore both an I map and a D map.\n\nConsider the set of distributions such that for each distribution there exists a directed graph that is a perfect map. This set is distinct from the set of distributions such that for each distribution there exists an undirected graph that is a perfect map. In addition there are distributions for which neither directed nor undirected graphs offer a perfect map. This is illustrated as a Venn diagram in Figure 8.34", "0856782d-4697-4e08-adb6-4c9ca8903a0a": "6.10 (\u22c6) Show that an excellent choice of kernel for learning a function f(x) is given by k(x, x\u2032) = f(x)f(x\u2032) by showing that a linear learning machine based on this kernel will always \ufb01nd a solution proportional to f(x). 6.11 (\u22c6) By making use of the expansion (6.25), and then expanding the middle factor as a power series, show that the Gaussian kernel (6.23) can be expressed as the inner product of an in\ufb01nite-dimensional feature vector. 6.12 (\u22c6 \u22c6) www Consider the space of all possible subsets A of a given \ufb01xed set D. Show that the kernel function (6.27) corresponds to an inner product in a feature space of dimensionality 2|D| de\ufb01ned by the mapping \u03c6(A) where A is a subset of D and the element \u03c6U(A), indexed by the subset U, is given by Here U \u2286 A denotes that U is either a subset of A or is equal to A", "da9886dd-0355-4766-965c-52ad49a81ad3": "Assuming a prior distribution \u03c0(\u03b8) over the parameters, and considering a probabilistic model that de\ufb01nes a conditional distribution p(x|\u03b8), the inference is based on the Bayes\u2019 theorem: Interestingly, the early work by Zellner  showed the relations between Bayesian inference and maximum entropy, by reformulating the statistical inference problem from the perspective of information processing, and rediscovering the Bayes\u2019 theorem as the optimal information processing rule. More speci\ufb01cally, statistical inference can be seen as a procedure of information processing, where the system receives input information in the form of prior knowledge and data, and emits output information in the form of parameter estimates and others. An e\ufb03cient inference procedure should generate an output distribution such that the system retains all input information and not inject any extraneous information. The learning objective is thus to minimize the di\ufb00erence between the input and output information w.r.t. the output distribution: where the \ufb01rst two terms measure the output information in the output distribution q(\u03b8) and marginal p(D), and the third term measures the input information in the prior \u03c0(\u03b8) and data likelihood p(x\u2217|\u03b8)", "a4767116-4abf-4c68-bfbc-2c007bf03a21": "We\u2019re also highlighting what we believe are some of the most promising new directions of energy-based models for prediction in the presence of uncertainty, joint embedding methods and latent-variable architectures for self-supervised learning and reasoning in Al systems. Self-supervised learning is predictive learning  Self-supervised learning obtains supervisory signals from the data itself, often leveraging the underlying structure in the data. The general technique of self-supervised learning is to predict any unobserved or hidden part (or property) of the input from any observed or unhidden part of the input. For example, as is common in NLP, we can hide part of a sentence and predict the hidden words from the remaining  https://ai.meta.com/blog/self-supervised-learning-the-dark-matter-of-intelligence/  Self-supervised learning: The dark matter of intelligence   words.\n\nWe can also predict past or future frames in a video (hidden data) from current ones (observed data). Since self-supervised learning uses the structure of the data itself, it can make use of a variety of supervisory signals across co-occurring modalities (e.g., video and audio) and across large data sets \u2014 all without relying on labels", "c7042a73-bfbe-4f94-9072-727977bc6663": "We define the output to be  jg=w'a, (5.3)  where w \u20ac R\u201d is a vector of parameters. Parameters are values that control the behavior of the system. In this case, w; is the coefficient that we multiply by feature x; before summing up the contributions from all the features. We can think of w as a set of weights that determine how  105  CHAPTER 5. MACHINE LEARNING BASICS  each feature affects the prediction. If a feature x; receives a positive weight w;, then increasing the value of that feature increases the value of our prediction 4%. If a feature receives a negative weight, then increasing the value of that feature decreases the value of our prediction. If a feature\u2019s weight is large in magnitude,  https://www.deeplearningbook.org/contents/ml.html    then it has a large effect on the prediction. If a feature\u2019s weight is zero, it has no effect on the prediction. We thus have a definition of our task T: to predict y from a by outputting  y= w 'a.\n\nNext we need a definition of our performance measure, P", "337dac65-e5a9-45f7-b16d-5028620a8971": "Modelling conditional probability distributions for periodic variables. Neural Computation 8(5), 1123\u20131133. Bishop, C. M. and I. T. Nabney . Pattern Recognition and Machine Learning: A Matlab Companion. Springer. In preparation. Bishop, C. M., D. Spiegelhalter, and J. Winn . VIBES: A variational inference engine for Bayesian networks. In S. Becker, S. Thrun, and K. Obermeyer (Eds. ), Advances in Neural Bishop, C. M. and M. Svens\u00b4en . Bayesian hierarchical mixtures of experts. In U. Kjaerulff and C. Meek (Eds. ), Proceedings Nineteenth Conference on Uncertainty in Arti\ufb01cial Intelligence, pp. 57\u201364. Morgan Kaufmann.\n\nBishop, C. M., M", "e484c831-75ae-40ce-953d-3392a4ed5bdc": "On the face of an extremely steep cliff structure, the gradient update step can move the parameters extremely far, usually jumping off  the cliff structure altogether. The cliff can be dangerous whether we approach it from above or from below,  285  CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  but fortunately its most serious consequences can be avoided using the gradient clipping heuristic described in section 10.11.1. The basic idea is to recall that the gradient specifies not the optimal step size, but only the optimal direction within an infinitesimal region. When the traditional gradient descent algorithm proposes making a very large step, the gradient clipping heuristic intervenes to reduce the step size, making it less likely to go outside the region where the gradient indicates the direction of approximately steepest descent. Cliff structures are most common in the cost functions for recurrent neural networks, because such models involve a multiplication of many factors, with one factor for each time step.\n\nLong temporal sequences thus incur an extreme amount of multiplication. 8.2.5 Long-Term Dependencies  Another difficulty that neural network optimization algorithms must overcome arises when the computational graph becomes extremely deep. Feedforward networks with many layers have such deep computational graphs", "4fb48231-fcb4-477b-ad94-f0851857f599": "then is a complete characterization of a source of data trajectories. T everything about the statistics of the data, but it is still less than k particular, the VE and BE objectives are readily computed from the Section 3, but these cannot be determined from P alone.\n\nThe problem can be seen in very simple, POMDP-like examples, in data produced by two di\u21b5erent MDPs is identical in every respect, ye In such a case the BE is literally not a function of the data, and thu estimate it from data. One of the simplest examples is the pair of MD These MDPs have only one action (or, equivalently, no actions), so they chains. Where two edges leave a state, both possibilities are assumed probability. The numbers on the edges indicate the reward emitted if t The MDP on the left has two states that are represented distinctly; weight so that they can take on any value. The MDP on the right of which, B and B\u2032, are represented identically and must be given th value. We can imagine that the value of state A is given by the \ufb01rst the value of B and B\u2032 is given by the second. Notice that the observ for the two MDPs", "7683217e-8403-4660-a5a2-7be1beefd193": "But if the system is not ready for one of these commands, or executing a command would result in resources being underutilized (e.g., due to timing constraints arising from servicing that one command), it makes sense to begin servicing a newer request before \ufb01nishing the older one. Policies can gain e\ufb03ciency by reordering requests, for example, by giving priority to read requests over write requests, or by giving priority to read/write commands to already open rows. The policy called First-Ready, First-Come-First-Serve (FR-FCFS), gives priority to column commands (read and write) over row commands (activate and precharge), and in case of a tie gives priority to the oldest command. FR-FCFS was shown to outperform other scheduling policies in terms of average memory-access latency under conditions commonly encountered .\n\nThey modeled the DRAM access process as an MDP whose states are the contents of the transaction queue and whose actions are commands to the DRAM system: precharge, activate, read, write, and NoOp. The reward signal is 1 whenever the action is read or write, and otherwise it is 0", "1dfa3555-5ca7-47ad-b618-02e715a0befd": "However, if we wish to use the SVM as a module in a larger probabilistic system, then probabilistic predictions of the class label t for new inputs x are required. To address this issue, Platt  has proposed \ufb01tting a logistic sigmoid to the outputs of a previously trained support vector machine. Speci\ufb01cally, the required conditional probability is assumed to be of the form where y(x) is de\ufb01ned by (7.1). Values for the parameters A and B are found by minimizing the cross-entropy error function de\ufb01ned by a training set consisting of pairs of values y(xn) and tn. The data used to \ufb01t the sigmoid needs to be independent of that used to train the original SVM in order to avoid severe over-\ufb01tting. This twostage approach is equivalent to assuming that the output y(x) of the support vector machine represents the log-odds of x belonging to class t = 1.\n\nBecause the SVM training procedure is not speci\ufb01cally intended to encourage this, the SVM can give a poor approximation to the posterior probabilities", "310a5aab-7947-480e-bdda-bbc2caf296ad": "The precise form of the AdaBoost algorithm is given below. 1. Initialize the data weighting coef\ufb01cients {wn} by setting w(1) (a) Fit a classi\ufb01er ym(x) to the training data by minimizing the weighted where I(ym(xn) \u0338= tn) is the indicator function and equals 1 when ym(xn) \u0338= tn and 0 otherwise. (c) Update the data weighting coef\ufb01cients 3. Make predictions using the \ufb01nal model, which is given by We see that the \ufb01rst base classi\ufb01er y1(x) is trained using weighting coef\ufb01cients w(1) n that are all equal, which therefore corresponds to the usual procedure for training a single classi\ufb01er.\n\nFrom (14.18), we see that in subsequent iterations the weighting coef\ufb01cients w(m) n are increased for data points that are misclassi\ufb01ed and decreased for data points that are correctly classi\ufb01ed. Successive classi\ufb01ers are therefore forced to place greater emphasis on points that have been misclassi\ufb01ed by previous classi\ufb01ers, and data points that continue to be misclassi\ufb01ed by successive classi\ufb01ers receive ever greater weight", "774c7050-d08b-4b9f-b8a9-e330b277d7ce": "We can do this using the directional derivative:  min ul Val (x) (4.3) u,ulu=1 = min |lulla||Ves(e)]he e084 (4.4) uu! u=1  where @ is the angle between u and the gradient. Substituting in ||e||2 = 1 and ignoring factors that do not depend on w, this simplifies to ming cos 6. This is minimized when w points in the opposite direction as the gradient. In other words, the gradient points directly uphill, and the negative gradient points directly downhill. We can decrease f by moving in the direction of the negative gradient. This is known as the method of steepest descent, or gradient descent. Steepest descent proposes a new point a =2-\u20acVaf (x) (4.5)  83  CHAPTER 4. NUMERICAL COMPUTATION  where \u00a2\u20ac is the learning rate, a positive scalar determining the size of the step. We can choose \u20ac in several different ways. A popular approach is to set \u20ac to a small constant", "23d67cc2-9d1b-4854-863a-c45f6fbb5911": "Ordinary importance sampling produces unbiased estimates, but has larger, possibly in\ufb01nite, variance, whereas weighted importance sampling always has \ufb01nite variance and is preferred in practice.\n\nDespite their conceptual simplicity, o\u21b5-policy Monte Carlo methods for both prediction and control remain unsettled and are a subject of ongoing research. The Monte Carlo methods treated in this chapter di\u21b5er from the DP methods treated in the previous chapter in two major ways. First, they operate on sample experience, and thus can be used for direct learning without a model. Second, they do not bootstrap. That is, they do not update their value estimates on the basis of other value estimates. These two di\u21b5erences are not tightly linked, and can be separated. In the next chapter we consider methods that learn from experience, like Monte Carlo methods, but also bootstrap, like DP methods. The term \u201cMonte Carlo\u201d dates from the 1940s, when physicists at Los Alamos devised games of chance that they could study to help understand complex physical phenomena relating to the atom bomb. Coverage of Monte Carlo methods in this sense can be found in several textbooks", "ae720c27-b013-4348-96fc-97480742dedb": "Reinforcement in the context of game theory is a much di\u21b5erent subject than reinforcement learning used in programs to play tic-tac-toe, checkers, and other recreational games. See, for example, Szita  for an overview of this aspect of reinforcement learning and games. John Holland  outlined a general theory of adaptive systems based on selectional form, as in evolutionary methods and the k-armed bandit. In 1976 and more fully in 1986, he introduced classi\ufb01er systems, true reinforcement learning systems including association and value functions. A key component of Holland\u2019s classi\ufb01er systems was the \u201cbucket-brigade algorithm\u201d for credit assignment, which is closely related to the temporal di\u21b5erence algorithm used in our tic-tac-toe example and discussed in Chapter 6.\n\nAnother key component was a genetic algorithm, an evolutionary method whose role was to evolve useful representations. Classi\ufb01er systems have been extensively developed by many researchers to form a major branch of reinforcement learning research , but genetic algorithms\u2014which we do not consider to be reinforcement learning systems by themselves\u2014have received much more attention, as have other approaches to evolutionary computation . The individual most responsible for reviving the trial-and-error thread to reinforcement learning within arti\ufb01cial intelligence was Harry Klopf", "45f3e1f4-b02a-4d2c-8eee-d285149c9af8": "After several repetitions of presenting another stimulus, one not related to food, in this case the sound of a metronome, shortly before the introduction of food, the dog salivated in response to the sound of the metronome in the same way it did to the food. \u201cThe activity of the salivary gland has thus been called into play by impulses of sound\u2014a stimulus quite alien to food\u201d (Pavlov, 1927, p. 22).\n\nSummarizing the signi\ufb01cance of this \ufb01nding, Pavlov wrote: It is pretty evident that under natural conditions the normal animal must respond not only to stimuli which themselves bring immediate bene\ufb01t or harm, but also to other physical or chemical agencies\u2014waves of sound, light, and the like\u2014which in themselves only signal the approach of these stimuli; though it is not the sight and sound of the beast of prey which is in itself harmful to the smaller animal, but its teeth and claws. (Pavlov, 1927, p. 14) Connecting new stimuli to innate re\ufb02exes in this way is now called classical, or Pavlovian, conditioning", "4b98e133-41e2-4d9f-a064-b094481f6dfe": "Similarly, the target for an arbitrary n-step update is the n-step return: for all n, t such that n \u2265 1 and 0 \uf8ff t < T \u2212 n. All n-step returns can be considered approximations to the full return, truncated after n steps and then corrected for the remaining missing terms by Vt+n\u22121(St+n). If t + n \u2265 T (if the n-step return extends to or beyond termination), then all the missing terms are taken as zero, and the n-step return de\ufb01ned to be equal to the ordinary full return (Gt:t+n .= Gt if t + n \u2265 T). Note that n-step returns for n > 1 involve future rewards and states that are not available at the time of transition from t to t + 1. No real algorithm can use the n-step return until after it has seen Rt+n and computed Vt+n\u22121. The \ufb01rst time these are available is t + n", "3f29ffdd-a71b-47c4-ad09-1acfbcd00acc": "For any given path, the corresponding probability is given by the product of the elements of the transition matrix Ajk, corresponding to the probabilities p(zn+1|zn) for each segment of the path, along with the emission densities p(xn|k) associated with each node on the path. If we eliminate \u00b5zn\u2192fn+1(zn) between these two equations, and make use of (13.46), we obtain a recursion for the f \u2192 z messages of the form where we have introduced the notation \u03c9(zn) \u2261 \u00b5fn\u2192zn(zn). From (8.95) and (8.96), these messages are initialized using where we have used (13.45). Note that to keep the notation uncluttered, we omit the dependence on the model parameters \u03b8 that are held \ufb01xed when \ufb01nding the most probable sequence. The Viterbi algorithm can also be derived directly from the de\ufb01nition (13.6) of the joint distribution by taking the logarithm and then exchanging maximizations and summations", "e234d02b-2014-4205-90ef-50b1a93e1940": "We use the hyper-parameters speci\ufb01ed in Algorithm 1 for all of our experiments.\n\nBecause the WGAN algorithm attempts to train the critic f (lines 2\u20138 in Algorithm 1) relatively well before each generator update (line 10 in Algorithm 1), the loss function at this point is an estimate of the EM distance, up to constant factors related to the way we constrain the Lipschitz constant of f. Our \ufb01rst experiment illustrates how this estimate correlates well with the quality of the generated samples. Besides the convolutional DCGAN architecture, we also ran experiments where we replace the generator or both the generator and the critic by 4-layer ReLU-MLP with 512 hidden units. Figure 3 plots the evolution of the WGAN estimate (3) of the EM distance during WGAN training for all three architectures. The plots clearly show that these curves correlate well with the visual quality of the generated samples. To our knowledge, this is the \ufb01rst time in GAN literature that such a property is shown, where the loss of the GAN shows properties of convergence. This property is extremely useful when doing research in adversarial networks as one does not need to stare at the generated samples to \ufb01gure out failure modes and to gain information on which models are doing better over others", "2327d0da-9f71-407d-8792-b52106168102": "Then make use of (1.135), together with (1.136), to show that, if the result holds at order M \u2212 1, then it will also hold at order M 1.16 (\u22c6 \u22c6 \u22c6) In Exercise 1.15, we proved the result (1.135) for the number of independent parameters in the M th order term of a D-dimensional polynomial. We now \ufb01nd an expression for the total number N(D, M) of independent parameters in all of the terms up to and including the M6th order. First show that N(D, M) satis\ufb01es where n(D, m) is the number of independent parameters in the term of order m. Now make use of the result (1.137), together with proof by induction, to show that This can be done by \ufb01rst proving that the result holds for M = 0 and arbitrary D \u2a7e 1, then assuming that it holds at order M, and hence showing that it holds at order M + 1.\n\nFinally, make use of Stirling\u2019s approximation in the form for large n to show that, for D \u226b M, the quantity N(D, M) grows like DM, and for M \u226b D it grows like M D", "c820acba-add2-4083-9829-583d4584c7ee": "Zaidan, O.F., Eisner, J.: Modeling annotators: A generative approach to learning from annotator rationales.\n\nIn: Conference on Empirical Methods in Natural Language Processing (EMNLP)  65. Zhang, C., R\u00e9, C., Cafarella, M., De Sa, C., Ratner, A., Shin, J., Wang, F., Wu, S.: DeepDive: Declarative knowledge base construction. Commun. ACM 60(5), 93\u2013102  66. Zhang, Y., Chen, X., Zhou, D., Jordan, M.I. : Spectral methods meet EM: a provably optimal algorithm for crowdsourcing. J. Mach. Learn. Res. 17, 1\u201344  67. Zhao, B., Rubinstein, B.I., Gemmell, J., Han, J.: A Bayesian approach to discovering truth from con\ufb02icting sources for data integration. PVLDB 5(6), 550\u2013561  Publisher\u2019s Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional af\ufb01liations.", "5388c9be-566b-4b36-84cb-aeb61a148e5f": "\u2022 By the Kantorovich-Rubinstein duality , we know that W(Pr, P\u03b8) = dF(Pr, P\u03b8) when F is the set of 1-Lipschitz functions. Furthermore, if F is the set of KLipschitz functions, we get K \u00b7 W(Pr, P\u03b8) = dF(Pr, P\u03b8). \u2022 When F is the set of all measurable functions bounded between -1 and 1 (or all continuous functions between -1 and 1), we retrieve dF(Pr, P\u03b8) = \u03b4(Pr, P\u03b8) the total variation distance .\n\nThis already tells us that going from 1-Lipschitz to 1-Bounded functions drastically changes the topology of the space, and the regularity of dF(Pr, P\u03b8) as a loss function (as by Theorems 1 and 2). \u2022 Energy-based GANs (EBGANs)  can be thought of as the generative approach to the total variation distance. This connection is stated and proven in depth in Appendix D", "1fa7ce66-f86f-4dce-998f-a46e286f2fe1": "Again it is easy to verify that the joint distribution over all variables is Gaussian.\n\nNote that we have already encountered a speci\ufb01c example of the linear-Gaussian relationship when we saw that the conjugate prior for the mean \u00b5 of a Gaussian Section 2.3.6 variable x is itself a Gaussian distribution over \u00b5. The joint distribution over x and \u00b5 is therefore Gaussian. This corresponds to a simple two-node graph in which the node representing \u00b5 is the parent of the node representing x. The mean of the distribution over \u00b5 is a parameter controlling a prior, and so it can be viewed as a hyperparameter. Because the value of this hyperparameter may itself be unknown, we can again treat it from a Bayesian perspective by introducing a prior over the hyperparameter, sometimes called a hyperprior, which is again given by a Gaussian distribution. This type of construction can be extended in principle to any level and is an illustration of a hierarchical Bayesian model, of which we shall encounter further examples in later chapters", "3febe61e-198c-46f6-a551-e67c6774e0b1": "It would seem more reasonable to choose the complexity of the model according to the complexity of the problem being solved. We shall see that the least squares approach to \ufb01nding the model parameters represents a speci\ufb01c case of maximum likelihood (discussed in Section 1.2.5), and that the over-\ufb01tting problem can be understood as a general property of maximum likelihood. By adopting a Bayesian approach, the Section 3.4 over-\ufb01tting problem can be avoided.\n\nWe shall see that there is no dif\ufb01culty from a Bayesian perspective in employing models for which the number of parameters greatly exceeds the number of data points. Indeed, in a Bayesian model the effective number of parameters adapts automatically to the size of the data set. For the moment, however, it is instructive to continue with the current approach and to consider how in practice we can apply it to data sets of limited size where we function (1.4) for two values of the regularization parameter \u03bb corresponding to ln \u03bb = \u221218 and ln \u03bb = 0. The case of no regularizer, i.e., \u03bb = 0, corresponding to ln \u03bb = \u2212\u221e, is shown at the bottom right of Figure 1.4. may wish to use relatively complex and \ufb02exible models", "20c0263f-48a9-442b-8d42-4b6c23c99a1e": "Now consider the case of binary classi\ufb01cation in which we have a single target variable t such that t = 1 denotes class C1 and t = 0 denotes class C2.\n\nFollowing the discussion of canonical link functions in Section 4.3.6, we consider a network having a single output whose activation function is a logistic sigmoid so that 0 \u2a7d y(x, w) \u2a7d 1. We can interpret y(x, w) as the conditional probability p(C1|x), with p(C2|x) given by 1 \u2212 y(x, w). The conditional distribution of targets given inputs is then a Bernoulli distribution of the form If we consider a training set of independent observations, then the error function, which is given by the negative log likelihood, is then a cross-entropy error function of the form where yn denotes y(xn, w). Note that there is no analogue of the noise precision \u03b2 because the target values are assumed to be correctly labelled. However, the model is easily extended to allow for labelling errors. Simard et al", "49ed6b04-c85d-4471-af16-a6699709a1f3": "2.42 (\u22c6 \u22c6) Evaluate the mean, variance, and mode of the gamma distribution (2.146). is a generalization of the univariate Gaussian distribution. Show that this distribution is normalized so that \ufffd \u221e and that it reduces to the Gaussian when q = 2. Consider a regression model in which the target variable is given by t = y(x, w) + \u03f5 and \u03f5 is a random noise variable drawn from the distribution (2.293). Show that the log likelihood function over w and \u03c32, for an observed data set of input vectors X = {x1, . , xN} and corresponding target variables t = (t1, . , tN)T, is given by where \u2018const\u2019 denotes terms independent of both w and \u03c32. Note that, as a function of w, this is the Lq error function considered in Section 1.5.5", "9bd00b72-ee93-4ac6-8d40-6791c9edd7a4": "Then we start a set of messages propagating inwards from the leaves of the tree towards the root, with each node sending its message towards the root once it has received all incoming messages from its other neighbours. The \ufb01nal maximization is performed over the product of all messages arriving at the root node, and gives the maximum value for p(x). This could be called the max-product algorithm and is identical to the sum-product algorithm except that summations are replaced by maximizations. Note that at this stage, messages have been sent from leaves to the root, but not in the other direction.\n\nIn practice, products of many small probabilities can lead to numerical under\ufb02ow problems, and so it is convenient to work with the logarithm of the joint distribution. The logarithm is a monotonic function, so that if a > b then ln a > ln b, and hence the max operator and the logarithm function can be interchanged, so that The distributive property is preserved because Thus taking the logarithm simply has the effect of replacing the products in the max-product algorithm with sums, and so we obtain the max-sum algorithm", "c3929ade-f732-4f9c-84d3-a0a25cb5461d": "Consequently parameter nodes never themselves have parents and so all paths through these nodes will always be tail-to-tail and hence blocked. Consequently they play no role in d-separation. Another example of conditional independence and d-separation is provided by the concept of i.i.d. (independent identically distributed) data introduced in Section 1.2.4. Consider the problem of \ufb01nding the posterior distribution for the mean of a univariate Gaussian distribution. This can be represented by the directed graph Section 2.3 shown in Figure 8.23 in which the joint distribution is de\ufb01ned by a prior p(\u00b5) together with a set of conditional distributions p(xn|\u00b5) for n = 1, . , N. In practice, we observe D = {x1, . , xN} and our goal is to infer \u00b5. Suppose, for a moment, that we condition on \u00b5 and consider the joint distribution of the observations", "d97c0c3f-ac61-405e-9cad-2f9a9b655a4b": "We can easily achieve 99.9999 percent accuracy on the detection task, by simply hard coding the classifier to always report that the disease is absent. Clearly, accuracy is a poor way to characterize the performance of such a system. One way to solve this problem is to instead measure precision and recall. Precision is the fraction of detections reported by the model that were correct, while recall is the fraction of true events  https://www.deeplearningbook.org/contents/guidelines.html    that were detected. A detector that says no one has the disease would achieve perfect precision, but zero recall. A detector that says everyone has the disease would achieve perfect recall, but precision equal to the percentage of people who  have the disease (0.0001 percent in our example of a disease that only one people in a million have). When using precision and recall, it is common to plot a PR curve, with precision on the y-axis and recall on the z-axis.\n\nThe classifier generates a score that is higher if the event to be detected occurred. For example, a feedforward  418  CHAPTER 11", "538a3c02-d667-474e-bdd3-f811d0b1eaf3": "Note that the error function in this case is quadratic and hence the Newton-Raphson formula gives the exact solution in one step. Now let us apply the Newton-Raphson update to the cross-entropy error function (4.90) for the logistic regression model. From (4.91) we see that the gradient and Hessian of this error function are given by We see that the Hessian is no longer constant but depends on w through the weighting matrix R, corresponding to the fact that the error function is no longer quadratic. Using the property 0 < yn < 1, which follows from the form of the logistic sigmoid function, we see that uTHu > 0 for an arbitrary vector u, and so the Hessian matrix H is positive de\ufb01nite. It follows that the error function is a concave function of w and hence has a unique minimum", "397bf348-b941-4f4c-9e9f-b322239f484b": "Curran Associates, Inc. Peng, J. E\ufb03cient Dynamic Programming-Based Learning for Control. Ph.D. thesis, Peng, J. E\ufb03cient memory-based dynamic programming. In Proceedings of the 12th International Conference on Machine Learning , pp. 438\u2013446. Peng, J., Williams, R. J. E\ufb03cient learning and planning within the Dyna framework. 11th International Conference on Machine Learning , pp. 226\u2013232. Morgan Kaufmann, San Francisco. Perkins, T. J., Pendrith, M. D. On the existence of \ufb01xed points for Q-learning and Sarsa in partially observable domains. In Proceedings of the 19th International Conference on Machine Learning , pp. 490\u2013497. Perkins, T. J., Precup, D. A convergent form of approximate policy iteration. In Advances in Neural Information Processing Systems 15 , pp.\n\n1627\u20131634. MIT Press, Cambridge, MA", "5b47412a-80a5-49c8-b29d-b7a1a8db7e2a": "As a concrete example, we de\ufb01ne f as a binary classi\ufb01er f\u03c6 with sigmoid activation and parameters \u03c6, where the value f\u03c6(t) measures the log probability of the sample t being a real instance (as opposed to a model generation). Thus the higher f\u03c6(t) value, the higher quality of sample t. The parameters \u03c6 of the experience function need to be learned. We can do so by augmenting the standard equation (Equation 3.2) with added optimization of \u03c6 in various ways. The following equation gives one of the approaches: where, besides the optimization of q and \u03b8, we additionally maximize over \u03c6 with the extra term Epd  to form the classi\ufb01cation problem max\u03c6 \u2212Eq  + Epd .\n\nFurther assuming a particular con\ufb01guration of the tradeo\ufb00 hyperparameters \u03b1 = 0 and \u03b2 = 1, the resulting objective turns out to relate closely to generative adversarial learning. In particular, with proofs adapted from Farnia and Tse , Equation 6.4 recovers the vanilla GAN algorithm when D is the Jensen-Shannon divergence and assuming the space of f\u03c6, denoted as F, is convex", "01949e5b-84a0-4207-bf79-979ba55a2ba6": "10.25 (\u22c6 \u22c6) The variational treatment of the Bayesian mixture of Gaussians, discussed in Section 10.2, made use of a factorized approximation (10.5) to the posterior distribution. As we saw in Figure 10.2, the factorized assumption causes the variance of the posterior distribution to be under-estimated for certain directions in parameter space. Discuss qualitatively the effect this will have on the variational approximation to the model evidence, and how this effect will vary with the number of components in the mixture. Hence explain whether the variational Gaussian mixture will tend to under-estimate or over-estimate the optimal number of components.\n\n10.26 (\u22c6 \u22c6 \u22c6) Extend the variational treatment of Bayesian linear regression to include a gamma hyperprior Gam(\u03b2|c0, d0) over \u03b2 and solve variationally, by assuming a factorized variational distribution of the form q(w)q(\u03b1)q(\u03b2). Derive the variational update equations for the three factors in the variational distribution and also obtain an expression for the lower bound and for the predictive distribution", "853eebd4-2390-4a96-a50c-f618cfd1cfc1": "R., Sutton, R. S. O\u21b5-policy learning based on weighted importance sampling with linear computational complexity. In Proceedings of the 31st Conference on Uncertainty in Arti\ufb01cial Intelligence , pp. 552\u2013561. AUAI Press Corvallis, Oregon. Mahmood, A. R., Sutton, R. S., Degris, T., Pilarski, P. M. Tuning-free step-size adaptation. In 2012 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), Proceedings, pp. 2121\u20132124. IEEE. Mahmood, A. R., Yu, H, Sutton, R. S. Multi-step o\u21b5-policy learning without importance Mahmood, A. R., van Hasselt, H., Sutton, R. S. Weighted importance sampling for o\u21b5-policy learning with linear function approximation", "a3a2967f-2637-4190-8e37-726dfc8a36dc": "Note that these diagonal elements lie in the range (0, 1/4), and hence WN is a positive de\ufb01nite matrix.\n\nBecause CN (and hence its inverse) is positive de\ufb01nite by construction, and because the sum of two positive de\ufb01nite matrices is also positive de\ufb01nite, we see Exercise 6.24 that the Hessian matrix A = \u2212\u2207\u2207\u03a8(aN) is positive de\ufb01nite and so the posterior distribution p(aN|tN) is log convex and therefore has a single mode that is the global maximum. The posterior distribution is not Gaussian, however, because the Hessian is a function of aN. Using the Newton-Raphson formula (4.92), the iterative update equation for aN is given by Exercise 6.25 These equations are iterated until they converge to the mode which we denote by a\u22c6 N. At the mode, the gradient \u2207\u03a8(aN) will vanish, and hence a\u22c6 N will satisfy where the elements of WN are evaluated using a\u22c6 N. This de\ufb01nes our Gaussian approximation to the posterior distribution p(aN|tN) given by We can now combine this with (6.78) and hence evaluate the integral (6.77)", "3a1da66f-2bd7-4b66-aec0-7ddcbae9f874": "I., Tennenholtz, M. R-max \u2013 a general polynomial time algorithm for near-optimal reinforcement learning. Journal of Machine Learning Research, 3:213\u2013231. Breiman, L. Random forests. Machine Learning, 45(1):5\u201332. Breiter, H. C., Aharon, I., Kahneman, D., Dale, A., Shizgal, P. Functional imaging Bridle, J. S. Training stochastic model recognition algorithms as networks can lead to maximum mutual information estimates of parameters. In Advances in Neural Information Processing Systems 2 , pp. 211\u2013217. Morgan Kaufmann, San Mateo, CA. Broomhead, D. S., Lowe, D. Multivariable functional interpolation and adaptive networks. Bromberg-Martin, E. S., Matsumoto, M., Hong, S., Hikosaka, O", "ea50bfb7-07dd-4b84-a121-8c4e45c65e4a": "Many of the arguments presented here are summarized from or inspired by Pearl . Nearly all activities require some ability to reason in the presence of uncertainty.\n\nIn fact, beyond mathematical statements that are true by definition, it is difficult to think of any proposition that is absolutely true or any event that is absolutely guaranteed to occur. There are three possible sources of uncertainty:  1. Inherent stochasticity in the system being modeled. For example, most interpretations of quantum mechanics describe the dynamics of subatomic particles as being probabilistic. We can also create theoretical scenarios that we postulate to have random dynamics, such as a hypothetical card game where we assume that the cards are truly shuffled into a random order. 2. Incomplete observability. Even deterministic systems can appear stochastic when we cannot observe all the variables that drive the behavior of the system. For example, in the Monty Hall problem, a game show contestant is asked to choose between three doors and wins a prize held behind the chosen door. Two doors lead to a goat while a third leads to a car. The outcome given the contestant\u2019s choice is deterministic, but from the contestant\u2019s point of view, the outcome is uncertain", "8c5009f5-c023-4219-b5b8-9eab73f5e32c": "14.7 Contractive Autoencoders  The contractive autoencoder (Rifai et al., 2011a,b) introduces an explicit regularizer on the code h = f(a), encouraging the derivatives of f to be as small as possible: at(a) | Ox  Q(h) =r | (14.18)  F The penalty Q(h) is the squared Frobenius norm (sum of squared elements) of the Jacobian matrix of partial derivatives associated with the encoder function. There is a connection between the denoising autoencoder and the contractive autoencoder: Alain and Bengio  showed that in the limit of small Gaussian input noise, the denoising reconstruction error is equivalent to a contractive penalty on the reconstruction function that maps x tor = g(f(x)).\n\nIn other words, denoising autoencoders make the reconstruction function resist small but finite-sized perturbations of the input, while contractive autoencoders make the feature extraction function resist infinitesimal perturbations of the input. When using the Jacobian-based contractive penalty to pretrain features f(a) for use with a classifier, the best classification accuracy usually results from applying the  518  CHAPTER 14", "ca6f8076-2a3b-4018-a0b3-25a7c679e562": "In addition, we have also found an expression for the bias value w0 given by (4.34). This tells us that a new vector x should be classi\ufb01ed as belonging to class C1 if y(x) = wT(x\u2212m) > 0 and class C2 otherwise. We now consider the generalization of the Fisher discriminant to K > 2 classes, and we shall assume that the dimensionality D of the input space is greater than the number K of classes. Next, we introduce D\u2032 > 1 linear \u2018features\u2019 yk = wT k x, where k = 1, . , D\u2032. These feature values can conveniently be grouped together to form a vector y. Similarly, the weight vectors {wk} can be considered to be the columns of a matrix W, so that y = WTx.\n\n(4.39) Note that again we are not including any bias parameters in the de\ufb01nition of y. The generalization of the within-class covariance matrix to the case of K classes follows from (4.28) to give and Nk is the number of patterns in class Ck", "168d13dc-e76d-4626-81d3-73857dd0e491": "Exercise 10.21 In the context of maximum likelihood, this redundancy is irrelevant because the parameter optimization algorithm (for example EM) will, depending on the initialization of the parameters, \ufb01nd one speci\ufb01c solution, and the other equivalent solutions play no role. In a Bayesian setting, however, we marginalize over all possible parameter values. We have seen in Figure 10.2 that if the true posterior distribution is multimodal, variational inference based on the minimization of KL(q\u2225p) will tend to approximate the distribution in the neighbourhood of one of the modes and ignore the others.\n\nAgain, because equivalent modes have equivalent predictive densities, this is of no concern provided we are considering a model having a speci\ufb01c number K of components. If, however, we wish to compare different values of K, then we need to take account of this multimodality. A simple approximate solution is to add a term ln K! onto the lower bound when used for model comparison and averaging. Exercise 10.22 tor, versus the number K of components for the Old Faithful data set", "2afd8562-4964-4271-b54f-3d4f0fdf4721": "We use  these properties liberally throughout the following derivations without highlighting exactly where we use each one. In the binary sparse coding model, the input v \u20ac R\u201d is generated from the model by adding Gaussian noise to the sum of m different components, which can each be present or absent. Each component is switched on or off by the corresponding hidden unit in h \u20ac {0,1}\u2122:  p(hi = 1) = o(bi), (19.19)  p(v | h) =N(v;Wh, 8\"), (19.20) where 6 is a learnable set of biases, W is a learnable weight matrix, and Bisa learnable, diagonal precision matrix. Training this model with maximum likelihood requires taking the derivative  with respect to the parameters", "3b2a57c6-8323-4a57-98e1-bdd4fcba9bdc": "If each element is in R, and the vector has n elements, then the vector lies in the set formed by taking the Cartesian product of R n times, denoted as R\u201d. When we need to explicitly identify the elements of a vector, we write them as a column enclosed in square brackets:  e=-| |. (2.1)  Ls |  We can think of vectors as identifying points in space, with each element giving the coordinate along a different axis. Sometimes we need to index a set of elements of a vector. In this case, we define a set containing the indices and write the set as a subscript. For example, to access 21, 3 and x6, we define the set S = {1,3,6} and write ag. We use the \u2014 sign to index the complement of a set.\n\nFor example x_, is the vector containing all elements of a except for x1, and w_g is the vector containing all elements of x except for 71, x3 and 26.  e Matrices: A matrix is a 2-D array of numbers, so each element is identified by two indices instead of just one", "1a35b381-c742-4239-9c31-8eb1c34e35f7": "As discussed in the earlier sections, the common learning and inference approaches for probabilistic graphic models, such as the (variational) EM algorithm, are special instances of SE and its teacher-student mechanism. The SE framework o\ufb00ers a generalized formulation for learning graphical and composite models.\n\nThe preceding sections have presented a standardized formalism of machine learning, on the basis of the standard equation of objective function, that provides a succinct, structured formulation of a broad design space of learning algorithms, and subsumes a wide range of known algorithms in a uni\ufb01ed manner. The simplicity, modularity, and generality of the framework is particularly appealing not only from the theoretical perspective but also because it o\ufb00ers guiding principles for mechanical design of algorithmic approaches to challenging problems, in the presence of diverse experience, and hence serves as an important step toward the goal of panoramic learning. In this section, we discuss the use of the standard equation to drive systematic design of new learning methods, which in turn yield various algorithmic approaches to problems in di\ufb00erent application domains. 9.1. Combining Rich Experience. As one of the original motivations for the standardization, the framework allows us to combine together all di\ufb00erent experience to learn models of interest", "c1cdd013-bab6-438f-8847-5e1a5fa6a05e": "The lack of generalization error in sparse coding\u2019s optimization-based encoding process may result in better generalization when sparse coding is used as a feature extractor for a classifier than when a parametric function is used to predict the code.\n\nCoates and Ng  demonstrated that sparse coding features generalize better for object recognition tasks than the features of a related model based on a parametric encoder, the linear-sigmoid autoencoder. Inspired by their work, Goodfellow e# al. showed that a variant of sparse coding generalizes better than other feature extractors in the regime where extremely few labels are available (twenty or fewer labels per class). The primary disadvantage of the nonparametric encoder is that it requires greater time to compute h given x because the nonparametric approach requires running an iterative algorithm. The parametric autoencoder approach, developed in chapter 14, uses only a fixed number of layers, often only one", "1d874bac-14f8-4add-a62b-e31fd20c58d7": "Given a horizon, say of 1000 steps, one can consider all possible actions, all possible resulting rewards, all possible next actions, all next rewards, and so on for all 1000 steps.\n\nGiven the assumptions, the rewards and probabilities of each possible chain of events can be determined, and one need only pick the best. But the tree of possibilities grows extremely rapidly; even if there were only two actions and two rewards, the tree would have 22000 leaves. It is generally not feasible to perform this immense computation exactly, but perhaps it could be approximated e\ufb03ciently. This approach would e\u21b5ectively turn the bandit problem into an instance of the full reinforcement learning problem. In the end, we may be able to use approximate reinforcement learning methods such as those presented in Part II of this book to approach this optimal solution. But that is a topic for research and beyond the scope of this introductory book. Exercise 2.11 (programming) Make a \ufb01gure analogous to Figure 2.6 for the nonstationary case outlined in Exercise 2.5. Include the constant-step-size \"-greedy algorithm with \u21b5=0.1. Use runs of 200,000 steps and, as a performance measure for each algorithm and parameter setting, use the average reward over the last 100,000 steps", "341dc58d-2576-4509-8832-7bf1429a9d09": "Our analysis is readily extended to more general Gaussian priors, for instance if we wish to associate a different hyperparameter with different subsets of the parameters wj. As usual, we consider a conjugate hyperprior over \u03b1 given by a gamma distribution p(\u03b1) = Gam(\u03b1|a0, b0) (10.166) governed by the constants a0 and b0.\n\nThe marginal likelihood for this model now takes the form where the joint distribution is given by We are now faced with an analytically intractable integration over w and \u03b1, which we shall tackle by using both the local and global variational approaches in the same model To begin with, we introduce a variational distribution q(w, \u03b1), and then apply the decomposition (10.2), which in this instance takes the form where the lower bound L(q) and the Kullback-Leibler divergence KL(q\u2225p) are de\ufb01ned by At this point, the lower bound L(q) is still intractable due to the form of the likelihood factor p(t|w). We therefore apply the local variational bound to each of the logistic sigmoid factors as before", "c1b1b4c3-1689-4136-bdcc-73632c4da698": "OPTIMIZATION FOR TRAINING DEEP MODELS  we alan d feted. AL eena lee 2 Ate el Land 21a ntti Lan ne nnn  https://www.deeplearningbook.org/contents/optimization.html    PELLOLINCU Lallly LOVUDSLIY, WO SIUYIC DESL ALBULILUI Lad CLllelL yeu. Currently, the most popular oppmization algorithms actively in use include SGD, SGD with momentum, RMSProp, RMSProp with momentum, AdaDelta, and Adam. The choice of which algorithm to use, at this point, seems to depend  largely on the user\u2019s familiarity with the algorithm (for ease of hyperparameter tuning). 8.6 Approximate Second-Order Methods  In this section we discuss the application of second-order methods to training deep networks. See LeCun e? al. for an earlier treatment of this subject.\n\nFor simplicity of exposition, the only objective function we examine is the empirical risk:  So (f(a: 8),y)", "3994d684-aade-47d5-bf52-4700547ac2d6": "We can simplify the situation slightly by rearranging equation 18.38 into a form in  621  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  which we need to know only the ratio of the two model\u2019s partition functions:  . x(4) DL lospalx: bad log pa (x; Oz) = \u00bb (1 eur a ) mlog 78 (18.39) We can thus determine whether M 4 is a better model than Mg without knowing the partition function of either model but only their ratio. As we will see shortly, we can estimate this ratio using importance sampling, provided that the two models are similar. If, however, we wanted to compute the actual probability of the test data under either M4 or Mg, we would need to compute the actual value of the partition functions. That said, if we knew the ratio of two partition functions, r = OnE and we knew the actual value of just one of the two, say Z (0,4), we could compute the value of the other:  Z 98) 7164)", "8cd62041-81cf-4ce9-8be8-8187ce5c76c6": "If we wanted to constrain 0(@) to be less than some constant k, we could construct a generalized Lagrange function  \u00a3(8,0; X,y) = J(6;X,y) + a((8) ki). (7.26) The solution to the constrained problem is given by  6* = argmin max L(0,a). (7.27) () a,a>0  As described in section 4.4, solving this problem requires modifying both 0 and a. Section 4.5 provides a worked example of linear regression with an L? constraint.\n\nMany different procedures are possible\u2014some may use gradient descent,  233  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  while others may use analytical solutions for where the gradient is zero\u2014but in all procedures a must increase whenever (6) > k and decrease whenever 2. (@) < k. All positive a encourage 2(@) to shrink. The optimal value a* will encourage 2(6) to shrink, but not so strongly to make Q(@) become less than k", "80f7f081-82cd-48f6-80c6-2b3d5f52fb76": "With the SE, designing an approach to a problem thus boils down to choosing and formulating what experience to use depending on the problem structure and available resources, without worrying too much about how to use the experience. This provides a potentially new modularized and repeatable way of producing ML approaches to di\ufb00erent problems, as compared to the previous practice of designing bespoke algorithm for each individual problem.\n\nSections 4 and 6 have discussed possible formulations of the diverse types of experience as an experience function to be plugged into Equation 9.1. It is still an open question how even more types of experience, such as massive knowledge graphs , can e\ufb03ciently be formulated as an experience function that assesses the \u2018goodness\u2019 of an input t. On the other hand, the discussion in the next subsection o\ufb00ers new opportunities that relieve users from having to manually specify every detail of the experience function. Instead, users only need to specify parts of the experience function of which they are certain, and leave the remaining parts plus the weights \u03bbi (Equation 9.1) to be automatically learned together with the target model. Case study: Text attribute transfer. As a case study of learning from rich experience, consider the problem of text attribute transfer where we want to rewrite a given piece of text to possess a desired attribute", "618187ba-6f0c-49b4-8b48-8bf62e0f2ed8": "Underflow occurs when numbers near zero are rounded to zero.\n\nMany functions behave qualitatively differently when their argument is zero rather than a small positive number. For example, we usually want to avoid division by zero (some  https://www.deeplearningbook.org/contents/numerical.html    78  CHAPTER 4. NUMERICAL COMPUTATION  software environments will raise exceptions when this occurs, others will return a result with a placeholder not-a-number value) or taking the logarithm of zero (this is usually treated as \u2014oo, which then becomes not-a-number if it is used for many further arithmetic operations). Another highly damaging form of numerical error is overflow. Overflow occurs when numbers with large magnitude are approximated as oo or \u2014oo. Further arithmetic will usually change these infinite values into not-a-number values. One example of a function that must be stabilized against underflow and overflow is the softmax function. The softmax function is often used to predict the probabilities associated with a multinoulli distribution", "412ee4fe-aa62-4e43-9835-2cbb9b79d3cb": "Thus, we perform signi\ufb01cance testing for a difference in accuracy on VOC 2007 rather than a difference in mAP. A caveat of this procedure is that it does not consider run-to-run variability when training the models, only variability arising from using a \ufb01nite sample of images for evaluation. The ResNet-50 (4\u00d7) results shown in Table 8 of the text show no clear advantage to the supervised or self-supervised models. With the narrower ResNet-50 architecture, however, supervised learning maintains a clear advantage over self-supervised learning.\n\nThe supervised ResNet-50 model outperforms the self-supervised model on all datasets with linear evaluation, and most (10 of 12) datasets with \ufb01ne-tuning. The weaker performance of the ResNet model compared to the ResNet (4\u00d7) A Simple Framework for Contrastive Learning of Visual Representations Food CIFAR10 CIFAR100 Birdsnap SUN397 Cars Aircraft VOC2007 DTD Pets Caltech-101 Flowers model may relate to the accuracy gap between the supervised and self-supervised models on ImageNet", "297fa5d2-5496-48ed-b279-cafd7f0014e4": "The DAE training procedure is illustrated in figure 14.3. We introduce a corruption process C(x | x), which represents a conditional distribution over  507  CHAPTER 14. AUTOENCODERS  https://www.deeplearningbook.org/contents/autoencoders.html    LU)  Figure 14.3: The computational graph of the cost function for a denoising autoencoder, which is trained to reconstruct the clean data point a from its corrupted version z. This is accomplished by minimizing the loss L = \u2014 log Pgecoder(#@ | h = f(#)), where & is a corrupted version of the data example x, obtained through a given corruption process C(# | x). Typically the distribution paecoder is a factorial distribution whose mean parameters are emitted by a feedforward network g.  corrupted samples x, given a data sample x. The autoencoder then learns a reconstruction distribution Pyeconstruct(x | x) estimated from training pairs (a, @) as follows:  1. Sample a training example x from the training data.\n\n2", "68aed7e8-0fd9-4d99-8c0e-a75019ca1eb8": "Appleton-Century-Crofts, Kingma, D., Ba, J. Adam: A method for stochastic optimization. ArXiv:1412.6980. Klopf, A. H. Brain function and adaptive systems\u2014A heterostatic theory. Technical Report AFCRL-72-0164, Air Force Cambridge Research Laboratories, Bedford, MA. A summary appears in Proceedings of the International Conference on Systems, Man, and Cybernetics . IEEE Systems, Man, and Cybernetics Society, Dallas, TX. Klopf, A. H. A comparison of natural and arti\ufb01cial intelligence. SIGART Newsletter, Klopf, A. H. The Hedonistic Neuron: A Theory of Memory, Learning, and Intelligence. Klopf, A. H. A neuronal model of classical conditioning. Psychobiology, 16(2):85\u2013125. Klyubin, A. S., Polani, D., Nehaniv, C. L", "291f9321-7d36-4d84-84d7-83680c506568": "Quantities of the form R{zj}, R{aj} and R{yk} are to be regarded as new variables whose values are found using the above equations. Because we are considering a sum-of-squares error function, we have the following standard backpropagation expressions: Again, we act on these equations with the R{\u00b7} operator to obtain a set of backpropagation equations in the form Finally, we have the usual equations for the \ufb01rst derivatives of the error and acting on these with the R{\u00b7} operator, we obtain expressions for the elements of the vector vTH The implementation of this algorithm involves the introduction of additional variables R{aj}, R{zj} and R{\u03b4j} for the hidden units and R{\u03b4k} and R{yk} for the output units. For each input pattern, the values of these quantities can be found using the above results, and the elements of vTH are then given by (5.110) and (5.111)", "61a9f91f-3f40-4327-9e56-e1e13c1e8943": "Indeed, the evidence is not de\ufb01ned if the prior is improper, as can be seen by noting that an improper prior has an arbitrary scaling factor (in other words, the normalization coef\ufb01cient is not de\ufb01ned because the distribution cannot be normalized). If we consider a proper prior and then take a suitable limit in order to obtain an improper prior (for example, a Gaussian prior in which we take the limit of in\ufb01nite variance) then the evidence will go to zero, as can be seen from (3.70) and Figure 3.12.\n\nIt may, however, be possible to consider the evidence ratio between two models \ufb01rst and then take a limit to obtain a meaningful answer. In a practical application, therefore, it will be wise to keep aside an independent test set of data on which to evaluate the overall performance of the \ufb01nal system. In a fully Bayesian treatment of the linear basis function model, we would introduce prior distributions over the hyperparameters \u03b1 and \u03b2 and make predictions by marginalizing with respect to these hyperparameters as well as with respect to the parameters w. However, although we can integrate analytically over either w or over the hyperparameters, the complete marginalization over all of these variables is analytically intractable", "0c831d25-706e-46e7-894e-93329ea1b73a": "Continuity means that when a sequence of parameters \u03b8t converges to \u03b8, the distributions P\u03b8t also converge to P\u03b8. However, it is essential to remember that the notion of the convergence of the distributions P\u03b8t depends on the way we compute the distance between distributions. The weaker this distance, the easier it is to de\ufb01ne a continuous mapping from \u03b8-space to P\u03b8-space, since it\u2019s easier for the distributions to converge. The main reason we care about the mapping \u03b8 \ufffd\u2192 P\u03b8 to be continuous is as follows. If \u03c1 is our notion of distance between two distributions, we would like to have a loss function \u03b8 \ufffd\u2192 \u03c1(P\u03b8, Pr) that is continuous, and this is equivalent to having the mapping \u03b8 \ufffd\u2192 P\u03b8 be continuous when using the distance between distributions \u03c1. 1More exactly, the topology induced by \u03c1 is weaker than that induced by \u03c1\u2032 when the set of convergent sequences under \u03c1 is a superset of that under \u03c1\u2032", "e79bb77c-66bb-4b3c-bb35-0f3765e386d4": "DSC 291 Machine Learning with Few Labels   Logistics  Grading Participation Homework Assignments \u00b0 Collaboration Policy o Late Policy \u00a9 Regrade Policy Paper Presentation Course Project  Grading  The class requirements include participation, a paper presentation, two homework assignments, and a course project. The grading breakdown is as follows:  e Homework assignments (30%) e Paper presentation (20%)  e Course project (46%) Participation (4%)  Participation  We appreciate everyone being actively involved in the class! There are several ways of earning participation credit, which will be capped at 4%:  e Piazza participation: The top ~10 contributors to Piazza will get 3.5%; others will get credit  http://zhiting.ucsd.edu/teaching/dsc291winter2023/logistics.html  DSC 291 Machine Learning with Few Labels   in proportion to the participation of the ~10th person. (To prevent abuse of the system, not all contributions are counted and instructors hold the right to determine to count contributions as positive or negative.) e Completing mid-quarter evaluation: Around the middle of the quarter, we will send out a survey to help us understand how the course is going, and how we can improve. Completing it is worth 1%", "91109a06-b21a-46ee-a370-e385090f207f": "From the product rule of probability we have p(x, Ck) = p(Ck|x)p(x). Because the factor p(x) is common to both terms, we can restate this result as saying that the minimum probability of making a mistake is obtained if each value of x is assigned to the class for which the posterior probability p(Ck|x) is largest. This result is illustrated for two classes, and a single input variable x, in Figure 1.24.\n\nFor the more general case of K classes, it is slightly easier to maximize the probability of being correct, which is given by which is maximized when the regions Rk are chosen such that each x is assigned to the class for which p(x, Ck) is largest. Again, using the product rule p(x, Ck) = p(Ck|x)p(x), and noting that the factor of p(x) is common to all terms, we see that each x should be assigned to the class having the largest posterior probability p(Ck|x). For many applications, our objective will be more complex than simply minimizing the number of misclassi\ufb01cations. Let us consider again the medical diagnosis problem", "0244e792-5b05-426e-b060-a801005c68a0": "Also, \ufb01netuning large pre-trained models on speci\ufb01c tasks might attenuate improvements due to preexisting generalization abilities of the model . Compositional Augmentation. To increase the compositional generalization abilities of models, recent efforts have also focused on compositional augmentations  where different fragments from different sentences are re-combined to create augmented examples.\n\nCompared to random swapping, compositional augmentation often requires more carefully-designed rules such as lexical overlap , neural-symbolic stack machines , and neural program synthesis . With the potential to greatly improve the generalization abilities to out-of-distribution data, compositional augmentation has been utilized in sequence labeling , semantic parsing , language modeling , and text generation . Instead of modifying tokens, sentence-level augmentation modi\ufb01es the entire sentence at once. Paraphrasing. Paraphrasing has been widely adopted as a data augmentation technique in various NLP tasks , as it generally provides more diverse augmented text with different word choices and sentence structures while preserving the meaning of the original text. The most popular is round-trip translation , a pipeline which \ufb01rst translates sentences into certain intermediate languages and then translates them back to generate paraphrases", "af01b9e4-0e51-4889-8566-ae3eaded8320": "Further science: the chemical microscope is In summary, the most sophisticated of these experiments is a technique that gives no obvious, no apparent way of revealing that the material was obtained. In this study, we examine how the compounds in the samples in question make up the composition of the chemical and its properties. The chemical composition military: arms defense battalion battalion cavalry In summary: 6th Panzer Field Division, Second Division.\\n\\n The main task of the battalion in the main counterinsurgency campaign was to counter the enemy in any counter-incursion.\n\nThe main objective of this campaign is to eliminate enemy groups and the remnants of legal: legal space religion and space This essay discusses the idea of space and time as a space, in both theoretical and conceptual terms, as not an individual time period or anything else. The emphasis is on time itself, rather than having a \ufb01xed central space. Space was the object of the \ufb01rst chapter, and politics: the primary referendum is This essay discusses the nature of the EU referendum", "b32015db-7252-465e-a07d-585ed5b0b409": "Henrion, L. N. Kanal, and J. F. Lemmer (Eds. ), Uncertainty in Arti\ufb01cial Intelligence, Volume 5, pp. 208\u2013219. Elsevier. Hassibi, B. and D. G. Stork . Second order derivatives for network pruning: optimal brain surgeon. In S. J. Hanson, J. D. Cowan, and C. L. Giles (Eds. ), Advances in Neural Information Processing Systems, Volume 5, pp. 164\u2013171. Morgan Kaufmann. Hastie, T. and W. Stuetzle . Principal curves. Journal of the American Statistical Association 84(106), 502\u2013516. Hastie, T., R. Tibshirani, and J. Friedman . The Elements of Statistical Learning. Springer", "fc4917d1-1753-4a51-9a7d-0c2a5735bfe9": "A recent model of V1 involves multiple quadratic filters for each neuron . Indeed our cartoon picture of \u201csimple cells\u201d and \u201ccomplex cells\u201d might create a nonexistent  distinction; simple cells and complex cells might both be the same kind of cell but with their \u201cparameters\u201d enabling a continuum of behaviors ranging from what we call \u201csimple\u201d to what we call \u201ccomplex.\u201d  It is also worth mentioning that neuroscience has told us relatively little about how to train convolutional networks.\n\nModel structures with parameter sharing across multiple spatial locations date back to early connectionist models of vision , but these models did not use the modern back-propagation algorithm and gradient descent. For example, the neocognitron  incorporated most of the model architecture design elements of the modern convolutional network but relied on a layer-wise unsupervised clustering algorithm. Lang and Hinton  introduced the use of back-propagation to train time-delay neural networks (TDNNs). To use contemporary terminology, TDNNs are one-dimensional convolutional networks applied to time series. Back- propagation applied to these models was not inspired by any neuroscientific observa-  361  CHAPTER 9", "f732766d-605c-46df-9e81-7b62f7f36fc7": "The particle \ufb01ltering, or sequential Monte Carlo, approach has appeared in the literature under various names including the bootstrap \ufb01lter , survival of the \ufb01ttest , and the condensation algorithm .\n\nExercises 13.1 (\u22c6) www Use the technique of d-separation, discussed in Section 8.2, to verify that the Markov model shown in Figure 13.3 having N nodes in total satis\ufb01es the conditional independence properties (13.3) for n = 2, . , N. Similarly, show that a model described by the graph in Figure 13.4 in which there are N nodes in total L samples is then drawn from this distribution and the new weights w(l) satis\ufb01es the conditional independence properties 13.2 (\u22c6 \u22c6) Consider the joint probability distribution (13.2) corresponding to the directed graph of Figure 13.3. Using the sum and product rules of probability, verify that this joint distribution satis\ufb01es the conditional independence property (13.3) for n = 2, . , N. Similarly, show that the second-order Markov model described by the joint distribution (13.4) satis\ufb01es the conditional independence property 13.3 (\u22c6) By using d-separation, show that the distribution p(x1,", "8ae37f89-c97d-4724-9179-fc9f315876ae": "In the \ufb01gure, E represents the input embedding, Ti represents the contextual representation of token i,  is the special symbol for classi\ufb01cation output, and  is the special symbol to separate non-consecutive token sequences. MNLI Multi-Genre Natural Language Inference is a large-scale, crowdsourced entailment classi\ufb01cation task . Given a pair of sentences, the goal is to predict whether the second sentence is an entailment, contradiction, or neutral with respect to the \ufb01rst one. QQP Quora Question Pairs is a binary classi\ufb01cation task where the goal is to determine if two questions asked on Quora are semantically equivalent .\n\nQNLI Question Natural Language Inference is a version of the Stanford Question Answering Dataset  which has been converted to a binary classi\ufb01cation task . The positive examples are (question, sentence) pairs which do contain the correct answer, and the negative examples are (question, sentence) from the same paragraph which do not contain the answer. SST-2 The Stanford Sentiment Treebank is a binary single-sentence classi\ufb01cation task consisting of sentences extracted from movie reviews with human annotations of their sentiment", "b3ad6583-6c47-4038-9122-ebc3a1026b36": "The brute force solution is for an unsupervised learner to learn a representation that captures all the reasonably salient generative factors h; and disentangles them from each other, thus making it easy to predict y from h, regardless of which h; is associated with y.\n\nIn practice, the brute force solution is not feasible because it is not possible to capture all or most of the factors of variation that influence an observation. For example, in a visual scene, should the representation always encode all the smallest objects in the background? It is a well-documented psychological phenomenon  ahat Livan Late nn C22 bn 2 aenannte-n Aha mnn fe LL ate apc ALA A  https://www.deeplearningbook.org/contents/representation.html    LUAL LUIlall VELUIYS lall LU PELCCIVE CHAMPS I LULL CLIVILUOLINECIL LUat ale LLUL immediately relevant to the task they are performing\u2014see, for example Simons and Levin . An important research frontier in semi-supervised learning is determining what to encode in each situation", "30697e70-e8b4-409a-beeb-cfc3b0d7f93d": "DEEP FEEDFORWARD NETWORKS  these low-rank relationships are often sufficient.\n\nLinear hidden units thus offer an effective way of reducing the number of parameters in a network. Softmax units are another kind of unit that is usually used as an output (as described in section 6.2.2.3) but may sometimes be used as a hidden unit. Softmax units naturally represent a probability distribution over a discrete variable with k possible values, so they may be used as a kind of switch. These kinds of hidden units are usually only used in more advanced architectures that explicitly learn to manipulate memory, as described in section 10.12. A few other reasonably common hidden unit types include  e Radial basis function (RBF), unit: h; = exp (\u20142 4 3||W. 5 \u2014 a|P). This function becomes more active as # approaches a temp ate W. ;. Because it saturates to 0 for most x, it can be difficult to optimize. Softplus: g(a) = \u00a2(a) = log(1+e*). This is a smooth version of the rectifier, introduced by Dugas et al", "0f401d33-8954-4521-bf24-44ae2ceb963a": "Exercise 14.6 From (14.22) we see that, having found \u03b1m and ym(x), the weights on the data points are updated using Because the term exp(\u2212\u03b1m/2) is independent of n, we see that it weights all data points by the same factor and so can be discarded. Thus we obtain (14.18). Finally, once all the base classi\ufb01ers are trained, new data points are classi\ufb01ed by evaluating the sign of the combined function de\ufb01ned according to (14.21). Because the factor of 1/2 does not affect the sign it can be omitted, giving (14.19). The exponential error function that is minimized by the AdaBoost algorithm differs from those considered in previous chapters. To gain some insight into the nature of the exponential error function, we \ufb01rst consider the expected error given by which is half the log-odds.\n\nThus the AdaBoost algorithm is seeking the best approximation to the log odds ratio, within the space of functions represented by the linear combination of base classi\ufb01ers, subject to the constrained minimization resulting from the sequential optimization strategy. This result motivates the use of the sign function in (14.19) to arrive at the \ufb01nal classi\ufb01cation decision", "edfc7da1-5ed0-4f88-939f-e3a7a5ad70e7": "CONVOLUTIONAL NETWORKS  is useful for writing proofs, it is not usually an important property of a neural network implementation. Instead, many neural network libraries implement a related function called the cross-correlation, which is the same as convolution but without flipping the kernel:  S(i,j) = (K * D(i = DDIM + mg + n)K (msn) (9.6)  Many machine learning libraries implement cross-correlation but call it convolution.\n\nIn this text we follow this convention of calling both operations convolution and specify whether we mean to flip the kernel or not in contexts where kernel flipping is relevant. In the context of machine learning, the learning algorithm will learn the appropriate values of the kernel in the appropriate place, so an algorithm based on convolution with kernel flipping will learn a kernel that is flipped relative to the kernel learned by an algorithm without the flipping. It is also rare for convolution to be used alone in machine learning; instead convolution is used simultaneously with other functions, and the combination of these functions does not commute regardless of whether the convolution operation flips its kernel or not. See figure 9.1 for an example of convolution (without kernel flipping) applied to a 2-D tensor", "f6184e1b-70f3-44d4-b803-6f6009636c93": "Let us look more closely at the gradient of log Z:  Vo log Z (18.5) VoZ  \u2014 le\" 8.6 Z ( )  Vo dix P(X) Z ( )  dx VoP(x) = =. 8.8 Z ( ) For models that guarantee p(x) > 0 for all x, we can substitute exp (log p(x))  for p(x):  V log p  x esp ( 0g P(x) (18.9) los p  > a log p(x) (18.10)  exp (log p&)) V  https://www.deeplearningbook.org/contents/partition.html    = Expoev Hes pes (18.11)  = > p(x)Volog p(x) (18.12)  CHAPTER 18. CONFRONTING THE PARTITION FUNCTION  = Ex p(x) VO log p(x). (18.13)  This derivation made use of summation over discrete x, but a similar result applies using integration over continuous x", "99fc16dc-1e0c-44ff-8252-55ed551c9432": "A benefit of learning the underlying causal factors, as pointed out by Sch\u00e9lkopf et al. , is that if the true generative process has x as an effect and y as a cause, then modeling p(x | y) is robust to changes in p(y).\n\nIf the cause-effect relationship were reversed, this would not be true, since by Bayes\u2019 rule, p(x | y) would be sensitive to changes in p(y). Very often, when we consider changes in distribution due to different domains, temporal nonstationarity, or changes in the nature of the task, the causal mechanisms remain invariant (\u201cthe laws of the universe are constant\u201d), while the marginal distribution over the underlying causes can change. Hence, better generalization and robustness to all kinds of changes can be expected via learning a generative model that attempts to recover the causal  543  CHAPTER 15. REPRESENTATION LEARNING  factors h and p(x | h). 15.4 Distributed Representation  Distributed representations of concepts\u2014representations composed of many ele- ments that can be set separately from each other\u2014are one of the most important tools for representation learning", "17cebac0-b3d6-40e1-b49f-bb2d1fb9be48": "Task #2: Next Sentence Prediction (NSP) Many important downstream tasks such as Question Answering (QA) and Natural Language Inference (NLI) are based on understanding the relationship between two sentences, which is not directly captured by language modeling. In order to train a model that understands sentence relationships, we pre-train for a binarized next sentence prediction task that can be trivially generated from any monolingual corpus. Speci\ufb01cally, when choosing the sentences A and B for each pretraining example, 50% of the time B is the actual next sentence that follows A (labeled as IsNext), and 50% of the time it is a random sentence from the corpus (labeled as NotNext).\n\nAs we show in Figure 1, C is used for next sentence prediction (NSP).5 Despite its simplicity, we demonstrate in Section 5.1 that pre-training towards this task is very bene\ufb01cial to both QA and NLI. 6 5The \ufb01nal model achieves 97%-98% accuracy on NSP. 6The vector C is not a meaningful sentence representation without \ufb01ne-tuning, since it was trained with NSP. The NSP task is closely related to representationlearning objectives used in Jernite et al. and Logeswaran and Lee", "a8d4e592-5ed1-46ea-b04c-4856d1f11cf7": "However, if we started from an undirected graph, then in general there will be an unknown normalization coef\ufb01cient 1/Z. As with the simple chain example of Figure 8.38, this is easily handled by working with an unnormalized version \ufffdp(x) of the joint distribution, where p(x) = \ufffdp(x)/Z. We \ufb01rst run the sum-product algorithm to \ufb01nd the corresponding unnormalized marginals \ufffdp(xi).\n\nThe coef\ufb01cient 1/Z is then easily obtained by normalizing any one of these marginals, and this is computationally ef\ufb01cient because the normalization is done over a single variable rather than over the entire set of variables as would be required to normalize \ufffdp(x) directly. At this point, it may be helpful to consider a simple example to illustrate the operation of the sum-product algorithm. Figure 8.51 shows a simple 4-node factor graph whose unnormalized joint distribution is given by In order to apply the sum-product algorithm to this graph, let us designate node x3 as the root, in which case there are two leaf nodes x1 and x4. Starting with the leaf nodes, we then have the following sequence of six messages The direction of \ufb02ow of these messages is illustrated in Figure 8.52", "bd40823f-0280-499b-ab51-8f59907b5feb": "For example, in a large collection of cardiac MRI videos from the UK Biobank, creating segmentations of the aorta 20 See the image tutorial at http://snorkel.stanford.edu/. Fig. 15 In a traditional programming stack, progressively higher-level languages and abstractions provide increasingly simple and declarative interfaces.\n\nSimilarly, we envision a code-as-supervision stack built on topofthebasicunitoflabelingfunctions,allowinguserstolabeltraining data in increasingly higher-level ways. Figure from  enabled a cardiologist to de\ufb01ne labeling functions for identifying rare aortic valve malformations . An even higher-level interface is natural language. The Babble Labble project  accepts natural language explanations of data points and then uses semantic parsers to parse these explanations into labeling functions. In this way, users without programming knowledge have the capability to write labeling functions just by explaining reasons why data points have speci\ufb01c labels. Another related approach is to use program synthesis techniques, combined with a small set of labeled data points, to automatically generate labeling functions", "7ab5a189-81fd-4116-b557-5f1ee4f04e92": "In addition, when xt+1 reached the left bound, \u02d9xt+1 was reset to zero. When it reached the right bound, the goal was reached and the episode was terminated. Each episode started from a random position xt 2 [\u22120.6, \u22120.4) and zero velocity. To convert the two continuous state variables to binary features, we used grid-tilings as in Figure 9.9.\n\nWe used 8 tilings, with each tile covering 1/8th of the bounded distance in each dimension, and asymmetrical o\u21b5sets as described in Section 9.5.4.1 The feature vectors x(s, a) created by tile coding were then combined linearly with the parameter vector to approximate the action-value function: form of function approximation.2 Shown is the negative of the value function (the costto-go function) learned on a single run. The initial action values were all zero, which was optimistic (all true values are negative in this task), causing extensive exploration to occur even though the exploration parameter, \", was 0. This can be seen in the middle-top panel of the \ufb01gure, labeled \u201cStep 428\u201d", "caa45738-9336-45d9-8b4d-3f3eb72498e6": "ha,-e a probabilislic formulalion of PeA, il s\u00abms natural 10 s\u00abk u Buye,ian approach 10 model seleclion. To do thi,. ,,\"'e nee<! 10 marginalize 001 the model paramele\" /'. \\V. und ,,' wilh \"\"peel to appropriate prior distribution'. This Can be done by u,ing a ,-ariation.l framework to .pproxim'le the allulylic.lly intractable murginaliUOi;oo, (Bi,hop. 1mb). 1lIc marginal likelihood v.lues. given by ttle ,'ari.,ionallower bour.d, cun lhen be c<>mpun:d for a r.nge of different '\"Tue' \"f;\\I ar.d Itie '\"Iue giving Iht largest marginal likelihood \",Iecloo_ l1ere we consider", "4e58a60f-5f61-4564-8009-784f102e0a8a": "The solution is to set both to zero.\n\nNewton\u2019s method can solve the problem in a single step because it is a positive definite quadratic problem. For small a, however, coordinate descent will make very slow progress because the first term does not allow a single variable to be changed to a value that differs  significantly from the current value of the other variable. 8.7.3 Polyak Averaging  Polyak averaging  consists of averaging several points in the trajectory through parameter space visited by an optimization algorithm. If t iterations of gradient descent visit points 0 ,...,@, then the output of the Polyak averaging algorithm is a) = 4 > a. On some problem classes, such as gradient descent applied to convex problems, this approach has strong convergence guarantees. When applied to neural networks, its justification is more heuristic, but it performs well in practice. The basic idea is that the optimization algorithm may leap back and forth across a valley several times without ever visiting a point near the bottom of the valley. The average of all the locations on either side should be close to the bottom of the valley though. In nonconvex problems, the path taken by the optimization trajectory can be very complicated and visit many different regions", "db1db3c0-224b-429e-8bbd-89715b3a95aa": "Around this time, Holland  incorporated temporal-di\u21b5erence ideas explicitly into his classi\ufb01er systems in the form of his bucket-brigade algorithm. A key step was taken by Sutton  by separating temporal-di\u21b5erence learning from control, treating it as a general prediction method. That paper also introduced the TD(\u03bb) algorithm and proved some of its convergence properties. As we were \ufb01nalizing our work on the actor\u2013critic architecture in 1981, we discovered a paper by Ian Witten  which appears to be the earliest publication of a temporal-di\u21b5erence learning rule. He proposed the method that we now call tabular TD(0) for use as part of an adaptive controller for solving MDPs. This work was \ufb01rst submitted for journal publication in 1974 and also appeared in Witten\u2019s 1976 PhD dissertation. Witten\u2019s work was a descendant of Andreae\u2019s early experiments with STeLLA and other trial-and-error learning systems.\n\nThus, Witten\u2019s 1977 paper spanned both major threads of reinforcement learning research\u2014trial-and-error learning and optimal control\u2014while making a distinct early contribution to temporal-di\u21b5erence learning", "91205039-eb3f-4392-b9ac-1c65df993b17": "As we mentioned above, this is actually desirable in a nonstationary environment, and problems that are e\u21b5ectively nonstationary are the most common in reinforcement learning.\n\nIn addition, sequences of step-size parameters that meet the conditions (2.7) often converge very slowly or need considerable tuning in order to obtain a satisfactory convergence rate. Although sequences of step-size parameters that meet these convergence conditions are often used in theoretical work, they are seldom used in applications and empirical research. Exercise 2.4 If the step-size parameters, \u21b5n, are not constant, then the estimate Qn is a weighted average of previously received rewards with a weighting di\u21b5erent from that given by (2.6). What is the weighting on each prior reward for the general case, analogous to (2.6), in terms of the sequence of step-size parameters? \u21e4 di\ufb03culties that sample-average methods have for nonstationary problems. Use a modi\ufb01ed version of the 10-armed testbed in which all the q\u21e4(a) start out equal and then take independent random walks (say by adding a normally distributed increment with mean zero and standard deviation 0.01 to all the q\u21e4(a) on each step)", "859ba622-411d-4274-a558-c24a9409e408": "Colorful image colorization. In European conference on computer vision, pp. 649\u2013666. Springer, 2016. Zhuang, C., Zhai, A. L., and Yamins, D. Local aggregation for unsupervised learning of visual embeddings. In Proceedings of the IEEE International Conference on Computer Vision, pp. 6002\u20136012, 2019. A Simple Framework for Contrastive Learning of Visual Representations In our default pretraining setting (which is used to train our best models), we utilize random crop (with resize and random \ufb02ip), random color distortion, and random Gaussian blur as the data augmentations. The details of these three augmentations are provided below. Random crop and resize to 224x224 We use standard Inception-style random cropping . The crop of random size (uniform from 0.08 to 1.0 in area) of the original size and a random aspect ratio (default: of 3/4 to 4/3) of the original aspect ratio is made. This crop is \ufb01nally resized to the original size", "234e4ff1-d575-4d3b-9513-1432130a2c7b": "When x is continuous, the Shannon entropy is known as the differential entropy.\n\nIf we have two separate probability distributions P(x) and Q (x) over the same random variable x, we can measure how different these two distributions are using the Kullback-Leibler (KL) divergence:  P(x) Q(x)  In the case of discrete variables, it is the extra amount of information (measured in bits if we use the base-2 logarithm, but in machine learning we usually use nats and the natural logarithm) needed to send a message containing symbols drawn from probability distribution P, when we use a code that was designed to minimize the length of messages drawn from probability distribution Q.  Dui (P||Q) = Exp tog | = Ba-pllog Pl) \u2014 log Q(@)). (3.50)  The KL divergence has many useful properties, most notably being non-negative. The KL divergence is 0 if and only if P and Q are the same distribution in the case of discrete variables, or equal \u201calmost everywhere\u201d in the case of continuous variables", "427679a6-8ae1-441f-8e30-0bf1c27c427e": "Maxima of many classes of random functions become exponentially rare in high-dimensional space, just as minima do. There may also be wide, flat regions of constant value. In these locations, the gradient and the Hessian are all zero. Such degenerate locations pose major problems for all numerical optimization algorithms. In a convex problem, a wide, flat region must consist entirely of global minima, but in a general optimization problem, such a region could correspond to a high value of the objective function.\n\n8.2.4 Cliffs and Exploding Gradients  NT awww] nw aterrnnlen weld we nwnee Laverne AL-Awn Laven nvrte nen nlee aban nanctnnn wanna Liin~  https://www.deeplearningbook.org/contents/optimization.html    ANCULAL LICLWULKS WILL iulatly layeLs VLLCLL LlAVE CAULLELUCLY SLCCp LEPIVLIS LOUSCLLULVILLLL  cliffs, as illustrated in figure 8.3. These result from the multiplication of severa large weights together", "ff51f572-041d-4387-93e0-da3e49256c07": "The joint distribution over latent and observed variables can be represented by the graphical model shown in Figure 14.7.\n\nThe complete-data log likelihood function then takes the form Exercise 14.13 The EM algorithm begins by \ufb01rst choosing an initial value \u03b8old for the model parameters. In the E step, these parameter values are then used to evaluate the posterior probabilities, or responsibilities, of each component k for every data point n given by The responsibilities are then used to determine the expectation, with respect to the posterior distribution p(Z|t, \u03b8old), of the complete-data log likelihood, which takes the form In the M step, we maximize the function Q(\u03b8, \u03b8old) with respect to \u03b8, keeping the \u03b3nk \ufb01xed. For the optimization with respect to the mixing coef\ufb01cients \u03c0k we need to take account of the constraint \ufffd k \u03c0k = 1, which can be done with the aid of a Lagrange multiplier, leading to an M-step re-estimation equation for \u03c0k in the form Exercise 14.14 Note that this has exactly the same form as the corresponding result for a simple mixture of unconditional Gaussians given by (9.22)", "376d8565-6281-42a5-8676-efe735c770f1": ", W} and W is the total number of weights and biases.\n\nThe Hessian plays an important role in many aspects of neural computing, including the following: 1. Several nonlinear optimization algorithms used for training neural networks are based on considerations of the second-order properties of the error surface, which are controlled by the Hessian matrix . 2. The Hessian forms the basis of a fast procedure for re-training a feed-forward network following a small change in the training data . 3. The inverse of the Hessian has been used to identify the least signi\ufb01cant weights in a network as part of network \u2018pruning\u2019 algorithms . 4. The Hessian plays a central role in the Laplace approximation for a Bayesian neural network (see Section 5.7). Its inverse is used to determine the predictive distribution for a trained network, its eigenvalues determine the values of hyperparameters, and its determinant is used to evaluate the model evidence. Various approximation schemes have been used to evaluate the Hessian matrix for a neural network", "39edb4cf-e2c2-4c4f-a6a0-0d3ed88b63bd": "Recurrent Networks as Directed Graphical Models  In the example recurrent network we have developed so far, the losses L\u00ae were  https://www.deeplearningbook.org/contents/rnn.html    cross-entropies between training targets 4 M) and outputs o\u201d) | As with a feedforward network, it is in principle possible to use almost any loss with a recurrent network. 380  CHAPTER 10. SEQUENCE MODELING: RECURRENT AND RECURSIVE NETS  The loss should be chosen based on the task.\n\nAs with a feedforward network, we usually wish to interpret the output of the RNN as a probability distribution, and we usually use the cross-entropy associated with that distribution to define the loss. Mean squared error is the cross-entropy loss associated with an output distribution chat is a unit Gaussian, for example, just as with a feedforward network. When we use a predictive log-likelihood training objective, such as equa- ion 10.12, we train the RNN to estimate the conditional distribution of the next sequence element y) given the past inputs", "03a872dc-55dc-40ca-aac0-e15fd61a8f02": "It is one of the primary mechanisms responsible for learning. The parameters, or weights, adjusted by learning algorithms correspond to synaptic e\ufb03cacies. As we detail below, modulation of synaptic plasticity via the neuromodulator dopamine is a plausible mechanism for how the brain might implement learning algorithms like many of those described in this book.\n\nLinks between neuroscience and computational reinforcement learning begin as parallels between signals in the brain and signals playing prominent roles in reinforcement learning theory and algorithms. In Chapter 3 we said that any problem of learning goal-directed behavior can be reduced to the three signals representing actions, states, and rewards. However, to explain links that have been made between neuroscience and reinforcement learning, we have to be less abstract than this and consider other reinforcement learning signals that correspond, in certain ways, to signals in the brain. In addition to reward signals, these include reinforcement signals (which we argue are di\u21b5erent from reward signals), value signals, and signals conveying prediction errors. When we label a signal by its function in this way, we are doing it in the context of reinforcement learning theory in which the signal corresponds to a term in an equation or an algorithm", "c63d9afa-8501-402b-989a-b80095f37d06": "Ideally, we would like to arrive at the global minimum, but this  might not be possible. This local minimum performs poorly and should be avoided}  x  Figure 4.3: Approximate minimization. Optimization algorithms may fail to find a global minimum when there are multiple local minima or plateaus present. In the context of deep learning, we generally accept such solutions even though they are not truly minimal, so long as they correspond to significantly low values of the cost function. critical points are points where every element of the gradient is equal to zero. The directional derivative in direction wu (a unit vector) is the slope of the function f in direction u. In other words, the directional derivative is the derivative of the function f(a + au) with respect to a, evaluated at q = 0. Using the chain  https://www.deeplearningbook.org/contents/numerical.html    rule, we can see that da f(a + au) evaluates to u' V# f(a) when a = 0.\n\nTo minimize f, we would like to find the direction in which f decreases the fastest", "f2e11f98-0586-41b5-b32b-459ef22a5472": "Stone, J. V. .\n\nIndependent Component Analysis: A Tutorial Introduction. MIT Press. Sung, K. K. and T. Poggio . Example-based learning for view-based human face detection. A.I. Memo 1521, MIT. Sutton, R. S. and A. G. Barto . Reinforcement Learning: An Introduction. MIT Press. Tarassenko, L. Novelty detection for the identi\ufb01cation of masses in mamograms. In Proceedings Fourth IEE International Conference on Arti\ufb01cial Neural Networks, Volume 4, pp. 442\u2013447. IEE. Tax, D. and R. Duin . Data domain description by support vectors. In M. Verleysen (Ed. ), Proceedings European Symposium on Arti\ufb01cial Neural Networks, ESANN, pp. 251\u2013256. D. Facto Press. Teh, Y", "e5bd1331-51d3-4dfa-b2e3-15f6b55b01dd": "where the elements of x could be discrete or continuous or a combination of these. Denote the mean and covariance of p(x|k) by \u00b5k and \u03a3k, respectively. Show that the mean and covariance of the mixture distribution are given by (9.49) and (9.50). 9.13 (\u22c6 \u22c6) Using the re-estimation equations for the EM algorithm, show that a mixture of Bernoulli distributions, with its parameters set to values corresponding to a maximum of the likelihood function, has the property that Hence show that if the parameters of this model are initialized such that all components have the same mean \u00b5k = \ufffd\u00b5 for k = 1, . , K, then the EM algorithm will converge after one iteration, for any choice of the initial mixing coef\ufb01cients, and that this solution has the property \u00b5k = x. Note that this represents a degenerate case of the mixture model in which all of the components are identical, and in practice we try to avoid such solutions by using an appropriate initialization", "2861e342-276c-4ff2-a3b2-5aad127104c5": "This corresponds to acting on the original forward-propagation and backpropagation equations with a differential operator vT\u2207. Pearlmutter  used the notation R{\u00b7} to denote the operator vT\u2207, and we shall follow this convention. The analysis is straightforward and makes use of the usual rules of differential calculus, together with the result R{w} = v. (5.97) The technique is best illustrated with a simple example, and again we choose a two-layer network of the form shown in Figure 5.1, with linear output units and a sum-of-squares error function. As before, we consider the contribution to the error function from one pattern in the data set.\n\nThe required vector is then obtained as usual by summing over the contributions from each of the patterns separately. For the two-layer network, the forward-propagation equations are given by We now act on these equations using the R{\u00b7} operator to obtain a set of forward propagation equations in the form where vji is the element of the vector v that corresponds to the weight wji", "4a49d80d-2a99-4934-b126-da2a6f623bed": "The joint distribution for a sequence of N observations under this model is given by From the d-separation property, we see that the conditional distribution for observaSection 8.2 tion xn, given all of the observations up to time n, is given by which is easily veri\ufb01ed by direct evaluation starting from (13.2) and using the product rule of probability. Thus if we use such a model to predict the next observation Exercise 13.1 in a sequence, the distribution of predictions will depend only on the value of the immediately preceding observation and will be independent of all earlier observations. In most applications of such models, the conditional distributions p(xn|xn\u22121) that de\ufb01ne the model will be constrained to be equal, corresponding to the assumption of a stationary time series. The model is then known as a homogeneous Markov chain. For instance, if the conditional distributions depend on adjustable parameters (whose values might be inferred from a set of training data), then all of the conditional distributions in the chain will share the same values of those parameters.\n\nAlthough this is more general than the independence model, it is still very restrictive. For many sequential observations, we anticipate that the trends in the data over several successive observations will provide important information in predicting the next value", "6d65143f-8714-4079-b32e-344adfd51d9d": "Haussler (Ed. ), Proceedings Fifth Annual Workshop on Computational Learning Theory (COLT), pp. 144\u2013152. ACM. Box, G. E. P., G. M. Jenkins, and G. C. Reinsel . Time Series Analysis. Prentice Hall. Box, G. E. P. and G. C. Tao . Bayesian Inference in Statistical Analysis. Wiley. Boyd, S. and L. Vandenberghe . Convex Optimization. Cambridge University Press. Boyen, X. and D. Koller . Tractable inference for complex stochastic processes. In G. F. Cooper and S. Moral (Eds. ), Proceedings 14th Annual Conference on Uncertainty in Arti\ufb01cial Intelligence (UAI), pp. 33\u201342. Morgan Kaufmann", "ceed3ed1-1c8c-4aa0-bc72-baafd7b11b8a": "The Journal of Machine Learning Research, 9999:3371\u20133408, 2010. See \ufb01gures 4 and 5 for visualisations of latent space and corresponding observed space of models learned with SGVB. The variational lower bound (the objective to be maximized) contains a KL term that can often be integrated analytically. Here we give the solution when both the prior p\u03b8(z) = N(0, I) and the posterior approximation q\u03c6(z|x(i)) are Gaussian. Let J be the dimensionality of z. Let \u00b5 and \u03c3 denote the variational mean and s.d. evaluated at datapoint i, and let \u00b5j and \u03c3j simply denote the j-th element of these vectors. Then: When using a recognition model q\u03c6(z|x) then \u00b5 and s.d.\n\n\u03c3 are simply functions of x and the variational parameters \u03c6, as exempli\ufb01ed in the text. In variational auto-encoders, neural networks are used as probabilistic encoders and decoders", "8e5e6fa4-f31d-4c10-9690-5a5c07e7be0f": "Furthermore, the splits in a decision tree are hard, so that each region of input space is associated with one, and only one, leaf node model. The last issue is particularly problematic in regression where we are typically aiming to model smooth functions, and yet the tree model produces piecewise-constant predictions with discontinuities at the split boundaries. We have seen that standard decision trees are restricted by hard, axis-aligned splits of the input space. These constraints can be relaxed, at the expense of interpretability, by allowing soft, probabilistic splits that can be functions of all of the input variables, not just one of them at a time. If we also give the leaf models a probabilistic interpretation, we arrive at a fully probabilistic tree-based model called the hierarchical mixture of experts, which we consider in Section 14.5.3.\n\nAn alternative way to motivate the hierarchical mixture of experts model is to start with a standard probabilistic mixtures of unconditional density models such as Gaussians and replace the component densities with conditional distributions. Here Chapter 9 we consider mixtures of linear regression models (Section 14.5.1) and mixtures of logistic regression models (Section 14.5.2). In the simplest case, the mixing coef\ufb01cients are independent of the input variables", "03d106af-7432-4ab0-85b5-dbbcbc7e8e34": "As a increases in size, however, the Hessian becomes dominated by the al diagonal,  Require: Initial parameter 0 Require: Training set of m examples while stopping criterion not met do Compute gradient: g + 1Ve yy, LF (x; 0), y) Compute Hessian: H < 2 V3 Lf (a; 0), y) Compute Hessian inverse: H ~! Compute update: A@ = \u2014H~'g Apply update: 0=0+A0 end while  308  https://www.deeplearningbook.org/contents/optimization.html    CHAPTER 8. OPTIMIZATION FOR TRAINING DEEP MODELS  and the direction chosen by Newton\u2019s method converges to the standard gradient divided by a. When strong negative curvature is present, a@ may need to be so large that Newton\u2019s method would make smaller steps than gradient descent with a properly chosen learning rate. Beyond the challenges created by certain features of the objective function, such as saddle points, the application of Newton\u2019s method for training large neural networks is limited by the significant computational burden it imposes", "a9f9b026-32aa-44ca-aa5e-1f78206e02f1": "We illustrate the result of running K-means to convergence, for any particular value of K, by re-drawing the image replacing each pixel vector with the {R, G, B} intensity triplet given by the centre \u00b5k to which that pixel has been assigned. Results for various values of K are shown in Figure 9.3. We see that for a given value of K, the algorithm is representing the image using a palette of only K colours. It should be emphasized that this use of K-means is not a particularly sophisticated approach to image segmentation, not least because it takes no account of the spatial proximity of different pixels.\n\nThe image segmentation problem is in general extremely dif\ufb01cult ing the initial images together with their K-means segmentations obtained using various values of K. This also illustrates of the use of vector quantization for data compression, in which smaller values of K give higher compression at the expense of poorer image quality. and remains the subject of active research and is introduced here simply to illustrate the behaviour of the K-means algorithm. We can also use the result of a clustering algorithm to perform data compression", "a2c60678-bb3c-46f9-a782-6c58f1f32bc7": "In this section we\u2019ll give an example where we use a neural network for the probabilistic encoder q\u03c6(z|x) (the approximation to the posterior of the generative model p\u03b8(x, z)) and where the parameters \u03c6 and \u03b8 are optimized jointly with the AEVB algorithm. Let the prior over the latent variables be the centered isotropic multivariate Gaussian p\u03b8(z) = N(z; 0, I). Note that in this case, the prior lacks parameters. We let p\u03b8(x|z) be a multivariate Gaussian (in case of real-valued data) or Bernoulli (in case of binary data) whose distribution parameters are computed from z with a MLP (a fully-connected neural network with a single hidden layer, see appendix C).\n\nNote the true posterior p\u03b8(z|x) is in this case intractable. While there is much freedom in the form q\u03c6(z|x), we\u2019ll assume the true (but intractable) posterior takes on a approximate Gaussian form with an approximately diagonal covariance", "4708ed08-1c9c-4570-b7a8-10e0604da7d0": "Deep learning algorithms are typically applied to extremely complicated domains such as images, audio sequences and text, for which the true generation process essentially involves simulating the entire universe. To some extent, we are always trying to fit a square peg (the data-generating process) into a round hole (our model family).\n\nWhat this means is that controlling the complexity of the model is not a simple matter of finding the model of the right size, with the right number of parameters. Instead, we might find\u2014and indeed in practical deep learning scenarios, we almost always do find\u2014that the best fitting model (in the sense of minimizing generalization error) is a large model that has been regularized appropriately. We now review several strategies for how to create such a large, deep regularized  td  https://www.deeplearningbook.org/contents/regularization.html    model. 225  CHAPTER 7. REGULARIZATION FOR DEEP LEARNING  7.1 Parameter Norm Penalties  Regularization has been used for decades prior to the advent of deep learning. Linear models such as linear regression and logistic regression allow simple, straightforward, and effective regularization strategies", "f6bbea4a-1a66-4362-84cd-5a548aeac702": "If we set the derivative of ln p(D|\u00b5) Section 2.4 with respect to \u00b5 equal to zero, we obtain the maximum likelihood estimator his time, including Boyle and Hooke in England.\n\nWhen he returned to Switzerland, he taught mechanics and became Professor of Mathematics at Basel in 1687. Unfortunately, rivalry between Jacob and his younger brother Johann turned an initially productive collaboration into a bitter and public dispute. Jacob\u2019s most signi\ufb01cant contributions to mathematics appeared in The Art of Conjecture published in 1713, eight years after his death, which deals with topics in probability theory including what has become known as the Bernoulli distribution. which is also known as the sample mean. If we denote the number of observations of x = 1 (heads) within this data set by m, then we can write (2.7) in the form so that the probability of landing heads is given, in this maximum likelihood framework, by the fraction of observations of heads in the data set. Now suppose we \ufb02ip a coin, say, 3 times and happen to observe 3 heads. Then N = m = 3 and \u00b5ML = 1. In this case, the maximum likelihood result would predict that all future observations should give heads", "6731ce39-46aa-4a4b-8ecf-dae80fe22102": "Perhaps 1 for RBM on a small image patch, or 5-50 for a more complicated model like a DBM.\n\nInitialize a set of m samples fx, ee x(\u2122)} to random values (e.g., from a uniform or normal distribution, or possibly a distribution with marginals matched to the model\u2019s marginals). wehtln 24 nner n wend AA  https://www.deeplearningbook.org/contents/partition.html    \u201cSample a yinibatch o examples {x x(\u2122) from the training set gi my i=l Pa TSe BOOP : for i = T to k do  for 7 = 1 tom do x) < gibbs_update(x)), end for end for ge g\u2014 2, Volog p(x; 6). 0+ 0+ eg. end while  burn-in for deep models. SML is able to train deep models efficiently. Marlin et al. compared SML to many other criteria presented in this chapter", "02e36df3-c183-4dd2-bce9-a83c21a38fa8": "DEEP GENERATIVE MODELS  unnormalized log conditional distribution:  1 Tt Tv  https://www.deeplearningbook.org/contents/generative_models.html    logN(v;Wh, 8 *)=\u20143(v\u2014-Wh)' 8(v\u2014 Wh) + f (8). (20.39)  Here f encapsulates all the terms that are a function only of the parameters and not the random variables in the model. We can discard f because its only role is to normalize the distribution, and the partition function of whatever energy function we choose will carry out that role.\n\nIf we include all the terms (with their sign flipped) involving v from equa- tion 20.39 in our energy function and do not add any other terms involving v, then our energy function will represent the desired conditional p(v | h). We have some freedom regarding the other conditional distribution, p(h | v). Note that equation 20.39 contains a term  sh! W' BWh. (20.40)  This term cannot be included in its entirety because it includes hjh; terms. These correspond to edges between the hidden units"}, "relevant_docs": {"2bd3c459-9aef-4e49-9fdd-02771b6fb9d1": ["10387844-ad1d-4562-86bd-d5f0494f10ff"], "ed98ca41-375a-40ed-9e0e-3c98cae0cbb9": ["10387844-ad1d-4562-86bd-d5f0494f10ff"], "cf8ebbfa-0b65-4704-a325-6ecd6d9354ea": ["fa24bdfa-3b04-4b76-971c-da95bd6de7be"], "0c55c3f3-522c-4650-95c2-1eca82772a2d": ["fa24bdfa-3b04-4b76-971c-da95bd6de7be"], "95614eec-e298-4ae9-a1e4-1deac7481261": ["f089f0d3-7a9c-45d4-9573-b42f89d01510"], "4d6e24a5-c100-4997-ae7c-99c75a5772c0": ["f089f0d3-7a9c-45d4-9573-b42f89d01510"], "090206fe-646d-4f5c-abbc-888fab68b4ea": ["56caa28b-42f9-45b1-9d74-37e0eda89a5f"], "fdcdba32-9e43-45c7-a41e-caa48452b724": ["56caa28b-42f9-45b1-9d74-37e0eda89a5f"], "a22b97a9-7d55-4cc6-854a-2aba031653b7": ["95670e5d-a831-4e8a-98c0-40aa339bd173"], "56e1934a-cb18-45ce-818a-9751b8d5ac87": ["95670e5d-a831-4e8a-98c0-40aa339bd173"], "b728d1ae-f099-46ce-a8a2-e48b7bf77630": ["7138a8eb-4948-467f-860b-8dcee5638a47"], "f00147d2-1389-4976-b250-051dac5db1eb": ["7138a8eb-4948-467f-860b-8dcee5638a47"], "5c61b774-62b8-4a70-96de-f7724ddaff26": ["2e1767a0-5a47-453f-8efa-dc6ed2e65253"], "a66ab460-ca42-438d-b64c-af8ae923e0a1": ["2e1767a0-5a47-453f-8efa-dc6ed2e65253"], "00a0f5a1-4a64-4c0b-a51d-27f14d8fc73a": ["fa70da63-af24-4ebc-983d-e85d5235b655"], "c658b156-20c0-4367-a185-38793feec6ef": ["fa70da63-af24-4ebc-983d-e85d5235b655"], "01a5cae0-052e-4760-b2b1-0c417c9bb674": ["7ff6ff12-aa2f-4cda-848d-4c69bf53ef8b"], "14f503cd-b186-4158-b234-2a9375bde61b": ["7ff6ff12-aa2f-4cda-848d-4c69bf53ef8b"], "801395f5-09a0-4997-9062-8e56c17bc4cc": ["98dd8c9e-4059-4d6d-82a9-af7bb6367c11"], "0f206670-7a61-4109-83fe-2850a8df149b": ["98dd8c9e-4059-4d6d-82a9-af7bb6367c11"], "15e840af-c70b-475a-96be-410d2cc7785b": ["01cdb862-9e2e-43cc-90fb-8bce1f8df8dd"], "4e079757-9537-4f97-ba7a-ef4baefcbddf": ["01cdb862-9e2e-43cc-90fb-8bce1f8df8dd"], "03fcfaa4-007c-48c7-b67c-6b86f46eab9f": ["a1ae2722-9567-43fc-ad94-4c4fcc5184c7"], "a8e2289f-e625-4a75-849e-4a0a14fd154b": ["a1ae2722-9567-43fc-ad94-4c4fcc5184c7"], "275b1aeb-8583-4dba-be5b-870e632c8882": ["da9c9658-c2f0-4710-9b8b-bfbb6afed6ac"], "4b226415-da0b-4273-94b5-d99279921079": ["da9c9658-c2f0-4710-9b8b-bfbb6afed6ac"], "07262a96-cab4-4363-86a1-fe8ee9dc0dd8": ["8fda65c5-d5a3-4550-b2a9-6d275527a25b"], "dcb7ed22-e601-430a-b2a4-9f3d8115a7cd": ["8fda65c5-d5a3-4550-b2a9-6d275527a25b"], "acfdb582-0f9e-4260-9243-834b3cc9d8bf": ["9b30509e-6180-4008-851e-db0f953df19a"], "dbcebd75-aa49-49e5-aae2-a61bdcfdf125": ["9b30509e-6180-4008-851e-db0f953df19a"], "bc2bc685-39de-4acb-87e6-41fe289f51f3": ["c6ab13e7-9aa4-4f20-b08e-c477f3c9bc73"], "37ef36ec-f034-4228-a860-616786d6a7ea": ["c6ab13e7-9aa4-4f20-b08e-c477f3c9bc73"], "298e9e0b-baa9-41b3-bba6-d53e45cd3d48": ["39eb5df9-454c-4bc0-8a25-e9b4b4d8d0c3"], "baee5ce0-fca6-4ead-a25f-c74c921f5383": ["39eb5df9-454c-4bc0-8a25-e9b4b4d8d0c3"], "f580f344-ad41-4b7b-9b32-25b3a4dbff66": ["37b1a589-468a-4ca6-96f8-c9adbefe7d35"], "1d8d075f-9404-46dc-927b-07a9cb30c955": ["37b1a589-468a-4ca6-96f8-c9adbefe7d35"], "2a6fe341-cb81-48d5-8dcc-3bbabd217a82": ["bf47f87d-14d0-4a12-810c-e9ba4f5a5bd6"], "dfa20f8c-a3ee-485a-8933-172fd5538d98": ["bf47f87d-14d0-4a12-810c-e9ba4f5a5bd6"], "4fa08728-3279-450f-88f3-a5f2699eec14": ["10b1d7c3-72db-4b93-a2fd-d1e14be6c3a4"], "8c59b26a-1662-49cb-a122-7f2d7b9b4776": ["10b1d7c3-72db-4b93-a2fd-d1e14be6c3a4"], "b91fec5b-0746-4c9f-9288-7fa75dea9348": ["086f9952-00e5-4077-9ab1-ce6b87f86738"], "d23a3024-64c5-4cdf-8bfe-8f8f54075b10": ["086f9952-00e5-4077-9ab1-ce6b87f86738"], "355488da-ca51-402f-9c9d-53b9cfccaf0a": ["1115d656-a165-4225-b2de-e41ed110d40f"], "6cdbd3bf-cffa-4932-9a69-8f0055615b53": ["1115d656-a165-4225-b2de-e41ed110d40f"], "96d4f3f4-6e61-483a-bf27-00657a81913a": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "5cf86760-3de0-44da-9130-08ec277baf4c": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "9265d3fd-8cb0-4b3b-917d-e6fb7e90a0df": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "36f59ef7-e3e6-4d0b-a967-2e2a19c74312": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "4c089c82-3c42-418a-8f99-501e41400f3f": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "d2deda83-4699-4cd2-b414-62af4908a0a9": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "7d51b24c-be46-4317-9f58-0411ed408ced": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "799678fd-1de6-4fbf-9f1b-d2bf588b9f53": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "c079bf94-9e6c-4c94-8cd6-43f9eb6f3a1c": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "32075fd6-5bea-407d-a804-14f7f292e6ad": ["77923ffd-f385-48a9-b5b6-863c2e92d470"], "77c6cbb7-4a4e-4d6d-99ec-d379c24a82dd": ["1eabf9ea-ddd5-43a9-b921-0488efdf7d16"], "35c07a3b-4652-4d00-831f-778d4332bea2": ["1eabf9ea-ddd5-43a9-b921-0488efdf7d16"], "d34d3535-f159-43f4-80e7-2af63067c591": ["1f7169a0-d314-4590-a8cd-b6fbe1730150"], "a726280f-2486-4c44-8d67-3b91b592179f": ["1f7169a0-d314-4590-a8cd-b6fbe1730150"], "f698ec3d-5678-4b82-affb-2ff1dd9a7d72": ["0d5076d9-ec8b-406e-acfa-893a1633b706"], "23a44679-28a6-4908-81fc-4c775d012fe9": ["0d5076d9-ec8b-406e-acfa-893a1633b706"], "bb4d8223-5c99-48ac-ac25-f4cd8ac5ea6a": ["824fa87f-8009-4739-bbfa-6151ee6d7f2c"], "92139d9b-1511-4ae1-8fe0-97062a0d0d3c": ["824fa87f-8009-4739-bbfa-6151ee6d7f2c"], "caf7c9f8-7daa-4132-b69c-e0439ebb3c97": ["a5171d5a-d29c-43aa-a3aa-8a2cb714fcf9"], "2797a071-4037-4160-9e73-ab9e2b62d1f0": ["a5171d5a-d29c-43aa-a3aa-8a2cb714fcf9"], "f26a0c09-fe7c-4d70-adee-a9364f65f929": ["23e88608-f132-48b3-b139-542f35e03424"], "6b074fc6-6cd3-4ae6-9e79-4e6faa411d81": ["23e88608-f132-48b3-b139-542f35e03424"], "0c8f1fc6-e021-4d76-96d1-1792fe6b0849": ["85655d39-806a-4f48-834d-2ab47b9de2ad"], "e2079bab-7627-4b38-84ff-c114f5e8fd65": ["85655d39-806a-4f48-834d-2ab47b9de2ad"], "d688e371-4cbc-4461-90a7-d926a6d4eff7": ["02484d1b-ce1f-4c4a-ba0f-24e8b045cd28"], "d561e949-9c70-44f9-a422-ab316d848b4e": ["02484d1b-ce1f-4c4a-ba0f-24e8b045cd28"], "20461412-ab8f-4d80-89b9-2a5bf52329a4": ["9e36e58b-c4e5-46cf-b7b8-e819037de2cb"], "d4c09909-8409-4e00-99cb-7c493affd27f": ["9e36e58b-c4e5-46cf-b7b8-e819037de2cb"], "48c46dfb-1d96-4b0a-9bbc-e5ad5e8fb337": ["3db9dbb7-8e94-40aa-bef6-f1d8630b1045"], "ccd801ee-4f35-4d3b-bcb1-7f6d0fdb7b7f": ["3db9dbb7-8e94-40aa-bef6-f1d8630b1045"], "c31d190a-c1ae-483c-b946-fb61e01af978": ["75c5ba77-8121-4ca1-a419-62422e8d3f2a"], "886130b3-fd75-4d0a-bf17-f2a7db2f9fce": ["75c5ba77-8121-4ca1-a419-62422e8d3f2a"], "e0fe86f6-4895-48bd-8ff8-231c3adc5fc7": ["91998ecf-f83a-4860-84e9-f2092086e460"], "bc7f0c3d-1677-40f1-a28d-6f5fa28d45cc": ["91998ecf-f83a-4860-84e9-f2092086e460"], "1f2ed329-7a88-48b6-9cd5-e11617cbc4fe": ["f9865213-2f72-4fea-a410-0ed1e489d426"], "16b54378-e180-40f8-a09b-2476e944a10c": ["f9865213-2f72-4fea-a410-0ed1e489d426"], "7f415bf1-4a70-4f57-bb41-320c6fcf4fc5": ["6eb5107b-1275-4a02-8cf2-ad90bcd7657b"], "67caf96b-42b6-449a-a254-66a834c43d11": ["6eb5107b-1275-4a02-8cf2-ad90bcd7657b"], "2e402f7e-0951-4893-8d05-7a6661563a28": ["c3957a94-4927-4fe6-b2c0-427de66b3d88"], "b8d43667-c80c-4bec-9284-73adfb242da3": ["c3957a94-4927-4fe6-b2c0-427de66b3d88"], "468579a8-e08f-402f-bb17-a7182cc974ac": ["b40088ed-95a0-4f4f-9223-88f8a9fae7cd"], "f717b15e-e0e7-4b98-bbbb-7b8228eafb2f": ["b40088ed-95a0-4f4f-9223-88f8a9fae7cd"], "8c78199c-ca05-4c9b-ac5a-83a7d21e8853": ["b626c059-1cee-44c7-812a-9604b942e9d5"], "fc30822e-03f4-4b0b-a352-f06be2bb5ccb": ["b626c059-1cee-44c7-812a-9604b942e9d5"], "6db3c4e8-c678-4cd1-8242-4d1593413fde": ["7124ca67-9e67-422d-bc48-9d6378933dd1"], "091da98a-ec35-4056-bf98-2f40ce649be6": ["7124ca67-9e67-422d-bc48-9d6378933dd1"], "85fa5eb8-99d6-4bcc-925a-329529fb6ddb": ["19a313ae-cacf-4290-8f66-e426fa862635"], "cf2c187b-2827-47b8-a2fe-e4c1657f6c8a": ["19a313ae-cacf-4290-8f66-e426fa862635"], "dcfeae05-c4df-4f57-a763-f71cf7096ae7": ["46afbbbc-8a5d-40aa-b623-e7386b1a65f2"], "ed23c1e6-28dd-41c7-b347-a4d7e8db8c9e": ["46afbbbc-8a5d-40aa-b623-e7386b1a65f2"], "bbe41035-ff40-4c91-b598-08df05071dd3": ["edee76b5-8223-47d4-a0ab-2eeafba22254"], "e4bb6986-f7e2-46cf-85fa-74a00a8d301e": ["edee76b5-8223-47d4-a0ab-2eeafba22254"], "a2902626-c79f-45f4-8429-1fa8dd54605b": ["4d598542-639f-4952-9ddc-ea862988ce41"], "d445b195-dbf9-4836-bb84-51fde57fc686": ["4d598542-639f-4952-9ddc-ea862988ce41"], "2f54d263-0a84-4a95-82ba-2eb6d893f069": ["155dd1ad-a67f-4fc3-9b5a-5c48e59ce63a"], "e306bf0e-eda1-4844-a64c-5b2a13027649": ["155dd1ad-a67f-4fc3-9b5a-5c48e59ce63a"], "07ff01cd-6d37-4e21-83a6-31c59d03297d": ["ce50b152-6001-4782-8258-c89e51065a3c"], "21499b5e-edff-4ea7-b0ba-df9aeacc9dde": ["ce50b152-6001-4782-8258-c89e51065a3c"], "0b877cd0-a755-4039-a34d-f4b1ec2e1fd7": ["c8d679f7-ba68-4e5e-914d-cdecc94b11ff"], "cf6e25cd-883f-45fe-a3d9-72341614ccde": ["c8d679f7-ba68-4e5e-914d-cdecc94b11ff"], "ba8b62cd-7a54-49c6-9669-a1beb55fb343": ["d3d745b1-a726-40b5-88fd-ac99c00cb651"], "10878201-5fa3-4ef6-84e6-21bca13ab358": ["d3d745b1-a726-40b5-88fd-ac99c00cb651"], "f0fad811-7d3b-49d8-bb4a-e9c32276546c": ["7fd2d2ff-bd85-44b1-ac67-a0d84a0a4793"], "88c8d990-8182-4f76-8d64-260546c4f1e5": ["7fd2d2ff-bd85-44b1-ac67-a0d84a0a4793"], "184dff00-088c-407c-b7bc-b70764529b82": ["ba2cb73b-d9c5-430f-b3b7-716b723bc020"], "475ebe78-d5f9-4fdc-bed9-32beee91a146": ["ba2cb73b-d9c5-430f-b3b7-716b723bc020"], "ed29313f-5f8d-4287-b32d-419c139bc688": ["d2ea6ee2-60ad-48da-bce3-b5cbb806e95b"], "a192fd0f-245f-498e-bdb8-4a0191b0dc63": ["d2ea6ee2-60ad-48da-bce3-b5cbb806e95b"], "18f6f680-fee5-46a8-9929-7d211a8f6118": ["125acc8f-a14f-48e0-980e-c4af04249a40"], "53376748-3708-48d8-8ef2-84c61178c1af": ["125acc8f-a14f-48e0-980e-c4af04249a40"], "21b47426-3286-4a12-a7c9-82a036a9a87d": ["5c556d31-8890-4f01-9af5-46e37bc22bbe"], "413405c0-0ced-4176-97ca-46f19ee59353": ["5c556d31-8890-4f01-9af5-46e37bc22bbe"], "1fd93294-5d20-4c2e-b074-77f4b559265b": ["360266b3-72ea-4745-b8fc-27a935cacfca"], "fc43986c-8207-4f1e-a219-08f34fdb2ae1": ["360266b3-72ea-4745-b8fc-27a935cacfca"], "004574d7-be31-4032-af27-05d87c7afe69": ["9482d83e-2602-4c25-aec9-704b1997214b"], "6b42af74-3588-4a3d-a57b-ee82ad985ce3": ["9482d83e-2602-4c25-aec9-704b1997214b"], "1a5650c4-f2c7-4518-a5fa-74c7d32d4195": ["6a71596a-2572-49a3-ba28-2994ea9d8124"], "e1d04874-057e-49aa-8c3a-f51d63411593": ["6a71596a-2572-49a3-ba28-2994ea9d8124"], "297652fa-7527-4655-a231-daab0ab7bce1": ["7d7b6398-2773-4448-94b4-652522217859"], "d986c135-edaf-41df-be62-28124c3ebfe5": ["7d7b6398-2773-4448-94b4-652522217859"], "09ef3d11-5f93-47f6-a739-166756407172": ["c6386797-3ccc-4b6f-bee2-732906ab3d26"], "3a438752-9107-468f-b000-74c7fc7c245f": ["c6386797-3ccc-4b6f-bee2-732906ab3d26"], "91e5a29e-0a2c-4f06-afd5-e5c25141aaa3": ["5e0428f1-34f7-4946-9eab-6534e05837c8"], "90171614-538e-43ff-ab98-b384c4061b64": ["5e0428f1-34f7-4946-9eab-6534e05837c8"], "62ace950-bee7-4e08-be57-fec1a625de6d": ["281a5e41-75f4-4d92-8452-bbf91ef75989"], "b60733ad-b839-45b6-b7dc-413411417cde": ["281a5e41-75f4-4d92-8452-bbf91ef75989"], "ce78226e-6ac7-426c-9851-5cb2f2e3b8e7": ["d99aaaee-791c-4e7d-ac74-e12a8cb19e52"], "fb6fcebf-bfbf-42f8-a025-517a30d48e9d": ["d99aaaee-791c-4e7d-ac74-e12a8cb19e52"], "acd74b88-721a-4440-bacf-9bc1e5d5bc37": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "336daece-4f29-47df-b343-edb70fe9bd44": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "406b7b68-b02a-4d3c-84a4-d1a6235bb8ef": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "d6dda07a-274d-4d5a-ba97-b56c8e91883d": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "e7e70eea-5011-493b-b4fd-c0e873f1e42a": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "9306ab80-cc5f-4eca-b13b-4d865e198442": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "862e1356-16b5-443d-b22e-4f0eabb4d130": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "4055c78f-7c52-40a9-95c3-47bf7f8ac0b3": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "ee18109a-e465-415f-bded-f6813b71a901": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "293f04fa-1c2c-4ade-8e58-e9e6304c9a67": ["6d462fda-d808-4f55-944f-4938ec5cc4bc"], "31c519f7-8328-49d2-a80b-c77402f84932": ["5e720fe6-b1ab-42bd-b22d-a045ed8a8ab2"], "369ad4e5-6852-4ac5-bc01-30579715b434": ["5e720fe6-b1ab-42bd-b22d-a045ed8a8ab2"], "378348a4-4849-4758-9c41-52dcebf923be": ["877cc5b8-9193-41d0-9e76-9f4549fd6a29"], "0b3b688c-f872-4e98-8519-ccf7993bf3ff": ["877cc5b8-9193-41d0-9e76-9f4549fd6a29"], "e9f81186-a417-432b-be4b-ff737f86d3dc": ["baba5be0-6871-4235-9450-f828f714930e"], "5dacfbda-3719-490c-9886-3cd92ade0464": ["baba5be0-6871-4235-9450-f828f714930e"], "674753d7-a05f-4758-9f18-f9075deeb2a7": ["5cc881f6-e690-4ba9-903f-3a1a340d7029"], "75cea866-965f-4cbf-9b53-ab2930c5236f": ["5cc881f6-e690-4ba9-903f-3a1a340d7029"], "f26686b0-a725-4e21-946b-92b433b3749a": ["5e4082b7-ca48-4f63-8fa1-a1b31a4a8234"], "6cc31ba9-b16c-4e88-8a8d-b056c9b317ff": ["5e4082b7-ca48-4f63-8fa1-a1b31a4a8234"], "d9afd573-2595-4b59-aea1-0dac6a17a486": ["1947d75b-b2b6-4d51-9de2-d50f94c7fc87"], "295a3a2c-63a6-4ab6-8157-f23452089304": ["1947d75b-b2b6-4d51-9de2-d50f94c7fc87"], "cfc433fe-3aa8-4882-aa50-1b88d23a71f5": ["6f920f74-2971-4ab7-8a30-9adb5a19fbcf"], "3d2bf2b0-0232-484c-b889-dc3030b3b4bc": ["6f920f74-2971-4ab7-8a30-9adb5a19fbcf"], "c4f9edcd-efd2-4b18-9f0d-7d36a03a12ad": ["da160142-a35e-4c88-8a22-1ce91a05141a"], "9eeede61-208b-42b4-886b-b4d824cd6e00": ["da160142-a35e-4c88-8a22-1ce91a05141a"], "8631b57e-d430-4e0e-bf2e-51a6b07647fb": ["9423116b-f341-4116-b60d-e42d9e668a26"], "3b22dcd8-90e2-405c-8ae5-301b58d7772d": ["9423116b-f341-4116-b60d-e42d9e668a26"], "2718ddec-e8e2-420b-8851-346c1e1a98b4": ["b123ac1d-3e8b-44e9-90ba-793fe78ad421"], "75902a47-2abe-43f5-b09d-10c279fab17f": ["b123ac1d-3e8b-44e9-90ba-793fe78ad421"], "6a26108c-1aa9-4243-aa52-7ce1fd23cd36": ["96f5b4a4-fb84-4ae1-8aca-fee76d70ea1b"], "5543ae05-7493-4ae4-a47f-1ef78944b577": ["96f5b4a4-fb84-4ae1-8aca-fee76d70ea1b"], "1187f082-9ba5-468c-8467-e9adcff51267": ["921f1dc1-f59b-45fd-ab18-89235e8447ec"], "a5494f56-2292-43d1-b294-2769ab1d91ad": ["921f1dc1-f59b-45fd-ab18-89235e8447ec"], "fcb57983-e755-42f6-bc7b-0b1a5a1408f3": ["b21dea30-8025-4db9-9c47-d2216ac7f968"], "e314479d-4a7c-443a-a0da-bfdd8e448ed6": ["b21dea30-8025-4db9-9c47-d2216ac7f968"], "14f1a1d4-9607-4361-a80e-d11d0c59c6b0": ["1e51b269-ffbd-4eca-bc2d-7225a1671c14"], "035c265b-b919-4071-8728-feb03fd8e72a": ["1e51b269-ffbd-4eca-bc2d-7225a1671c14"], "c0920626-cbfb-4006-a759-f47452dccfed": ["f2383460-7c76-4091-b56f-6197ceb0a44f"], "f626c193-274b-4409-b3f5-7f4fe00d787f": ["f2383460-7c76-4091-b56f-6197ceb0a44f"], "bf8aebbe-8c24-4136-8119-92b16a94ae95": ["a9bfe953-d4fa-4455-a760-48adf2919b78"], "cff18546-7554-4cbe-bf0e-4866f051825e": ["a9bfe953-d4fa-4455-a760-48adf2919b78"], "d445fc53-7c04-42e2-aee2-b3406e8a5f93": ["4a3fe2e7-94f0-4aac-ae7b-7bfecab838ad"], "3677e834-2358-45d9-ae18-c1352b92a324": ["4a3fe2e7-94f0-4aac-ae7b-7bfecab838ad"], "b42df877-757b-499a-8526-8981678d4715": ["81844d16-1c48-4a56-81b3-1ddb1a2e6529"], "b016948c-16a8-4bbb-b4c9-797b1399dc43": ["81844d16-1c48-4a56-81b3-1ddb1a2e6529"], "4dfe936a-6a4c-45a6-8cdc-ef5daed5db7d": ["d6d062fa-c7d4-4551-b056-ae9cce3a8f4a"], "dc5d65a6-db60-4d8f-a967-b3b9c7b149d1": ["d6d062fa-c7d4-4551-b056-ae9cce3a8f4a"], "993721c6-bb78-4582-b269-627e424df2a2": ["17f58820-1b6d-4348-bcd2-74e7a55225df"], "93c8b098-6c19-4cfb-8727-65dcba5e9842": ["17f58820-1b6d-4348-bcd2-74e7a55225df"], "13813e7e-2a6c-4dee-875a-376dcbef82a9": ["18742ad4-9695-47b7-bb88-381ef1c6c4a6"], "a66e6c1f-cdd1-4e15-a42c-f0bd2802a490": ["18742ad4-9695-47b7-bb88-381ef1c6c4a6"], "f71d4ac4-fa0e-4843-8e36-11d0af608b7f": ["0b05a974-f1d5-4214-b702-d71911746ab7"], "44e0b686-3b64-4a14-99ef-0046031b9207": ["0b05a974-f1d5-4214-b702-d71911746ab7"], "0059e09e-fefa-43d0-a6f2-882a9d302a71": ["318ee19b-52ef-45ff-89fe-07da238992cf"], "83a1ecd3-7721-41ff-a563-bb6c9173d637": ["318ee19b-52ef-45ff-89fe-07da238992cf"], "311061b8-6fd4-459a-ba32-00400ce7af5a": ["52954f49-aba6-4543-b0c9-b3ba600cdbfa"], "8a279b2f-b370-4107-929f-4517ff299753": ["52954f49-aba6-4543-b0c9-b3ba600cdbfa"], "55a3aa2b-8930-4ee2-8b92-626795f35d3e": ["ebf766b6-89a5-4464-a568-cfc613425eac"], "6716d924-b21c-4bd5-a539-3d7e917277b2": ["ebf766b6-89a5-4464-a568-cfc613425eac"], "6ccd3b50-c388-4332-91e5-7fd8c6239887": ["10e6d565-b922-4441-8de4-18c4b872a269"], "358ac364-3885-4bd7-b818-9c0a14e097f8": ["10e6d565-b922-4441-8de4-18c4b872a269"], "c852b121-ceb7-48d5-8cc2-8160ce094dd2": ["d0e546f3-ae56-4b09-8bc4-785d790be14c"], "deb2fb94-2d48-474c-b3a8-4a611dfe60ed": ["d0e546f3-ae56-4b09-8bc4-785d790be14c"], "23d67420-14d7-44ec-ba03-32579479b61e": ["3fda57ff-73c4-4fb7-ac11-30c092559610"], "86be2c3c-7043-4d93-881c-84030616e0fb": ["3fda57ff-73c4-4fb7-ac11-30c092559610"], "d60178c7-2e70-41f1-9483-b5494dfdd600": ["30b7bdd9-e789-4d16-b43f-bd1c0219cea0"], "f7df055e-3094-475a-a0ad-3db0c00bb4c2": ["30b7bdd9-e789-4d16-b43f-bd1c0219cea0"], "5dabba78-cb95-4170-b4bf-210c53ac4e48": ["b463aee7-038d-4b1d-b677-8a0cba08d7cf"], "7ff6e44e-888c-42b9-93a4-ba190a19d728": ["b463aee7-038d-4b1d-b677-8a0cba08d7cf"], "f6823291-3178-4f35-ac9d-03ed8a7430d9": ["9ad85320-0bc0-4331-b1d6-f55fc09b7ce8"], "29ab88ec-674b-4cf4-bd3e-947f9c66dd00": ["9ad85320-0bc0-4331-b1d6-f55fc09b7ce8"], "5e1b1f30-c270-4bf6-8da0-cd9d07f504e3": ["a45d0d74-d40e-4a6a-a0b8-56a954abbf23"], "931b4fab-6aaa-4d02-94dd-d12f02d03228": ["a45d0d74-d40e-4a6a-a0b8-56a954abbf23"], "35ff920d-4460-42da-8bd4-e21840db4ba2": ["0a965551-d8cb-4410-95b7-f7bed3212532"], "4b8cfe3a-73a2-4816-8bb2-f0662451ee32": ["0a965551-d8cb-4410-95b7-f7bed3212532"], "8497ccc0-9961-45a1-a856-4b830cc53b6a": ["b15ba92a-6663-42e6-803a-c54ea7347927"], "972272f4-8d8e-445c-bb10-0f3061252179": ["b15ba92a-6663-42e6-803a-c54ea7347927"], "0185af1c-7bf2-4c49-ae4b-f63262fe0959": ["7e2b1c7d-af5b-4b9d-aca2-efdcc31adc0f"], "cb12c9e2-9d7d-4133-ac68-dec6a6f8473f": ["7e2b1c7d-af5b-4b9d-aca2-efdcc31adc0f"], "b2ffc88d-d41f-4fa4-9576-8c759fbf9036": ["8474afb4-c6cc-4377-a0da-55df44e78c0f"], "6c45df31-9aad-49dd-b397-16fc4daf531e": ["8474afb4-c6cc-4377-a0da-55df44e78c0f"], "464989f6-a60a-4d40-bfd8-be55928706e1": ["fc3a3d1b-f896-412b-9bbe-f825b5e0f1a3"], "a3a2512b-9633-4981-8503-afd475b4a0de": ["fc3a3d1b-f896-412b-9bbe-f825b5e0f1a3"], "0cbd47eb-0947-4a07-b58a-1676fa962866": ["81c47ac6-cddb-4620-83fb-5052ed04d36f"], "1513de4f-dfd8-42ee-b8eb-0cf1ea7ca782": ["81c47ac6-cddb-4620-83fb-5052ed04d36f"], "c550a946-4ce0-4ee5-a238-178e35bcf134": ["75e9058a-193b-437d-af03-9f5e60270d57"], "e8adce33-3a5c-4eac-adc6-fa274cc4783b": ["75e9058a-193b-437d-af03-9f5e60270d57"], "4125a314-4254-4b50-b1ef-01f8955908cc": ["c975c226-c1ad-46fb-8765-98a34b3d42d7"], "1a65cb9c-372e-4773-adfa-1ab036a19e6f": ["c975c226-c1ad-46fb-8765-98a34b3d42d7"], "de4ffd5b-c6ff-4f2d-acb2-3568a0937ab6": ["aa3ddb8b-3615-4a7a-9ff2-93a8e4ba7541"], "362baa86-dcc1-4231-a6f6-81f28a46ae3d": ["aa3ddb8b-3615-4a7a-9ff2-93a8e4ba7541"], "a1fd9329-30f2-49b1-ba56-5b50dbefba30": ["5f8f2305-2d29-441b-9729-c324c5c5958c"], "626d176f-9aba-4f75-87cf-8db1ea419c0f": ["5f8f2305-2d29-441b-9729-c324c5c5958c"], "66dbb200-eb13-40b5-80eb-35b00f1c22ed": ["1a4cf483-b010-4630-b12f-cbf07cdc92ff"], "d47f4193-f368-49a5-a32f-2ecc5323cb6e": ["1a4cf483-b010-4630-b12f-cbf07cdc92ff"], "fc23cf8f-74f8-4dbb-9459-b40f6215555d": ["f43dec00-80fd-4041-85f2-c1a5f1bdf6b7"], "b56a4992-28df-4a73-82c4-ccae7b3bd678": ["f43dec00-80fd-4041-85f2-c1a5f1bdf6b7"], "f6a8766d-1bda-4b14-a663-57ecf0489d3f": ["e3fd4e0f-4ccf-4ccd-b1b2-5eb86093f51f"], "17fb9ead-3d5e-4fb0-b6de-333ebdb7ca26": ["e3fd4e0f-4ccf-4ccd-b1b2-5eb86093f51f"], "26600194-80a4-493f-beaf-34a692f9f458": ["c84e1dc2-17ff-4c4b-b11e-4dc62946bc10"], "49b1cc45-8f42-4f85-b808-a3a9f13f8062": ["c84e1dc2-17ff-4c4b-b11e-4dc62946bc10"], "1979f54e-3e4c-40f5-9516-0ce4554a4fb8": ["22a900ee-ea74-418d-b11d-95b264b5d2a7"], "d06efc87-40b1-4e36-9a14-b6ad0aba3ae3": ["22a900ee-ea74-418d-b11d-95b264b5d2a7"], "80d225ca-d574-4723-b819-331822633dd7": ["c74017dc-5d53-49a7-9ae3-6da4628161ea"], "1e24bc21-b045-4393-be5a-6c1909dedaf9": ["c74017dc-5d53-49a7-9ae3-6da4628161ea"], "4b338d08-c6cc-4572-802f-7f226106473f": ["b76ebd36-7cf6-49fd-a40a-7ad830e5d1b2"], "88fca4f8-2e3b-4890-b005-aef8433a00a2": ["b76ebd36-7cf6-49fd-a40a-7ad830e5d1b2"], "ea54a14c-bf00-463e-8033-449ec797a779": ["d9417b97-38aa-4682-a05b-8ee6a42b5ece"], "d81f2329-7c62-469d-8827-4880da3eccd5": ["d9417b97-38aa-4682-a05b-8ee6a42b5ece"], "ac133b78-a47b-41a7-b297-81b5929e60d9": ["a645154d-9b08-4598-a8aa-98bafe204cab"], "83a23c05-fb89-49e9-9326-e8f185462e20": ["a645154d-9b08-4598-a8aa-98bafe204cab"], "7a27ccc1-1d7e-4872-b815-839337131d43": ["a2d5d519-943b-4f95-adf3-be3597421d0a"], "101c5048-6f52-4a91-9cc2-5da91d39abdd": ["a2d5d519-943b-4f95-adf3-be3597421d0a"], "aea3483e-a226-444d-b1ed-4ab86efbfcfd": ["9574f4e9-1801-49f5-aee5-239e32a6dfcf"], "86460514-7df4-423b-b617-596712ceff33": ["9574f4e9-1801-49f5-aee5-239e32a6dfcf"], "88ee2165-7537-4826-9a85-eb800dede956": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "24989016-6ae4-4bb0-a13f-c49a3facb4d7": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "8fede5af-62d5-4424-89b2-d16027bc8c3a": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "58711dfc-3ac1-4799-932b-633a4459dfe3": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "d62ac701-2478-4ce7-95e5-e7328c050c34": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "16ec7263-6667-45cb-ac3f-afd8377f19bc": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "2974be95-1522-477c-86a4-a98980f88071": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "2c6d2faa-5848-49d2-9cf5-432b7ad6f3a6": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "070c50e0-b9a0-41cf-ab2f-8b0205e0be3e": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "14b3f49f-1e6f-4d99-8d9a-6bba10531b98": ["d81c7f89-d604-44f9-8570-e4062f8c197b"], "093abad3-9077-4466-af29-eebce04580b0": ["1109da20-a2ce-47da-bcb8-7d76d30d0ec3"], "3aeeda41-e2ed-4842-ae32-f2f60c6f9626": ["1109da20-a2ce-47da-bcb8-7d76d30d0ec3"], "9d4dc6e6-9c5a-4ab8-ae18-5d2dfb8fc621": ["65d9931c-1c5e-4b29-ae7e-a4ee71852b4a"], "c9355ca1-e533-4c88-a57f-3e9438ae17c2": ["65d9931c-1c5e-4b29-ae7e-a4ee71852b4a"], "e8d79744-5b15-4b11-8a6e-e834018ce057": ["512a506c-0241-42f7-aad8-1b532f63ad01"], "c12d6d78-1b5f-4c2d-bfae-fea8a99aec4f": ["512a506c-0241-42f7-aad8-1b532f63ad01"], "ad538f99-ca72-41af-bb7b-cbe97d244ddc": ["44636dea-a8c4-400e-865d-ea162fd45286"], "f32e7f7b-1200-463e-a83e-aebc809c43b2": ["44636dea-a8c4-400e-865d-ea162fd45286"], "e34bb24e-a386-42dc-ac40-e0f919bef6fe": ["597909b4-677f-4319-ace8-885111ba0110"], "906f8532-8ba0-4fec-b0e7-50c449f9a9ad": ["597909b4-677f-4319-ace8-885111ba0110"], "fa41069c-341a-407e-b63d-3c7016d1e29a": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "e258d3ba-5570-4e18-9b9d-cfb68def468e": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "afd633a0-d26d-4560-8351-799a5849ec41": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "869d29eb-946d-4f4d-b41f-85482d4f6642": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "b26c30cb-672b-49eb-94d9-002816e0334a": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "b0d9f5aa-c438-4c38-9e1b-fbc6b90dfc2c": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "67d547e5-ddf4-443b-8427-4ab379c19e44": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "09401d50-3747-4b61-a25e-dbf86ae8711a": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "2fa6c01f-c295-43db-a298-1e592ce865a2": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "ce7a1c15-c7ba-4301-80a7-294846b581c8": ["585768f9-295a-418b-81d0-78b59c76a8ff"], "56a111f5-cf90-4005-bb80-b5103edc2822": ["69236cb3-5abb-441d-9c3e-9c0b5dff6f0e"], "faf399af-5206-43d1-ae28-5ad6456097c4": ["69236cb3-5abb-441d-9c3e-9c0b5dff6f0e"], "813de151-392f-411f-8fc9-3417a87f3014": ["604324ea-34b9-46ac-8b8b-9fb2752bac73"], "4ddb8b86-0008-42da-b09e-19f08d766cbd": ["604324ea-34b9-46ac-8b8b-9fb2752bac73"], "95c2755d-3dac-47da-86d0-cd8401d5dde4": ["537562b7-008f-4085-8bed-3fdf300dada1"], "8be3af2a-6ae2-4d02-ab7b-7ce0ad121563": ["537562b7-008f-4085-8bed-3fdf300dada1"], "c8a39aea-f2a0-4b43-b28e-81674ffbc1bf": ["c07dd5d7-13ac-4e46-99e5-9832dd12d984"], "f5cf3456-4323-43fe-af76-109676511109": ["c07dd5d7-13ac-4e46-99e5-9832dd12d984"], "63f679e0-76af-4f74-ba04-61d8d260adf6": ["833701a7-6d98-43ef-8092-1478507fe858"], "c6fb4a4f-0dc0-428a-b9d6-d058435a6d17": ["833701a7-6d98-43ef-8092-1478507fe858"], "6881bfa5-fe45-4872-a62b-edd8ec14a149": ["f6552b5e-cea0-4e0b-8450-d0b246cbc1d9"], "b3d05646-99cb-4853-9ed0-4b568696ed3c": ["f6552b5e-cea0-4e0b-8450-d0b246cbc1d9"], "0fec8071-83cd-4b8f-acf5-0b707b95d08c": ["0fb28a34-1034-4ff1-864d-9c0c576c1f5a"], "81251b26-0da7-49dc-a081-e13b27b9c3b8": ["0fb28a34-1034-4ff1-864d-9c0c576c1f5a"], "6954fddf-318d-4159-9b1e-907c8cf71f23": ["3d30cca1-33e8-431f-8d6c-871b678bcb75"], "edb8800d-4006-4f7d-b950-182ffaf3f4a1": ["3d30cca1-33e8-431f-8d6c-871b678bcb75"], "0e42e085-9f77-4420-8766-3a7ef4a8ea00": ["3929232a-d1eb-4bf7-a809-024c6dc11411"], "06b521bb-981f-4c9b-b599-5403efbda2f1": ["3929232a-d1eb-4bf7-a809-024c6dc11411"], "f07aeeeb-2b03-4cb4-8e88-14ebed839494": ["2c933da8-7cc8-4fc1-8b30-5131f7bfc1aa"], "17168248-e93f-490b-82a3-52055c5fc6b5": ["2c933da8-7cc8-4fc1-8b30-5131f7bfc1aa"], "2032f28e-a6b0-4a55-bdc0-e584be853b05": ["6923f87d-173b-4292-9cc3-994eb460258a"], "dd4d6e17-916e-440b-aaaa-02f4fb19ab4f": ["6923f87d-173b-4292-9cc3-994eb460258a"], "890e6369-b7d2-4567-8672-cf99b084d1b2": ["ff40943b-61fe-44a0-83b7-b6d970b7744c"], "ae9eaf27-c26d-48fe-b894-dbd204890b05": ["ff40943b-61fe-44a0-83b7-b6d970b7744c"], "ece5492d-423c-40f2-970e-b7b0f5529e6e": ["0b61e802-6c81-4e4e-82f1-4123d02f214a"], "fbca4d6c-617a-448d-919e-55d041aa9acb": ["0b61e802-6c81-4e4e-82f1-4123d02f214a"], "24c75b5b-3e9a-444b-ad62-0175859c0777": ["d9192a04-c5a9-4a97-b0dd-821fc6fc12cb"], "c9e565c3-1f6e-4145-bae0-e16bc029a82e": ["d9192a04-c5a9-4a97-b0dd-821fc6fc12cb"], "0e7f0c05-1c87-4fdb-a1f6-34042688f86c": ["800fc4a3-2bc0-42ad-825b-0659410fcdb5"], "60f446e7-2ee3-4561-8e6e-db7deffebf3e": ["800fc4a3-2bc0-42ad-825b-0659410fcdb5"], "ac29105a-2cef-4839-bfc5-9d940436ab97": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "544dc626-d128-4eb5-b174-111b5ccbbc1c": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "25a12655-4051-42a4-a8a6-32fa53c211dd": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "b2137766-c0d1-4c7c-b2b0-af72d246e241": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "87d797ca-e4eb-41e5-99e2-04a48039b785": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "8c10d716-7bf2-4f7c-98e0-012b0d4a2934": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "491623e4-1e13-443b-bb3c-19150f84310c": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "d936008d-4436-4ed1-994d-04d70c9544c2": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "0732d867-c353-4338-b2c4-89ce80059067": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "2befcd72-4108-433d-8e25-942fd0dd4780": ["0ba27b5a-a679-4ec4-b388-d480a3d04586"], "10a3701c-57f5-4dc0-a28f-ad86a192b0f6": ["460e6d84-f210-47c5-8122-8b16fef74699"], "a7d9d92f-0e3e-4abd-a07a-9c0b522af390": ["460e6d84-f210-47c5-8122-8b16fef74699"], "1e14c7ec-c449-4d9f-b8cd-71ca5e777020": ["f783a300-e78c-419f-9e09-a1eeeb7d69bb"], "df5a64d1-1d1c-4b56-aaa6-ee2a8c3ef34e": ["f783a300-e78c-419f-9e09-a1eeeb7d69bb"], "a9941e1c-ab25-400c-8d34-1658abe94f0e": ["a35ae79a-920d-4943-a091-084b393135e6"], "2d7a74e8-76ec-4524-9cea-208857bfcceb": ["a35ae79a-920d-4943-a091-084b393135e6"], "c1b0be94-5223-4149-98d8-12f979362500": ["e8a65afc-3f76-4e35-a19e-f031b1525895"], "b1058b4e-8eb1-477b-9fe8-8ac1c19fbcc7": ["e8a65afc-3f76-4e35-a19e-f031b1525895"], "d83ffd39-d4f5-4043-b99c-f660d68ae935": ["5a3cb206-e6c0-407a-b34e-1f0f69364714"], "7e4e470b-f185-4c4c-9ce1-d9ca0e5ca288": ["5a3cb206-e6c0-407a-b34e-1f0f69364714"], "d86749fa-df92-4d25-b5e4-1b6dcc05e361": ["1d214e8f-0bc7-4a6b-a5c0-6b49b091f710"], "e32f9bb4-acce-49dc-a815-3e84afcb3db0": ["1d214e8f-0bc7-4a6b-a5c0-6b49b091f710"], "05966b2c-5710-4c1f-9580-952b68614390": ["6bd1d71d-1622-4737-b0bd-a512810cec9d"], "d2ccd046-0e33-449d-a498-d4937e290197": ["6bd1d71d-1622-4737-b0bd-a512810cec9d"], "99c2d475-f9b3-4095-8098-af3fbf8535a6": ["bf87b07e-cc7a-44f1-a081-938186e1d16a"], "7f3f26c0-47e8-4141-b59b-59720e91b978": ["bf87b07e-cc7a-44f1-a081-938186e1d16a"], "d3bda3d8-232c-4c35-91f3-44e4b20d424f": ["062f5c56-ed20-4ed2-95f7-9c820bc9e67f"], "d62be557-349c-47a3-8cf4-29f510008f3e": ["062f5c56-ed20-4ed2-95f7-9c820bc9e67f"], "76725d6d-6eeb-4d92-81ad-a77ef89bd41a": ["8fa4efca-3f2b-4b83-8d69-9f43a45f6cb2"], "2675ec4a-ce74-4458-a917-bc3f234b81e2": ["8fa4efca-3f2b-4b83-8d69-9f43a45f6cb2"], "14145312-b180-4489-b90f-f75550381909": ["fa079311-6621-47c9-be4e-6a115bd0662e"], "b805e223-fffe-48cd-9100-90857827e0a1": ["fa079311-6621-47c9-be4e-6a115bd0662e"], "33bf4514-22fb-47ba-8f28-a7e27815c355": ["bc650f08-ec32-4048-9473-a31701a0a135"], "4ce22e81-78d5-4ad2-8f90-dd343fa7ff49": ["bc650f08-ec32-4048-9473-a31701a0a135"], "15423b09-4766-4d09-b54d-7a3869ce61bc": ["3ee9ec50-bee4-4e15-90c6-1115888904fd"], "4dacd45e-71bd-4f26-bd38-8edffd9e0d78": ["3ee9ec50-bee4-4e15-90c6-1115888904fd"], "169c39ae-0e1b-47d3-a8c0-9d8645c9d5f5": ["a7ef4409-cc9f-4dc5-9634-a84d368c68b0"], "b886af9b-d6b7-49e5-bc1b-0768a1a9dd7c": ["a7ef4409-cc9f-4dc5-9634-a84d368c68b0"], "ab564f18-0020-490a-a2c3-a2eb10124108": ["1f359a21-f3b8-40e9-91cd-46bd73b2492d"], "0ee46078-1612-4455-9e29-4417682e3c42": ["1f359a21-f3b8-40e9-91cd-46bd73b2492d"], "96463aa2-d299-4296-a8fe-2baf28c357ce": ["54caf014-de61-4acc-a33d-2c319b7e7c5c"], "9ccc650b-7ec3-402b-b95e-27ca2e161f52": ["54caf014-de61-4acc-a33d-2c319b7e7c5c"], "d3476975-f291-4dbb-8da4-612ef9755eda": ["83935891-30f2-4dd8-b8db-d4ab61ef3f52"], "a7b9fe60-b1c0-4cda-8a31-dc7bffa2ef07": ["83935891-30f2-4dd8-b8db-d4ab61ef3f52"], "d0374040-3307-4722-9d65-81e8fe102f3b": ["ba165fe0-b6c6-4b32-879a-f64c6170803c"], "45c0da30-e938-4d48-ab22-0250bd66f5b9": ["ba165fe0-b6c6-4b32-879a-f64c6170803c"], "840a950c-b09e-4527-a025-3a8499e347d1": ["4a4db636-a2fc-4b35-b4a9-6cf47ca1541e"], "0573e2fe-e0eb-48bd-b062-e1285c82eedf": ["4a4db636-a2fc-4b35-b4a9-6cf47ca1541e"], "aaacbf9f-62fa-40cf-ab06-babd4e1cf38a": ["28bc466e-27d5-4422-9aff-57d5c2adf297"], "87ed6fd5-3e57-40ac-aae4-7d827f9d2b0d": ["28bc466e-27d5-4422-9aff-57d5c2adf297"], "59953796-83db-4205-9d0b-25d88bb5a325": ["0bf9459b-b14c-4b2a-9d79-9df855d3b1d1"], "12677656-bd23-41f7-bed3-6279db7ff3b9": ["0bf9459b-b14c-4b2a-9d79-9df855d3b1d1"], "16db5df7-ada0-4212-98e0-885540df5f0d": ["b69c55ec-e9fe-4a2b-9538-3e6e60693347"], "32c28cf3-be22-4e6f-86b4-c82fe0aa64c4": ["b69c55ec-e9fe-4a2b-9538-3e6e60693347"], "a3dffec7-e1c6-43d2-978a-2eae8dc388fc": ["3fc4630c-23d3-4a59-9d7d-643b24fdbb14"], "410e61bf-b39a-430f-9452-e6bfceb1910b": ["3fc4630c-23d3-4a59-9d7d-643b24fdbb14"], "f67bf8e9-f1b9-4809-ba9b-3e0a2c0066a2": ["3228ab67-85a8-49c4-bd74-0ca44dc45262"], "792e1d18-1b47-45a1-aa75-ccb049372936": ["3228ab67-85a8-49c4-bd74-0ca44dc45262"], "ecbf167b-f961-4dc4-87ed-aa507ee10e82": ["30f50f0d-9a9a-4f5e-96bb-0ac70bea64c8"], "e0390534-4749-48b2-9204-811fd98ecd95": ["30f50f0d-9a9a-4f5e-96bb-0ac70bea64c8"], "ac263d89-e3b2-4a81-8141-9ab204890848": ["69edb928-b9d6-427d-a0b6-2d384a537502"], "0409e1da-e2b0-4abe-a948-0719b8ef6ff6": ["69edb928-b9d6-427d-a0b6-2d384a537502"], "5bcfc2dc-0599-425b-8a03-7d2ca364052b": ["5602250b-12de-4871-8296-3a5b288341d6"], "ff74e105-c8a9-459b-a892-bbd5af09fab7": ["5602250b-12de-4871-8296-3a5b288341d6"], "decbebe4-582d-467c-9712-6a50c090b512": ["a95e0710-80f3-4096-855a-39933c32b8bc"], "90af02fb-4d36-4355-9f32-0a63e5edcaa5": ["a95e0710-80f3-4096-855a-39933c32b8bc"], "3f221b1a-d2d3-4494-b27e-524a9c13ea64": ["1440bfa9-260c-482c-a3aa-064aa55a1246"], "e12958c3-c2d6-4999-9f5a-56e09b9a8c39": ["1440bfa9-260c-482c-a3aa-064aa55a1246"], "443d2602-a852-4815-b14a-3fc2bb732c98": ["9785ad1a-1d8b-47a9-8eb5-9301bc777fd6"], "7c34d2c1-5baf-4009-ac38-014c0f6720c3": ["9785ad1a-1d8b-47a9-8eb5-9301bc777fd6"], "1f3e834b-3fa4-49aa-aec2-656ea852d03b": ["d9042201-7ccf-4a00-a0b7-497dc796d071"], "3855389d-fd99-47f3-a082-77852b7d0d9d": ["d9042201-7ccf-4a00-a0b7-497dc796d071"], "c1488a2c-4000-41b1-ae9b-47392ccaa4e7": ["13844515-1a92-42ce-9b36-6373ac840719"], "408a93b7-656d-4406-a3a9-e57629e97cff": ["13844515-1a92-42ce-9b36-6373ac840719"], "687fa8dd-a74f-4094-b16f-bcbb3f2d2015": ["fd63d66d-6718-4e35-a198-fc105db68dd5"], "77fd5df1-f637-46a6-a5c2-9f8ecbfa5095": ["fd63d66d-6718-4e35-a198-fc105db68dd5"], "ce686405-e30c-4bd1-b16a-c1c7cefbea1b": ["e9810546-b463-4043-b47a-e9923e315352"], "548f8302-4378-45c0-a2e7-81c2d1750475": ["e9810546-b463-4043-b47a-e9923e315352"], "fb66661a-1e0a-4b9d-adc8-4be6a4112f23": ["817537d0-affa-4da2-b664-65fb0610d409"], "7ea97071-218d-4a54-ab5b-b17d268fbc53": ["817537d0-affa-4da2-b664-65fb0610d409"], "90a7e35e-90d3-4850-92ee-2d52ba7e91fb": ["b4fd2b81-3a4e-4b89-89d9-9f0e3aa3722c"], "78b7ca77-aa4b-49dc-ad50-7445a40fcdb4": ["b4fd2b81-3a4e-4b89-89d9-9f0e3aa3722c"], "1aa59e4f-8f2a-4b5b-b641-b6480304a67a": ["110d07c3-5b11-4a7b-a7df-e30d9db648a8"], "a506b3ca-a853-4066-a86a-45a40bfa7786": ["110d07c3-5b11-4a7b-a7df-e30d9db648a8"], "6b65ad17-b653-46ba-b0fc-ecc836bbef34": ["46bc3b0e-cfaf-4f56-89d0-11e6af2bdf71"], "1288fc71-bbf5-4d11-80e4-cc7f5e3248dc": ["46bc3b0e-cfaf-4f56-89d0-11e6af2bdf71"], "2147c050-8f9e-49e5-a1b7-75c81ca2c1a8": ["32001c5c-a0fa-4eef-b4f5-320d6abeb5da"], "ae346998-868e-4cf7-ae53-979e3abb8416": ["32001c5c-a0fa-4eef-b4f5-320d6abeb5da"], "76c58925-1b62-4427-9483-697ffa6873bf": ["6516db42-b841-4728-808b-e9a47cc87761"], "3455c040-dd6d-48d3-9c7d-57f5d3531276": ["6516db42-b841-4728-808b-e9a47cc87761"], "4b90ea9e-4816-4280-8cac-c2bc89e209e2": ["8ba04799-100a-47fc-99c1-d97ec8e75d70"], "89a25906-45ae-49fa-a81f-0377536d0ad6": ["8ba04799-100a-47fc-99c1-d97ec8e75d70"], "02697309-031e-4fd4-af74-fe49db989552": ["6819bf63-d901-4994-81af-0b700beaf9b5"], "fbbbe6f1-1afb-4c5b-9be1-bbfcc21728f0": ["6819bf63-d901-4994-81af-0b700beaf9b5"], "03e672d5-5663-40b3-ab28-cfba3408b31f": ["038f4227-73fc-4faf-88b7-46f1ccceb781"], "b643623a-367e-441d-96c8-0220f038b466": ["038f4227-73fc-4faf-88b7-46f1ccceb781"], "b9efeb3a-caa4-4de9-9245-512c23a4ccb6": ["2014405c-e7f4-4a0b-8d0a-44050453594e"], "f26ad6d1-b9df-4072-9794-66926cc7ef9e": ["2014405c-e7f4-4a0b-8d0a-44050453594e"], "73d25d8f-6455-4ca1-8186-13ccacb09e06": ["6ddc9fbc-b921-4ce4-a720-9d6da3cf2f61"], "dcd635ff-ea74-4c78-ac41-1b126c5764a7": ["6ddc9fbc-b921-4ce4-a720-9d6da3cf2f61"], "38f82012-cb7b-46d3-964d-ff4091d5dd98": ["d9a87059-39b5-411e-99db-ae1ab3874c9d"], "b3215a44-8136-4183-9909-a34759f09147": ["d9a87059-39b5-411e-99db-ae1ab3874c9d"], "525c2c32-35c5-493f-8756-1696bfc4a6d4": ["12301043-d247-4e2f-a989-37f32872e888"], "f2ac640f-e536-43c7-ab23-8840d955d1e3": ["12301043-d247-4e2f-a989-37f32872e888"], "144dd180-d28b-4688-aab8-c6de371c2d20": ["26b62163-fd1c-44cb-b001-912b131566ce"], "6fbc191d-bbd7-42c4-b3d0-79b3e021ba4d": ["26b62163-fd1c-44cb-b001-912b131566ce"], "ee2ec104-c15c-4a1e-b60c-e4281e088cdb": ["50edd1e6-d948-4c88-b547-2dd2db9e41d9"], "f1e721b9-e29e-4cad-a48a-689007703b5a": ["50edd1e6-d948-4c88-b547-2dd2db9e41d9"], "35eb2d38-3cf4-42c2-8f3d-8a2dfcb0bea6": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "3b74803e-deb0-4028-87ec-06ee3b5fc4e5": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "4a4db1ec-0635-4ecd-8643-6de444a3b8dc": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "b95b21aa-d81f-4924-8462-246eff16988c": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "1f5448ee-9264-4099-a316-25fbebf62084": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "6a93c271-931a-456d-8e4b-85b4029caf75": ["bf2be6cd-b2c3-4a7f-9cd4-4f8bb8908c59"], "51f9c40d-9da5-4dcc-aba7-0c237da70662": ["a388b53f-28ab-4c21-a85e-2b7be23af15b"], "f9870d06-3370-447c-90cd-f7ba55a0a3a5": ["a388b53f-28ab-4c21-a85e-2b7be23af15b"], "22763cd3-d641-46c4-9fde-3533914a882e": ["82632d28-918b-4788-b171-7941c4a4d64a"], "7da39974-3634-4f38-8110-c3771d9f353b": ["82632d28-918b-4788-b171-7941c4a4d64a"], "b39e1466-4a93-4c7d-a665-eae423bfe854": ["348eb488-17b9-4651-9a94-3e40765a6fe4"], "34b4ac74-dc7b-4f98-b24a-a53b966a1859": ["348eb488-17b9-4651-9a94-3e40765a6fe4"], "3652859f-c86f-4b71-9600-036dd7e36890": ["997e57b4-0e6b-4a1e-943f-a988aa254a38"], "e6439c9a-63fb-4942-a430-0b872e74f21a": ["997e57b4-0e6b-4a1e-943f-a988aa254a38"], "e0ca692b-6ce1-4e91-aa3d-e6e303723484": ["bb6999c8-4b30-425d-b4ad-1c69c9be40cd"], "0f451eb8-8c36-4ac0-b78f-9aa576b85201": ["bb6999c8-4b30-425d-b4ad-1c69c9be40cd"], "591ba659-dc68-473e-9de9-d8c47ee04e24": ["b1c6f38b-6a0c-45fc-ac62-d02f11b88c16"], "279dcb08-993c-4bd5-a7f6-25ad411c62c0": ["b1c6f38b-6a0c-45fc-ac62-d02f11b88c16"], "f2dc851c-7aa3-41d1-9e50-57da6139f158": ["17e3b1bc-e5b8-4130-b3ab-e4411898f166"], "cc417350-eab5-4357-b955-3a0bcfc50288": ["17e3b1bc-e5b8-4130-b3ab-e4411898f166"], "0a304db7-0ff0-4e5d-9c59-91d3fda5ad49": ["2e7b3dc7-ff91-4e5b-ade2-a5ad24e43b55"], "93b9c702-7cb4-4172-9d70-d3eee049d566": ["2e7b3dc7-ff91-4e5b-ade2-a5ad24e43b55"], "c8574f89-5901-4079-9709-d24671a5cf93": ["ba543b74-5ac6-40d3-a2b3-38426a61758c"], "797f223f-f642-4e7d-a7fb-f023c7080d98": ["ba543b74-5ac6-40d3-a2b3-38426a61758c"], "d5024378-ffe0-437e-acab-3e9d37443f55": ["d158600e-bd7a-4075-bbdf-98d7b316ad2c"], "89a2e8c9-1e78-420b-a830-021e0ae02cb6": ["d158600e-bd7a-4075-bbdf-98d7b316ad2c"], "004e5107-e369-4a02-98c9-57afd682257c": ["61fa5b8e-9ff7-400d-a281-d10b042bb8a3"], "c27dfb78-fee0-4903-8c3b-b26ec9812554": ["61fa5b8e-9ff7-400d-a281-d10b042bb8a3"], "d6eb0c94-df62-4e80-9530-01792ac7186f": ["800ed08d-1eb3-48ca-b8c3-d94bb508a6d9"], "36e48f6b-0b0d-4daf-8274-a9ec67623a77": ["800ed08d-1eb3-48ca-b8c3-d94bb508a6d9"], "e01d2219-16b9-491b-8296-70723278427c": ["c67414dc-f631-4291-b7f8-1e0903b78f46"], "a8dfaafd-2ba2-472e-a8c4-3d219b341649": ["c67414dc-f631-4291-b7f8-1e0903b78f46"], "e014f9d8-6d64-4d11-a42b-f3b1753220ea": ["cc2e63ae-679e-4329-aed7-8aaeb7c56831"], "11924394-afaa-458c-a275-5a2099753f3a": ["cc2e63ae-679e-4329-aed7-8aaeb7c56831"], "00f80181-c5aa-48d9-8694-e34ce7c9aa69": ["4afb48d1-ec2e-4ec5-9018-d674c44aba23"], "143bdb23-9de3-49b9-8cb7-04ba50634fbc": ["4afb48d1-ec2e-4ec5-9018-d674c44aba23"], "486ccf00-fa9a-4439-9198-b8407e068591": ["77838fce-9af9-44d3-8dfb-133dda73d880"], "49b542ec-75cb-4ed5-ab24-f7c6ed510f0d": ["77838fce-9af9-44d3-8dfb-133dda73d880"], "82bc3732-59f0-4dd6-b407-b71fe5d5942f": ["878f36a2-a7a0-4d18-a7b1-770ac6e6495c"], "37bb976e-6800-4b96-8ba6-57690d9960f9": ["878f36a2-a7a0-4d18-a7b1-770ac6e6495c"], "4f48fce2-7ef7-45f1-982b-c9d9f06b2eb7": ["dfce28ab-2568-4479-a850-03cdfb7670f0"], "c66e5a44-de6d-4afa-82bf-a59ae239fd77": ["dfce28ab-2568-4479-a850-03cdfb7670f0"], "e86adc25-8059-44a8-adf2-c8f93d12639c": ["a52154a9-d7b2-49de-b5f5-0e24b3ec9710"], "1d96594a-3080-423a-a81a-86407e8dd667": ["a52154a9-d7b2-49de-b5f5-0e24b3ec9710"], "b6537140-852c-4da1-9098-c2df180f80cf": ["73ed83a1-00f1-4619-ab63-c32180076f54"], "fdd9d7cf-e99d-4dfe-805f-c4416b4aa35a": ["73ed83a1-00f1-4619-ab63-c32180076f54"], "4ae049a5-fcb7-4bd8-a0ff-34a79d24b4cd": ["a238b989-6749-401f-a164-f6d819188f37"], "5559a4dc-dd79-4a9b-ab9c-0be93d40a4bd": ["a238b989-6749-401f-a164-f6d819188f37"], "ec68fc6a-6437-4e0f-8032-8147e62bd156": ["1f9fec28-be1c-418c-89dd-004adcf82c27"], "29224fdd-191d-4410-b261-2cff6479de09": ["1f9fec28-be1c-418c-89dd-004adcf82c27"], "9c095cd5-6124-4d93-993e-c59c8c354c11": ["0f36c8a4-1c71-4bfd-923e-d099c4a0b828"], "3de00416-bcad-4d2a-bb82-c53865a689c1": ["0f36c8a4-1c71-4bfd-923e-d099c4a0b828"], "fa822ee1-10a2-4083-9132-f79aafd0a445": ["6d4e12a9-2dcc-4191-9e68-7f0b038dddf4"], "341d1949-c47f-454e-a95c-848f08923b07": ["6d4e12a9-2dcc-4191-9e68-7f0b038dddf4"], "e640a46d-94b6-4025-bb95-a0a349456e5b": ["4913902f-4fee-4bde-aac0-2699deac00c2"], "4ac3dbe9-6b95-4bf2-8c14-79f150493eb9": ["4913902f-4fee-4bde-aac0-2699deac00c2"], "b6362ca9-b168-43e4-9cb1-a243601a51f9": ["72849358-35e8-4a8b-af03-2ffd3f32c7c8"], "9e6af423-095c-428c-a3b7-c08c7ab53628": ["72849358-35e8-4a8b-af03-2ffd3f32c7c8"], "dc809c94-c61e-451d-87bd-3340b6363364": ["01c57e3f-745d-48b2-b0f7-8b73d6b71acc"], "19525766-a78f-4c51-b457-b50bd0b69b89": ["01c57e3f-745d-48b2-b0f7-8b73d6b71acc"], "896581e4-ee7b-4615-a802-0191c4e31acb": ["908cf3e9-f017-4f5f-8ef8-229339f7252b"], "f5ae8cb8-0559-4b5f-9f2e-a81c01567400": ["908cf3e9-f017-4f5f-8ef8-229339f7252b"], "14458c74-7dcc-4918-894e-649bb17d66ff": ["fe860d96-3b18-4b67-93fd-bb75b00ea75f"], "3814f3ba-114a-4c7a-8454-98f26ace3cfc": ["fe860d96-3b18-4b67-93fd-bb75b00ea75f"], "7bcb5377-d8d3-4698-9dcd-8c6da5023720": ["7b65980a-37e1-466b-8610-7852bf7b0aa6"], "24bff4b3-6d18-4181-bf67-b3d727d2ddd7": ["7b65980a-37e1-466b-8610-7852bf7b0aa6"], "d384032d-1c1f-4b0f-9ce9-9f16fcb7e07f": ["87d6fd7d-97c9-4a3b-8113-64db5717b5f7"], "cc051403-a363-47f1-a38d-9f986061b5e5": ["87d6fd7d-97c9-4a3b-8113-64db5717b5f7"], "8183cf97-3a66-4c21-8877-7c15409e8f7a": ["8bd4f7ec-02d8-4f6d-954c-84f03ec63c51"], "0b4c1fad-d03c-40f4-8052-cb7702c1e9d1": ["8bd4f7ec-02d8-4f6d-954c-84f03ec63c51"], "9a56dca0-a4c0-49bf-8fec-1f3aa82c1266": ["2a2a11ab-6642-4ca3-bc3b-68ad18091921"], "7d561499-bc45-4884-94a4-91a071c6d7f9": ["2a2a11ab-6642-4ca3-bc3b-68ad18091921"], "087ebbc4-c920-4389-869b-a3fe28f7f3b1": ["df1881ce-68ee-4399-935e-20c4efa97d36"], "180a1a9f-b589-4738-a156-d9e849c21cf4": ["df1881ce-68ee-4399-935e-20c4efa97d36"], "bbc5bf8a-3b98-48bb-9de3-529962e901a8": ["cb3b224b-888a-4e84-9334-682d93eb6d28"], "91125487-3c2b-4f9f-b766-c58456c02d08": ["cb3b224b-888a-4e84-9334-682d93eb6d28"], "26676e9c-62e1-48d6-a2a1-9020734203f3": ["5d7f79e6-8f00-4280-ac0d-204678b34dd0"], "a6071fce-b4e7-4527-b996-93e5eef9add8": ["5d7f79e6-8f00-4280-ac0d-204678b34dd0"], "9301f28f-e809-4ea4-9b14-141646aa19f9": ["281392b1-29a4-47a7-bde5-1a45dfec28ee"], "73cc9db6-8386-4871-814c-98a7e7c704b6": ["281392b1-29a4-47a7-bde5-1a45dfec28ee"], "555937e2-170e-4db5-a127-061e459a091e": ["d99f09d4-bf22-4068-a4d2-e9a3f6816f7a"], "65fe2bdf-a72e-41e1-8e3a-d86cf1435bba": ["d99f09d4-bf22-4068-a4d2-e9a3f6816f7a"], "c8b7b095-7679-42eb-af00-1a9b946c3e8f": ["e17dfd00-21de-41ff-9b15-aee7552f6954"], "f9b72397-0cee-4d07-8663-88fa45f3d687": ["e17dfd00-21de-41ff-9b15-aee7552f6954"], "03403be4-ba3d-4cf7-a161-fb6becddb7a0": ["619b4022-e684-4e54-a2ae-7c5ac339ccb6"], "b3a698aa-b985-4810-9cdd-fd24bc2b04be": ["619b4022-e684-4e54-a2ae-7c5ac339ccb6"], "bca1e5ac-b355-4c04-b3ef-d0e038f71e54": ["d05eeb23-0cf8-4f07-96b6-6f56a5592c0b"], "da1af6e5-c4f7-4a2e-b3ca-feaab6649a34": ["d05eeb23-0cf8-4f07-96b6-6f56a5592c0b"], "c67b5892-7fb8-4042-8225-5d6a403d760f": ["0d64fe3a-d541-4f57-8f58-84dfc8213c57"], "4e55b924-8550-4207-a124-82fa38b149d3": ["0d64fe3a-d541-4f57-8f58-84dfc8213c57"], "9746a2ff-c9ab-4c2b-a858-3f8c76ad1bfe": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "b5ab5c27-4e88-4c39-a5f7-5f519dc19883": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "b1302285-922c-470c-b31b-42214c2b5974": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "8a723210-e0b5-4b47-bcf6-9bcbfa3f974b": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "5670f714-6d52-4cbf-bc3d-6d386de4e566": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "a5c59c59-9598-4ef7-9029-343901551628": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "ad6262e8-c5bb-4495-96f6-4b79c1c4a212": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "0e4deab5-213c-47e3-a6cc-c3f36c4045f7": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "73182cf6-711a-463a-abb7-5f1303808ae3": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "4ea8d0d9-3914-4dca-97b3-1471ce4c3a94": ["61274911-56d4-40b6-8e41-06aaca6a8b4e"], "b666eeb5-339f-43eb-ab2a-f50cabfc81ce": ["23efc706-9e75-46d0-a4a5-a361ca10814d"], "59a546f0-56c3-43b6-84bb-a25985029da0": ["23efc706-9e75-46d0-a4a5-a361ca10814d"], "3c87a94b-e5fb-4c20-8e12-152f909180cb": ["d731604e-e872-456b-b186-c44d7e8c4dab"], "a3a38c55-0eaf-4ddb-afc0-4f906fbef46c": ["d731604e-e872-456b-b186-c44d7e8c4dab"], "4b910cc8-59a4-4bd6-af61-93011bd4e348": ["e5a137c7-bdfe-4b39-9392-2cf5c1b6fcc9"], "e374e075-c812-43fb-8d97-82d8b7593e8b": ["e5a137c7-bdfe-4b39-9392-2cf5c1b6fcc9"], "95d0c2e1-1776-4fd3-a9a3-e629899daa21": ["cbc329fd-9b52-4f8b-a9f5-4982e4a9552d"], "9097e718-c9f6-44f7-887b-5bd3a6a72ace": ["cbc329fd-9b52-4f8b-a9f5-4982e4a9552d"], "fd8117b1-c9a3-46c0-90e5-c6ad1e0d108d": ["e52781e9-216f-45eb-a189-4690dacf0024"], "f65c5dec-83af-4779-8739-9ee67c4d7df6": ["e52781e9-216f-45eb-a189-4690dacf0024"], "490a2d69-7c15-4739-8bc2-5ea9f286d513": ["80e29c94-3f32-492c-ac67-a7210792ef95"], "e6782241-fdbc-4a00-b3ff-57dd27b3f1ed": ["80e29c94-3f32-492c-ac67-a7210792ef95"], "4e0d6dc9-84ee-4656-bf99-2bc7fc69408a": ["c8697001-4d7a-4ce6-878e-1276e7cd8bdd"], "9e949a10-72ef-424e-bd85-cb096443da54": ["c8697001-4d7a-4ce6-878e-1276e7cd8bdd"], "ee45dfee-3b4a-449f-8927-4145d5831416": ["bd4df9df-3cec-46c9-bab3-86e6d940345a"], "deb328d8-1bc0-4a20-96aa-b59d4eb60623": ["bd4df9df-3cec-46c9-bab3-86e6d940345a"], "3802874a-7c52-4209-9b6a-05af23d51f99": ["f458fdcb-db6e-4dfa-a400-9ae82a0dd0bc"], "98cf9beb-1b27-433f-8325-65448a7f26cc": ["f458fdcb-db6e-4dfa-a400-9ae82a0dd0bc"], "9af96b30-37d0-495a-859e-5079d65e33c1": ["bf8be646-6fe9-461d-b64a-eec5dab53397"], "a02b50ef-ba40-499c-ad39-0ca39e41a4a4": ["bf8be646-6fe9-461d-b64a-eec5dab53397"], "ab79ce76-5b56-4c07-b13b-ffdf6c971865": ["2ee0030d-650c-4d21-ab7b-f9339e8538a8"], "78c05ff2-e642-4af6-a87f-4d20181046e4": ["2ee0030d-650c-4d21-ab7b-f9339e8538a8"], "37636de2-ef4e-4951-97c5-9c956b5def28": ["4b07b2ee-66e5-4097-ad84-c3871c9fe7fd"], "7f0cd882-ef0a-4293-98b0-71f1d570ec81": ["4b07b2ee-66e5-4097-ad84-c3871c9fe7fd"], "73a209a4-3237-4d4d-a5fc-76b48ff55543": ["f603b1d0-22bf-4a33-866e-b7fba5cfab3e"], "1ed00372-d91c-4a93-9743-30126ab7c2a2": ["f603b1d0-22bf-4a33-866e-b7fba5cfab3e"], "55a65018-4e21-4cba-823e-4280931a1fc8": ["dadd184b-15e4-4718-b5c8-462439a18056"], "955e4cc9-e782-483a-8d0b-24d0cf72c947": ["dadd184b-15e4-4718-b5c8-462439a18056"], "dfd82168-490f-43cb-8602-1ef9b6bfa985": ["f2184569-4dbc-487d-878d-e723965dc118"], "7ea17b46-5765-45e4-b0b7-eff152d251eb": ["f2184569-4dbc-487d-878d-e723965dc118"], "5ab2156b-7b02-494d-b64a-49a6779c40f3": ["cf290279-6aeb-4795-b848-d9f13c7bcfca"], "823489a6-c6f6-40e4-9f08-84aeb7f029e7": ["cf290279-6aeb-4795-b848-d9f13c7bcfca"], "bcdb1982-9dc2-42b1-b9f7-4d7168ae6b08": ["26db7921-4e60-457d-bdee-c42353af18e5"], "220e7855-1833-480b-8475-c9f0db628970": ["26db7921-4e60-457d-bdee-c42353af18e5"], "0c311203-e725-4f4e-97e6-3d1e9e416b79": ["f04e2b2c-a2fc-4453-b168-8292f85c3795"], "28b23555-b742-482a-8c4d-751d073aa4fd": ["f04e2b2c-a2fc-4453-b168-8292f85c3795"], "e6a431ec-1390-439d-8c9f-9d4c56224ed6": ["f36e9d8f-50bd-4dab-926b-ec68f8aa0d8f"], "7167510c-e803-43e3-801f-70e6471668a0": ["f36e9d8f-50bd-4dab-926b-ec68f8aa0d8f"], "5daf52fd-c86e-47fe-9a7b-a01b79d82ddc": ["e452ff0a-c551-476d-ad9c-4f7fb0023367"], "bb35d263-a03c-4619-9525-d6e48f4421b3": ["e452ff0a-c551-476d-ad9c-4f7fb0023367"], "ff19a351-ca4a-4ddf-8b63-fb401c8aaee4": ["99082d1f-72f9-4629-a159-ad8896f95633"], "2b2535f8-bc15-4372-963a-367c37305248": ["99082d1f-72f9-4629-a159-ad8896f95633"], "4d918627-9ce0-4aa4-a9b2-3fb3083351cf": ["c8537ed5-fb1a-437e-8f27-a3b9718bc579"], "3423b77d-1b49-4f2d-8516-ae5227bd2bd7": ["c8537ed5-fb1a-437e-8f27-a3b9718bc579"], "f908ecda-db43-4a43-92bd-bc0cb4e3b74d": ["273cdcaa-be49-4b15-8a4d-9ec0b3595175"], "39ff6302-5907-4438-97b3-75b4c06cdba6": ["273cdcaa-be49-4b15-8a4d-9ec0b3595175"], "0151b18a-4f92-4824-bdfa-b1e9e7eae3b9": ["12638450-fa07-423a-a44a-b5360d1217c3"], "543a194c-cd6d-454b-a665-0d37db67a45a": ["12638450-fa07-423a-a44a-b5360d1217c3"], "284cf44c-4ac2-470d-aca1-847e8b2fe4c4": ["115fdbe5-ee1c-46e5-8d0d-7f3ccccb2a22"], "94d3c7a6-59a1-4c4e-b2c6-1171d51939d8": ["115fdbe5-ee1c-46e5-8d0d-7f3ccccb2a22"], "42504823-85d2-40b0-90db-a66d5e0a091c": ["dd71b353-ea22-4b4b-8add-7e12eb3a7e5d"], "b13ba168-6228-4b77-9c64-683073c92a31": ["dd71b353-ea22-4b4b-8add-7e12eb3a7e5d"], "34cdf519-7235-4837-a5e8-22f1470ce4dd": ["57ce51ce-170d-438d-b169-f911f015da86"], "b32ee66c-5218-45ee-8532-d7979dd338fd": ["57ce51ce-170d-438d-b169-f911f015da86"], "997ae443-d608-422a-b391-70bfdf5871b0": ["4c0190eb-b028-49c2-8ec3-2021f2cedfef"], "d384da3c-44aa-4b43-9016-b5613870c874": ["4c0190eb-b028-49c2-8ec3-2021f2cedfef"], "4ad52837-0b57-401b-8fbb-bd35192cc231": ["60212576-b568-411b-b82b-b51e175a56b8"], "cba64a60-cb67-4bdf-9004-353f8e775d0f": ["60212576-b568-411b-b82b-b51e175a56b8"], "9e13ea36-198f-487a-be73-1de9b01bbc1c": ["ba890434-287e-45eb-aa14-2f7c825ed792"], "5d753b66-6f18-4879-b8d7-f99a3bc0aff2": ["ba890434-287e-45eb-aa14-2f7c825ed792"], "2bbab379-39db-4c70-ba13-66c2aa9a59f6": ["7bdaec8d-94d2-4751-99e4-d9fceec25c76"], "4af34a65-b0df-4555-b6ae-13a03abb61c1": ["7bdaec8d-94d2-4751-99e4-d9fceec25c76"], "05432d87-e336-4c30-b48e-28346fc2e978": ["da9561e1-c988-4713-90f8-8cf46b166a2d"], "5b019a46-f417-4185-86c6-f294bc16d610": ["da9561e1-c988-4713-90f8-8cf46b166a2d"], "bec4a021-2686-478f-a9bf-79c215393c50": ["5defdd3f-fd34-46cb-a6e0-65f67263e60f"], "c3b3b0b0-bd50-4f6c-8f6e-2e801c199baa": ["5defdd3f-fd34-46cb-a6e0-65f67263e60f"], "d010bf07-8b60-4ee0-a1c7-60be37d30f80": ["31313ad0-aa55-448d-b1dc-cf579958faa8"], "b5f9adc5-4083-405f-b418-9dd0b45a531c": ["31313ad0-aa55-448d-b1dc-cf579958faa8"], "beea41a3-8f59-4408-bbbf-07c0b93d0982": ["bbcf5737-d4b6-4298-8f23-d29ea2750f2d"], "aaeeb515-52d5-4a89-8eca-55238ca6b4d0": ["bbcf5737-d4b6-4298-8f23-d29ea2750f2d"], "269fc7a0-988a-423f-b8b4-627d127416fd": ["4c12e185-0b06-483f-a77b-6c977a6362b4"], "7b4e0a73-49ee-4b35-88c9-9f95a2965114": ["4c12e185-0b06-483f-a77b-6c977a6362b4"], "4bacb566-3231-4fad-9e65-ff2ed7bfea37": ["631ea8dc-1d2e-4e43-93dd-eab7d7f806d1"], "11f6c84f-663c-4552-80bd-b75ef7df26f2": ["631ea8dc-1d2e-4e43-93dd-eab7d7f806d1"], "231c80d5-6913-4bd7-99db-b449b5c7327a": ["a7d191d4-2117-4584-8187-7da15bf132b6"], "66d16cc0-5b51-4170-b9c9-49ca411f2100": ["a7d191d4-2117-4584-8187-7da15bf132b6"], "7c7ec3ac-2493-4862-b4a0-20a24c335356": ["6b26aede-a99d-41f3-8141-bd424dab19e8"], "353a3d3e-6136-4428-a7d3-0cab002deaa6": ["6b26aede-a99d-41f3-8141-bd424dab19e8"], "b5e469be-af49-47ba-a171-9d468982a6f6": ["8747de2e-8151-44df-8bc0-e23e88a48c2e"], "2ee9447a-6dad-4adc-9cf2-1887bf994084": ["8747de2e-8151-44df-8bc0-e23e88a48c2e"], "5d190d4c-9aec-486d-a8ef-3b1dedebae2f": ["6590be85-1ceb-4b22-91aa-91fe02c76683"], "aa63dea9-d637-4dd7-ab10-b14b46dccdd4": ["6590be85-1ceb-4b22-91aa-91fe02c76683"], "4e23ef5b-6e6b-43ee-b254-a5e034e32be5": ["2d622efe-16a7-4dc8-ae23-c34bdecaaaad"], "2b7f437e-3da0-4227-81fd-19a43e125450": ["2d622efe-16a7-4dc8-ae23-c34bdecaaaad"], "b0020984-32c6-494d-93b3-53d08d4eec33": ["0ae9c115-f23d-497a-a3f1-054cf96fe60e"], "bc25094c-5556-429a-95e0-291a099d12aa": ["0ae9c115-f23d-497a-a3f1-054cf96fe60e"], "c4c0bd45-3fde-43cc-a6f9-2a2b67ad8228": ["411033cd-a977-415d-9f0b-a386a53fc7ac"], "aaabe9a7-5aec-4027-b050-99f19751b7c8": ["411033cd-a977-415d-9f0b-a386a53fc7ac"], "84bcc865-98fd-4715-b483-cef3cf5d9c99": ["4df8b67f-e1ff-4f43-861d-7cd208793eea"], "68a3c01a-14d7-433e-97c8-f05b3a8e7b98": ["4df8b67f-e1ff-4f43-861d-7cd208793eea"], "e80a76e1-f476-44b5-9b5d-805e140216d1": ["e773572d-8494-4112-bc42-6174cb53ef1b"], "1a136037-2fa0-4537-a85f-dbf9480f6604": ["e773572d-8494-4112-bc42-6174cb53ef1b"], "70702046-a10a-4f30-a655-e9a6999a09ac": ["a24e918f-785c-4ee3-8200-0d38f3ecb0d6"], "621f3945-e0fe-4a99-b9cb-fe4220607823": ["a24e918f-785c-4ee3-8200-0d38f3ecb0d6"], "208240f3-38c9-4a96-838e-af692100b0fd": ["22039ae4-a4d3-42a2-afd6-9838b7c4f009"], "7a12a327-4a13-4e7c-920d-63c0d629a62f": ["22039ae4-a4d3-42a2-afd6-9838b7c4f009"], "a2dd3b52-a53e-4d6c-bd69-a7e7882848b1": ["ebb9d934-7d4f-4044-b3b8-2408f7fb7f80"], "b291a2fc-10e3-4a83-a154-0ec42333569a": ["ebb9d934-7d4f-4044-b3b8-2408f7fb7f80"], "88ad704b-b2fd-4dc6-8575-0a50f7a489f6": ["c0310d2c-cc0a-4e8e-886e-15f1770bfe9e"], "7ae43ff3-7778-462e-b924-0f7628c15345": ["c0310d2c-cc0a-4e8e-886e-15f1770bfe9e"], "056524ae-7b22-46c7-8b75-6d05ad63eb5f": ["b657a56b-363d-4c81-ad06-83ea03ae2e5b"], "ce993d45-8696-46e5-a49d-eb0c73091073": ["b657a56b-363d-4c81-ad06-83ea03ae2e5b"], "3f410f0c-abf6-4866-8063-91e9b5b5dfc6": ["3d37e183-bcf7-4986-8b89-97f8124cce76"], "e6daeadf-0202-45de-b20a-e07daec64ef1": ["3d37e183-bcf7-4986-8b89-97f8124cce76"], "772c7efa-0d27-4ca9-852a-84c38f0e74e0": ["924e4028-9619-45eb-8692-4d38d3cfa838"], "5cc94d1c-5c98-4479-9d9c-96e9f9755923": ["924e4028-9619-45eb-8692-4d38d3cfa838"], "9c59fa03-331d-40b2-9807-507aceb3094d": ["9823a2c3-55be-4182-a3c8-c565870417ca"], "8307beaf-77d4-4eb3-8f51-da3a661fd59a": ["9823a2c3-55be-4182-a3c8-c565870417ca"], "a646a125-3439-4096-b9dc-78c50ce15dd9": ["43743173-5205-496c-821d-978b319a46cc"], "6bc5cbbf-7302-4c3b-a3d9-0cdeebb9daae": ["43743173-5205-496c-821d-978b319a46cc"], "84462311-2f24-4a12-80b6-ee221888e532": ["96277654-4aaf-4e20-b089-ca44ae1c33da"], "b8a51353-1de5-4ed7-9ef8-a31fb5d9f178": ["96277654-4aaf-4e20-b089-ca44ae1c33da"], "680a7c55-6e04-49c4-87e4-76e5706a0da1": ["8d20f9fb-d843-47de-8540-4e15ca1804a9"], "0854ad21-2138-4b4c-a8e8-7014b0f24230": ["8d20f9fb-d843-47de-8540-4e15ca1804a9"], "3ee141c3-4f48-4c58-8a67-0c1347b7bffe": ["f5cee849-6773-494d-abe6-4c1fe711b520"], "7d22f2a6-1255-4bff-9dcf-20c52c3afbfe": ["f5cee849-6773-494d-abe6-4c1fe711b520"], "112dcb6a-c927-4b30-8093-c42ba03b549b": ["2177dbb1-2b5f-44dc-bb2f-7fd22f456f18"], "2ee08108-39e3-4214-a879-70e1020eb0be": ["2177dbb1-2b5f-44dc-bb2f-7fd22f456f18"], "9d2bcb1b-b9cd-4613-99e9-b3ec42457d05": ["ea4e2d1c-89ca-4870-b86e-5a543c581d61"], "a2253324-ce9e-41d0-9687-e899a7975df8": ["ea4e2d1c-89ca-4870-b86e-5a543c581d61"], "be1a7268-775e-4aa5-8e30-e102b091e198": ["9758205d-c2cd-4ec4-a1e6-4d1c0d6c2fa3"], "cd06a549-6bd3-4e1c-828e-08c4cb0cc241": ["9758205d-c2cd-4ec4-a1e6-4d1c0d6c2fa3"], "8a00709a-88ed-471c-b9ca-bc56697834a6": ["3fd07d49-cec3-4aa2-8ca8-39c1bdb475cb"], "0df71c8f-132a-493e-8700-d3ab7fadd471": ["3fd07d49-cec3-4aa2-8ca8-39c1bdb475cb"], "77cc3b52-6f64-41c2-b8a0-0759ec09c05d": ["0f2b9afb-bbce-44dc-be79-8422a4707c7d"], "b028d23e-b53f-42c0-bae5-4daa6f4a676c": ["0f2b9afb-bbce-44dc-be79-8422a4707c7d"], "4a86851a-ba46-455b-9f84-ff84d6158329": ["f754c7de-9d5b-438b-b309-43c32118344c"], "3db11ff9-b411-4549-8306-f0026397be64": ["f754c7de-9d5b-438b-b309-43c32118344c"], "48c31038-8e2a-4191-affd-8b223df0cc0c": ["81e3531d-e2ff-4f86-bf69-34687ed34f4d"], "5112f2b7-48ca-4adb-95b7-87efba531cf1": ["81e3531d-e2ff-4f86-bf69-34687ed34f4d"], "b31640e7-0e33-413d-8d92-f4ed83a51d9f": ["81e3531d-e2ff-4f86-bf69-34687ed34f4d"], "0e03744f-b9e7-48f5-81f0-fa7c93cc40a7": ["81e3531d-e2ff-4f86-bf69-34687ed34f4d"], "0f5a1073-5ec4-4657-b280-cf1b1e23310d": ["87cac61a-4885-4805-9980-932150a2ab7f"], "2f3d41fe-36b4-4ff6-a889-cb7ad200f8ac": ["87cac61a-4885-4805-9980-932150a2ab7f"], "0aa01382-b070-4ef4-980e-af933a0ca42c": ["b68ce2a0-e627-48f6-b678-016d11182cd5"], "a5c04dcb-a18f-4576-8fb0-88a72f2a9950": ["b68ce2a0-e627-48f6-b678-016d11182cd5"], "f1abfc3d-172d-4a4d-a3ee-e62bbccb3ee3": ["0f41d7d6-7784-4925-adca-871ef6c9fffb"], "e62b6d2c-20d2-4c82-b701-431733e0170b": ["0f41d7d6-7784-4925-adca-871ef6c9fffb"], "7a7dbafe-f8d8-4874-b69a-9e1b9a30eea0": ["7f78f912-6c2b-453a-a4c0-e75af3278008"], "267fd41a-fd62-46d5-82e8-a094f9d57340": ["7f78f912-6c2b-453a-a4c0-e75af3278008"], "099c8f7a-dd36-45cf-b144-79e372c61079": ["5ec71f48-bf88-40e6-8488-3186b9b0a163"], "37903be4-cfc8-475a-84f1-2b49a318ee5f": ["5ec71f48-bf88-40e6-8488-3186b9b0a163"], "b07d5fba-8d92-469a-98f7-039c39b87fd2": ["2e7b0a2c-f599-45a0-9e28-addcf144bdd3"], "ec3a794c-de63-46da-9858-fb2784d62a0a": ["2e7b0a2c-f599-45a0-9e28-addcf144bdd3"], "68681e57-df6b-40cd-99ce-242f07ad1cf4": ["605248df-7e8d-4097-9c5d-1e9e7fd4326d"], "bf3ec908-749e-4d72-a762-ad21251dd51e": ["605248df-7e8d-4097-9c5d-1e9e7fd4326d"], "b957bca6-e632-4ddf-acfb-0cd3ffaac0f9": ["7d28b9f6-5260-44b0-8dac-c87fee943e1a"], "a773f476-6913-43d7-b293-a08a1d44a588": ["7d28b9f6-5260-44b0-8dac-c87fee943e1a"], "326d0ecd-62c6-4dfc-9555-add86a536122": ["9f76e3ae-5c4f-4ac3-9bbc-f662b8294ce6"], "3eff0087-2b68-46ba-9086-1265798eab81": ["9f76e3ae-5c4f-4ac3-9bbc-f662b8294ce6"], "a7ba5561-1533-4160-817f-568d08a049c0": ["ecb0e8b1-5380-4f02-a396-b144d0cb26bd"], "acc9755a-ce1e-43a7-ad6f-4d6b09748ac2": ["ecb0e8b1-5380-4f02-a396-b144d0cb26bd"], "cbfac45c-c3ca-4d9d-9984-058e1139a7ab": ["6b3c702f-56f3-4bbf-9ca9-ff6cec65c96c"], "ae856a43-2db8-4cd4-8e2c-cbaeeef5c419": ["6b3c702f-56f3-4bbf-9ca9-ff6cec65c96c"], "cfef35dc-bdc9-420c-bf21-e32d28a82902": ["977f058a-7931-4c27-96fa-80c100084c2f"], "5d89a809-45de-4fd8-b541-b06802d8b3f9": ["977f058a-7931-4c27-96fa-80c100084c2f"], "64d1c106-fbce-4749-a9a5-374f784a9789": ["04b2671b-2109-4077-a7c1-e8c170649091"], "68acff08-159a-4f84-8800-5988dfafc220": ["04b2671b-2109-4077-a7c1-e8c170649091"], "d05458c8-c062-44ce-95bd-f92bd6591c3d": ["b47aeefc-ecb7-4732-ad0b-4c1185474c7c"], "862bf629-d3a9-407e-9a4a-329b40d78a08": ["b47aeefc-ecb7-4732-ad0b-4c1185474c7c"], "00158789-4181-4b0f-9bca-3e7e222c7e73": ["098ec315-29e6-43d5-8d4a-8bc03cb6994a"], "396cbf1d-4424-4c15-be0a-e3891a660253": ["098ec315-29e6-43d5-8d4a-8bc03cb6994a"], "22ad5ca5-0cb0-4d05-aa34-c095d982409b": ["d89fe513-5306-441b-8b4b-7763c162f9f2"], "a1a7fe8a-5122-4633-b463-dc24c69869b4": ["d89fe513-5306-441b-8b4b-7763c162f9f2"], "91a56a50-8a5e-4047-84d9-858c5c394311": ["f461acdf-ae32-48b0-9589-de27e62a6ca0"], "fd949ada-a506-4f57-8ec1-67d499c9b005": ["f461acdf-ae32-48b0-9589-de27e62a6ca0"], "38a218f1-86f0-4d93-8df2-c014bea6ef76": ["cbb549e4-b846-4e2c-a5cd-c55d88169db7"], "a1526356-269b-4e19-ba59-8a6901919f25": ["cbb549e4-b846-4e2c-a5cd-c55d88169db7"], "1adf4d6a-e8b5-4929-a88e-2f3e0201fc44": ["4b5ac405-c3d3-447d-aa5a-4c6ccd0214a0"], "eb6cb7ca-b582-49d2-b5f1-1a014a0cb02d": ["4b5ac405-c3d3-447d-aa5a-4c6ccd0214a0"], "1b8d3743-87d9-4256-8d2e-534b83539381": ["d444d342-fac1-478d-8e37-f38833728651"], "9a27f640-9318-4bb1-acea-6a444fdee889": ["d444d342-fac1-478d-8e37-f38833728651"], "f75929a5-572e-4f29-a27d-caeea84b46d8": ["2a9a8c7a-79db-41b2-869b-e7e95b611bb9"], "9deba0a3-d672-4ca3-878a-d081e0be949c": ["2a9a8c7a-79db-41b2-869b-e7e95b611bb9"], "10b1a3b4-6bb1-4016-91c4-17c069c34685": ["1bcd107b-e3b3-4361-b6d1-5e766495c595"], "71909ad0-ea66-4ffd-8f01-e142c77c08b9": ["1bcd107b-e3b3-4361-b6d1-5e766495c595"], "62b616e4-0975-4bce-828c-8dc7f623a93a": ["4f6f046c-010e-415e-863f-7d9a82485d52"], "c94afc1f-5fd8-42ea-abfe-39597658ae2b": ["4f6f046c-010e-415e-863f-7d9a82485d52"], "c748a525-80b1-4fb9-ab34-2229b4990bc5": ["5b6acea8-e920-437b-ac4a-79ef20f67551"], "5a23b83a-d2fe-4c09-a227-fdff5a3d5e06": ["5b6acea8-e920-437b-ac4a-79ef20f67551"], "f4d128e1-7460-4730-93da-e699b9281f2d": ["6adbe0ba-1a1d-406c-bede-f47025670f7f"], "0db91684-d427-4610-b3b9-e595ebbe08ce": ["6adbe0ba-1a1d-406c-bede-f47025670f7f"], "c713bb83-8502-4526-9219-00cb14ee2002": ["04db78d2-fa8d-4861-93f2-02ead663f3c0"], "1d81dfb4-39e7-42f0-abcc-f4bc869287bf": ["04db78d2-fa8d-4861-93f2-02ead663f3c0"], "a91630f5-b2f6-42a8-887a-6f91bdab7a19": ["2424e668-a431-40f0-bde3-552c25898ff6"], "53a1a731-20d2-40ae-a997-e0971a1a9277": ["2424e668-a431-40f0-bde3-552c25898ff6"], "02c6dedc-0b6f-4f0f-8989-b7f0ff224d7f": ["00786ac7-8090-4fa2-9002-7a6619a01d55"], "fd1b095f-3c9c-435c-a2b8-b726ad685003": ["00786ac7-8090-4fa2-9002-7a6619a01d55"], "94422c40-ebd0-4420-8313-298548f929e3": ["e9832108-1cbd-475b-bce5-f7f73cec601d"], "e0ea561b-8127-44c3-bf3b-fa45b97b7ad6": ["e9832108-1cbd-475b-bce5-f7f73cec601d"], "d4d02b9b-6457-4d3d-8831-03f0fc9bb6a0": ["9352657a-b7d8-4467-aaec-b5e7a4daf95f"], "8b631a9e-8d2b-440a-bdf6-277fead49fe6": ["9352657a-b7d8-4467-aaec-b5e7a4daf95f"], "bc4d44d4-1b47-454b-9d2e-85c02c61bb12": ["676f11f8-d07e-47d4-9da1-4e13111d2c25"], "0711823d-1b91-4e77-af9d-9a2cec3dfe0b": ["676f11f8-d07e-47d4-9da1-4e13111d2c25"], "3b500158-1614-4fe2-ab35-4a855c05a2ab": ["da637e6c-f0a1-4f83-a8ee-78bcbbe87d53"], "ea65f6a4-2f80-42a8-9aba-a2972600bcdb": ["da637e6c-f0a1-4f83-a8ee-78bcbbe87d53"], "f07fbfaa-709c-460e-afd7-ff8ae230184a": ["c0dbf3d5-363b-4e0f-9685-02279a49fc30"], "1565a431-c524-499a-8ad2-a347cd63be48": ["c0dbf3d5-363b-4e0f-9685-02279a49fc30"], "5da4c9e3-382a-4e84-ac43-f8a44d38a2be": ["d765a83b-b81b-4ddc-b3af-770e08e332c3"], "54a697ca-518a-4017-b08d-ef068c7d7094": ["d765a83b-b81b-4ddc-b3af-770e08e332c3"], "20b04b1c-9c50-4bbe-81a6-ad47ad660975": ["122d4688-6114-4a80-8dc3-60805c91972f"], "7253a0fd-9b35-434e-91cf-5acf5f1b5b2d": ["122d4688-6114-4a80-8dc3-60805c91972f"], "15be8bc6-1dd7-4b2d-b725-4985491c9d70": ["75e217a3-06c4-4cd2-9750-df39d7379477"], "17817ecd-55b6-4fe1-996b-9548b23fe571": ["75e217a3-06c4-4cd2-9750-df39d7379477"], "0c6c7bd3-9955-4d80-8f43-c88dce06139a": ["66bff2ea-9361-413b-a860-2a30b147acb2"], "62348ecb-4922-4622-ae5b-10b913ba1b8e": ["66bff2ea-9361-413b-a860-2a30b147acb2"], "9679ebb4-0db7-49ac-a73c-9c78b5beb818": ["17f5b19b-9a46-4cc5-adc8-62cb4ed6f33c"], "c39ae23f-7fb5-4bf6-bd15-fb536a44b7e3": ["17f5b19b-9a46-4cc5-adc8-62cb4ed6f33c"], "347d1c0f-c9d2-4d1b-93e4-76dcb818676e": ["6c0abb3b-07f5-4991-aea4-4c248268c676"], "4dc81b77-a531-4388-8808-9e9fe1d8d85c": ["6c0abb3b-07f5-4991-aea4-4c248268c676"], "5f0cb2be-94cc-4b25-9e4a-0b2b7059bb16": ["98da1bc6-9fea-4744-94fe-1c20059494eb"], "a970a740-b703-44e7-99c6-4253d72a759f": ["98da1bc6-9fea-4744-94fe-1c20059494eb"], "ae0c9d03-c89e-4ab4-a0da-046de1ccae2a": ["68574c95-5806-4b72-ac1f-a6fc43be0828"], "d07f09ac-0d8d-4295-b889-99bbe521eb9c": ["68574c95-5806-4b72-ac1f-a6fc43be0828"], "f6db817b-7aa6-44c6-bc02-195367d134f8": ["2b4fe9b3-a882-48dd-9d11-8fe7d3a5094d"], "95e6f436-f31b-44ec-9a5b-cd273c458f45": ["2b4fe9b3-a882-48dd-9d11-8fe7d3a5094d"], "4d98c14c-b31e-4a88-84dc-fb2f13c1973f": ["a85d41b2-9ca1-4d88-9f72-dfd3d3deaf16"], "5b358839-3f0f-453b-a3eb-12581b5a74ed": ["a85d41b2-9ca1-4d88-9f72-dfd3d3deaf16"], "6580b484-5254-40be-9375-0e0c097ba7a2": ["69869dea-5435-4f55-bd38-036ef84d54b5"], "70c0602d-9903-46b2-bfc1-0a9c60715512": ["69869dea-5435-4f55-bd38-036ef84d54b5"], "32a10e20-5ced-4fbe-b83b-2139bbd915a7": ["b50efe77-7963-4912-a02a-1ae1aa09e204"], "18c5602a-3049-489a-8046-f4ae402f720c": ["b50efe77-7963-4912-a02a-1ae1aa09e204"], "21e7abfc-f0d6-43ba-84d1-789be9fa9d02": ["97667c73-0dc9-4f2d-8ddc-d0ebbd8a7e28"], "81f214c6-ad3b-47a1-b77c-6a43b9fc3ac5": ["97667c73-0dc9-4f2d-8ddc-d0ebbd8a7e28"], "e58f0980-9bd7-4179-95fb-98cc8dc8b0ff": ["9401b770-7090-49e2-92eb-f120b20acc1b"], "733e95fc-4055-4355-b345-1c664ff453d8": ["9401b770-7090-49e2-92eb-f120b20acc1b"], "d0619a45-7cde-4e10-8c30-42c8817b9ad0": ["399ec477-dbdd-4f3b-bc46-09b8e7d32c72"], "fae3f0c6-ebc7-4568-ae42-01f684bb2eb3": ["399ec477-dbdd-4f3b-bc46-09b8e7d32c72"], "e78a3798-e3e6-4b5c-9744-fb88486d4f2d": ["3aa99f42-1957-4090-ba96-cc8464ec58ce"], "32d6cbc2-5f9f-43ad-b284-942ed423bcaa": ["3aa99f42-1957-4090-ba96-cc8464ec58ce"], "74e68fa8-45a6-4bac-97cd-ba98eb687717": ["d35792fd-fca8-43dc-ba04-d69f09216547"], "b8c49803-8329-4e66-95f4-68a7d35e9e12": ["d35792fd-fca8-43dc-ba04-d69f09216547"], "ea0ef91e-08e8-4797-8aa4-1300e0830006": ["fa7b008f-d85f-4df0-9840-b1067fe8ed82"], "427b0547-a49a-4e87-93fc-136ba20f042a": ["fa7b008f-d85f-4df0-9840-b1067fe8ed82"], "e7620ac7-fbf0-442d-a98b-138d22ae0493": ["c88525b5-a569-4211-8a22-73fd0e9b35b2"], "7f2b83e3-9901-4756-b643-b9334244b03f": ["c88525b5-a569-4211-8a22-73fd0e9b35b2"], "fe2d5073-8b9a-4dce-91c0-e7771eadd302": ["dad090db-4058-46aa-9e70-813419f5fb7e"], "bcc29071-8f4d-43f6-b9a5-ad14bab66332": ["dad090db-4058-46aa-9e70-813419f5fb7e"], "36fc9a38-6ac2-4c7d-95b8-d1254cde39f4": ["3a1dda36-29b5-45bf-bff1-5479c1ad2ae1"], "bf242d37-ba68-4610-a284-0ad09ebd26ad": ["3a1dda36-29b5-45bf-bff1-5479c1ad2ae1"], "4fbf68e6-ff67-40e5-b17d-18913d561f71": ["146915fd-35ed-4643-8766-d77548fed2e5"], "f3aa18e5-1932-4e13-8189-3e0554bbc5e5": ["146915fd-35ed-4643-8766-d77548fed2e5"], "4a4ae09b-7c64-40f1-8e92-56fbd7134e9a": ["62c93d57-4053-4bc1-9b00-baf34bdfa304"], "07f0eb80-05af-4b9f-8b8b-7fecfc7f53b4": ["62c93d57-4053-4bc1-9b00-baf34bdfa304"], "40f4c5a0-d9c1-4149-b749-45374369939a": ["3b4a9ed6-4ec0-439e-91de-be431ec5cdbf"], "296f574e-a837-4b80-a625-c3b6784fed7f": ["3b4a9ed6-4ec0-439e-91de-be431ec5cdbf"], "d6a8c5b4-4000-4683-b8e6-2facdef8c450": ["9687d209-738c-435c-8796-f06b7ff4d610"], "082e27a5-4d4a-40be-bb34-6dd3ff843405": ["9687d209-738c-435c-8796-f06b7ff4d610"], "a8158de8-c43e-4f3b-bc24-022c25ff85fc": ["03a6b7a0-5439-4cdc-915b-1730dda12bf1"], "71fc8a5f-c37b-4253-94a7-7c0b4fbaf84d": ["03a6b7a0-5439-4cdc-915b-1730dda12bf1"], "ad485bf9-3a4a-4d0d-b748-0a67207059d9": ["467ceee0-037b-4a7a-8cde-d32014f06ffa"], "c77dee8d-f3fa-43e4-ab3f-73bf37f0d409": ["467ceee0-037b-4a7a-8cde-d32014f06ffa"], "78af359f-f8f9-48b4-bcdd-4b46871364a8": ["739a8ee1-3a93-464c-8ea0-766f65e73bfc"], "718b5fc3-1d58-4d7b-b65b-e8a965a11d62": ["739a8ee1-3a93-464c-8ea0-766f65e73bfc"], "f037e45a-a0d5-49fa-8c30-2301f8df8a7c": ["0fb8daf5-c4a1-4d8e-81c0-32fe560b5993"], "577de768-e8d0-488b-a5ad-f4d45079e823": ["0fb8daf5-c4a1-4d8e-81c0-32fe560b5993"], "d85e8d40-9d16-431a-b9ac-5e6e28429176": ["b8a37319-817b-4410-9663-431b17c26279"], "f69c90d4-2f13-4814-93df-e7dd21b46c93": ["b8a37319-817b-4410-9663-431b17c26279"], "a451f093-a039-40a6-b31e-3309dab77b3a": ["8586ae15-2837-4855-b471-98cbedd68be3"], "2ae43180-9cc8-4379-aacc-38cbe321fe48": ["8586ae15-2837-4855-b471-98cbedd68be3"], "e681a56f-ccc4-4148-ba0a-9f1d97be2905": ["338bdb62-3d7e-4c69-86fa-566ae242c46d"], "4cb8b76b-774b-41fb-87c5-2614b0095bde": ["338bdb62-3d7e-4c69-86fa-566ae242c46d"], "c1f45874-6626-40ba-bcac-f6ff8b132c8f": ["e0869097-20ed-4b51-8f7e-1ad080ef589b"], "f98fb981-8103-4463-ac65-6130b61efeaa": ["e0869097-20ed-4b51-8f7e-1ad080ef589b"], "4e3ff7b5-15f5-48ca-a36d-6ed56bf4148b": ["96b74f3e-6766-41bf-960f-64cf0e7706a0"], "651f21f8-dcbc-42d1-945e-00aea6b27c60": ["96b74f3e-6766-41bf-960f-64cf0e7706a0"], "fd6e4583-d877-4fbc-a244-45b495ab1aaa": ["5240da88-6461-4346-bea8-af0b4055a8f0"], "c2e47959-518f-4d82-bd66-41ec6aaac411": ["5240da88-6461-4346-bea8-af0b4055a8f0"], "0ac5b531-ff17-47d1-9587-43d92214200b": ["2d76053e-5304-4eab-bfbe-6509911a5e37"], "68d848f7-6136-4b58-9d4a-2445b6f8a1b9": ["2d76053e-5304-4eab-bfbe-6509911a5e37"], "da55305b-ca24-456e-bf41-142c5680f377": ["2598605c-b132-4831-8a00-13e1122a1757"], "f9df381f-e5c1-42d3-8cd9-ee80009751b9": ["2598605c-b132-4831-8a00-13e1122a1757"], "57b022d7-1e5e-4619-a43a-3704101d5a25": ["65fa1d50-39e9-4714-b178-92d15f74b3d4"], "afca4827-490a-47f7-9e54-f4afcd9bc5e3": ["65fa1d50-39e9-4714-b178-92d15f74b3d4"], "f83ce48f-f8df-4074-8ea5-f56142f005c0": ["795fe842-b274-4078-8f22-9378f0a23d1b"], "dcd7e685-dd60-49e5-8ac1-4d731ad2d0ce": ["795fe842-b274-4078-8f22-9378f0a23d1b"], "25c8ed68-fbd4-40d6-943c-1c4e16518a2e": ["57ba9a13-0619-4e49-914b-82b03f231302"], "a1591b60-11be-4335-a09b-099d3901bb54": ["57ba9a13-0619-4e49-914b-82b03f231302"], "97fde540-32ed-4541-aae7-4aefbd5a555b": ["cdeb9605-f2a1-40e7-a88f-db726d2b2891"], "f565018e-8679-4955-9ed5-8be1caa93694": ["cdeb9605-f2a1-40e7-a88f-db726d2b2891"], "e9cd92c2-f2ff-4ae8-be87-238ca5e8b512": ["432ee0ab-2539-4800-90ba-a39b220492a1"], "fe82971c-8049-4266-a4b4-119fb32ba967": ["432ee0ab-2539-4800-90ba-a39b220492a1"], "766c9b30-7e05-4d5f-ad71-f5fc5e3fca9f": ["383c1cbb-a675-499e-b8de-f529f678a017"], "5612c390-9911-4b54-8412-1b3efbb086b6": ["383c1cbb-a675-499e-b8de-f529f678a017"], "b4777406-e255-45c6-bc67-3f03c5ad45a1": ["1fcecc21-ec0b-4c8a-9783-e359e121b0fb"], "3a4de873-48dd-4ae1-bd3e-7c88d2cdf79a": ["1fcecc21-ec0b-4c8a-9783-e359e121b0fb"], "c0d14ca2-38c7-400e-acf9-dbdf57cab735": ["6a1dca82-9095-4188-bd65-6e9771ccda98"], "3eeab0d7-ac48-4761-8a2c-c15854af0591": ["6a1dca82-9095-4188-bd65-6e9771ccda98"], "9323a2a4-a9dd-4b21-bcf8-b006a4c1c60a": ["5d78ec00-70c4-4332-ae1c-ebd2ea6a7aff"], "e83c1d9f-61ae-4045-8555-d772a2f7a4fb": ["5d78ec00-70c4-4332-ae1c-ebd2ea6a7aff"], "8b13c9d1-591c-4737-bfcc-af4ef606fa8b": ["cc679bed-9216-4d51-8033-768edad4c3ae"], "711c36df-7119-409f-a665-922c3e4297a2": ["cc679bed-9216-4d51-8033-768edad4c3ae"], "9dcd0a7e-c445-4c8d-b4c3-25402ff5e48f": ["533ac279-7f6e-46d6-85e0-80f8394ce836"], "056a3970-6bd7-4d36-a444-cb93a02273c3": ["533ac279-7f6e-46d6-85e0-80f8394ce836"], "34bd2fed-4c1d-4f34-b7a1-71cbca08ba11": ["ddbec8f0-ad79-474a-81b3-272368802ff1"], "0e26d3c3-72c2-4e8c-b07e-c1b4b2b43446": ["ddbec8f0-ad79-474a-81b3-272368802ff1"], "71ac7a72-be9b-4813-8838-f9fa18363264": ["89e24a0d-aedd-474a-ae0b-d6484ea29b01"], "311dbfda-4d74-4742-8e04-17f773af3e77": ["89e24a0d-aedd-474a-ae0b-d6484ea29b01"], "1efbe7b2-0cce-4d32-b509-e1c0435d53db": ["69d5ff44-a184-413e-aa3d-e3604a7dd99d"], "40f9c162-06eb-459e-8684-b870ead9898c": ["69d5ff44-a184-413e-aa3d-e3604a7dd99d"], "aa87bb16-fe3d-4576-b34b-ad62cd63b561": ["21b0e836-5d14-4ec6-bc0b-dfbb6a66a006"], "b615b294-4670-4ffc-9305-c468cfbe8007": ["21b0e836-5d14-4ec6-bc0b-dfbb6a66a006"], "e38489c4-248b-4d33-ad6b-bfa4acb904d9": ["076cc6b7-0c4b-4cee-8bfa-9e9398ce54f0"], "d354ccd0-32a0-4b3c-a1fa-5f0d67919fcc": ["076cc6b7-0c4b-4cee-8bfa-9e9398ce54f0"], "a78b972a-48a4-4995-b53b-99407b62e90a": ["a7e19b4d-98a8-4f6a-925b-cceb6fe6d115"], "249617d6-61b5-4acc-b30d-50356fbfc27d": ["a7e19b4d-98a8-4f6a-925b-cceb6fe6d115"], "97340b29-c870-4139-aaf7-c04bec0120bf": ["345f0157-089b-40fc-994c-663633439696"], "f521eab4-907f-4dc1-89f7-57e3e87140e2": ["345f0157-089b-40fc-994c-663633439696"], "07f82b0b-989b-4e1a-9fa9-9330347889dd": ["857f46a2-6f45-43f3-8f2e-b6a1495f7ab9"], "16ae4bb8-693f-4d15-b146-dd516c9c3052": ["857f46a2-6f45-43f3-8f2e-b6a1495f7ab9"], "c4fde435-bd84-4583-9875-144f176b0815": ["cd43c722-8dd7-43ce-8009-ea3e4012152b"], "b2586ff2-82bc-47b2-81f8-b92c4a59c9a0": ["cd43c722-8dd7-43ce-8009-ea3e4012152b"], "2ba3db0a-ef22-4198-a11e-1823ec412d47": ["27ad1581-358c-43ed-9d75-ac8b0014cdf5"], "dbdb270d-afb8-47d6-80f1-4abd227fa527": ["27ad1581-358c-43ed-9d75-ac8b0014cdf5"], "2713009d-b832-49e7-908e-5a2197b6c9f5": ["44c91198-f242-48b5-ae8b-152947949786"], "40a3a0a5-d974-4773-809d-c1a04aab80af": ["44c91198-f242-48b5-ae8b-152947949786"], "3e562f52-d9ed-4e52-a235-04aa54189868": ["8c35e32a-3706-448f-9ae4-791146781d4f"], "4609c7bf-6056-4d01-91fd-e67ea88b3c8b": ["8c35e32a-3706-448f-9ae4-791146781d4f"], "f9110bb1-649d-41d3-882c-9ecfffa914ec": ["f120c9b9-2446-4116-b19e-8b36a07d0c16"], "8d6d0690-af6d-4114-815f-5c1725231fb8": ["f120c9b9-2446-4116-b19e-8b36a07d0c16"], "98d93f8f-51d0-4527-81b8-988a2e35d761": ["4a8a91c3-b917-447d-8e75-946746720713"], "090f4ae2-4275-4467-82dc-7a64b1660d3d": ["4a8a91c3-b917-447d-8e75-946746720713"], "890bbebe-5052-4875-9667-50c0d64059b5": ["d8e80cb6-9e64-4661-a162-1d7cf0c00b33"], "995e1390-baab-4cf5-89ec-a2f155460b29": ["d8e80cb6-9e64-4661-a162-1d7cf0c00b33"], "34255733-270a-4fa1-8fb7-8091ffcc1d5f": ["b872ff7d-d625-4cb1-a334-f723273c1505"], "8f760d2e-ab80-48e5-904f-170ed0d786c3": ["b872ff7d-d625-4cb1-a334-f723273c1505"], "bf736db3-288f-410a-b973-5f9bfab45330": ["e0826407-6dc5-4988-a2ab-33a76b028d02"], "a415867e-abda-45eb-9970-51057034715d": ["e0826407-6dc5-4988-a2ab-33a76b028d02"], "63497b2b-f1db-49b7-b966-b8f0e3bc257a": ["a20e8cf1-2012-46c9-b873-ce24867cfe54"], "b24dfd4d-4f30-46f6-8860-f99b8fef9747": ["a20e8cf1-2012-46c9-b873-ce24867cfe54"], "9fc7899d-1ec1-4c22-9dc6-35829b93ab70": ["f020d922-82f9-4449-9283-41b051327e20"], "664da8a7-7338-4748-a89f-8044c8a2e194": ["f020d922-82f9-4449-9283-41b051327e20"], "dde5dab2-916d-408d-8a23-a3b1fc1e557c": ["b6595be5-fc03-43e4-8172-6e3a598a49dc"], "a10ccfa4-4539-4784-b398-2626558fd2b3": ["b6595be5-fc03-43e4-8172-6e3a598a49dc"], "16ddeccf-50f0-48cb-bf0f-aedf09864405": ["ebfbb0b6-3847-4574-bfad-121181d933c2"], "78221e10-5034-4246-9377-1cf6e9b6e07c": ["ebfbb0b6-3847-4574-bfad-121181d933c2"], "533cda33-104f-433e-8f63-ce782cfc378d": ["537c7d75-0459-4ab1-8d65-2f4a0c0d1d28"], "63d9982a-4a54-4e20-b890-f216790ff94c": ["537c7d75-0459-4ab1-8d65-2f4a0c0d1d28"], "fcc210fb-1428-4235-9cfe-ce8efe4934b8": ["e1de5628-6838-4d90-b918-6fefc33f5fae"], "76bcd84f-7b85-4a3d-afef-7c066c5fcb9b": ["e1de5628-6838-4d90-b918-6fefc33f5fae"], "79b4b657-a7e4-41d8-a3fe-1cee02f9d943": ["8e614565-757f-4b9d-8774-89d3fa8aaac9"], "90a1907a-399e-4e26-9cc1-853c51cc106c": ["8e614565-757f-4b9d-8774-89d3fa8aaac9"], "1581641b-aa07-4f9a-8721-945d134cc00e": ["3d5f6b26-3039-449d-bad8-5d5e916da4f0"], "1d9c5e66-4edc-4502-9f55-9424dced12c7": ["3d5f6b26-3039-449d-bad8-5d5e916da4f0"], "d7e5832b-b4fc-426d-8941-f7b3d22c3747": ["6da49a4b-afeb-4bd5-bad3-3f1c5354152d"], "acb9e9a2-46e9-46b5-8013-efffd5598600": ["6da49a4b-afeb-4bd5-bad3-3f1c5354152d"], "6cf56980-dd5a-4e33-9707-8a36bccca604": ["1b19cf6f-eabf-4359-8d62-31597d361b5f"], "9cfbe473-150f-4797-80c7-bf5157cec729": ["1b19cf6f-eabf-4359-8d62-31597d361b5f"], "549380a0-bea4-4248-b7b1-c1699ff47008": ["04c0847e-8fcc-41ad-a180-8934d6987132"], "80c78cd3-4118-41e1-b74b-be020d1faad3": ["04c0847e-8fcc-41ad-a180-8934d6987132"], "c02c32b3-0363-4e6f-8810-4be02e60c90d": ["a0938144-e325-4271-8988-695fd213b1b7"], "846a6588-74cd-4938-b121-0b9d82cd0116": ["a0938144-e325-4271-8988-695fd213b1b7"], "222a423d-d2c8-41bc-ac75-98f1bb070f93": ["8d481e2a-736d-455b-b1a1-b42e29f094cd"], "ff8ae8a4-421e-4aec-8e54-11bf9e138a5a": ["8d481e2a-736d-455b-b1a1-b42e29f094cd"], "f3acd9ff-0cae-423c-bb17-79237edee504": ["f503eaad-f37b-43ee-80ee-6bee2a8af2db"], "e9f903ca-efb7-4b55-a8fe-ea9ce25984fe": ["f503eaad-f37b-43ee-80ee-6bee2a8af2db"], "d4262492-ba02-4812-ae23-cb6e9597974b": ["1f212391-5d84-487b-8d06-07267c6af3c3"], "b6c7221b-1075-4853-ae25-bcb9b2556687": ["1f212391-5d84-487b-8d06-07267c6af3c3"], "810fb475-492c-4bb5-b61c-f4a7bc3294be": ["75bd1499-3845-481b-a014-581a4c6ef223"], "dd8c98b4-73c8-4413-8104-2c92fe9c4b65": ["75bd1499-3845-481b-a014-581a4c6ef223"], "7e1fcaae-9c67-4269-bbff-1fd0a65ebbf5": ["e2c8959c-4195-4b77-b08c-1509daef8fe5"], "efa3d1ea-3c17-4093-a148-fefba324a813": ["e2c8959c-4195-4b77-b08c-1509daef8fe5"], "553834bc-15d8-479e-b984-c38b30ecb029": ["b0be4c36-b1b9-4011-8f93-75c873b31f3b"], "a05c9be0-af9a-422c-a063-878c7dad8578": ["b0be4c36-b1b9-4011-8f93-75c873b31f3b"], "88ff0e84-7878-44e8-b5d5-d46a2c57aafe": ["d85b2510-ec38-4ddc-bb4e-d31d2b1b8543"], "0097ba9e-7a79-4b08-a475-7b4b55276851": ["d85b2510-ec38-4ddc-bb4e-d31d2b1b8543"], "557bcbd4-3e2c-4f0c-95ca-2a33a5ae5cf1": ["6725234b-c486-49fc-8e17-a3d3dbf50f6f"], "776db726-8d6d-448c-989f-46c51b15c2c3": ["6725234b-c486-49fc-8e17-a3d3dbf50f6f"], "ade868be-dbdf-409b-ab7a-dc899c67c1ef": ["6d272bd5-c641-4064-96d1-9c76052babbc"], "712e3e6c-bbd0-49aa-ae85-c28243fc4557": ["6d272bd5-c641-4064-96d1-9c76052babbc"], "ae2dad42-e6d5-4a12-a99b-0ceea69c9dda": ["49e470fb-c9c4-488c-b14f-d6b73fe99393"], "aa03cdce-9959-45b5-9f12-eaadc42775f7": ["49e470fb-c9c4-488c-b14f-d6b73fe99393"], "38c1827e-910e-456d-bd9f-b359634d7a20": ["88bdab00-ef4c-4db1-890a-9ba58b1e1651"], "fe5e81e3-17d8-4f81-9b6d-b1ba834bc8f1": ["88bdab00-ef4c-4db1-890a-9ba58b1e1651"], "27ddfd3d-0c56-4f29-8dbe-4f22b35c7015": ["6fdbca83-7683-4bb0-8abe-4e6af041acaf"], "fc0a9bea-a650-4129-a3f1-5bfc82642c2d": ["6fdbca83-7683-4bb0-8abe-4e6af041acaf"], "f5353be9-90b4-48d8-8acc-e5a221131ad5": ["3909a7a2-1e6a-496d-b05c-22ea76f6b5b0"], "beefdb83-c74c-4a09-b64d-30fcd60a8f68": ["3909a7a2-1e6a-496d-b05c-22ea76f6b5b0"], "4d2610fb-c3b7-4abf-973f-6b09f09af9ac": ["7d5207e9-6dbf-4d86-b1aa-e0f92d00d591"], "5608ce2d-966b-41b9-b23c-abe0aabd459a": ["7d5207e9-6dbf-4d86-b1aa-e0f92d00d591"], "e4712429-2076-415e-8ef5-b3ba4bee4ff5": ["420398dd-6b31-488d-8394-50f31e465a0f"], "539b2b3c-b0b4-4ee6-ac5e-e68a993c110a": ["420398dd-6b31-488d-8394-50f31e465a0f"], "102799e0-365b-49ad-b7b2-f7ddbb56b86f": ["76a34f41-d523-4367-8cd6-f4207d6435c5"], "6e38753a-07aa-4747-b728-f438b01f1d6a": ["76a34f41-d523-4367-8cd6-f4207d6435c5"], "7a99a7d5-3e23-4b11-86ed-49ad886c1e12": ["64fb71c2-18ec-4617-bdf5-467bd7f23180"], "882b0027-7522-43da-8a35-d7b5cf64a5f4": ["64fb71c2-18ec-4617-bdf5-467bd7f23180"], "d73651c7-4cf0-4915-9e58-a5f408ad540c": ["6fb42a4a-6a91-4c84-845a-56ddae3f79c2"], "9d09793e-875f-42ca-a14b-42e8944b7d9a": ["6fb42a4a-6a91-4c84-845a-56ddae3f79c2"], "c68a1cc7-e710-4551-8218-209c72190458": ["c3202b2e-7e2a-4bd1-aff0-c672db09015a"], "446e4218-af18-4bc1-a160-f865a06cc1b5": ["c3202b2e-7e2a-4bd1-aff0-c672db09015a"], "b4054794-6528-495e-b673-0f08c64b808e": ["674188ca-2f4b-4395-87a0-de8ff8b8ede0"], "8c1c78a1-2bfc-492f-9276-ebd88076d4fa": ["674188ca-2f4b-4395-87a0-de8ff8b8ede0"], "fdad184f-9adc-4159-8271-f0d547299f55": ["129f1abf-b0a6-4263-ad82-9ce2868ea2ac"], "24d59c7d-1a54-49aa-b7f7-b7982e698ed0": ["129f1abf-b0a6-4263-ad82-9ce2868ea2ac"], "9261d77d-fe95-4996-943f-da886b9db0cc": ["c587200b-00ee-4d01-8558-72adde83fb7d"], "fd25e5b0-1334-4ed8-87c6-e4cfccc1ac90": ["c587200b-00ee-4d01-8558-72adde83fb7d"], "dcd91fbe-5661-4321-b408-1e88c3387251": ["dc3fa35c-8ca2-4bed-8764-71763d463711"], "abeb9e2c-9c21-45d3-84f8-c27d5f9fef5b": ["dc3fa35c-8ca2-4bed-8764-71763d463711"], "dcb9b145-d7f5-4f29-a21b-254c3006813d": ["142a0d60-7eed-4fc8-8f73-f3de40e4264d"], "a0425274-7dff-4dcf-97eb-e9bc3b697b5f": ["142a0d60-7eed-4fc8-8f73-f3de40e4264d"], "f0450f71-00d1-48df-bf61-3181132a8fe6": ["116e15b9-a5d8-4b83-bcd2-8c9aaf16aa01"], "a732dc4b-d95f-4399-b39c-e2cd17848773": ["116e15b9-a5d8-4b83-bcd2-8c9aaf16aa01"], "0312858a-08e8-415b-af4a-a77745235c36": ["0c0a9d63-a1e0-49cf-8e99-d6355d498c1b"], "b21c3253-0440-4ddf-ae79-a38aaa6a0e94": ["0c0a9d63-a1e0-49cf-8e99-d6355d498c1b"], "bb46a578-1ced-46c1-9518-2faf91cf3c76": ["f1bae05b-863b-4a79-a9cd-31e51f027a1d"], "414f0723-40e5-4302-8e6f-f4b0be87428a": ["f1bae05b-863b-4a79-a9cd-31e51f027a1d"], "f6b819a3-ab3e-4cfe-bdd4-bb084917a98b": ["29a3b3bd-bf24-477e-96b9-7d7d12fb350c"], "1952ce05-bcc9-460e-97f7-c067a93e4b33": ["29a3b3bd-bf24-477e-96b9-7d7d12fb350c"], "5fbbf431-199d-4ad4-a30b-43866160ab58": ["6c86edd5-8223-4c25-b7cc-d28d939c47bf"], "d6637b50-8d58-427c-a8df-4f13f9223c04": ["6c86edd5-8223-4c25-b7cc-d28d939c47bf"], "210b234f-6624-4e07-885b-e63a5e30e25d": ["54952d96-6d3e-49d8-93fa-a96f32bb9c34"], "95d9b0db-baec-4047-8bf7-c347ba5275c1": ["54952d96-6d3e-49d8-93fa-a96f32bb9c34"], "7c05b948-cf32-4b5f-95cc-eec93c7fce75": ["4357a089-8714-4c17-b0dc-7af498a9e469"], "ef6b9825-9d57-49c8-a146-f9fc8a7da937": ["4357a089-8714-4c17-b0dc-7af498a9e469"], "d10a963e-c81a-4e1b-b72f-c67936980cd1": ["6db6b1d3-944b-4584-882d-937363aacbc1"], "b99c0973-343f-4c95-a57b-d2727f76fcb0": ["6db6b1d3-944b-4584-882d-937363aacbc1"], "fe0a5ea2-f830-41eb-b503-93d31c53bb49": ["e7b02dc5-cef1-4f4b-9f7a-8aec5604ab41"], "e3e77dd0-2ef5-418f-ba67-11825ee7e6d6": ["e7b02dc5-cef1-4f4b-9f7a-8aec5604ab41"], "af85834a-f6b0-45ba-baff-e1a822b35c13": ["ff4f909b-d4fa-412b-bc1a-abd40fef5e85"], "ac5bf288-f000-4e69-b129-c75b9a8b7edf": ["ff4f909b-d4fa-412b-bc1a-abd40fef5e85"], "56478682-6332-4e54-a237-41346e9012a0": ["1b0ac28e-b5f0-48a6-8336-b6cc9485838a"], "97799053-7628-409a-81f7-5644a37c2641": ["1b0ac28e-b5f0-48a6-8336-b6cc9485838a"], "8cd50646-fa06-4a65-a3e5-2f3594c54923": ["8f98649a-590d-4b94-a002-49187450e8a4"], "68d2bc44-78c3-49cb-8bc5-3f2db96e2908": ["8f98649a-590d-4b94-a002-49187450e8a4"], "1c2ed797-c1dd-4dc0-a860-35efa2d927ca": ["02ac40db-40fc-4d87-b0e3-ecf78ffe340d"], "7c30c2b0-e6e9-4f0a-b4b6-7a229a0a9994": ["02ac40db-40fc-4d87-b0e3-ecf78ffe340d"], "f5c60282-574c-408d-ac95-cf9f6a85f1c2": ["10f163fe-77ae-481e-842a-1d27dcd4764b"], "87815eef-34f4-4bc0-8f89-c2bb3cd83bc8": ["10f163fe-77ae-481e-842a-1d27dcd4764b"], "49e505cb-8429-4ebd-8bcd-d3e46d301534": ["2578438e-682b-45fe-8e82-8efcd873037c"], "1053ac56-20cc-4db7-926b-857e8499ce39": ["2578438e-682b-45fe-8e82-8efcd873037c"], "e53ae7f4-229f-4881-9cc8-0855b1ca0280": ["94964b5f-e5d6-4ed1-86f9-7f7e4635f2c2"], "804e623f-fdd9-486e-b183-a99b57887a21": ["94964b5f-e5d6-4ed1-86f9-7f7e4635f2c2"], "e6445df2-fad0-4d28-8f8a-f377a99331cd": ["3c6c7ccb-d338-4101-80a8-8586e4e0d935"], "72e5b786-bca9-450d-879f-e0bbe1794904": ["3c6c7ccb-d338-4101-80a8-8586e4e0d935"], "858f2be1-edfa-4822-88e4-cc86fba7a47f": ["15f2d2b4-d7c9-434c-a2bf-30c2feb71a8f"], "bae9f091-f74e-4c18-a9c8-00b3dd2dd0d6": ["15f2d2b4-d7c9-434c-a2bf-30c2feb71a8f"], "d4bd430c-fff4-4fb1-8cc0-e2c3602eb24f": ["452bd1ce-afc9-4417-9842-d0658277ffe2"], "43fe63e4-61fd-456d-bbf3-984b32476086": ["452bd1ce-afc9-4417-9842-d0658277ffe2"], "b9a01451-b4b6-4e6f-b57e-1f73c8111746": ["288ba7bc-9704-4ad3-87ae-98efd3bfd06d"], "1153e90d-829f-4b21-906e-6942ec5ad0c0": ["288ba7bc-9704-4ad3-87ae-98efd3bfd06d"], "4193e555-b56c-4e6a-a429-b167c7d94f5d": ["8b860645-d930-4bb1-8eb4-4dee72891b27"], "b50f7885-f17f-435e-843b-aa80835ac322": ["8b860645-d930-4bb1-8eb4-4dee72891b27"], "16dae997-c41c-4b56-9e22-dfae0859cf02": ["3c46217f-5e0a-44a5-8210-0ecd4f984998"], "c588dbdc-8ea6-4b56-8dc6-11467d198d60": ["3c46217f-5e0a-44a5-8210-0ecd4f984998"], "d3664287-2eab-4409-8233-6ceec9caaac0": ["cb0921b5-184a-4516-a111-c52885413418"], "612bb2c0-ed63-48b0-a592-9210e1029811": ["cb0921b5-184a-4516-a111-c52885413418"], "021a2bf5-080c-4b90-a46a-1fd23549abe2": ["3156a02b-d66a-4ec6-9a56-b6780df8d01d"], "db62f249-9f07-474e-802b-4214132bd3e8": ["3156a02b-d66a-4ec6-9a56-b6780df8d01d"], "eb1e7ff2-8eb9-4b38-b822-665744d5c733": ["16717a5f-a299-422c-a5b5-2ce3ee7f9a24"], "92fa4d84-752e-4c6a-9c07-7c2ec20af444": ["16717a5f-a299-422c-a5b5-2ce3ee7f9a24"], "dbb7d7b9-b470-4f26-9468-619f24967b5d": ["a3505f08-474d-4b82-ac5f-705db81e9b10"], "b75e5467-bb61-4a0e-ade3-66d4497e9048": ["a3505f08-474d-4b82-ac5f-705db81e9b10"], "59dcb397-d35a-4d11-aba1-d32866899d0f": ["d5be59db-6a58-4265-822d-7346026b86e3"], "8d0555da-5981-4f0a-826a-c730eb3ea343": ["d5be59db-6a58-4265-822d-7346026b86e3"], "2ab60c52-1fc2-4cad-b8cc-19f32a54f289": ["cbb40bce-06ad-4e18-af5b-48156c38b58e"], "6da5e4e2-7241-4b1d-b3b0-b4bffc948fdb": ["cbb40bce-06ad-4e18-af5b-48156c38b58e"], "faf29048-4b94-490b-9803-6cf770d7e8d8": ["a1112a98-3c26-43db-b203-fd0b11ed23cc"], "9de3ee68-b2e4-4408-b6ed-cac89b221411": ["a1112a98-3c26-43db-b203-fd0b11ed23cc"], "43dbed6a-a39c-4970-bb51-b8e26f6e516f": ["489b6113-8830-4f28-9ebf-8aeaa9933113"], "79dc3f20-e34a-40bb-99d6-1a0cc060042f": ["489b6113-8830-4f28-9ebf-8aeaa9933113"], "4f06b769-1375-4f26-b146-c5d6f696cae4": ["7ffdb084-0fe1-4877-be55-f65196a9f967"], "40068d66-5892-4050-aa55-1eb7bb35b7c6": ["7ffdb084-0fe1-4877-be55-f65196a9f967"], "0c73dea0-6959-4f31-8842-6814e80f8130": ["8003db6a-098c-40c1-baa8-6a4e9d387d42"], "80267b1e-4189-4897-b410-66804209540b": ["8003db6a-098c-40c1-baa8-6a4e9d387d42"], "7cf6b87c-898c-4ebe-a155-e75d305b73e8": ["1c2c5833-dc8a-4238-8be9-984dc0f6dabe"], "a4eb521e-6f22-441e-9440-c82ba1865757": ["1c2c5833-dc8a-4238-8be9-984dc0f6dabe"], "937f9f4b-b476-4591-8194-3ad398d1e8d8": ["323601f6-bfcc-42ce-961e-15cda9b430c7"], "d3db25f0-2550-4648-9a7f-7ca8bfef7805": ["323601f6-bfcc-42ce-961e-15cda9b430c7"], "39bf4420-b5df-41a9-989d-24e21e3783d9": ["ce49f9a2-3cfb-480b-9f31-142e9a3eb4c3"], "885d81c0-124d-4f97-a201-31c8f8cbda91": ["ce49f9a2-3cfb-480b-9f31-142e9a3eb4c3"], "4e9f31d5-3c9f-4387-a398-8cad90a5ba00": ["1c571bf0-e3ef-4f9a-977f-dee20091dc9d"], "e8dac579-aae7-45b2-80ec-6858d707b8a6": ["1c571bf0-e3ef-4f9a-977f-dee20091dc9d"], "2391f2fe-6b9f-4360-a239-987e2c6ead21": ["a5a3594e-fa15-4792-8637-b5ea40316e14"], "6e69195e-389f-418d-9f4e-79a3b167b752": ["a5a3594e-fa15-4792-8637-b5ea40316e14"], "0b918d1e-3575-47cc-b0ec-9c04c2036a78": ["249cffa8-1222-45b6-b623-3394ce144ecf"], "6340ce85-609e-4bed-b22f-1c2e299163e1": ["249cffa8-1222-45b6-b623-3394ce144ecf"], "b8c0d34a-eb0a-476c-a813-3b017367ca8a": ["acdf4d30-01df-4d3c-9cfe-76f452780137"], "73d02137-fe22-4289-8bea-77beed91a6ea": ["acdf4d30-01df-4d3c-9cfe-76f452780137"], "6e5ce5ad-9f29-429b-8494-3209ce9a1ac1": ["0916dd53-3a89-4c09-8b15-864f948e6185"], "a56acb40-0668-4e65-ab38-d03bd9a79b3d": ["0916dd53-3a89-4c09-8b15-864f948e6185"], "ec322bc2-bcf1-4571-8f93-8dd5c7c8be8d": ["0bceb978-9642-4884-aa26-ab066f896fd9"], "f3e70a32-85f1-4660-b1a4-e350ab39dc61": ["0bceb978-9642-4884-aa26-ab066f896fd9"], "7fd65c28-b2c7-40af-9965-7756fdb6fe3f": ["b7a03008-f9c0-41ca-bab2-36b48dbf131f"], "8181d272-fd6b-47d7-a174-0be1f5228f37": ["b7a03008-f9c0-41ca-bab2-36b48dbf131f"], "b0a13029-625b-40d3-870d-5296ce1b9f4d": ["609043d9-a890-4a8c-ae9f-2487ec2324db"], "f863dc7c-138b-4cc3-8acd-5b301a507d49": ["609043d9-a890-4a8c-ae9f-2487ec2324db"], "0f4cc74b-9d3b-435d-bc99-9651d10787c1": ["2c456d49-3384-4fcc-9c48-e9a61bf01165"], "f2181cb2-c7b7-4441-8d06-1357df21e145": ["2c456d49-3384-4fcc-9c48-e9a61bf01165"], "94ffffa4-0454-472a-9b5a-5ea3d363375e": ["dc69ef55-1646-495f-bec5-e5a0534f4754"], "eae6bc2f-031a-4cbf-8576-53ab34892c25": ["dc69ef55-1646-495f-bec5-e5a0534f4754"], "a7f8e75a-d3c6-4144-a8e6-2ae6d7782b3b": ["e69aa04e-f0f3-4f40-96a3-3ea52486f7a4"], "b2cf7be9-66b3-46f7-b4d4-e3088d358afd": ["e69aa04e-f0f3-4f40-96a3-3ea52486f7a4"], "d84f4863-1a21-40c8-ba31-093f8bfe5ff6": ["5676c969-e6c5-4d7b-8178-dc56453c30a6"], "165187fb-63d4-49da-a8f9-3e1fce71bef1": ["5676c969-e6c5-4d7b-8178-dc56453c30a6"], "230d1a1c-fe84-4ba6-b7d5-62c663f52f3d": ["039641dd-c6c2-4ddf-8c34-17dca8c5400e"], "2d45fe99-cf80-4558-91fb-9eb2be76bc45": ["039641dd-c6c2-4ddf-8c34-17dca8c5400e"], "f5a2c2de-a8ba-4043-9b5d-ca47d5965d34": ["cbec7a47-02e9-4b8b-95f0-10a5bb6aaba9"], "2b5c3c6f-4bfe-47b0-8496-7015b875b82d": ["cbec7a47-02e9-4b8b-95f0-10a5bb6aaba9"], "75fe0da9-2317-49d1-b7ac-aab9d243c093": ["adf61f64-ac8a-47af-b849-1e27876a1dfc"], "5f514673-6ce6-4a0f-a222-48f079a33a9b": ["adf61f64-ac8a-47af-b849-1e27876a1dfc"], "b4f968dc-0d15-452d-9280-d8c794af25b0": ["ce46e4df-f46e-45c3-afc3-923bb4982a70"], "228981c6-35f9-43d6-8296-ce72abca5529": ["ce46e4df-f46e-45c3-afc3-923bb4982a70"], "8a57b5f6-d98d-4973-9cbc-ffbe00f2eda4": ["b32c82fc-361c-4358-af93-34d859ac83a8"], "27b828bb-56fc-4067-b3df-f2a0b8f90932": ["b32c82fc-361c-4358-af93-34d859ac83a8"], "47014537-4445-4244-9e2f-87f83852f872": ["79b3ddd4-c4d6-4fb5-9a0c-123777864d57"], "017e8f46-5536-494d-b6bd-2e6910d45c91": ["79b3ddd4-c4d6-4fb5-9a0c-123777864d57"], "5451cc92-a3cc-450c-ac07-b93de126d56a": ["cdfeeb8d-abeb-48a9-b53d-7f627b86ff95"], "80ba0c3e-94b4-4f2e-aa99-a4212142f6e1": ["cdfeeb8d-abeb-48a9-b53d-7f627b86ff95"], "e5c1bbc3-2ab1-41e1-8eeb-c89bb7910264": ["4a37aec6-799f-4752-8345-cb00e30840a4"], "291cde95-89bf-4479-9b3d-f905cc1e64c7": ["4a37aec6-799f-4752-8345-cb00e30840a4"], "78752a89-4652-455b-96ca-ceec1adbcd3c": ["99f0d99b-46e6-443d-9922-3f1fadbb8730"], "b6387237-f1df-4ff7-b135-7312f40d0f6a": ["99f0d99b-46e6-443d-9922-3f1fadbb8730"], "e0d427b5-aed7-46c2-b8f8-aa067e027c83": ["c0bbc343-3d73-4f4d-85ca-82d9823c9c4f"], "0bba522c-dd2a-4b48-aac8-7b61515de679": ["c0bbc343-3d73-4f4d-85ca-82d9823c9c4f"], "8e5eeef2-f285-4568-a965-6ae39ab2c923": ["84ebba43-c534-4246-a682-d846f9703030"], "f7e6472d-2c5c-4033-ae1e-8a781316e416": ["84ebba43-c534-4246-a682-d846f9703030"], "a9512a3b-7868-4aec-a40a-62990203e1b1": ["2add74fe-ea54-4a9c-8b9e-2829d2bca0d0"], "d65aa3f1-3979-43c5-888c-203663b71d0a": ["2add74fe-ea54-4a9c-8b9e-2829d2bca0d0"], "0daf4794-30b6-4348-aa04-586ed4d752b2": ["003f487b-1835-4b5e-a5cf-c3e8e8b50d42"], "f152afff-c2d4-4736-8d64-18600e6642e0": ["003f487b-1835-4b5e-a5cf-c3e8e8b50d42"], "2c5411b9-1af1-4d4f-b0ba-09f5582a4d34": ["8b11addc-c42a-46f6-a977-d69291ef17f4"], "964184ce-a1f4-4184-a277-8aff2127819c": ["8b11addc-c42a-46f6-a977-d69291ef17f4"], "8c4b9d48-e83f-4faa-b7e0-ede5416a1c73": ["24f9d4ad-0d71-4bf4-a26e-96ae6f9257f0"], "c1513556-39b0-4866-a963-5a7ea0245610": ["24f9d4ad-0d71-4bf4-a26e-96ae6f9257f0"], "17054e7f-a992-4701-8560-354a245c4cf2": ["60d9b981-3b91-4b80-a747-32018746568f"], "69815222-cdf5-416c-a9db-e354395f29eb": ["60d9b981-3b91-4b80-a747-32018746568f"], "85ea00c6-2bf6-4440-8b2e-7c3813149868": ["22460b7e-d7ee-47e3-9f0c-a66d1f52b576"], "5c3a8ded-1f07-44ba-a1c0-ec532618f6ea": ["22460b7e-d7ee-47e3-9f0c-a66d1f52b576"], "2f74c99c-bcaf-46e4-9782-5f812e0b83f2": ["d3e2b704-df8b-4deb-973b-d8cd1872b9e6"], "933397b9-612f-458c-89cd-2c27ce9e5b08": ["d3e2b704-df8b-4deb-973b-d8cd1872b9e6"], "d7c2209d-68ef-4c4b-9349-e14fbefc0b97": ["3d7fd595-55f0-4f0f-9c99-8983a3e507ec"], "437b1f25-fccc-46bf-990d-247877e9d641": ["3d7fd595-55f0-4f0f-9c99-8983a3e507ec"], "b623d690-28f8-49e8-9ec0-475116f7ab9d": ["d819f19d-8080-48f0-8773-52f52fe509c4"], "1558d8f3-df45-4802-b6d8-100781e705b9": ["d819f19d-8080-48f0-8773-52f52fe509c4"], "9d222381-ea17-498a-958d-1cecc8c40516": ["475f93c4-9e76-432a-ba04-63b3dfa3daad"], "bf2aab06-41da-40f1-905d-6e17c1d80472": ["475f93c4-9e76-432a-ba04-63b3dfa3daad"], "57916e62-bb9d-4672-961f-a7a554dc2c4c": ["5b844a2f-3ea9-4fe0-a54e-e434894ff66f"], "38619320-63d3-4c77-abea-90c3dca6f953": ["5b844a2f-3ea9-4fe0-a54e-e434894ff66f"], "7427789f-70eb-4df4-bef3-c674777b65e6": ["75497485-d19b-4108-a218-1bc19433b321"], "72478b30-57d8-45e2-9958-6023f6fc0baa": ["75497485-d19b-4108-a218-1bc19433b321"], "80c08c82-c884-4bf1-9200-e0287cf9ad7b": ["a3c4d3ee-d1d9-43b8-b24b-becde039c7b7"], "6a2838ce-9f9e-4d64-a3ee-d61f036e9dc9": ["a3c4d3ee-d1d9-43b8-b24b-becde039c7b7"], "595a986c-4614-45d3-86a2-bfe03ac19f6a": ["41458faf-15eb-4af4-a34a-d97ec3ec7f3a"], "ea192a39-b02d-4a2b-8fcc-eb82d9eeb7b2": ["41458faf-15eb-4af4-a34a-d97ec3ec7f3a"], "a078f8bb-7537-4ccd-bd1a-a742eedb14e3": ["3ccdcf3b-9f87-4428-b7a9-9c46f655bd6f"], "9af37201-541c-4a4b-a382-7df84f872e5a": ["3ccdcf3b-9f87-4428-b7a9-9c46f655bd6f"], "1a4779ba-9de1-4c90-ae1c-383c2b252b07": ["b822c109-ba8d-4dcd-81f4-8b42397c2315"], "ca7a9151-0186-4c01-8650-0f8b3471a4b0": ["b822c109-ba8d-4dcd-81f4-8b42397c2315"], "b5d37651-6780-4849-9f83-078e38e17956": ["e2b4799f-3cbc-428b-8a8c-ee9a08216052"], "6193d679-fda1-4b06-95e4-799302bcf56a": ["e2b4799f-3cbc-428b-8a8c-ee9a08216052"], "07f2dec2-e6dc-4ff3-98f5-348c1247ea0e": ["9f6fa392-49ad-4ad8-ab97-7cf6976a905e"], "e8e60b4a-9455-4ca4-b160-c113e9922350": ["9f6fa392-49ad-4ad8-ab97-7cf6976a905e"], "d86bf77a-1049-430f-b11a-cc428947f55b": ["1886c613-8da9-482a-9fad-e82a2e27d872"], "838475ea-3cba-4cfe-af25-d36363e63f99": ["1886c613-8da9-482a-9fad-e82a2e27d872"], "5d1e987f-bbcc-4e79-bcec-55a1f3e273ea": ["df24fd52-12b6-4ba6-bfeb-28ca4c73fa30"], "32334362-0e97-412b-b2f1-e6287b9dc910": ["df24fd52-12b6-4ba6-bfeb-28ca4c73fa30"], "c7101aff-bf92-4fc1-8258-975f4e7203e0": ["03c6874c-ca9f-4965-8866-2c39cbbf55e8"], "e42876da-c6c0-440a-928e-d9db1ec805ec": ["03c6874c-ca9f-4965-8866-2c39cbbf55e8"], "82d74caf-7545-4004-b0cb-689b188b0974": ["afe5f33e-e4e0-4d12-bf28-5b837d17a0e9"], "fa90c9c4-940f-47e3-a49b-4bf6188e6197": ["afe5f33e-e4e0-4d12-bf28-5b837d17a0e9"], "33c9b094-2746-41a4-b4bc-7ba792992d5f": ["456a23b8-75a6-4e3e-8a7a-68352aa32598"], "0fed7aab-b116-4dcf-9480-6248abcbe406": ["456a23b8-75a6-4e3e-8a7a-68352aa32598"], "c11b4401-0038-4599-8842-5384985df4db": ["efb36fe6-ae60-4b52-ab88-f8e4e94a82ff"], "2d9fdb93-f1db-4090-a2df-34cf53400611": ["efb36fe6-ae60-4b52-ab88-f8e4e94a82ff"], "c5b62a8b-4670-4b8c-9666-9ea83a8ef9cc": ["9c702393-df6d-4355-a473-b2aa3dba8edf"], "4edc622e-0a60-4f1a-8903-cc53d26bb811": ["9c702393-df6d-4355-a473-b2aa3dba8edf"], "5c6687e7-500e-43e4-a333-297464199664": ["09cc9d87-60be-4e2d-b769-f00ec2369282"], "9cda48c0-122b-451c-8df1-5b360b31062f": ["09cc9d87-60be-4e2d-b769-f00ec2369282"], "9bc8dabe-0d99-4656-8a5a-e6723326936e": ["70dd0d5e-1b3d-42d5-b31d-c959dd00d875"], "6e67a721-4299-4926-828d-9de19b1bf0ca": ["70dd0d5e-1b3d-42d5-b31d-c959dd00d875"], "08e3c32e-ba88-41eb-8ae5-e9d91863618f": ["fbaf60c6-ae22-44bb-bf00-96f59789d4da"], "44499d5c-1622-48e5-b1fa-ace47c196a23": ["fbaf60c6-ae22-44bb-bf00-96f59789d4da"], "3b8a828b-8fe5-4843-b0c2-3e24604e09b0": ["14dcc0a0-0d8d-4189-9933-f91651a62abd"], "20bbb962-13c7-4e1b-8397-8e7becf47140": ["14dcc0a0-0d8d-4189-9933-f91651a62abd"], "3b0eacb0-1776-4b5b-8de2-ed8ad0fd42ff": ["6b814013-0a82-4878-95c6-e97f9284de03"], "d92040fd-0f89-4081-b5fe-9ac2de406ee9": ["6b814013-0a82-4878-95c6-e97f9284de03"], "b5fc9c41-d6b7-415a-9f3b-39a3ac17ae1f": ["7062dbd1-55c5-454c-aa06-c70c944bbbe2"], "bd33989d-5e30-484d-a605-111628c827f1": ["7062dbd1-55c5-454c-aa06-c70c944bbbe2"], "7f748ebc-0032-4d7e-aab3-1f5eac98575d": ["fa73b382-4b44-4938-8261-1539c3ab4681"], "a699aeeb-49b7-433e-8961-ef5064efe207": ["fa73b382-4b44-4938-8261-1539c3ab4681"], "9064c19b-aa8b-4eb7-8f70-7f47b51aa80a": ["02e1fc44-4752-48cd-9b1d-85d30c83554b"], "d7eb8bf7-b5ba-4457-9f90-7b6447598e03": ["02e1fc44-4752-48cd-9b1d-85d30c83554b"], "3af30f88-8c02-409b-a0eb-7df878b86ade": ["191cc692-1edb-4b32-a06c-5017eb4364cc"], "9f38fab9-2ff9-4b58-95e7-cf5342a60bc7": ["191cc692-1edb-4b32-a06c-5017eb4364cc"], "4e352b7e-c922-4ff9-8893-54c300c2dd9c": ["3b01463e-0285-43a0-b987-bc1e715b5c29"], "f3fe2955-6dcc-4c55-8824-a3f46c2d5e9c": ["3b01463e-0285-43a0-b987-bc1e715b5c29"], "9021e955-b07f-492f-b580-8cea36216c98": ["65e643c6-a3a3-4d01-8880-fa6f72f145b7"], "1cff0dad-edd8-4ea4-95ed-11132b84a954": ["65e643c6-a3a3-4d01-8880-fa6f72f145b7"], "a9bf60b6-1020-4b47-bee0-f5d7b994dc65": ["65e643c6-a3a3-4d01-8880-fa6f72f145b7"], "7471c78e-4df5-4cee-a20c-bd77e6dbf4e5": ["e0de5fef-8b95-4bef-9f39-9e214efd8503"], "e65647a4-ff1c-44a2-88e0-72fe2d29dc08": ["e0de5fef-8b95-4bef-9f39-9e214efd8503"], "2ceb9971-ff78-461d-a970-3fc922869120": ["36fbd1aa-e08d-41a2-be83-80cb0325b42b"], "b4f55f5d-715f-4345-aa5c-b2c4fd3fcc51": ["36fbd1aa-e08d-41a2-be83-80cb0325b42b"], "c2826290-497e-42ff-8711-e73c8478d159": ["8c2682a9-c14e-406d-b916-88df20cba091"], "ff7f32a5-eb46-428f-884d-99784994b87d": ["8c2682a9-c14e-406d-b916-88df20cba091"], "d877890a-f38a-472c-ace1-5cd9ffe0ad33": ["aa19b6a0-c3d0-4ddf-9e39-3794d9254570"], "09d9f8fc-11e3-4822-af75-0290c12aa6b9": ["aa19b6a0-c3d0-4ddf-9e39-3794d9254570"], "7840911c-b200-47bf-8708-2e0a7fbb2ac2": ["1ece072e-2b62-4e42-b1ac-f23ace9b5b3d"], "abe60f31-a01d-4d11-8d7d-a5f155bfed32": ["1ece072e-2b62-4e42-b1ac-f23ace9b5b3d"], "4db7ab13-a1f1-4a1a-ba95-34017c994a17": ["516df69b-cc66-4b9e-8c1d-42cb8dda5e37"], "85800057-c76b-49f8-af90-648f65070480": ["516df69b-cc66-4b9e-8c1d-42cb8dda5e37"], "12fe7035-3c5d-492d-b4e6-c3da3c598ef2": ["5383ebb2-84ba-484c-af8b-65aef7c7f48c"], "ecc79fac-d72a-40b3-b733-2244961202b9": ["5383ebb2-84ba-484c-af8b-65aef7c7f48c"], "3d5d8985-7150-4cc1-9aed-07dfc669e5b2": ["474dda88-e2e2-4cab-9161-633ad21bce60"], "1e775c72-4c39-4544-b2dd-39c5337592f0": ["474dda88-e2e2-4cab-9161-633ad21bce60"], "b36f6983-e4db-4af7-b78e-bef2fe87cb22": ["bca97bc2-757f-4c08-9786-9d6192371dab"], "8196e1ce-464a-4f33-8279-0546b67cf95e": ["bca97bc2-757f-4c08-9786-9d6192371dab"], "522859ac-9986-4089-82a5-c94cd1814165": ["1e1fffab-2d52-40a2-b270-de8552c83e48"], "bf125c0f-6092-4440-bbec-e996afe74188": ["1e1fffab-2d52-40a2-b270-de8552c83e48"], "d9c6a016-f926-4855-b099-297704f1becf": ["1aace2fc-93e2-49bb-97f7-d464fe5d1763"], "f4ae410d-c04b-461c-baf3-8b33b0ae77c7": ["1aace2fc-93e2-49bb-97f7-d464fe5d1763"], "d34f6543-0796-4f19-bf4c-ebffce7d7720": ["d69c1214-2977-4e26-9f59-4837d2247e42"], "88157ec8-35ac-4d85-b55d-d655ad3ac234": ["d69c1214-2977-4e26-9f59-4837d2247e42"], "205aef98-8c8b-4a9f-9e10-fa1ccb00d0bc": ["26ebc4f1-7eb5-4fc0-93a3-2cecb6317cc1"], "b014a7a4-2c2b-4563-8c10-5900b42f56b2": ["26ebc4f1-7eb5-4fc0-93a3-2cecb6317cc1"], "bca4076b-8d1d-47fc-bccc-89713809ef5f": ["b2368064-17f9-4663-9681-8290428b9841"], "02d9a457-95b2-405c-b321-f213ac020794": ["b2368064-17f9-4663-9681-8290428b9841"], "ddee8903-52bc-45bb-b6ac-78d5f034aeb2": ["d1953b92-a7e6-4a0d-9534-e74ec76a0e77"], "e4dbfce0-5aee-4aa5-acdd-1e59ad9d4620": ["d1953b92-a7e6-4a0d-9534-e74ec76a0e77"], "8f854222-13a5-41d7-955c-fe944f9ff3df": ["7a8253a6-ac81-4b1a-a970-45251fcb3338"], "b6d7ab64-94f2-4562-b74b-a412f3d05c28": ["7a8253a6-ac81-4b1a-a970-45251fcb3338"], "19ad93fe-7ecf-422f-b40e-700b11425a8b": ["34a13da9-47fb-4b5c-bb71-625ffea09c0d"], "5aca98e9-c0fb-41da-809f-c61e5e437d2d": ["34a13da9-47fb-4b5c-bb71-625ffea09c0d"], "1153efba-ca06-4b90-ab44-05cd394951c2": ["488a0d01-b50c-48fc-b1dd-7ccd2cf2640a"], "85a08473-3b57-4607-a0e6-c9c32f7e1092": ["488a0d01-b50c-48fc-b1dd-7ccd2cf2640a"], "13b3943d-219d-4c83-92c2-c99ff4a1dc2e": ["af013f2f-f745-47e9-8c26-4a571fcbe415"], "4715ad69-31a5-4354-8369-4f8ee4af8484": ["af013f2f-f745-47e9-8c26-4a571fcbe415"], "45277081-4552-4874-a8dd-a59f1ef2fa51": ["f3006f59-7429-4b68-851e-d69076655709"], "f6b1853e-2738-422b-b8ae-8cd7c489c44d": ["f3006f59-7429-4b68-851e-d69076655709"], "e480f164-9a7d-4c7f-9e7d-2896d58f0bb0": ["0623becd-dabc-4948-813e-954e3539006f"], "6754c63e-df1d-4117-852e-0f05372b7cbf": ["0623becd-dabc-4948-813e-954e3539006f"], "2b1eeee7-70c4-4aef-a1ca-b48347274e60": ["e888ecbc-b2e7-4745-8429-351ccb2cd302"], "120fdd4b-bc87-4513-84d7-e12f045c1998": ["e888ecbc-b2e7-4745-8429-351ccb2cd302"], "f6d4db26-537b-4232-82bd-cb1cd250188d": ["37e6042d-a7bd-491e-973c-39e6ea620e34"], "ec036a48-4238-4c07-b912-27de2e80dd38": ["37e6042d-a7bd-491e-973c-39e6ea620e34"], "485a29db-de1d-42f8-9586-a05b69faddc4": ["fce3eb66-a788-41d3-8d01-9d7196ff30dc"], "6782b3fd-6328-4fd5-9918-1e655fd59514": ["fce3eb66-a788-41d3-8d01-9d7196ff30dc"], "5cb9122d-02d3-440e-8d16-66f8f506ebd0": ["9511628f-efb9-44de-bb4d-6c6c87df64d3"], "df050302-148c-4fed-a57d-ddcfde5fc45e": ["9511628f-efb9-44de-bb4d-6c6c87df64d3"], "383d7a4e-9066-4ab7-859f-b4020ca6d69c": ["0b80dd5a-b667-4c00-b6a4-cbd1850e2ebc"], "2f9af25c-bef5-4169-9bd9-b065cee79489": ["0b80dd5a-b667-4c00-b6a4-cbd1850e2ebc"], "82385605-03a1-4511-b494-a2b2b3ebd113": ["cee28fdb-737e-4c65-a744-65c1fc2d4cdc"], "9b16fe04-6d49-4fd9-a73c-0f1a7d5a6975": ["cee28fdb-737e-4c65-a744-65c1fc2d4cdc"], "03415bcc-2343-4f36-aedc-b7eadb078494": ["a5eee44b-c2dc-4f8b-8f2c-7a6988b1e2e8"], "300b3117-1e8d-4db7-88f2-6ad9b8730819": ["a5eee44b-c2dc-4f8b-8f2c-7a6988b1e2e8"], "a13a9a4c-0598-448d-bb6e-6150386c8b25": ["b3516d30-2d57-46e9-8479-b60255164825"], "999251a2-11ec-4ce1-80ee-cec1a7c811fc": ["b3516d30-2d57-46e9-8479-b60255164825"], "fb080e03-a237-4efd-914e-7606bd69d1b4": ["13bab0b7-dbbc-4314-871d-59535c191600"], "d3d3b3dd-a444-4c15-b3d5-9143b103ecab": ["13bab0b7-dbbc-4314-871d-59535c191600"], "6e326024-bece-4913-aa26-a03cb59efe86": ["8c294bdc-0beb-4a9a-85a1-424804203d38"], "725f3e76-3eb8-4395-b0e7-6deab3d9e601": ["8c294bdc-0beb-4a9a-85a1-424804203d38"], "8d826e40-0dc5-4831-a607-e307b4205e3c": ["e15ff6c3-a69f-46e4-a585-5d3886e36bf0"], "d1453319-075c-4883-9f16-7075c0c473d5": ["e15ff6c3-a69f-46e4-a585-5d3886e36bf0"], "19d99c06-3b1b-476a-839d-759ed8671cd1": ["c0ff8e09-ccbb-4c34-af3c-c15752a31bfe"], "49e77458-4dca-4765-a8ce-024bbe860657": ["c0ff8e09-ccbb-4c34-af3c-c15752a31bfe"], "2562febd-ae8d-4ce0-baec-cf68e62ce9da": ["80e08af2-489d-4eba-9765-4f23e9619511"], "3ad8e430-a0fb-452c-b928-cbbd938e2c84": ["80e08af2-489d-4eba-9765-4f23e9619511"], "528386fe-7cd6-429e-960a-55efdae8a060": ["28093c36-7037-4e0d-8bb9-457cc849684e"], "efa81c16-6d06-483b-88cf-8872aa2f88bc": ["28093c36-7037-4e0d-8bb9-457cc849684e"], "5753b92f-9ec3-479b-9304-6cfc4cadce29": ["a049b527-6112-47fb-96db-bd8e5eb22679"], "43e2f005-29f9-4c39-8ee8-f2c6c5ee77e7": ["a049b527-6112-47fb-96db-bd8e5eb22679"], "3daa646d-d8e9-4e08-9fc7-a6c56b45bc2a": ["9f2d7a6d-8689-44f2-8edb-2d0c501ba065"], "e405b304-c32c-4431-962a-607576058fe6": ["9f2d7a6d-8689-44f2-8edb-2d0c501ba065"], "ce55b0c1-45dc-4625-b220-734a01996686": ["7c36dcf2-73e5-485d-8df7-d34b9c29043a"], "13245d57-1057-4f61-b74d-bca0539d02a0": ["7c36dcf2-73e5-485d-8df7-d34b9c29043a"], "37de1419-0727-46bd-9bf8-f22a38161fc4": ["8c4d9e4c-0b64-4902-8ac3-48faa2b5bb3a"], "6f98a61b-1a0a-4a72-8a68-dca768f1ede8": ["8c4d9e4c-0b64-4902-8ac3-48faa2b5bb3a"], "5349a4e5-4d51-48f6-9839-7bdbf3e87c4b": ["0d5edf12-2420-4037-b1ee-b1c031545d85"], "241b80b5-ae74-4492-9cab-7e41c6a0c506": ["0d5edf12-2420-4037-b1ee-b1c031545d85"], "95a593c8-254a-4750-a9b9-f27fb6a05985": ["53e56719-aa3d-4f78-9c78-e00a02f382b4"], "2922b733-550d-4dd1-98e4-aa493b383bde": ["53e56719-aa3d-4f78-9c78-e00a02f382b4"], "1e077998-1cdb-49f3-bec7-4d07047922ea": ["71666151-070e-4dd3-844d-abe0ff2b00d4"], "fee426de-9e03-4cf3-b1cf-e2dbf4b16efc": ["71666151-070e-4dd3-844d-abe0ff2b00d4"], "ce46ca8b-dc84-4ed8-976a-ea0272c88824": ["30e51ad7-c8e0-46ea-8e3f-c7f10fb99796"], "e943f2c8-08be-4aa2-90ae-ea701a7cd57d": ["30e51ad7-c8e0-46ea-8e3f-c7f10fb99796"], "7ab39640-9797-47ce-867e-7e97f46974f7": ["3a7d57e8-94eb-4322-b452-3ececc9f55e2"], "6ebec842-f9f7-406d-b352-6df34bcbaf4b": ["3a7d57e8-94eb-4322-b452-3ececc9f55e2"], "23e3db06-a3f9-411a-be15-05a1744406ee": ["89ebcb91-4e52-475d-af62-135572109387"], "32c2960f-f062-4b1c-bdcd-bb3e7b8df7c3": ["89ebcb91-4e52-475d-af62-135572109387"], "d139cfb2-e203-47ae-b928-581cc86c85c6": ["e5503ad4-b67d-4f79-a54a-0efffff8520e"], "5a5373a0-395b-4a9c-a967-2acc61e4d924": ["e5503ad4-b67d-4f79-a54a-0efffff8520e"], "c23ccf9a-efa5-40e6-bd0f-28a46b164aa8": ["9a0d119c-97dc-468e-a6af-f8df50b50247"], "855bfbf8-c143-4cad-acdb-31a19c496bc5": ["9a0d119c-97dc-468e-a6af-f8df50b50247"], "16f8497e-da7c-4580-a121-5570c9ab319a": ["117d2474-eb20-4ad8-b413-e468f28500ed"], "262ddb07-7a49-44dd-aa32-11b9c373eed3": ["117d2474-eb20-4ad8-b413-e468f28500ed"], "cc0664ae-11e5-459e-8222-8025ac6dc605": ["31558fb3-451c-4e21-9535-1d1472a0ae8b"], "fa660b8d-00b3-493c-86c7-474e28d7f2fe": ["31558fb3-451c-4e21-9535-1d1472a0ae8b"], "b131a4e0-87ba-4c54-8be3-0be0ec758d8e": ["7708d4c2-6fb7-47be-bb18-05a8eb9016c5"], "75d77e4f-d70a-4300-87d5-7b71262dfe8b": ["7708d4c2-6fb7-47be-bb18-05a8eb9016c5"], "659e530c-9076-456f-a96f-92fb51ba7bef": ["3c43e889-a7d7-40fa-801e-f2161e559cc8"], "724a3d49-391f-4d2f-bced-7023f444fe58": ["3c43e889-a7d7-40fa-801e-f2161e559cc8"], "2512c71b-d921-4e5b-ae37-39de81773a67": ["4d9b1001-22cf-47b5-9897-413126c4ee29"], "f98bd949-63b3-4a06-a932-ba1f847eabe7": ["4d9b1001-22cf-47b5-9897-413126c4ee29"], "49402e52-c091-4eed-bc8d-1f0f5e3bafb6": ["23a23fa8-4457-49dc-8db6-4a4f26d087b1"], "0263a611-aff5-4993-aa51-1279d8099a98": ["23a23fa8-4457-49dc-8db6-4a4f26d087b1"], "45e04216-e3c3-49cb-887d-2576e0f79651": ["9b07df47-652f-4262-853a-d2f4dab4f019"], "f2464ad2-23af-490b-a3e9-0e48f6d43b7b": ["9b07df47-652f-4262-853a-d2f4dab4f019"], "c9c12914-eea4-449e-a315-ebc16d565890": ["9233b5ea-7415-4c22-bbd6-ce6b35a80a8b"], "a67d4c80-6c4a-4c3a-9520-2ee58985b40b": ["9233b5ea-7415-4c22-bbd6-ce6b35a80a8b"], "694ff0aa-b8d5-48fc-b5f9-928010dc38bc": ["9f9b59ef-076f-4987-a934-b2e3c6457891"], "9b8428df-d61b-4584-94a9-72a3cf440d27": ["9f9b59ef-076f-4987-a934-b2e3c6457891"], "18afd922-4861-462b-b6f0-300d509c3582": ["9f9b59ef-076f-4987-a934-b2e3c6457891"], "c6706232-01b8-4413-8520-6545eaa7afd0": ["9f9b59ef-076f-4987-a934-b2e3c6457891"], "9321c4de-33e2-4355-bf8a-61f61de5275d": ["9f9b59ef-076f-4987-a934-b2e3c6457891"], "0e962bf2-bf09-4719-ab34-3b4902f22070": ["5c173e79-7b9e-401c-8467-d1be4a2aa121"], "8bfa63b4-25ab-4482-8e65-490286d9bb74": ["5c173e79-7b9e-401c-8467-d1be4a2aa121"], "23a3e8fa-1dad-4824-966b-0f3119d380ff": ["192e55d1-59c5-4f26-a509-bb6527cbf791"], "b7415740-ca7d-4ed7-9fa3-fa5e513908d2": ["192e55d1-59c5-4f26-a509-bb6527cbf791"], "7db8237f-6a7d-483d-bb73-29b00f7d3b6b": ["4ef9539f-503e-450a-b5fa-44ff52a351f9"], "6a085b53-2872-451c-aa1b-852c27776ce6": ["4ef9539f-503e-450a-b5fa-44ff52a351f9"], "0eeef591-2bc3-4bec-8cb3-1c0261051f2b": ["a55660d7-11ef-4f60-a79d-28781bea7bc3"], "b220e69b-8a51-42b0-b28d-fe876690e764": ["a55660d7-11ef-4f60-a79d-28781bea7bc3"], "22c969d5-ed58-4d1f-bba4-589bf5c9c78b": ["c66df00c-cfcc-4fe2-9608-1ed1217400a3"], "ce4e670b-f1fa-4405-ac76-374628e65cd4": ["c66df00c-cfcc-4fe2-9608-1ed1217400a3"], "4709bc18-de09-42a9-b974-62fffd61867d": ["5c0d2f28-c115-4c22-8793-feb9db5b5810"], "5b4a000d-ee20-4473-8cc1-fb4e5213defd": ["5c0d2f28-c115-4c22-8793-feb9db5b5810"], "ac9ceaf1-8de8-49bd-a8dd-862d659e7e54": ["e6015919-3560-4d44-a319-d7eac98bdbd8"], "1a17c41d-0814-4ffe-8d05-468d5722df73": ["e6015919-3560-4d44-a319-d7eac98bdbd8"], "993ee5d6-606c-40a9-b6f6-e276318bea53": ["0810007e-1361-4f71-88f4-324afb27626b"], "6a7eae36-4cc9-432d-a3a6-54bb11512e6e": ["0810007e-1361-4f71-88f4-324afb27626b"], "06c84608-05d3-468e-ba42-1f323e87d5bc": ["c03aa591-48de-4dd4-a76a-4760cd72a7d1"], "0edeb6d8-3baf-4a55-9dfa-6dc1cf96f8f2": ["c03aa591-48de-4dd4-a76a-4760cd72a7d1"], "5feb7b6a-14cf-4646-8fba-973c0590eacb": ["0930fa77-cb29-4523-88b5-224d851510a6"], "6a11b3cd-58b2-45ad-a7a3-e7eae1b5252e": ["0930fa77-cb29-4523-88b5-224d851510a6"], "1106a3ad-58ee-4423-9149-cfb9944834f7": ["d6a31112-51d7-4b1a-8421-a8e4398a9360"], "bd5f9a61-681c-4092-9f28-90a3d1659d98": ["d6a31112-51d7-4b1a-8421-a8e4398a9360"], "ad2cf2f0-ff80-4727-be9f-99244e910695": ["37312786-1237-4e90-90bb-9a6617977575"], "603bea31-35c6-4723-9653-8ac25c46f2be": ["37312786-1237-4e90-90bb-9a6617977575"], "49c96527-e05e-4049-a62f-175ac52ae268": ["42fc802f-ebc2-4b84-aafd-d1337947d00a"], "a4f29494-65d7-47fe-8755-f6b086737cf5": ["42fc802f-ebc2-4b84-aafd-d1337947d00a"], "b2c9f215-4ce2-4f7d-81a4-f92da2537ba5": ["25270a42-e9e6-4ca0-b674-713e191fae3f"], "95af5df4-9c2f-410a-9989-c07a92d47089": ["25270a42-e9e6-4ca0-b674-713e191fae3f"], "83c2d5ef-b163-4b97-9f75-d56f38fb5146": ["d84735ed-ba9f-47df-8f5b-b8da29bdbaf5"], "12f89cf4-ae0b-4fa0-9a3a-d131a9ef9114": ["d84735ed-ba9f-47df-8f5b-b8da29bdbaf5"], "8e88099f-413b-432f-aaa4-2acffc65a093": ["8c82b587-bbbb-4667-8fea-979e6070f875"], "e17e1052-11eb-43b0-b8b5-1ed90f304b64": ["8c82b587-bbbb-4667-8fea-979e6070f875"], "05d99f7a-61fa-4695-9b0c-7802a70662a4": ["a9548141-d11e-450c-ab42-d1f95924a725"], "3070aeb8-55d0-4624-b17a-be892a3c26f7": ["a9548141-d11e-450c-ab42-d1f95924a725"], "573edc34-7d9f-4123-8f6e-9a21566c8e8a": ["4856a7d7-3fd7-42cf-8719-5e46ce6ab070"], "a2f2717b-1578-4eb2-84f0-92f802bf53fc": ["4856a7d7-3fd7-42cf-8719-5e46ce6ab070"], "9f0f04b3-b6ae-4eae-ad18-89806b259357": ["47816987-8464-428d-a654-ffb70ffb0c98"], "ffd7c17c-4e24-420f-b451-1f83205690df": ["47816987-8464-428d-a654-ffb70ffb0c98"], "48bc89c0-3815-4a3f-a058-e4618028ea99": ["9e1ac94e-812d-43cd-ac6c-8430f15fd078"], "12b9bd39-058b-4d17-8664-527bc55252a2": ["9e1ac94e-812d-43cd-ac6c-8430f15fd078"], "493e5700-fd93-493a-90f4-0dc587eed055": ["b7eb9ce4-0891-401e-8326-ff1897c9b1d1"], "2f9d3052-c521-44d0-bed2-c35ff3aed2f4": ["b7eb9ce4-0891-401e-8326-ff1897c9b1d1"], "c6bdd8bb-a745-467d-98bd-b8f2be66c626": ["5488a103-92a0-4ef2-a6dc-d0d7f91b1a56"], "35eb2437-8379-4a54-9f8e-d722132da2f2": ["5488a103-92a0-4ef2-a6dc-d0d7f91b1a56"], "cf9edb9d-7e05-4ad3-96b4-1a6e4510d79b": ["3f6ae810-6df3-4e1b-8c6f-2270352bfdf2"], "66369a7a-bbac-4140-82af-a785161225d9": ["3f6ae810-6df3-4e1b-8c6f-2270352bfdf2"], "387e7ec1-0be9-4117-9234-4b7841e1f797": ["ff467f2e-a51f-421b-b860-33e3df2e1904"], "fdffd9db-33d7-4725-a072-3c57d7e8f1ec": ["ff467f2e-a51f-421b-b860-33e3df2e1904"], "617729c1-957c-4e0c-9d0a-04b30871f088": ["3fe6b330-505a-414a-95be-7173ffc87169"], "0ab35f58-a031-435e-8d27-75cf8a6ed81a": ["3fe6b330-505a-414a-95be-7173ffc87169"], "abd35718-cb09-4346-853c-e7f5e97a0abb": ["7c8501ff-608a-4493-905f-f082215ecbc9"], "a7d9bf22-0a7e-4dad-b616-af6467a00146": ["7c8501ff-608a-4493-905f-f082215ecbc9"], "796dcab7-6388-4268-b3fc-f0353cb640ce": ["ffb3c46f-0942-4a74-ad85-4e1f92eabe19"], "8b438488-e597-46f6-8e05-a76e22a13cae": ["ffb3c46f-0942-4a74-ad85-4e1f92eabe19"], "c0048b6e-b102-4aa2-a4b1-320365e508d3": ["62334984-9fc3-4db4-b7cf-d9b5c4fbee00"], "ca7eafa0-c573-4d88-a379-a67a7d58b392": ["62334984-9fc3-4db4-b7cf-d9b5c4fbee00"], "7a8cb17b-2c0c-4d69-8972-ac1d22e393f3": ["e2c329b4-a970-4a6f-a21b-5a3475036a1b"], "101d180b-2c23-4c23-82bb-ce78df76e6a0": ["e2c329b4-a970-4a6f-a21b-5a3475036a1b"], "5e369c2b-4024-4ec9-8ede-64c3c9b4bc38": ["2ba2785a-d298-4146-92d4-0eb754454207"], "c08d1ca1-4009-4dcd-92fa-65e54fb6ca1e": ["2ba2785a-d298-4146-92d4-0eb754454207"], "e8bcc098-d2e7-4a82-b99f-32f6d0ff3265": ["2f84b89a-9e1f-4e41-b11d-3ab66c95743a"], "b669f263-3f7d-4b4b-a784-712b9245c595": ["2f84b89a-9e1f-4e41-b11d-3ab66c95743a"], "78153998-5d74-459b-9e69-027fbf0237c3": ["97deb17a-1a0e-4ccd-bda1-037a86e5cf2c"], "9c404fc9-626b-4103-ac67-3144fc6e96da": ["97deb17a-1a0e-4ccd-bda1-037a86e5cf2c"], "1180bfcd-28fb-49de-a874-24be3fee7ff7": ["701336f0-2ae7-41f7-8dab-066c91671661"], "3f580ed9-b7fb-47dd-ade1-43a836956c98": ["701336f0-2ae7-41f7-8dab-066c91671661"], "9853585e-5c7f-4f8b-bc59-35b3fad1079d": ["0b32aaa1-fd6c-40f0-9f24-7daf832e8889"], "22e3e054-bc98-4f92-bc6a-773ee0d6061d": ["0b32aaa1-fd6c-40f0-9f24-7daf832e8889"], "3646517d-2676-4ffe-aecf-232a8e79e608": ["07321723-3b50-4006-9189-fe853271f130"], "7635dc32-3283-47ff-85a2-e9cc31367c84": ["07321723-3b50-4006-9189-fe853271f130"], "0016f9a9-db94-46b3-8b67-ad2762908237": ["0ec262c0-37cc-48a0-a675-77c6ef651722"], "5e45334a-c3cb-4c27-9bf0-37d025381b7b": ["0ec262c0-37cc-48a0-a675-77c6ef651722"], "6cc0f993-0bdd-4717-b027-43ab7f4eb479": ["69f405cf-45d4-4b92-b5ea-c4b4eb90ca28"], "9bc1d610-f155-4af7-9613-8194ba058598": ["69f405cf-45d4-4b92-b5ea-c4b4eb90ca28"], "ec529270-0af7-4fdb-b0f0-906243b8fa29": ["9b30ecf7-6e63-471f-9435-ee1d1ffd9260"], "bb287e17-a2cc-4928-af96-ef0a4b595a40": ["9b30ecf7-6e63-471f-9435-ee1d1ffd9260"], "932994cf-d327-4f4f-aa87-1da54faa3246": ["5b347eae-28df-4cce-9fd9-b483a568f68c"], "e1060990-0dac-4b41-8e15-f5cbfd66cf0d": ["5b347eae-28df-4cce-9fd9-b483a568f68c"], "86269c16-8b94-4711-a975-8ea7f25b3271": ["742f8a5f-b650-437b-b64e-4e153de29b4e"], "d7513e9f-8838-40c2-812d-f59e6ae15ba0": ["742f8a5f-b650-437b-b64e-4e153de29b4e"], "8a02c486-f72b-4a34-a3c2-886e8e1f5910": ["99bd0456-40ca-47b4-974e-c92058cc86cd"], "97debc86-e45d-417b-9bb5-0c8cd6ba25d9": ["99bd0456-40ca-47b4-974e-c92058cc86cd"], "0ce2aa18-b43f-438f-bdfe-885bdcc6701e": ["16f82bf4-a668-4ca4-88b2-46fec1536b9c"], "886dd966-7a66-4925-b166-7e4245d341aa": ["16f82bf4-a668-4ca4-88b2-46fec1536b9c"], "56fa97ad-5168-4b80-ba9b-3eb73d87704b": ["93cc7619-b002-4ac4-9e8e-751c045f46b8"], "6f5fc86f-4a57-4640-9161-244c692b70cf": ["93cc7619-b002-4ac4-9e8e-751c045f46b8"], "5045b0a0-38b3-4e4a-af0f-d09f094fb3a1": ["4e73493c-2ee0-482b-aa25-12a1867cdd9a"], "6d85fbf5-0ba1-44af-91f0-d14302bcae31": ["4e73493c-2ee0-482b-aa25-12a1867cdd9a"], "1efe6ce7-33b5-4645-981c-ff097d4e8466": ["c471d892-eb96-4764-b55b-7c6473c32d1c"], "62142d63-5c02-40a3-8d09-5e977288fec2": ["c471d892-eb96-4764-b55b-7c6473c32d1c"], "cd3d7a43-fc8e-4cb8-8130-0d60db29c38b": ["6679f71d-6cfe-42e3-a843-366ab4673122"], "5965673a-4a27-4f60-833d-d6b34aa1c484": ["6679f71d-6cfe-42e3-a843-366ab4673122"], "199224db-5961-4877-bf7f-d7628446f7fb": ["e7fb9733-66d7-4ea8-9859-68f289d6a3e9"], "cea622e7-5586-433b-b463-249edc3e3b1e": ["e7fb9733-66d7-4ea8-9859-68f289d6a3e9"], "b300a184-37ea-4f0d-bdbe-c40725dd88d5": ["a74c57a5-8567-401a-a675-c93f73829a9b"], "26d62da6-0c3e-4683-b0d7-8130d4483d04": ["a74c57a5-8567-401a-a675-c93f73829a9b"], "f8f2efb3-29c7-4b08-b913-9e053d56c902": ["bbfad7e3-4092-4a25-915f-88aec7cb367d"], "2b38ee7c-7185-40a1-a95e-15554b24261b": ["bbfad7e3-4092-4a25-915f-88aec7cb367d"], "afa3417e-7dde-465e-88b2-11c3fb52309d": ["d9bb1ff0-d04b-47eb-92f2-d4a471de9f56"], "51228be7-7a44-46ff-873e-43d289e1f186": ["d9bb1ff0-d04b-47eb-92f2-d4a471de9f56"], "d6da7f0b-3d76-4cdd-b7a4-7fa87d7e0d29": ["69a0fa07-4307-43ec-b7f6-018db58a8570"], "a565e3a7-de5f-4691-ae88-393817229459": ["69a0fa07-4307-43ec-b7f6-018db58a8570"], "b7c0d9b4-6f0e-4769-ad21-21271740c1b3": ["7a56bcc8-8880-4d06-b437-a4e14722c345"], "590cdfbb-8634-46a0-9725-ea99db6ce637": ["7a56bcc8-8880-4d06-b437-a4e14722c345"], "6193cd87-3aa2-415d-a91d-0c72d1206217": ["d6871485-4134-4a67-8081-62a4a31c22af"], "3b6f1dd1-113e-4da8-b29c-ec6f1014a296": ["d6871485-4134-4a67-8081-62a4a31c22af"], "750ce885-5447-41df-9559-e7b48fbdcaf3": ["201a163c-ee6e-4629-82a4-cd034f845fd6"], "1ad97265-3431-497f-a2ff-62044361d5a8": ["201a163c-ee6e-4629-82a4-cd034f845fd6"], "96efd124-2d12-42b4-b312-f17c4e84aded": ["201a163c-ee6e-4629-82a4-cd034f845fd6"], "89d0850c-7caa-4762-81e9-04ae6597a1d3": ["1ea9e24d-29f1-48c2-93dc-d5bac1fe7dbf"], "cf7bc33f-05ea-41be-b584-f0802bc95019": ["1ea9e24d-29f1-48c2-93dc-d5bac1fe7dbf"], "0d54e591-b653-467e-b8df-25676bf261c2": ["8997739f-89a8-4a17-8fd0-bc210dfe3253"], "d9f4183f-9fa5-435e-9a03-b3469f01418a": ["8997739f-89a8-4a17-8fd0-bc210dfe3253"], "ecc7a278-1ca7-4519-8e05-705a200776cb": ["dd923d8d-d935-4cb1-bf4b-ba5176b66d7e"], "3824ec4f-4379-4e44-8d6c-5e1fec2ed3f5": ["dd923d8d-d935-4cb1-bf4b-ba5176b66d7e"], "6d0bb139-a39c-43ac-b8f6-3fb0493fa4b1": ["7bfcf17c-cdbe-4f39-bfd3-c24fc3408ef5"], "4395706a-37fe-43bb-a5b8-1da612b5c5a6": ["7bfcf17c-cdbe-4f39-bfd3-c24fc3408ef5"], "103c7e1b-52f6-43ee-a78f-de5439280f4f": ["24a8ee7e-2a24-4258-b282-046988074869"], "9cf9fb77-4eeb-44da-99e5-ded83ab43706": ["24a8ee7e-2a24-4258-b282-046988074869"], "a1296221-85be-404f-8126-444b85f64978": ["7fdcd7ef-2713-4187-ad69-013ba4a2af27"], "59139138-5c07-4407-ab6d-1dc3bf9f977e": ["7fdcd7ef-2713-4187-ad69-013ba4a2af27"], "c559bfd9-8644-445d-b6bd-35bb4bc54910": ["9551d6f7-0d74-40ff-9917-02a3f257740c"], "92556a50-18fb-4bda-ae41-6a8121a20a25": ["9551d6f7-0d74-40ff-9917-02a3f257740c"], "d7fc78fe-dbfb-4abb-8abf-a9269486de49": ["7185a808-6eec-4cfd-aeb9-9317d67baabc"], "7feb70e2-96ec-4e51-b160-1ff692519ac4": ["7185a808-6eec-4cfd-aeb9-9317d67baabc"], "dcc7d323-af0f-4851-b8dd-f48af61bbb42": ["80d20b01-cc61-42a1-91c7-6fde72fdfdc4"], "a1f352b9-faa8-47d8-b54c-8fa8a4a0818e": ["80d20b01-cc61-42a1-91c7-6fde72fdfdc4"], "bfdeae8f-e689-4ed3-97e8-81f89967cdba": ["8e262d70-e17e-4777-8b0b-a2889c008a1b"], "caf2423e-ffae-40e1-9696-a53f36d0d04c": ["8e262d70-e17e-4777-8b0b-a2889c008a1b"], "1a6d456b-5a8b-4406-96bf-61af54f727c1": ["70f27561-062c-4e40-87a1-748f23cb39b5"], "05a6cd0a-8d14-4d31-a99c-1e5c789b48ac": ["70f27561-062c-4e40-87a1-748f23cb39b5"], "e8bbd8b4-cd1a-4c7c-aada-d99a27b10446": ["fed9c065-86d7-44ed-9812-fd0eae720683"], "78efbb12-f724-41dd-b49c-1e2bb10b1c8c": ["fed9c065-86d7-44ed-9812-fd0eae720683"], "eaf9600b-b7c9-4acb-a032-71bdcd1c1f31": ["b62ad49f-5557-4bef-9ac3-e8c4215bbf00"], "716863b9-d9e8-4845-b130-4c0b67ef9f1d": ["b62ad49f-5557-4bef-9ac3-e8c4215bbf00"], "e490c4ab-495b-441b-960f-55a522c1a85f": ["0689da87-6c32-47b8-9f11-18a563c13c0f"], "c09480d6-a84f-4ad7-a638-f01371ab2bc6": ["0689da87-6c32-47b8-9f11-18a563c13c0f"], "cd87bddd-ccd9-442e-a27e-03ff84ee31e8": ["ed14331c-5423-4448-b38a-e580c455086e"], "a2247c02-aa9e-4ec2-9658-9794e0e320c2": ["ed14331c-5423-4448-b38a-e580c455086e"], "ea3ce2f0-9e86-4610-983a-c3edb81ab838": ["cb35782f-e62e-41f8-ac48-c600f4c39f6f"], "e50d6153-aa75-4077-8d03-34e249626f22": ["cb35782f-e62e-41f8-ac48-c600f4c39f6f"], "e3f59bfa-0468-427e-a1b4-f6bc229eca86": ["e26480b1-5812-4745-aba2-1eb686c18e80"], "efd4adad-496d-4f17-b17b-9befbc68d118": ["e26480b1-5812-4745-aba2-1eb686c18e80"], "f409407b-ded8-4f5a-a57c-0878bb1ae9fb": ["29973a23-f814-4162-858c-8b6b87751088"], "b80a3388-9eaa-4267-a03c-36e5f6dcb607": ["29973a23-f814-4162-858c-8b6b87751088"], "d7255483-9d08-4ceb-9723-e958bf3b3f99": ["d380507b-e6e5-487a-8306-d49c1156eec9"], "a7347fa5-90c3-4cbb-8a13-8a518a7583fd": ["d380507b-e6e5-487a-8306-d49c1156eec9"], "bfe07bc3-c0dd-4851-b418-d472dbd4d9f0": ["fd90eea0-8755-4025-9451-b234a9546b1a"], "f89ac08f-9ab2-4491-aae8-397016a65fe0": ["fd90eea0-8755-4025-9451-b234a9546b1a"], "eba374b1-5aac-4e2f-817a-0fcb8128db8b": ["288ab57c-8d66-4c72-9937-0c0b7547d057"], "c7ef0c47-32d5-4c16-a59d-ce224f4b7cc9": ["288ab57c-8d66-4c72-9937-0c0b7547d057"], "04f8fa37-5437-4573-a36f-7fe958d429fd": ["7a653d6b-bc33-4a5f-acb4-6af5307f1d46"], "90586443-38b2-43fb-bb06-6cbc6b1e7597": ["7a653d6b-bc33-4a5f-acb4-6af5307f1d46"], "0b2f3a19-4cb4-41b2-b4e1-ff1b13d85fbf": ["5a746a12-5b56-4544-8d18-8f732f7e87d8"], "32e3663f-0166-41ae-be14-d890a24b2560": ["5a746a12-5b56-4544-8d18-8f732f7e87d8"], "9323c4fa-0ef0-4f90-8060-c1afff744db8": ["4822c774-39f5-468c-91c7-77c846e8a74e"], "47f1c1b9-da3a-4438-8f02-0f0a83962845": ["4822c774-39f5-468c-91c7-77c846e8a74e"], "f2310792-4d2e-49c5-992f-98a0a7de7772": ["ecef4b52-44fd-4171-a493-ae84f14eb2a5"], "0733d7d9-8969-4aa1-b565-112e99b5cda0": ["ecef4b52-44fd-4171-a493-ae84f14eb2a5"], "42458077-c200-44e9-911d-e1437c10ea53": ["87613d59-bf7b-4916-a095-b7e36f6af7cb"], "b0155e5b-9b04-437a-b21c-f715083daec3": ["87613d59-bf7b-4916-a095-b7e36f6af7cb"], "8276901f-c3cb-4810-a647-9ca674ad343c": ["b1da756e-80d6-4937-b2f6-cae9260d14f7"], "cc62b7f8-d10f-4259-bec1-ef39473f35be": ["b1da756e-80d6-4937-b2f6-cae9260d14f7"], "7e405b0e-bc41-4c5c-9f97-d63cf8586492": ["c46e64f9-cddf-4ddc-97a3-950a57c51387"], "d14f8420-f0df-4d2c-bd9b-69479551d373": ["c46e64f9-cddf-4ddc-97a3-950a57c51387"], "0bae4398-a87c-45a3-a9ca-4477d829e029": ["c4a124f8-cc37-4f69-a76d-5ca953d7f69c"], "3a206214-a9dd-48e7-8294-241a4155a1c7": ["c4a124f8-cc37-4f69-a76d-5ca953d7f69c"], "746eb35f-74f0-4c71-abf6-6ff0bb374d7a": ["41a1830a-cac6-47bf-9897-80cd345b77bc"], "3db66ba2-ae88-4546-bf01-ff2f63c462c5": ["41a1830a-cac6-47bf-9897-80cd345b77bc"], "d9249331-7d90-414c-bff0-f16c04d6e392": ["fa386ba8-aa4d-4834-a7e7-4fba1b4b7d59"], "e2811eac-b56c-4f3b-ad60-904b60f1def4": ["fa386ba8-aa4d-4834-a7e7-4fba1b4b7d59"], "caf99bde-dd27-4a16-9f5c-d4040c6569e3": ["a4a7ff2f-672a-41b9-be02-0bc7244ba89d"], "7e609ab2-9fae-4951-893f-31a43c53bcee": ["a4a7ff2f-672a-41b9-be02-0bc7244ba89d"], "6bf8e729-abce-4e90-9f15-fa5dbe3a1130": ["3e8e881c-598e-4471-8116-9d6337895f03"], "b204d9d4-d0f9-4622-973a-a548f60db14e": ["3e8e881c-598e-4471-8116-9d6337895f03"], "4197a888-50fa-4c7c-95f8-2f2308294ff5": ["a5617531-296b-43f6-bd9e-6bfe70f4f368"], "e70121e2-913b-4c06-a438-62e76dd0c43c": ["a5617531-296b-43f6-bd9e-6bfe70f4f368"], "6d1ab808-50b8-40aa-b6d8-f911ac7b782b": ["59476af1-d334-4536-9c19-9703c57c36c1"], "62e09325-7f7b-4bc4-8566-7f86daae8c45": ["59476af1-d334-4536-9c19-9703c57c36c1"], "71e5c920-f188-461f-99a3-0050fec5d4fa": ["4e87b5de-35dc-4a41-bdb1-d2f03a862b77"], "6ea5624f-745a-40f4-b6c7-947024cf6533": ["4e87b5de-35dc-4a41-bdb1-d2f03a862b77"], "8e623ce6-0f18-4d8a-8ca6-67443bede1fb": ["1d8b8618-ba2a-41ea-a9d6-e224b446e22b"], "24cbf285-5dd8-494f-b525-008945469841": ["1d8b8618-ba2a-41ea-a9d6-e224b446e22b"], "739127c4-5dce-487a-b864-1a2c73240dcc": ["7e898adb-6e32-467e-9c71-385a1c98a91e"], "82e6f7bb-265b-4efa-9f17-c2c379e7ee06": ["7e898adb-6e32-467e-9c71-385a1c98a91e"], "ea73faa9-51d5-4e30-a2dd-99d7432d0196": ["39acd09f-2a95-4079-b13b-7373f64993ea"], "076968e3-2818-4b5d-add4-ca67e577fcab": ["39acd09f-2a95-4079-b13b-7373f64993ea"], "e7fbcf4c-2870-459e-b497-2fcdad7040ea": ["6a7278c3-38f5-488b-92e6-ff5191b997e3"], "3e29b831-a826-4fa8-b7cc-4913ecc55f31": ["6a7278c3-38f5-488b-92e6-ff5191b997e3"], "86b6c779-7575-4731-a50a-007fac2702ce": ["bd1118ce-7f67-4b1c-b05a-0dcd5d5336fe"], "8c06ff74-549e-4661-9f23-4f4804093d34": ["bd1118ce-7f67-4b1c-b05a-0dcd5d5336fe"], "716aec51-5017-4349-95e4-121ea7d670e6": ["f59bb3e7-f4b1-44d2-ae3b-4ccdf5bc75a1"], "d6eee9c0-2ebd-4b98-8e76-b6f3db8ec007": ["f59bb3e7-f4b1-44d2-ae3b-4ccdf5bc75a1"], "7cd22d43-7d73-4fe7-bf47-bfdd932f5e2b": ["364832b6-adc6-4eb8-aed0-a74836920e3f"], "aa3d6fd0-d270-4430-9a45-0d93aaaf21b8": ["364832b6-adc6-4eb8-aed0-a74836920e3f"], "21c4a14b-ecca-4028-b199-611b73cdce3e": ["7e385adb-d731-4eb3-a454-4acdfd511945"], "f0f9295d-85e0-4031-9b71-2779451dd471": ["7e385adb-d731-4eb3-a454-4acdfd511945"], "a7795321-d8ce-4e29-ae1c-5747c52db184": ["d5642361-ac01-4b8d-a8f4-845488f3bc8c"], "44776c2d-5b49-43ea-9c39-c33c2d132d0b": ["d5642361-ac01-4b8d-a8f4-845488f3bc8c"], "ae73afae-5932-4f5d-8b21-c32bad83183a": ["007486b6-b960-4ee6-8e1b-4e3354f4973a"], "0ecbeedd-758d-4f49-a934-8c55a957fdea": ["007486b6-b960-4ee6-8e1b-4e3354f4973a"], "342258f8-8a22-4d6a-94af-356f294c265b": ["0cd8cd19-4bbf-4e66-a261-7c9b9bf182b0"], "291a6156-b267-4e55-8223-cb3d0a7ce91c": ["0cd8cd19-4bbf-4e66-a261-7c9b9bf182b0"], "72fe7412-6701-40c9-bb57-8018e7c4ee07": ["e8d28c5a-94d0-41d1-ac16-4150cccf9c21"], "7677fdaf-f53a-43be-b2ef-cef4a87008dd": ["e8d28c5a-94d0-41d1-ac16-4150cccf9c21"], "fffb4e86-b429-4e77-940a-22dfc2f24df4": ["d580631d-5475-4cda-8c0b-8b0eb3903ee3"], "d186893c-45ec-4549-9eed-bcea065b7c1f": ["d580631d-5475-4cda-8c0b-8b0eb3903ee3"], "6d05c1b9-3da1-4eb6-aa0b-5318e3ba9735": ["5d800940-8468-49a2-bb1a-781d848032d8"], "fe233163-02b5-4f9d-85b4-6b7ec9e16bd5": ["5d800940-8468-49a2-bb1a-781d848032d8"], "debe3b96-51e2-4787-8ea7-7a736b50cd48": ["e82c510e-b2e0-4a82-9e9d-382678e76466"], "49e52ebd-545c-40af-83eb-cf1c8598bbf4": ["e82c510e-b2e0-4a82-9e9d-382678e76466"], "86c6bf8e-e9e8-4df6-89a6-9d2370981da8": ["f49c7fa3-19a0-4a83-9a57-1ab844646e76"], "15fc3031-c4d5-4fc0-8063-de2f56a865c5": ["f49c7fa3-19a0-4a83-9a57-1ab844646e76"], "c33b1771-20e1-4420-933c-4b84d33c13df": ["4e42af57-e783-401a-ac71-7c5829b09927"], "fcc20245-b971-45ee-b99c-b9a51397f18c": ["4e42af57-e783-401a-ac71-7c5829b09927"], "58bf2bd6-7989-444c-a544-a4caf4c68871": ["874ac031-ba3e-4dcf-bd60-bfdd961892e5"], "5d16f965-0a55-4472-9598-5883bd7d59ea": ["874ac031-ba3e-4dcf-bd60-bfdd961892e5"], "1720cc26-1c90-4783-901f-de903d29ac9b": ["34aad8ab-7329-40a4-8b59-0c28aa480992"], "f478f055-afe5-482e-9a8c-6825f570bd62": ["34aad8ab-7329-40a4-8b59-0c28aa480992"], "f2827818-1e75-4244-9bbd-e83d4c2462db": ["b492dc5c-1b2a-485d-b140-6e26236a8b48"], "0277e950-9b35-43e6-bfa9-e28722204723": ["b492dc5c-1b2a-485d-b140-6e26236a8b48"], "3afb97c1-3dc7-4551-85d4-c6997ce4df1d": ["ee3c29a9-b5d5-4951-9c58-724bb83c8fcb"], "41c0f7d3-27cc-4b69-9453-56c3a2d60140": ["ee3c29a9-b5d5-4951-9c58-724bb83c8fcb"], "b279c295-b227-4c32-a913-aa32b0fab607": ["d4297648-59a3-495b-a9d0-55952e9fb37b"], "86d6cca4-7c1c-43ea-9a9c-caa083b96080": ["d4297648-59a3-495b-a9d0-55952e9fb37b"], "60c9198e-a144-4c9e-8713-e97e32c5f607": ["861c4af5-01fb-4261-b5f8-9413adc1a711"], "6a37bc90-46df-4deb-a728-81cafe25e3fe": ["861c4af5-01fb-4261-b5f8-9413adc1a711"], "93fb2c20-118d-4bfa-b2c7-f920ffb79ae8": ["87110c23-8d68-4293-a253-712be534d5c9"], "417f58ec-0fcb-4d80-8dbf-de02ff8da571": ["87110c23-8d68-4293-a253-712be534d5c9"], "3094b889-95c2-4e2d-b063-7eb1e7db6c52": ["9c3dba8e-1264-4ba8-8fef-70d41d2ca2ed"], "c7384535-d2ba-47c0-ad75-df25d6138bed": ["9c3dba8e-1264-4ba8-8fef-70d41d2ca2ed"], "5cc4c15c-fe47-4c8a-ae2d-cd5535f9bba6": ["b7bdaf80-2ae3-4d84-b32d-fbcc61c25e7e"], "b7dea182-3906-45cc-be84-ea035a8b9f66": ["b7bdaf80-2ae3-4d84-b32d-fbcc61c25e7e"], "93662d6b-785c-4a1d-8124-545513f5b950": ["f890f8cf-c063-41f0-828c-892def48136b"], "30edb352-d97f-4bf2-841b-28e114f77b1f": ["f890f8cf-c063-41f0-828c-892def48136b"], "6f5e9a23-c706-4635-b543-caee49490d40": ["c83280a7-a568-4c03-a70e-5f5632f3bd8a"], "7f25c541-79bc-4dbe-b434-82a100bd177f": ["c83280a7-a568-4c03-a70e-5f5632f3bd8a"], "f1cad431-2513-4382-b8ba-d15dac5386fb": ["099c7c9f-c55e-44d4-831e-8a5f51233e45"], "7d9bdf00-4af6-498b-b7ee-02da05b9c856": ["099c7c9f-c55e-44d4-831e-8a5f51233e45"], "e54e93ab-9f02-42bf-af42-d6816e87ebf6": ["d47636e5-c7ef-4b3e-bc8e-b7a266457954"], "32f75f55-539e-4313-9783-2a6779a2927e": ["d47636e5-c7ef-4b3e-bc8e-b7a266457954"], "d6f4fb57-cad7-4467-873c-dc3511fb5ede": ["f9feb219-a80b-40b5-9602-99ef54e33773"], "0a2c5e90-fecc-4c25-95fd-829e61a6b76b": ["f9feb219-a80b-40b5-9602-99ef54e33773"], "69b4f00b-6e8d-4704-afe7-92abf74394d7": ["c0755003-e2de-441e-9ec0-c94ed3318f5e"], "cc8efb25-4ff3-4e72-86bf-d47c3c96114c": ["c0755003-e2de-441e-9ec0-c94ed3318f5e"], "53fe8e3b-6fe5-4bb8-b028-cdb81318b528": ["78a0fb66-11bb-47c5-8036-82506eee73e3"], "36166879-4289-4372-b40b-0de75dfaaeba": ["78a0fb66-11bb-47c5-8036-82506eee73e3"], "1c374753-c0df-44ba-b03f-23ad5091f1cf": ["12a0cc0d-e962-437e-86ac-17ced33a2f7d"], "387d97de-4c45-43c7-ad9b-a75aefb8268d": ["12a0cc0d-e962-437e-86ac-17ced33a2f7d"], "3b9823e7-81ff-41fc-a56d-f61a5bafbdea": ["9ca0fd72-f3f4-4a75-9330-4fddee8a9745"], "be164f19-8d4c-418f-80eb-06973d106c80": ["9ca0fd72-f3f4-4a75-9330-4fddee8a9745"], "4adc3810-87f9-49b1-8d9b-21ff684f2d1c": ["7868b7b5-62c7-4e96-8d3b-8beec18e0299"], "4f2dc8c5-2dce-4507-b0c6-27d9a8280ced": ["7868b7b5-62c7-4e96-8d3b-8beec18e0299"], "bc447a63-67ff-45ac-825f-0602f8d9ca9f": ["c748a84e-6ca3-4c69-b64c-3ee0cabcd621"], "54ea0d37-3e78-45e5-9bef-5a0de8bd312e": ["c748a84e-6ca3-4c69-b64c-3ee0cabcd621"], "effcf80f-a619-47a3-8ded-1809581d26ea": ["bdfbfa20-87ca-40b6-82bf-21f2bf5bf7ee"], "e3ede98a-1992-4e36-b157-29e05dd1d0ad": ["bdfbfa20-87ca-40b6-82bf-21f2bf5bf7ee"], "752ac661-10b0-43b5-8a2a-c8a9e0b5419d": ["c90e4ce5-fa53-45fe-97cc-d51f60cdab57"], "bfa6a40f-c039-417e-b91b-5033f2accd47": ["c90e4ce5-fa53-45fe-97cc-d51f60cdab57"], "b3af1ee5-fe13-4eba-bc1f-4a7a4fc9f230": ["609a749e-89b6-41d8-af94-a78d525468bf"], "d2a70cb8-04c9-47df-8b22-87807a631569": ["609a749e-89b6-41d8-af94-a78d525468bf"], "792203d6-4dec-4ffd-b334-c3e372a8c1f0": ["6f145f00-0b7a-4a35-9b22-4860b84af276"], "dbc359a6-e62a-469a-90e2-471765dd4f13": ["6f145f00-0b7a-4a35-9b22-4860b84af276"], "01280b51-f218-44b8-ba70-2aab03cc54b0": ["2cb2cfd1-5e9d-41ca-9126-dba96a6b519f"], "5e6184c3-1738-4c1e-85b9-a64f6abfac36": ["2cb2cfd1-5e9d-41ca-9126-dba96a6b519f"], "eab54cee-acf2-4da2-a60d-a3a9383a4339": ["2f055389-4f16-4866-8772-36a039ddea0b"], "462d0ac4-e33d-4927-a2b8-cb3cc2033a49": ["2f055389-4f16-4866-8772-36a039ddea0b"], "ffc34d7d-618b-4bef-a493-061fe1a83dac": ["6a59747c-de42-4f85-8864-abdde5503ef4"], "295def43-4192-497d-814f-d18847cfbc2a": ["6a59747c-de42-4f85-8864-abdde5503ef4"], "5cad9fec-48a4-49bc-8bcb-dff957dd7a9b": ["add04395-fe9c-4ea4-8006-10f27c2d7fd2"], "68400566-957b-4236-b140-de6f86dc31c3": ["add04395-fe9c-4ea4-8006-10f27c2d7fd2"], "dd1833ae-a957-4bbd-80f0-6f5b93223d0b": ["1a3ac030-9143-45cc-a3c0-1471e5c325a8"], "2bec03de-6088-4b75-8a1e-17c26071b98d": ["1a3ac030-9143-45cc-a3c0-1471e5c325a8"], "d0a5de4b-584f-4e5d-af89-d7abb8e0ae05": ["d274363c-b5ac-4d17-acdd-258dfa53c1be"], "5451b332-93a9-451a-b6ca-705a779839bc": ["d274363c-b5ac-4d17-acdd-258dfa53c1be"], "b0a5470d-3b52-4852-bfc4-e3c80adaf460": ["e982d8bf-906f-4e2e-be54-195b83abba18"], "972d99ce-4d11-4a7a-9f70-cd86d45ccda7": ["e982d8bf-906f-4e2e-be54-195b83abba18"], "364b42dd-a5f3-4fc7-96e1-e1e0fde748aa": ["8cb2ba4e-0efb-4d71-bfac-eeab721965c1"], "46cdbe26-d8b5-4a23-8ae3-b3436a34ba3c": ["8cb2ba4e-0efb-4d71-bfac-eeab721965c1"], "1e14e70c-0dde-4a14-ad4e-7c4d6e409996": ["163debd7-ae2f-4aff-84e6-b042766db0e2"], "41e1f1e7-7e0f-476d-ba5a-a5b6c60f0f74": ["163debd7-ae2f-4aff-84e6-b042766db0e2"], "57ac5bcd-d17c-443e-a341-563155b624af": ["bb4c26a9-4ce9-4afc-86cb-47d72e96a490"], "61675336-b914-4b4a-aa36-c32a15a4f06e": ["bb4c26a9-4ce9-4afc-86cb-47d72e96a490"], "2b7cf9aa-798e-4d02-a395-58569da91cbc": ["d0f6789d-2a2e-49d8-b67d-a487e962050a"], "ba7c6337-771a-4799-977a-6fc7e0372ccf": ["d0f6789d-2a2e-49d8-b67d-a487e962050a"], "6bfbd849-c841-4208-b07f-37fcbfcade76": ["f69a297c-47b7-4b76-b727-2e69a697a6ed"], "b3c8e19d-134e-4290-a7d2-216e16093778": ["f69a297c-47b7-4b76-b727-2e69a697a6ed"], "d5c04d50-0697-4f93-95f6-9010138b1348": ["eeb38f56-5bcd-4fc5-a6a5-35daadab189f"], "91f3a0dd-23a3-4c23-ad66-777441db6230": ["eeb38f56-5bcd-4fc5-a6a5-35daadab189f"], "c7799550-d295-4a65-affb-31a2c743c7dc": ["86c2c7ea-c5f2-4a83-9349-e77a4a743839"], "5fbe797c-3569-453d-b51e-b7961f22a0e6": ["86c2c7ea-c5f2-4a83-9349-e77a4a743839"], "85df2119-0f76-429d-b2a9-b9067a3257d9": ["3b6d53cb-68b3-4ab5-b294-9f3c47f0d825"], "98650c77-303a-4ca2-ba8c-8da37571bf56": ["3b6d53cb-68b3-4ab5-b294-9f3c47f0d825"], "90e8c2d1-207b-4fef-adbb-335d8fda8079": ["136dcb89-020e-48b7-b760-490905c3d2e2"], "6efe6f42-3a31-4332-a83d-8fd952fff7fc": ["136dcb89-020e-48b7-b760-490905c3d2e2"], "cf480aa9-402c-416a-aca8-8b15fb659b53": ["47e4ce13-a972-4b35-b080-9c932ca35118"], "46252adf-ea06-4e1c-ad89-8fb028e28017": ["47e4ce13-a972-4b35-b080-9c932ca35118"], "ee5278a1-b43b-4a80-8c8e-3a42e2ef2dac": ["026e2d28-c429-4070-9cb3-1a0026879556"], "c6cea59b-2291-4efc-b559-c7024516af9a": ["026e2d28-c429-4070-9cb3-1a0026879556"], "069eecc0-3c3f-46b8-b1ae-ecd81f42a74c": ["ea83b3d5-dd6e-4fb0-8dc1-772b677831aa"], "33ee61cf-021a-409e-aecd-74a3c0dafdfc": ["ea83b3d5-dd6e-4fb0-8dc1-772b677831aa"], "e834fdaf-f093-414d-85d5-bf9810c4035e": ["d9a0c742-3840-4936-950b-7f416522d09b"], "c6d7dfb2-300d-4061-a4c2-adf1fb553411": ["d9a0c742-3840-4936-950b-7f416522d09b"], "c2076dd4-eb82-4b28-a30e-06dfe0c05c5e": ["af788eab-d29e-4096-a358-6a9f59cc75f9"], "7807b2fa-7526-44e2-a18b-062d0e19db3f": ["af788eab-d29e-4096-a358-6a9f59cc75f9"], "d76d6214-8ac3-483a-9392-497a1b6b6f09": ["5b2fe3f3-f91b-47b0-a1ef-b131d616241a"], "63122de0-561e-45cb-a534-11d23c17ec50": ["5b2fe3f3-f91b-47b0-a1ef-b131d616241a"], "e6c2e47e-c545-47ea-90ad-11a7073bcffb": ["09b31e6d-fea9-4a22-8ab0-0554b4e698cf"], "613fb280-cb82-47f0-a37f-9364658bb2be": ["09b31e6d-fea9-4a22-8ab0-0554b4e698cf"], "343a713f-f30b-4551-9ac4-a1a16d80039e": ["5ba078b9-ea91-4cfb-b92f-e8949cffaf38"], "a1390a70-e031-4794-9daa-4f9d2384dd72": ["5ba078b9-ea91-4cfb-b92f-e8949cffaf38"], "d0131b5e-832f-4394-9fa8-22679f93994c": ["e0261156-19e0-45af-b711-4d6aca3d9977"], "19c412cc-ec48-4a8b-a023-55210e5e3754": ["e0261156-19e0-45af-b711-4d6aca3d9977"], "2a831cd2-29d5-412c-86dc-24bbab8b5437": ["18d992d8-00ac-4def-b848-1bbe092949e3"], "4a91cb0c-f8c4-4578-89a7-45c60c5b23dc": ["18d992d8-00ac-4def-b848-1bbe092949e3"], "e026b09d-d487-4208-ae95-d04495eb1bfe": ["ef42ffb8-283f-4a21-811e-918647f1752b"], "988a0c70-3c62-425c-9315-d45b8db4ca47": ["ef42ffb8-283f-4a21-811e-918647f1752b"], "c68f9fd3-39b3-4fd9-9c88-ec2d3263d017": ["b57d52de-2918-4374-b0b7-41665b795524"], "faf40d29-892a-4a0b-8c84-f89f6fec8273": ["b57d52de-2918-4374-b0b7-41665b795524"], "18301fd5-2024-4acf-baa2-0cd900e564b6": ["40b9c950-787c-4452-8dcf-1b7818990fb6"], "9aea65a6-1b84-4ee2-aac8-f66bb714d896": ["40b9c950-787c-4452-8dcf-1b7818990fb6"], "652e36f4-af69-49d0-bf6f-1d4f51cfbbca": ["12ca26f3-7696-4470-8921-bdfb1653c6d4"], "e4ac242b-e60d-4e79-8b33-f4f1205b9f97": ["12ca26f3-7696-4470-8921-bdfb1653c6d4"], "d140db29-8a30-4087-a6ac-cc81f7888bc8": ["6bcd01be-9bc4-48c3-8081-1521c7c360b2"], "d402a6db-afc8-47fa-aa23-59196ee47d87": ["6bcd01be-9bc4-48c3-8081-1521c7c360b2"], "b43d0008-556f-4d5e-a2a1-0722b79d3ff0": ["be116caa-e3e6-44aa-a579-430f8b9782fc"], "cdea4224-be1f-4345-a0bf-034f29278eeb": ["be116caa-e3e6-44aa-a579-430f8b9782fc"], "83353d44-6fcf-4257-8547-0757fee17354": ["10db9377-3aca-4830-814a-7d9498e5cdda"], "d512a59e-92ec-4b59-9293-2698354ce701": ["10db9377-3aca-4830-814a-7d9498e5cdda"], "77a2bafe-876c-43b0-8e75-cc62847b8f53": ["0e611dec-1b81-4714-901f-021b345ae15a"], "f66e1027-50d7-4900-acd1-58bd54b85984": ["0e611dec-1b81-4714-901f-021b345ae15a"], "aa5b3c70-a0f3-484f-b76e-9614a775e5c5": ["9e0d104c-bdbb-4653-ac4d-529538d00520"], "6128fb60-5e8d-4da3-b2a7-40ebaba333e4": ["9e0d104c-bdbb-4653-ac4d-529538d00520"], "e12642e0-7569-4fec-9228-53ef28f89dd1": ["25ef8ea6-a384-49cb-8995-0f4021062586"], "787c0286-31fd-46ec-a1d2-8913f033c4f6": ["25ef8ea6-a384-49cb-8995-0f4021062586"], "856ecf2f-0c0a-45c6-874e-b2d7cad2a7d5": ["e993797f-aef7-4287-b333-86c740555cf1"], "c9430cdc-968b-4911-a7d5-2fed02184739": ["e993797f-aef7-4287-b333-86c740555cf1"], "31f64d8b-cb77-4aed-b3b0-7c3d70379924": ["21071803-fb99-4bab-8ee5-e4ce386c8224"], "9f67f3b9-1856-4369-b09f-2345cc7cd55a": ["21071803-fb99-4bab-8ee5-e4ce386c8224"], "a46a4d56-756f-4237-8039-89ad05fd89e6": ["bdba8548-e81e-4132-b11a-d361d6f75f8d"], "e7a4e718-2e3d-40b3-8906-68c7cf7b48ca": ["bdba8548-e81e-4132-b11a-d361d6f75f8d"], "67bb6c82-a8ba-4549-9728-4c40377f011f": ["ad18454e-14e5-47a7-a0f1-cda918894cea"], "557c3923-cc1b-4e36-bf6f-b3b257e8bc83": ["ad18454e-14e5-47a7-a0f1-cda918894cea"], "9f30c55f-9499-42b0-9514-eb44ef2b3529": ["1a2b6a46-60b4-4072-a8e0-43f57460a16e"], "c14e71e8-d6b4-4c3c-82be-e746751f678c": ["1a2b6a46-60b4-4072-a8e0-43f57460a16e"], "0ef20abe-ab80-4e29-af7f-16ca11aeb34f": ["df023886-2524-4d1d-9a50-b9df00e8030a"], "9945a5d8-161f-48b4-967c-bc70e8b37329": ["df023886-2524-4d1d-9a50-b9df00e8030a"], "c1445e90-e3dd-4bf6-9ff3-3d9ad61ac39b": ["c3fbef67-fbf1-40ea-ae93-68e638b23a34"], "3a07c98f-c9be-4bcb-8607-3f79a8a4ddb3": ["c3fbef67-fbf1-40ea-ae93-68e638b23a34"], "01181527-0e87-40cb-bb1a-a6db0ba6ab3e": ["f455fe10-fdd6-4d5f-b468-ed56e8db492a"], "2aac9332-a224-440a-b045-f146d07e4f8e": ["f455fe10-fdd6-4d5f-b468-ed56e8db492a"], "e22af98a-6523-4b1d-959b-0dc7df57fd72": ["2bf0fa0c-4215-4daa-aeb1-e08f20b5243b"], "7440fa18-6c4b-452b-9f76-8cd8ef2cbce9": ["2bf0fa0c-4215-4daa-aeb1-e08f20b5243b"], "faccd95e-ca92-4355-8a4f-7fde1ca98fbb": ["f1cd7596-d97b-45e9-aa15-756700e26290"], "10247be5-12ce-4c36-8fac-690e1ca5cf38": ["f1cd7596-d97b-45e9-aa15-756700e26290"], "1079ec41-f7b8-4159-8b87-223b78243ed4": ["4db4305a-8219-407f-9e2d-e799da18f400"], "2c653dbf-ca2b-4428-95ac-de7182625418": ["4db4305a-8219-407f-9e2d-e799da18f400"], "39a16631-2cbf-4ad6-87c0-201acb144468": ["11b4bbc9-d5cb-4f4a-bf04-30fb006a3d41"], "c6624b9d-1502-4ca7-aa10-a818fc48e744": ["11b4bbc9-d5cb-4f4a-bf04-30fb006a3d41"], "cb572f3a-c377-4434-8f4b-31407c4e5d80": ["ec95349e-f471-4cd0-b24c-8560d1c260e8"], "7748d7a6-ee0f-4520-adcf-d2f483bf1895": ["ec95349e-f471-4cd0-b24c-8560d1c260e8"], "70e5a934-c50d-48fa-9a2f-ce50eeec7926": ["cc81610f-c89c-4908-b4f9-909fc5d1e463"], "d2cc8268-acf7-42d4-a5ed-73e0f8918734": ["cc81610f-c89c-4908-b4f9-909fc5d1e463"], "d3d8adeb-7e86-42bc-9dc2-0eebd4271221": ["8613a2e7-1241-4faf-a4be-d95b5699ed1b"], "65682689-c62a-47b2-9f30-471022901f72": ["8613a2e7-1241-4faf-a4be-d95b5699ed1b"], "028dc7ea-8641-40fe-b609-e2161b05ff03": ["30271fed-2ff4-4d33-9103-2229c2e05b90"], "7e033dac-baec-4fa4-94bc-a3a9d2deaa99": ["30271fed-2ff4-4d33-9103-2229c2e05b90"], "bdde8df9-f293-4053-a514-11644240a3f7": ["2fdd45f3-0b45-43f9-9e84-6c34cfb502fa"], "f640d07f-dba7-473d-84cc-ad7c0ad6c8ad": ["2fdd45f3-0b45-43f9-9e84-6c34cfb502fa"], "a585addf-0cd7-4fbd-bcec-27b02c1164fb": ["8172bd36-8e50-4a19-9605-6aa7ef6ed303"], "1aeac9e8-a07f-4fb0-9a25-b7daf4820d6e": ["8172bd36-8e50-4a19-9605-6aa7ef6ed303"], "10f47c1f-f084-46aa-898c-b4682be1e299": ["652e7be0-445f-4b15-800c-ceea712a557c"], "73574474-5c5d-4749-a5d9-ecb86c290165": ["652e7be0-445f-4b15-800c-ceea712a557c"], "7eb29841-6c50-4dee-9eeb-833ecb20da0a": ["f50abbb5-d575-4c57-837c-976957a9abb8"], "05bd774f-b636-46ea-a123-97b3b1b07af7": ["f50abbb5-d575-4c57-837c-976957a9abb8"], "5b42cf23-4273-472a-bb22-f92ed66eba55": ["bbdf89d2-b447-46a7-b3cd-5e573ff8881a"], "0ee5a848-f77c-4e5e-ab5b-ed7a246e2bbc": ["bbdf89d2-b447-46a7-b3cd-5e573ff8881a"], "0c34bac2-8150-4b92-b5c3-3917a850a164": ["7f6a840f-6ba6-462e-9c51-b4f370d1e269"], "0a96f1ab-57a0-4f8c-b136-8badfd07c7af": ["7f6a840f-6ba6-462e-9c51-b4f370d1e269"], "a0b854f6-ff51-492a-9d37-0d0d17e53767": ["923ccd94-d975-4ce7-9c47-da92eecc9ba3"], "0465e589-1968-4a42-88f2-be37d10bcd54": ["923ccd94-d975-4ce7-9c47-da92eecc9ba3"], "301a1220-9afa-451b-a09a-90acd6caa393": ["21ab1919-e729-43e6-8227-d0227d283c81"], "5b9f280d-e77d-45c7-8444-0b506d81cacf": ["21ab1919-e729-43e6-8227-d0227d283c81"], "95050ea6-db22-4ced-8156-dae857e6070f": ["ef02616d-430b-43ab-bd25-5bfaf500720f"], "dddaeb96-100f-4f17-96ba-91d302412e1a": ["ef02616d-430b-43ab-bd25-5bfaf500720f"], "83b20c92-a2c5-467c-a8bf-b617dc7ee504": ["fc359be2-8a6a-4b87-859e-3b83a2515225"], "a24a73ce-83a1-45ba-8fcd-5bacfd041c87": ["fc359be2-8a6a-4b87-859e-3b83a2515225"], "0ed33843-67e0-46a5-8c8e-b7ff73439edf": ["ed33c2a7-5398-4e15-b37a-7cff80c1c8ec"], "3b1ddf8b-78b9-42f7-8836-4d9e5ec6b660": ["ed33c2a7-5398-4e15-b37a-7cff80c1c8ec"], "79f52563-10c5-4ac7-8cae-397ca1d256a7": ["18b2a7bb-6add-4f31-bbb8-aa94e0708668"], "60b628e8-8512-44d0-9b78-4014131c3bd9": ["18b2a7bb-6add-4f31-bbb8-aa94e0708668"], "c890054e-8c4c-4835-86d6-44068b491a2c": ["c33e3804-8272-491c-8f25-2b0382ba344a"], "697773a5-a4f6-4ca0-b968-3e8fe0671585": ["c33e3804-8272-491c-8f25-2b0382ba344a"], "8148797a-417a-4f10-93d3-597f79cec8b4": ["05c45396-8456-410f-b1f4-f2ff7b16927a"], "a7972330-8f8e-4c5d-93af-9f0c3b59a1d5": ["05c45396-8456-410f-b1f4-f2ff7b16927a"], "67cac6d5-130f-4f8d-9a71-a6517eee9a5b": ["793a9356-7054-464c-8a1d-5424595a1356"], "1023fc41-d537-4fbc-a19e-1eaaca43d9a2": ["793a9356-7054-464c-8a1d-5424595a1356"], "c7599b4a-3463-4b5d-b32a-5eb69ccccf4e": ["044b563e-6d42-4d9d-bf70-65b9ea816b27"], "e5513682-f489-4c78-9b28-c820df7ff7d6": ["044b563e-6d42-4d9d-bf70-65b9ea816b27"], "0d40ebcf-428d-47d7-bd11-42ff4f627f1f": ["763436d8-6344-458f-b23e-fd20729064b7"], "5883a2c7-481d-419a-b667-f830ff7ecdb8": ["763436d8-6344-458f-b23e-fd20729064b7"], "6b0f2624-72e4-4687-aac4-b55fdb98f88e": ["81607bcf-7d05-4ade-86f8-b778d8b45055"], "e6280353-e459-4524-bbb8-27b0a9cf656e": ["81607bcf-7d05-4ade-86f8-b778d8b45055"], "64621da2-7343-49cc-b85f-87d339adaecc": ["813d8844-4def-4248-8932-1f1337f6d27c"], "e171dfcc-ce54-47af-bf6c-dfdf31053a11": ["813d8844-4def-4248-8932-1f1337f6d27c"], "53168ac5-299d-4d8d-aa6c-095c3a55e114": ["661325c8-b9da-4972-ab43-a691aa77f082"], "17b8e0e9-54f0-4dfc-a865-5c7db5afeba8": ["661325c8-b9da-4972-ab43-a691aa77f082"], "3f4f1ac6-df4b-44e1-84c7-dd4ae7643320": ["3f95c83b-b8a0-4484-8bc5-69811bbf692d"], "f41aa6db-7311-4397-8450-9868d6783b34": ["3f95c83b-b8a0-4484-8bc5-69811bbf692d"], "2e791b25-db92-4ffa-9335-d944200a9d44": ["302d27d8-fbdb-403c-916c-c8536c07a9b0"], "f951c4a4-adba-48e2-8ef3-04c51fc9b01d": ["302d27d8-fbdb-403c-916c-c8536c07a9b0"], "5bd5177e-4d9d-47d9-b156-0cb1ff7d432a": ["297d7746-bfa9-4654-9c78-f1912610d00f"], "46be6806-4134-4c6f-aa95-cebee96a000a": ["297d7746-bfa9-4654-9c78-f1912610d00f"], "efacbd4e-0187-4fde-964c-33f8f9d9c469": ["6fcc0666-287c-48b2-834f-f0e1b502a00b"], "9db560a6-a91b-40c3-9d65-55ab1f525843": ["6fcc0666-287c-48b2-834f-f0e1b502a00b"], "727aae0d-c4ed-442b-baa2-eed54b92ffb9": ["436cc709-940b-4bab-8575-9899eadd4530"], "652e8264-9f49-4a41-a36f-c3eecd2fbecd": ["436cc709-940b-4bab-8575-9899eadd4530"], "97042f97-6ed3-4cf3-88ef-4773f0fe033c": ["968b6b1d-3abc-4620-8782-c72f0fbb16c4"], "f12491d8-2e7e-4e70-8c92-8448232607b2": ["968b6b1d-3abc-4620-8782-c72f0fbb16c4"], "9472be68-5904-4468-bdc1-6cd03fc9904a": ["bc69ec65-357c-4390-9ec6-42ed6b2339d3"], "e0b64b09-fa3f-410f-bc6e-b50f80cea0ce": ["bc69ec65-357c-4390-9ec6-42ed6b2339d3"], "41dfe1ae-55ab-416c-b937-660eecc60b90": ["e99c851f-5eb4-4c5a-b335-4bd57310be9f"], "f2c5a5a7-5dda-4b4e-bfbd-0a0907680148": ["e99c851f-5eb4-4c5a-b335-4bd57310be9f"], "0349fd14-f8b3-4457-9908-02a9343a9c4b": ["eafca0ef-3ae8-4cc9-b029-766d744b52a5"], "5250b7ff-b864-49c0-8974-145b62d92ec4": ["eafca0ef-3ae8-4cc9-b029-766d744b52a5"], "b092520e-9af7-4d5d-90e0-94faa7fc99af": ["5cea6bbe-a004-4287-870d-4ada14d1bf37"], "04512348-d99b-4b45-876c-e48dfde30062": ["5cea6bbe-a004-4287-870d-4ada14d1bf37"], "a1f16f45-00c3-47f0-a453-ba5663ca9ddc": ["9d4c0870-0177-4498-b248-52a8045c6928"], "ac8d0fef-6b17-48fb-a1d9-e0c2693c431b": ["9d4c0870-0177-4498-b248-52a8045c6928"], "cc81160d-96f6-47f4-8944-9a35b679ca54": ["56ea3d04-19a8-4e78-b9e9-0acc997c009d"], "182b69f0-f9cf-4f67-9ba3-165bea18c061": ["56ea3d04-19a8-4e78-b9e9-0acc997c009d"], "4aa046c7-58ec-4085-ba41-342473bd4147": ["a9e6f917-c02d-4c2f-a0b0-40efda1d9a79"], "aa640d25-3a0e-4eca-9211-96da34e5cb35": ["a9e6f917-c02d-4c2f-a0b0-40efda1d9a79"], "ddfda3b0-1d2f-42d0-a78d-a7e426e8758d": ["a9e6f917-c02d-4c2f-a0b0-40efda1d9a79"], "2d98798c-c4c9-43f9-a295-932fd0e8b45d": ["0a7a8f99-9ef5-45a0-bdcf-11db2e298baa"], "139562f4-c13a-4d64-86c1-60c97de8b11e": ["0a7a8f99-9ef5-45a0-bdcf-11db2e298baa"], "5e486192-e77e-4c84-ac19-ec4bfcfed98f": ["5e2c24ab-50b2-48d2-a0fe-bc19b3437378"], "31e31563-69b2-41e8-9e97-b650854628ae": ["5e2c24ab-50b2-48d2-a0fe-bc19b3437378"], "92b15efe-e1f2-4fcc-a9e2-e3f729e5975d": ["aad787c6-a3b3-47fd-9b46-51823f54c81b"], "3a7e09fe-db99-446b-9025-b44ca789ad0c": ["aad787c6-a3b3-47fd-9b46-51823f54c81b"], "f0b4ddd2-bf59-4a11-87bd-f3ab3bf7ad7f": ["01ee99ee-6942-45bb-a10a-215b32e2f01c"], "1c8c1239-5a75-4cc6-a267-4aebb3613c9f": ["01ee99ee-6942-45bb-a10a-215b32e2f01c"], "7551c41b-bab3-4608-9564-c0d793ac6b0b": ["51d43f60-200f-418d-ba6c-b777e3df15d7"], "09dc1548-fe51-43e7-970b-e60d4a26092e": ["51d43f60-200f-418d-ba6c-b777e3df15d7"], "0b52c484-b226-4922-a945-ad6c9a807029": ["4c311767-49e8-4939-bf01-41b6529f970b"], "31dc7fcd-5a7a-4bf0-9ecb-53ca1354c098": ["4c311767-49e8-4939-bf01-41b6529f970b"], "947f8a2e-61ac-47bf-a089-0951b6a82ce6": ["204433d3-1aa0-49c6-b608-ff47686d17ba"], "d43d443a-39a7-4ac1-92a2-ce0a09af9765": ["204433d3-1aa0-49c6-b608-ff47686d17ba"], "fc7cbc0d-312e-486a-b61d-1772ecd333e9": ["850b7014-df67-447b-a64e-4676f58a6d83"], "134efd7a-6318-4d08-8930-88f506e5da14": ["850b7014-df67-447b-a64e-4676f58a6d83"], "bd09066e-6809-4c3d-af1e-100fd01c4f55": ["9919813b-3680-4e7c-a9b6-ca9ac58428da"], "1a555d07-5b1c-492e-9afe-90c847868bff": ["9919813b-3680-4e7c-a9b6-ca9ac58428da"], "747884ec-6703-41b3-9fe4-252b38cdd033": ["d021a8bb-9102-41bf-b46c-cd91e21c7087"], "a16d67b7-bdd6-4f98-b522-ca72f4cd2223": ["d021a8bb-9102-41bf-b46c-cd91e21c7087"], "8f36001f-b045-4466-b43e-7931512cbeda": ["6ad81439-42c0-44ee-8381-43239a384ddc"], "044d6c0a-289e-40c1-b60a-fcf1e1eb532b": ["6ad81439-42c0-44ee-8381-43239a384ddc"], "a13b54a0-c544-44de-a497-253caf206407": ["a5722758-16f6-4931-bb97-f6f4f8c64c27"], "17a200e5-78f1-4242-9a71-ebcf5b969fa8": ["a5722758-16f6-4931-bb97-f6f4f8c64c27"], "9aa455ec-3f54-4c0d-9eac-85132b67d85e": ["93e3be3f-a4db-4d65-a340-42bcf87371ef"], "ea87e7d4-d294-4c63-a92e-b2b95d961222": ["93e3be3f-a4db-4d65-a340-42bcf87371ef"], "8f2f1929-3770-40a3-8eac-5d2442a0deb3": ["6376ee49-1106-4825-833c-0aba6c9aa0c1"], "c383855d-e8f0-4f27-bbea-ac3583cb1701": ["6376ee49-1106-4825-833c-0aba6c9aa0c1"], "762c7503-d73a-4bb8-947f-ca5a59328f30": ["7af85381-b9c2-4fc4-a6e4-cb3ee4ac02ea"], "ab42bd9a-e768-4614-94c6-d9cadc35afae": ["7af85381-b9c2-4fc4-a6e4-cb3ee4ac02ea"], "30e9a3c8-974c-407a-a24d-00a2fe933b33": ["f582ec8b-7f6e-40f8-a2fe-5503283555b7"], "67b6bedb-632b-48c5-9248-a4b8198660a9": ["f582ec8b-7f6e-40f8-a2fe-5503283555b7"], "3e62f2a5-a4b0-42a7-8cce-df1b972a11db": ["eb29dbaf-2269-4d53-a004-6e333ba30d56"], "881e5d67-6f58-4b29-879c-cbd65365d653": ["eb29dbaf-2269-4d53-a004-6e333ba30d56"], "0dff61c7-633a-4c84-bd88-9f90b5b5e911": ["d9a7fea5-555f-4592-9d15-72a2f28649e4"], "06cd55e5-b29c-4e5b-84a1-3cc5ae1a0e35": ["d9a7fea5-555f-4592-9d15-72a2f28649e4"], "662fba2b-3205-4f39-afad-ab50292282c6": ["af384deb-a48b-457d-a497-5c72bdef72e8"], "0c45c31a-ff30-49b0-b681-81787a6bc245": ["af384deb-a48b-457d-a497-5c72bdef72e8"], "7b0b8111-50cd-45e0-8d11-f50b30c6b783": ["b762fc18-41f9-4e85-9a7c-5ed445ecc896"], "830de6aa-b017-48e1-894d-a93601e02c5a": ["b762fc18-41f9-4e85-9a7c-5ed445ecc896"], "537308e6-d078-4a32-98f3-b69d43f16d87": ["65faf282-80af-41b2-8e9c-c1a873ef98d2"], "429653a6-1feb-492a-a1ea-ba956392eda2": ["65faf282-80af-41b2-8e9c-c1a873ef98d2"], "c057a119-3885-4c21-b918-b7f9847163b4": ["18a51604-3059-40a0-9a90-95cda64fe491"], "a34e8feb-9be3-43ab-b4d3-be99333af1e1": ["18a51604-3059-40a0-9a90-95cda64fe491"], "429bde88-543d-425b-8634-f0223e627990": ["bfd99acf-45c6-4001-98aa-dddd34504bcc"], "867bdbf7-a632-4a6b-ab18-93c65c6eeb23": ["bfd99acf-45c6-4001-98aa-dddd34504bcc"], "5b1b2abe-7299-415e-a6c1-2c0c231afdc6": ["6c3ec7d8-9f44-4c76-befb-ea45c0c8fba9"], "8e2cf348-aaf8-4f02-aa16-354a8c25b500": ["6c3ec7d8-9f44-4c76-befb-ea45c0c8fba9"], "2b257a90-1c65-4cef-996b-8038b71ef0cc": ["7d06ff7a-3faa-4943-a23f-4412fa50fa15"], "bc9803e7-7648-4b29-a168-8da58e274a2f": ["7d06ff7a-3faa-4943-a23f-4412fa50fa15"], "aaab43f3-4ff9-4738-8faa-0bdd1984d31e": ["3d090b7b-8303-4ef0-b805-8c9f686b3d4b"], "7d3c2c89-009b-4301-bfa4-2a20b6495d09": ["3d090b7b-8303-4ef0-b805-8c9f686b3d4b"], "df1da31c-8818-41f3-ab1f-1cf7a0215544": ["edfb4796-edce-4127-8021-c231e41f5fcc"], "b9806f97-2ce2-42f2-9b25-a8e48d136298": ["edfb4796-edce-4127-8021-c231e41f5fcc"], "2a393971-54a9-4be5-adb2-858616362033": ["34f89a01-2fb5-4756-846c-01ddbdc3732a"], "8657d4f1-477d-43fa-89ab-eb15bc61bfbe": ["34f89a01-2fb5-4756-846c-01ddbdc3732a"], "1170f589-f911-4559-8784-942c784d45ac": ["f7c94cb0-3b98-4503-8547-fd74cc7b93e6"], "0b77490a-250d-498c-9a55-27498d4e3c51": ["f7c94cb0-3b98-4503-8547-fd74cc7b93e6"], "8ba63aa8-20e6-44b3-9805-0f4259da8019": ["8426884f-9f39-4410-9e59-af020880e132"], "0d7593d6-ff2d-45b9-b109-be2d6d46b384": ["8426884f-9f39-4410-9e59-af020880e132"], "c003250b-a70e-45ce-aaea-47c265bc9a5f": ["652b4b9a-7bc9-41a9-bdd0-f805878f68cf"], "23bf01eb-5dc5-43df-9f2c-e40d50141452": ["652b4b9a-7bc9-41a9-bdd0-f805878f68cf"], "548aabb4-2a45-4002-ad6d-609bc7897519": ["63f7f689-019a-403e-ad20-6b92a75454fd"], "44edc74f-c917-4c4a-9840-8dd37298373b": ["63f7f689-019a-403e-ad20-6b92a75454fd"], "60ff241c-353b-4adc-8861-c63e2e3c657a": ["821ca787-b8ad-4a8a-b4a6-64d076b92730"], "f89a71b0-61c5-43d8-9d39-75bb57e8a7a7": ["821ca787-b8ad-4a8a-b4a6-64d076b92730"], "5b56e36c-db80-4af4-81e4-0660dff7cc16": ["2d38b21b-de65-415f-acec-329f0f8f795b"], "f7a3540b-ede6-4909-8579-3ef975c0c6f5": ["2d38b21b-de65-415f-acec-329f0f8f795b"], "4a518e69-357d-4fe4-b1a6-f341ea8aaf86": ["2e41a155-6276-407e-9bce-eb9673a2027b"], "1fd3fb6b-d19c-4069-be96-c2259c2443b3": ["2e41a155-6276-407e-9bce-eb9673a2027b"], "c21264a8-8685-4709-85b4-19f58c1cbf2c": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "8cee1f46-a9dc-437f-a054-431452dba9c6": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "26f879e3-792a-4e16-b2a1-97f3db4cc716": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "7c6da48d-4895-418c-9af3-a3d87e544596": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "c4234d7a-e7ef-427c-9c08-e25df300e2e1": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "b8b38cd3-e50f-4b58-b3cd-34e3851f6780": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "23a0d3ba-b09e-466c-852c-8955c47ee81c": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "e8fa352d-8391-4862-86de-adf8eb90ea7e": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "ae4285d7-bbba-4021-9e67-089e8c155eb8": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "048fbcbc-ca2a-4598-a680-b390372adc72": ["ce76afcb-2233-4ac6-a147-349c903d915d"], "7b4dd680-b45c-4f2a-b591-113a92192912": ["ec2e7ba6-4a95-408c-820b-755236639379"], "badd52c9-de09-4975-b282-08f39f62f901": ["ec2e7ba6-4a95-408c-820b-755236639379"], "5296478c-d531-4f69-9937-b807500e21c2": ["da1a7709-7106-4555-bd9a-8398b66f7afd"], "c77dd008-b685-4d8e-8238-62dec8fd2ba4": ["da1a7709-7106-4555-bd9a-8398b66f7afd"], "b74e211a-c5a5-4908-912a-169045865dea": ["c1226b04-28d2-4e60-9607-814028720632"], "c24a7bbc-0ef0-410e-9a52-8bc16700d0bb": ["c1226b04-28d2-4e60-9607-814028720632"], "25c23b14-d408-4042-b81a-3ea3db58a8d0": ["8af392b6-7155-4915-a756-22fedf75a7a0"], "cf9066a8-9bd0-43df-8a65-08be19033a4f": ["8af392b6-7155-4915-a756-22fedf75a7a0"], "b1aef80c-6990-4f22-8085-9abc39f90085": ["27de51e2-bfbf-4371-af94-dc8e2d4a3400"], "fa68af9d-0dca-48db-af03-0b0d1a68b3fd": ["27de51e2-bfbf-4371-af94-dc8e2d4a3400"], "b26e435f-a37b-485c-ba14-229d0fa43373": ["571c097f-9076-467f-8873-f5f603f4fd95"], "93841e55-626b-42ed-9a0e-f4669bb9a557": ["571c097f-9076-467f-8873-f5f603f4fd95"], "f50ef921-3762-43f5-a153-3a2ac8afa311": ["a9ca7f99-2775-49c1-abe5-e3899fe20a15"], "4cdc1c07-205f-490f-8326-1060d6895e8c": ["a9ca7f99-2775-49c1-abe5-e3899fe20a15"], "6127738a-aa4c-493c-82c6-235a2383bfbe": ["d1eb5550-6bba-49be-9c3d-af93b0f75490"], "242b7ed9-cca1-4645-a06c-616a387e74a3": ["d1eb5550-6bba-49be-9c3d-af93b0f75490"], "07ad3745-df0b-4910-b55d-22ea01cb2196": ["25481a08-7807-4ff9-8031-7efab75532ea"], "a84a2c0c-bd82-4ae6-a7dc-999caf90e19a": ["25481a08-7807-4ff9-8031-7efab75532ea"], "c6fea6f9-b1a6-44ef-a938-39bab3379990": ["875a3777-ffc2-40c1-bfa5-2a2efbae8c35"], "5f07ac0f-b0d9-46d9-a337-38ab6374e73d": ["875a3777-ffc2-40c1-bfa5-2a2efbae8c35"], "64ff53cf-1820-4d50-878d-606e618f5a0d": ["43314b45-5d52-422f-b445-626eb62711a4"], "0e6534a4-9172-49e4-a41e-6d04322b559a": ["43314b45-5d52-422f-b445-626eb62711a4"], "b44dda30-a17d-40f1-bcbc-e4a475ef4ff2": ["0c5faa4e-8dfa-4a52-80cd-08b4b87d8c69"], "3146da5c-3019-417f-87b7-1eac8f2f37b7": ["0c5faa4e-8dfa-4a52-80cd-08b4b87d8c69"], "1ec81d25-4ec7-4f33-b089-8e148ab7bc23": ["112e262f-5174-44ba-b023-627e2dec3599"], "33c22132-32c5-49cf-9092-1639b8721ffd": ["112e262f-5174-44ba-b023-627e2dec3599"], "71c9b318-f8ed-4fa8-a5e9-b5ce457d186b": ["5eb302bf-8ef8-484f-a1dd-9ab1166304b5"], "b16eef86-9444-437d-8f54-3ba0f0afc2a7": ["5eb302bf-8ef8-484f-a1dd-9ab1166304b5"], "4edc06a4-bb9f-459a-be98-8fc661f432c3": ["a270bd06-4329-4233-bd5d-2c7933f49ccc"], "20ac4f6e-99cd-484d-964e-fcf3a0447f53": ["a270bd06-4329-4233-bd5d-2c7933f49ccc"], "b3597300-d631-4a35-ae7d-6d13e4afa73a": ["0bc2bed5-20a4-4b66-b215-1f3173e17c10"], "84a54050-1199-493d-a925-5606c54741a5": ["0bc2bed5-20a4-4b66-b215-1f3173e17c10"], "25783644-1e7d-4efb-b868-e307c2250007": ["509e193b-f186-467e-aea9-d82bd1718e49"], "10103c4c-e57e-47da-91da-61f50b7e4566": ["509e193b-f186-467e-aea9-d82bd1718e49"], "6aa3fe89-1d9b-47c2-a456-61cdc37c77c7": ["af0bbc28-fb63-420a-a1ed-a45dbc41f1bb"], "312bac2f-73af-4c94-921f-f6679963f18d": ["af0bbc28-fb63-420a-a1ed-a45dbc41f1bb"], "89cb21c9-d3e3-4ea4-9ad0-475e615d2481": ["a207860f-b50e-4a9a-aa6e-73ee51b38e08"], "901073b0-c1a5-4876-95ec-67646841098a": ["a207860f-b50e-4a9a-aa6e-73ee51b38e08"], "b2f8214c-fc74-4497-8686-cbeb68c4b4ea": ["36bdac67-6d7b-480e-912c-190436225b55"], "16b59663-e5e3-4354-ab1d-ddf5b2c2a053": ["36bdac67-6d7b-480e-912c-190436225b55"], "f44584ce-708a-40a8-a7a6-d34955a71830": ["473b817f-0503-4d84-b69b-661756212df9"], "ee7ea91a-c7c2-4822-9b5f-dd674f2aed30": ["473b817f-0503-4d84-b69b-661756212df9"], "7a50569d-6427-4673-8126-d98bb5ff1ee4": ["cf5cb558-2ecb-4cf8-adea-9fd9b7713b55"], "3e0da803-5ffc-465f-9f7c-672fcb304450": ["cf5cb558-2ecb-4cf8-adea-9fd9b7713b55"], "5a9c8953-41d5-4236-9724-4cc1d5eee7dd": ["95f3e4ae-a320-4d97-b248-188f68819c04"], "3b9a5137-2c00-405f-bf28-cb9f00a1e4ff": ["95f3e4ae-a320-4d97-b248-188f68819c04"], "d5428f64-e944-4025-bdff-3e9b517eb40a": ["eb3712d6-4e5c-4556-88e9-13d854367949"], "d70c86e6-6c3a-4161-90dc-907338f0689f": ["eb3712d6-4e5c-4556-88e9-13d854367949"], "f4df19d5-0743-407a-8c66-88a3838f01f9": ["63203fa4-abca-4e32-9970-737c88542f62"], "be31305d-685e-4278-ad06-77097e3426e7": ["63203fa4-abca-4e32-9970-737c88542f62"], "07ebe512-250d-4242-a4e5-cf4af6a6bc22": ["3d26d85b-8428-4afc-8f85-de4671099bc2"], "4d63c8cb-36c7-46ae-820e-32c663a8adb4": ["3d26d85b-8428-4afc-8f85-de4671099bc2"], "f5e211e2-37fb-46ae-a594-f6e6e4d42bb6": ["c363d41b-51ef-4f8b-9661-2d3549273ac4"], "e1e60c3e-0c09-4d12-9f37-c8ad62e38fd9": ["c363d41b-51ef-4f8b-9661-2d3549273ac4"], "14000987-97dd-4ddd-8bfb-c0638d557a76": ["52338354-3ad1-41f9-97f9-336acd961e2d"], "a5612b9f-ccfb-4bb2-aa7a-27e086135fd2": ["52338354-3ad1-41f9-97f9-336acd961e2d"], "499d952b-f1ed-43c5-8acf-d842fa8de770": ["d686ad98-34e2-4b0e-9455-17b40c9b594e"], "340e80d5-bb70-4e1a-b213-2bca7d2867d5": ["d686ad98-34e2-4b0e-9455-17b40c9b594e"], "e94fdf02-ee1d-492f-bba8-92e4701a1658": ["0a5d8c35-1a61-4a19-8cdc-af75f29bafb2"], "d798de86-8b31-4b5a-97b3-38b7003f04f1": ["0a5d8c35-1a61-4a19-8cdc-af75f29bafb2"], "a8e81089-508a-4fe1-af9e-acc42271c860": ["fd0fc04a-c23c-4e9b-a5c2-e523fd3d56b0"], "f4f15bb1-3bd4-4362-bf92-359e3192e6a7": ["fd0fc04a-c23c-4e9b-a5c2-e523fd3d56b0"], "b4102aaf-bc18-4b76-a199-7a0b3417e46c": ["8f7eda3d-6166-4aac-a1bd-82ab5685943e"], "a63a05eb-3f3f-4a4d-9c22-03dafc9d3acb": ["8f7eda3d-6166-4aac-a1bd-82ab5685943e"], "9169705b-9cb9-4a40-a728-f2d0b92f184e": ["17929747-0194-497a-8ef5-c35157fe2502"], "83a182c5-1f6d-40ef-8283-5b8de7e39b36": ["17929747-0194-497a-8ef5-c35157fe2502"], "d5322f72-f3d8-4c36-94e9-d96019a858ad": ["1bf4ebda-cc0b-44fa-a508-e77f73a2571a"], "17533780-25ce-40ec-a715-14ace299516e": ["1bf4ebda-cc0b-44fa-a508-e77f73a2571a"], "d650272a-7ae1-4224-9ef8-4f3af7b76406": ["bcea1915-203c-47ef-b315-b5e1f022ef46"], "57d88b01-927b-4528-ac42-d9f94d365f7d": ["bcea1915-203c-47ef-b315-b5e1f022ef46"], "32f9d6a4-2b19-43ac-8801-66124cbb2c53": ["bcea1915-203c-47ef-b315-b5e1f022ef46"], "e0ba5b9a-24aa-4e51-9b3b-819495773075": ["bcea1915-203c-47ef-b315-b5e1f022ef46"], "de1fff9c-4e41-4e1b-bdc1-1a21f2b4529f": ["637a3b1b-de7d-4acd-a558-380c6d846ff7"], "1506c315-295d-44dd-a362-b0b36702278b": ["637a3b1b-de7d-4acd-a558-380c6d846ff7"], "b9b2d0b7-b5fe-44bc-8ea2-a1f316a39cbc": ["1e6f8881-5939-4976-a393-8efcb75e00a3"], "f09c80c9-ad47-4449-ac94-e42521875684": ["1e6f8881-5939-4976-a393-8efcb75e00a3"], "696c256b-72fe-44dc-8918-87d4319d7e0e": ["dc88bef8-879d-4dd4-a0c5-c79ce8a7aeb8"], "257ba3aa-67e6-45f6-a3bf-748f5ce3feca": ["dc88bef8-879d-4dd4-a0c5-c79ce8a7aeb8"], "0b8b5cb0-ed67-4659-92a3-691f98aec2c2": ["0743b513-d22f-4c0a-8ef2-e4dd119e2073"], "0295608c-dce0-4d7b-9cb0-d772daaadf78": ["0743b513-d22f-4c0a-8ef2-e4dd119e2073"], "22fcf151-8e02-48da-af9f-15946924d667": ["d886e572-68d4-4c84-8b86-8fb04b1244e4"], "9330c4c6-aa7d-4e2a-9ec2-249a1767b5b0": ["d886e572-68d4-4c84-8b86-8fb04b1244e4"], "e180bbb4-a4e7-4e02-8d45-3e24e062b5bd": ["706b4d83-4926-4802-aa0b-e2ed348436bd"], "b69fc8ab-fe55-4f4f-af0b-d19c5ba87c0f": ["706b4d83-4926-4802-aa0b-e2ed348436bd"], "154d8494-7978-41b1-8250-63566717a34f": ["987dcca5-ce3d-4857-9563-d999e225b8f7"], "9aface90-2988-4ede-bedb-246c9401211f": ["987dcca5-ce3d-4857-9563-d999e225b8f7"], "19324d6d-1470-48c1-a2ce-202dd93d3236": ["d3ee0843-08eb-4ed8-b77e-04d77764235d"], "be16cf25-5845-4c67-8fb0-de88f742ba1c": ["d3ee0843-08eb-4ed8-b77e-04d77764235d"], "c93c8a2d-4490-47f1-9365-8be0297b31b8": ["ff95c7a0-f634-4fad-8a08-891abd54afc3"], "f47bad49-27c4-497b-84e2-021eefe1ea55": ["ff95c7a0-f634-4fad-8a08-891abd54afc3"], "4fdc1658-2458-4c7c-8edf-db9ffb320291": ["51b6d495-a691-4a78-aaa8-afa2a649853b"], "fa0bad2f-be1c-4af0-9eff-04deec5dafc9": ["51b6d495-a691-4a78-aaa8-afa2a649853b"], "ab3200e7-9881-41c6-97b4-37a1b3eb4a4c": ["3271d86a-f89a-4e2d-bb96-d937fc56ccde"], "a0829f5e-39e5-4190-90dd-140761f9765c": ["3271d86a-f89a-4e2d-bb96-d937fc56ccde"], "83f1df6f-b32f-4f54-840c-6770e3fc7d3f": ["b5834aab-ad85-48c5-9e37-b95537495daa"], "0a6feb89-ca93-4f00-9c6a-6eff2beefa75": ["b5834aab-ad85-48c5-9e37-b95537495daa"], "5a5d168e-ed0b-45b3-ba86-2a74dd6b0c81": ["1161c9c4-0fe9-40ea-9741-89086b5d571f"], "b5c6d2d9-ce2b-44ef-bdfb-aff147ef5d1f": ["1161c9c4-0fe9-40ea-9741-89086b5d571f"], "7287fd3f-f55b-4ed6-b083-7bf752e77e21": ["8a8e921a-e8c5-435b-abcb-260ee5ff2009"], "eeb6f558-24cc-4460-b7e0-23e766a26bfe": ["8a8e921a-e8c5-435b-abcb-260ee5ff2009"], "05b24b04-35fe-489c-93fd-73af5b69e656": ["5c58025b-11cc-4813-b309-2152250af5a6"], "9bcb27f5-e00e-4536-83a0-7a2fe524f948": ["5c58025b-11cc-4813-b309-2152250af5a6"], "4fd47646-792c-41dc-91c5-33d6292c2d7e": ["60a4cc0d-55de-4738-8857-a98c34bddc02"], "34906233-a5cd-4716-b59a-4ab3b7617eb9": ["60a4cc0d-55de-4738-8857-a98c34bddc02"], "61d03503-6f8b-41df-b5e7-6ab516cc2b19": ["9954a6ac-8ed6-4fa2-80c6-224527edc7f6"], "2b06cff3-ba26-4093-a115-8b113c9cb935": ["9954a6ac-8ed6-4fa2-80c6-224527edc7f6"], "74f182e6-72a2-4df5-9c80-849fce14e1e9": ["565bea6c-03d9-469b-beec-045228224c17"], "3c96f5eb-a458-490a-bfca-fc786069f65f": ["565bea6c-03d9-469b-beec-045228224c17"], "3c5a4d49-b8d3-45ca-baac-7d2557da44d4": ["a22b9001-54ee-46c5-9218-0e90f3f922fa"], "780e1695-75a3-44c3-9df6-01e52bc76a1f": ["a22b9001-54ee-46c5-9218-0e90f3f922fa"], "39a9e41c-4d5d-4863-89d6-32d306413b04": ["b45170d1-8eb3-4f71-ac04-66a189b3d100"], "857fce4e-1ac6-4a5f-9710-d3f91463f0b8": ["b45170d1-8eb3-4f71-ac04-66a189b3d100"], "36171fa9-4ee0-4f69-a3ca-4c40a262236a": ["4afab07c-2021-4965-b257-3199424184bf"], "d0aef583-5784-4a0e-802c-ca31cba5fb88": ["4afab07c-2021-4965-b257-3199424184bf"], "76a687bd-b92a-44d9-867c-79c6357fc513": ["fdf80700-c3bb-4b78-94f9-ff57be40af04"], "727c2aef-3735-40f6-a69d-e168393a433b": ["fdf80700-c3bb-4b78-94f9-ff57be40af04"], "39abe6ea-3500-49b6-b2c0-3ea64cdc2b01": ["3dd26edc-02e2-44f7-b0cc-8ff873f6fbfc"], "120d9671-f5ad-4a1d-99aa-990b31c742f6": ["3dd26edc-02e2-44f7-b0cc-8ff873f6fbfc"], "16eb5b34-9bf7-4cdf-afe0-fe424a61b9ed": ["5c2927b6-4d22-4e1c-a3dd-2ecc07724d6c"], "c897fb5f-aabe-4c41-b20a-e2f963c4a8dd": ["5c2927b6-4d22-4e1c-a3dd-2ecc07724d6c"], "5b6d2e09-c877-43ae-81ec-e6bcd61a43df": ["29da0138-ec32-45f7-9fa9-44fa7c333ea3"], "e8bab1f8-ca56-4604-9448-af2881b23a46": ["29da0138-ec32-45f7-9fa9-44fa7c333ea3"], "a25b893a-1462-43ea-a109-929f92ae7739": ["d393b14a-4dd3-4c13-83d1-5a126504f16d"], "2c29213e-8d0f-4a21-8a7c-7f62125b7b42": ["d393b14a-4dd3-4c13-83d1-5a126504f16d"], "7f1d2e8b-a2f5-4e49-acd9-0e6d68dd1513": ["5b7d6ab9-4aec-473c-8057-13b864e7937e"], "9177e909-e53b-42bf-a7dc-85a4a54a5943": ["5b7d6ab9-4aec-473c-8057-13b864e7937e"], "ccb94cf6-c8e6-4dca-9393-83cb9d1ddc98": ["83dfb307-0964-416f-86fc-10ec9e5c54f4"], "db83f364-2282-4134-9666-10480ba2f039": ["83dfb307-0964-416f-86fc-10ec9e5c54f4"], "82c9cc41-082a-4ca3-8953-0eff6d71e7dc": ["e8b13b4a-7ded-4c5a-b40e-42a417e84d90"], "4f8a9995-6129-4d24-bb59-c1348cdebd36": ["e8b13b4a-7ded-4c5a-b40e-42a417e84d90"], "373e53f1-a6a5-4e3a-8890-8472487ef092": ["200d3a54-0f82-4f5c-a68b-f7e6c7add060"], "add87caa-8022-41e4-86d4-db6bb91ee9cd": ["200d3a54-0f82-4f5c-a68b-f7e6c7add060"], "0eac82d7-fd95-4ce9-b70a-b16a21ee19b4": ["890cf01e-ded7-494f-a1e3-3b216369f070"], "5f898c39-741a-4f1a-a6f3-c8d3f7f253b6": ["890cf01e-ded7-494f-a1e3-3b216369f070"], "6f36713e-9ae6-4652-80b0-da77b09bc096": ["0a866308-b407-406e-864c-d762268779b1"], "61a8978a-e286-47b1-be2c-87e286d8cb2b": ["0a866308-b407-406e-864c-d762268779b1"], "0955000d-9370-4ada-82dd-a2e3a0af396a": ["591025fd-12a2-43e4-b7da-eae1276d51a3"], "2bf66593-6160-4d2c-b07b-2ba57105aeef": ["591025fd-12a2-43e4-b7da-eae1276d51a3"], "8eee6057-eecd-461c-9434-634687e4d281": ["64472bc3-ccdc-4319-b570-adf2424875dd"], "6a97146e-d66e-4ae7-80a6-c728c060c265": ["64472bc3-ccdc-4319-b570-adf2424875dd"], "eb13e7ff-13ef-401f-8afd-32d6224c6c84": ["d8fe9e12-13e2-4dcb-ae61-780616e8f90a"], "5f01bbb0-d687-41f9-bef7-133650a43240": ["d8fe9e12-13e2-4dcb-ae61-780616e8f90a"], "ba7bb2f7-7b09-40f9-a420-6e84f6b7c280": ["ea2155b5-18f8-4f66-bab3-317cb87ead83"], "0ceb1784-4c3d-43a8-84e2-b75f8a0b7b98": ["ea2155b5-18f8-4f66-bab3-317cb87ead83"], "cb49cc21-8063-449c-a7a0-78df49b7fd2c": ["85758af1-c920-46aa-96db-5f767a404bc2"], "426f8c87-df4d-4b8f-b0e1-37e470415631": ["85758af1-c920-46aa-96db-5f767a404bc2"], "ceb4c6bc-66da-4a1a-9018-8d37df0a4f14": ["02388012-28e6-4f59-a541-e488ac0d5a7a"], "4be40733-b150-45fa-bfef-d7ef730fc515": ["02388012-28e6-4f59-a541-e488ac0d5a7a"], "20d7641a-82cb-4a09-aafd-029cb57c5276": ["263cac85-5cd7-4d7e-a1bc-aa5d1cd348e9"], "630247fc-8d1c-484e-94b2-f1dc24450778": ["263cac85-5cd7-4d7e-a1bc-aa5d1cd348e9"], "1d7bdec7-550e-4e4c-ad4b-c20b1ae02fa7": ["564ce5f7-5725-4160-8b28-abf59f9a936c"], "7b2849a1-5be1-4c16-8fef-6f525ea7e993": ["564ce5f7-5725-4160-8b28-abf59f9a936c"], "73fa2c8a-ac29-473c-82c8-dcfa897b2628": ["f18612d1-1ca7-4c22-9b38-cdb7a7d7ba0e"], "42d30ef0-a854-4ee4-a546-0f5509aadbe4": ["f18612d1-1ca7-4c22-9b38-cdb7a7d7ba0e"], "25b09226-477d-4196-ab77-8289ecccf224": ["5d2f6f21-c8dd-4479-9f3b-2eaa9dbd8641"], "8667a3b9-fe1d-4186-b8ab-fe2827f885a2": ["5d2f6f21-c8dd-4479-9f3b-2eaa9dbd8641"], "f251fe08-3983-462e-9b81-f7b3f592035f": ["ca2ff36a-fc77-4549-ad92-c4ce21e78d7c"], "49b297a0-bf2f-4909-8f84-e49355052277": ["ca2ff36a-fc77-4549-ad92-c4ce21e78d7c"], "0a26f268-6e52-4d81-9de1-6b64b52f7ddb": ["488fb87b-1f91-47b7-b388-5f588d4e41d9"], "792cffe9-2725-4afc-a7d7-1780c51cfa19": ["488fb87b-1f91-47b7-b388-5f588d4e41d9"], "fa527971-621f-4928-99e0-8b3d203b0373": ["c9ddc06a-2809-4e61-b6c5-d0bd9caa3071"], "ba5d5c9c-40c5-4c8a-bcf9-e33908506045": ["c9ddc06a-2809-4e61-b6c5-d0bd9caa3071"], "75ceaeea-b916-40ae-b4f7-29b1aa44ef86": ["0e2c8f47-df15-48a1-b367-09395c987383"], "bc26310d-ead1-4b43-aeba-81e0f065fb4c": ["0e2c8f47-df15-48a1-b367-09395c987383"], "db28ba10-a574-4087-ae3f-58bcfe1be334": ["da6dafb7-7f9d-4a83-bf11-a5e57f3cb62b"], "419732ad-5434-44bd-aa6f-446a5c6462c5": ["da6dafb7-7f9d-4a83-bf11-a5e57f3cb62b"], "a2d661a9-e8b3-463e-a065-0484b3b1dde9": ["0c55d043-67fb-4b55-a107-dc86d01615cf"], "9dc5b819-156e-4ddc-972d-f77324d11838": ["0c55d043-67fb-4b55-a107-dc86d01615cf"], "1cefec25-ad77-4b27-815e-3cb3d7472bc9": ["e23a3e21-6ebc-4ecd-86c9-fdeb09b5b32b"], "73f401a0-01f6-4c16-9c6e-48ef542dc0fa": ["e23a3e21-6ebc-4ecd-86c9-fdeb09b5b32b"], "09d16d98-ff7c-4ecd-8248-483557e4cca8": ["f30c0b7d-688c-42ae-b1b8-62b082355aa4"], "fa4de38f-4d24-4361-a0c4-7033f0f57576": ["f30c0b7d-688c-42ae-b1b8-62b082355aa4"], "24917f81-33ab-47e0-b529-98a5f73a3d5b": ["0eb7f4dc-6708-408d-8d7f-02261e960b78"], "7ca523bb-bcf7-49eb-a880-c374a8c0f92f": ["0eb7f4dc-6708-408d-8d7f-02261e960b78"], "74d07f67-9152-4da2-ab26-4c77ae0101b3": ["6c6d5ad8-95d4-49ba-b76c-396549622292"], "3a411e85-d029-400a-a5aa-308b89b458d1": ["6c6d5ad8-95d4-49ba-b76c-396549622292"], "31dcc812-f976-4bfe-9820-ffa2cfd21e40": ["b2b7d9b2-0a80-42cb-b514-c3f350a19f9b"], "d36eff93-dbf4-48bb-a4a3-9eeda7e38f5f": ["b2b7d9b2-0a80-42cb-b514-c3f350a19f9b"], "f66a79d3-53ca-49eb-966b-5d84543f3ef0": ["360c272d-adb0-4907-9c1f-ea597e5635f5"], "3f213db3-892e-4ba2-a786-c34801d2e1bc": ["360c272d-adb0-4907-9c1f-ea597e5635f5"], "9d9ebf0e-250b-4fac-9c98-03956c0137f1": ["baf4ebac-8032-409f-bce7-b7fd7cdb490c"], "a0676f9e-2091-4d91-9e5d-2716ada90af3": ["baf4ebac-8032-409f-bce7-b7fd7cdb490c"], "bf87a76e-c3c3-4c5e-b740-2bb48eeb5434": ["a95ed249-4388-4ae7-8ea7-412652dc827d"], "04139c62-6117-4229-9f5f-9091c993be24": ["a95ed249-4388-4ae7-8ea7-412652dc827d"], "0824ddbf-121e-4628-afca-a793953af3a7": ["30762230-7111-49ea-9be0-e675ab9ac73f"], "72316410-5e63-4c0f-b0d6-a0bd5d383fe7": ["30762230-7111-49ea-9be0-e675ab9ac73f"], "6081f26e-68fa-4b6b-a415-37efc21a96fe": ["c6da1c9e-bae2-4606-8fd8-024bd079d4f8"], "c44122f8-2345-4805-80d8-faf112d6eb8a": ["c6da1c9e-bae2-4606-8fd8-024bd079d4f8"], "929a6f01-bc45-4546-8997-1464832d4336": ["6db7a6ac-741c-4b6b-b22b-5e72899dffe3"], "34fb9cf3-7bcf-4ab7-89f9-4fc44a6eaab6": ["6db7a6ac-741c-4b6b-b22b-5e72899dffe3"], "39e44404-9e61-4c4c-a3e8-abd85cda209a": ["2ce36cc6-ce16-4ea8-84dd-b34ced10c270"], "467799c8-e641-4230-91de-cb05692ddd7b": ["2ce36cc6-ce16-4ea8-84dd-b34ced10c270"], "e864bee7-ec20-41dd-a122-c7f4c3de8e38": ["75cae5df-3ee1-4ffb-a26d-c334f8344cd1"], "6d2d0bbc-cb89-40ac-b9a9-428fdd10683c": ["75cae5df-3ee1-4ffb-a26d-c334f8344cd1"], "baed7f2d-0453-49e3-bae3-50af5ddb468d": ["5f3fee32-ddbd-4af6-bac0-e0fe1483cf1a"], "f0d3901f-5a2d-495c-bc86-13c485658247": ["5f3fee32-ddbd-4af6-bac0-e0fe1483cf1a"], "243a6d96-c55f-412e-834c-362e8426515e": ["f53411bb-1a22-4066-b69a-932ea017c0dd"], "956abf50-b143-44e8-aaf1-f577e4be7c54": ["f53411bb-1a22-4066-b69a-932ea017c0dd"], "0d31e44e-9a08-4b81-b729-0d39767e5643": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "9394ccab-b30c-4d75-8787-c94a2987bc5f": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "3c235f0a-c215-4e9e-be9c-760feb1e0c45": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "12270ab1-7d26-45fb-8f74-654abeb3d988": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "c1faa986-9dab-4aaa-a9a4-399d385a2e29": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "936ba82a-d456-4381-b9e8-3a4ea4481d40": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "d253e0ca-ebf5-42f9-a77d-e6fc6325149c": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "5cdb89de-fa05-4852-a4c9-de47c915f5f0": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "a7543eee-50ac-45f4-b25a-6e98d3707827": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "44f51b18-ea12-488e-81ad-b9b6e5ec5562": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "8a2ae69b-a074-438b-bdee-f367efc85437": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "c30cc6d4-3407-4dc2-99e6-53fdb13ef11d": ["93781d6e-16c5-4b72-b664-ec87ae1deb2a"], "eac30494-1aae-49ae-829c-b87fcecfac8d": ["eb908359-c28c-439b-b790-802d3318a8f5"], "6247d304-3eb4-45d5-944a-26708f567ceb": ["eb908359-c28c-439b-b790-802d3318a8f5"], "8493c45b-a7dd-42a3-8287-8083315601c1": ["a47be785-9bcd-41a3-b3c2-e4b62c171617"], "88055806-d4f3-489a-b1e2-aedf98b55f58": ["a47be785-9bcd-41a3-b3c2-e4b62c171617"], "88d61552-ae28-4a46-af54-508345ff249b": ["0c28dc6f-9c71-41ad-a021-293e5116e028"], "1497ceb2-3938-4ba0-96ab-560c5f024510": ["0c28dc6f-9c71-41ad-a021-293e5116e028"], "d01eebb5-41d6-4670-97af-41bd827a6ce5": ["f5bb080e-e805-42c4-b42e-dbb6fbabf753"], "92ae72e5-71e5-4746-9bd5-98511d027ce8": ["f5bb080e-e805-42c4-b42e-dbb6fbabf753"], "283ce062-8df0-4ae5-9d61-e3ec1de142f3": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "18bfb976-9614-4a3a-96b1-bf772867314e": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "e5c9a875-ace8-4fb1-aeb3-b8fd435319ba": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "332c50eb-a417-4c62-a07b-71f097e56f49": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "3e4acbeb-8c7d-44cd-b25e-c3dda15bce7f": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "68526e5e-8305-4949-ab13-4c55992c4f0a": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "342f2298-d209-42f2-ad0f-b17fa16e49f2": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "ddd2df5e-145c-403d-8c6d-c68a79d127f0": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "63826172-632d-4e93-803a-22d643d6f275": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "4651301e-ab9e-4b15-b9cd-700e6c18d621": ["41a58e54-66d8-44b7-b162-7c83dca8c8f2"], "b4bd9451-789a-4d65-96a9-ede258699a06": ["49ce61df-a82d-4f9e-98a2-d761ff580b48"], "50b0321e-b3ff-4ce1-a144-1f5857f81043": ["49ce61df-a82d-4f9e-98a2-d761ff580b48"], "7cae4781-34b9-46ac-abbf-04e61018d589": ["7560d479-2460-4be2-98c9-3d9e638dda43"], "312099a9-3068-4ad1-8e2a-56dc61218e75": ["7560d479-2460-4be2-98c9-3d9e638dda43"], "c6e665eb-f8da-4226-9e4a-e7174550c333": ["9490114d-a403-4ebf-9dae-f773f77d207c"], "8b736623-0ad8-438c-9961-6eba50c2be12": ["9490114d-a403-4ebf-9dae-f773f77d207c"], "1880971e-f388-4426-a3a5-73cff6bfd56c": ["9aca9b05-556e-4bcb-9f67-678ab9932714"], "207172f5-298a-4163-961c-834f4c5a81ec": ["9aca9b05-556e-4bcb-9f67-678ab9932714"], "c7da8008-be34-4975-b487-9f170b8d5b6c": ["e7ccd8e8-d49a-412b-bad3-08ddeb388c40"], "b70b127c-847e-4aba-bcf5-47887df45e79": ["e7ccd8e8-d49a-412b-bad3-08ddeb388c40"], "9b75564c-8a00-4fde-82d3-a2b1f256deb8": ["258b27dc-f16e-42ee-8c83-9880a4cce44c"], "6a1a635c-519a-4007-8599-aa0a73b54362": ["258b27dc-f16e-42ee-8c83-9880a4cce44c"], "1dbc1019-02fb-4dc2-93a2-7e365c3e7838": ["d78d7e97-7d0f-41f9-a739-6ed33dc0cbdc"], "2db1c73d-8758-4b33-8e7a-9cf0c406690c": ["d78d7e97-7d0f-41f9-a739-6ed33dc0cbdc"], "279415df-31f5-472b-9739-3dce1e6ccfcf": ["0326fd68-ead4-4ab9-b3f0-54b614586b20"], "c4e5ef4b-280d-4e07-b25c-42677bee432d": ["0326fd68-ead4-4ab9-b3f0-54b614586b20"], "27ec0c2b-8e0f-43d4-8f29-b2f0404c117e": ["986f81d7-aaa4-4340-8b2f-475544916cc9"], "4b9b7fe3-9646-4a1e-b85a-46824d314c9a": ["986f81d7-aaa4-4340-8b2f-475544916cc9"], "a75e59bd-9c57-4b19-8528-7958177939f2": ["11db2562-1070-4dbc-a6cb-d07e98ee4fe1"], "dfb50460-65a6-443c-a6dc-1ea96f59399f": ["11db2562-1070-4dbc-a6cb-d07e98ee4fe1"], "bc338982-b2f7-4e48-82d7-ab52fa74357b": ["747749a8-af02-4dd3-96e0-61a25c22c824"], "96dd08f6-a715-44cf-94de-f7817074a438": ["747749a8-af02-4dd3-96e0-61a25c22c824"], "620f0fa8-d924-4483-b026-cb2efce2a328": ["552c6cd3-94bc-4c4c-b5f3-88d71cf46dcd"], "f1949bab-6eb9-403c-82ac-4a50edaceaf7": ["552c6cd3-94bc-4c4c-b5f3-88d71cf46dcd"], "0169b8fd-637e-4bab-9211-3d4e47384f70": ["a25a497a-c4f3-4ed8-a87e-cef3fe0f4a82"], "643def5c-ddad-460f-bfb6-b7392c7bc634": ["a25a497a-c4f3-4ed8-a87e-cef3fe0f4a82"], "9d48301e-9a1f-4350-80f7-356de25d0aa4": ["a25a497a-c4f3-4ed8-a87e-cef3fe0f4a82"], "51781f51-6fcb-45d3-8ab8-98f2944566aa": ["cb3584cd-0f92-4eb4-a403-bb85dd965cd9"], "d500a07f-3154-4aa9-a5f6-1c8abcb845a3": ["cb3584cd-0f92-4eb4-a403-bb85dd965cd9"], "dc48a7c0-d25b-44e8-a6b8-6ba0c01afd0d": ["928879e9-6e26-4e07-a48a-5ea2a9783ceb"], "083b191e-3614-4e30-8c64-6f3260c5b2ec": ["928879e9-6e26-4e07-a48a-5ea2a9783ceb"], "8bbd842f-5949-4d11-b60b-106d6a396d72": ["81f9b886-aa2d-4120-969c-6368f0f0e9b6"], "2f82e3f6-7ed6-438a-b5a4-70f163b2dd65": ["81f9b886-aa2d-4120-969c-6368f0f0e9b6"], "9f8212f7-6039-4178-a69e-eb7c861a7c44": ["a4851d7e-0dc1-48fd-a4f8-8321626dd511"], "891a47eb-820b-47a1-8b67-2e815b78fa8b": ["a4851d7e-0dc1-48fd-a4f8-8321626dd511"], "3448e120-9de5-4ae7-824d-4d3c022f4ead": ["e061ec82-e96a-4d2f-a378-2dd8f3712500"], "7cd9656a-89ab-4c77-b33c-d88d63739c69": ["e061ec82-e96a-4d2f-a378-2dd8f3712500"], "b047cbbd-c13f-47cb-9d3f-cd7794abaff7": ["b959b835-7a1c-464e-9430-7dbe14904f1d"], "479bb3ad-59fa-4053-8ca0-af5121493777": ["b959b835-7a1c-464e-9430-7dbe14904f1d"], "10cd2cb4-fed9-47b9-a5da-317b8635235b": ["4f58f9ae-95ac-4581-a321-374c0aebe20f"], "4188d039-74be-4ffb-9e4e-400ca74bfe6e": ["4f58f9ae-95ac-4581-a321-374c0aebe20f"], "95fccdf0-80c3-437e-a874-22a06cbf548d": ["5ad9167d-51cb-4c03-9d49-b92b55b2f0a9"], "4d5aeee4-06a1-43ca-9240-fbf204164014": ["5ad9167d-51cb-4c03-9d49-b92b55b2f0a9"], "34eb6940-a11b-4370-b762-dd8daf1c710e": ["81ac88bd-4dbc-4d8d-b934-18210cffae61"], "e9c9261e-3df6-4940-874a-8d1aac432e5c": ["81ac88bd-4dbc-4d8d-b934-18210cffae61"], "5c3374bf-11a5-4856-b797-baf2ad08d0fd": ["1d5dbcd3-8f55-463b-b99a-076657738145"], "6e35584d-2298-4094-9f52-95200a47fdac": ["1d5dbcd3-8f55-463b-b99a-076657738145"], "01d5fd3a-4a6c-4da7-af26-5ca356471a2f": ["c72e22af-649d-40d2-a25e-13017a0c6145"], "836f3cda-33da-4184-850a-017db4f1fc1f": ["c72e22af-649d-40d2-a25e-13017a0c6145"], "da8f551c-b2d5-4463-9a26-c8e79ff694b3": ["478faa10-b265-419f-a30d-f9c14d41b390"], "176621a0-f848-4520-8150-43a8e5a39dca": ["478faa10-b265-419f-a30d-f9c14d41b390"], "6790e42e-e672-4af0-93f3-ab6f37112073": ["0cd94b82-d353-43f4-9781-1df249ef6b56"], "7d11ff03-17cf-4f67-b81b-e0b1f62e52b0": ["0cd94b82-d353-43f4-9781-1df249ef6b56"], "26df2161-80aa-4013-8a9f-4f8ea03f0c53": ["3439cd44-74b8-47e4-89da-d41a9c398e50"], "f106e133-4d10-4c88-b309-d026ab0331f9": ["3439cd44-74b8-47e4-89da-d41a9c398e50"], "c69b9c44-3112-4368-b45a-8ecdcbc2d709": ["3e86044b-f1e7-4e61-9c0d-2924a4d7bc4c"], "a8b1d789-f8cf-402d-bd57-7a3368001118": ["3e86044b-f1e7-4e61-9c0d-2924a4d7bc4c"], "fd5926d3-fd28-4bc3-8c83-685e7ac6c9c6": ["95817e94-fd39-46d2-aee9-bad01476b4ae"], "c32fc2f2-e397-4448-9b3b-1c5d81e4f30c": ["95817e94-fd39-46d2-aee9-bad01476b4ae"], "9b6e10b3-08de-4ea2-b26d-07cabeef991a": ["9e29bf20-0d31-43b7-92da-52683bf05332"], "cb16cf38-05dc-4bf2-9c0b-bdbbdeb7eaed": ["9e29bf20-0d31-43b7-92da-52683bf05332"], "3838bde9-b740-44a1-9f64-d9060e8127d0": ["75eb924d-fe44-42f7-b634-00520a931b9c"], "49be9a0c-30bb-4762-ab54-a43978a049b8": ["75eb924d-fe44-42f7-b634-00520a931b9c"], "8f572687-9a82-469a-9681-46845afb0149": ["54e92eb3-a9c9-42ec-943b-63f193ea8c6f"], "ac13347f-de30-4ee8-8b98-f70e4f0abd1f": ["54e92eb3-a9c9-42ec-943b-63f193ea8c6f"], "3c467f09-f524-4df5-9c90-66acbafa2632": ["b02ee85f-eded-453c-a4e2-f59cdb008451"], "45b7a1f9-a03d-44e4-a758-fa3f383dbc59": ["b02ee85f-eded-453c-a4e2-f59cdb008451"], "e169e2be-922c-4c00-9b71-9aa30db55636": ["4f7bc60e-8f7e-43f8-994b-16518da042e6"], "1df5a4ee-e178-4039-abdc-84cb624e37f1": ["4f7bc60e-8f7e-43f8-994b-16518da042e6"], "6b5790eb-1e6b-414f-8881-289b4efed348": ["83124d2d-7ec0-4c2a-a890-97159901374b"], "4ede6d67-d815-4363-ad27-b5613ba5dc30": ["83124d2d-7ec0-4c2a-a890-97159901374b"], "5e153540-2976-4c47-9645-f5dc90a4f050": ["02142b1e-9815-4d1a-b0df-b70ef53b0f61"], "1616acd4-f3f6-4ee7-bd24-ee56036b1ccd": ["02142b1e-9815-4d1a-b0df-b70ef53b0f61"], "38ab7308-11e0-488a-8bc0-ff341476a2ce": ["539bf100-c036-4463-9e3a-24fa0867f722"], "52c0732d-61ea-410e-8a69-34600024c5a4": ["539bf100-c036-4463-9e3a-24fa0867f722"], "a8871cfd-d9f7-45d9-be79-c514f3ddbfb8": ["d74f64fa-870f-43a3-bf12-0810c7f72c84"], "4314e2d0-9a1d-4408-bbb7-5461ec50179c": ["d74f64fa-870f-43a3-bf12-0810c7f72c84"], "559058cf-5ff8-468c-88e4-22ea6b2c0e5f": ["f9519ed2-95ef-43c4-b5ff-73f798982513"], "c70f3b8d-bdc5-412e-aeae-e937cf660780": ["f9519ed2-95ef-43c4-b5ff-73f798982513"], "4e33c700-aebd-41ad-bc3f-160160d69e6d": ["0c094258-9297-46d3-99af-e5cced5acf79"], "766ed332-85a9-4828-9b8b-76b6430864c4": ["0c094258-9297-46d3-99af-e5cced5acf79"], "7c29bc31-b528-427b-9959-b794adf9e800": ["5c64828e-60d4-48d9-9013-eff35efc3027"], "f2544818-c2e0-4500-ab8e-37849c5d9d2a": ["5c64828e-60d4-48d9-9013-eff35efc3027"], "f50a26cb-8bda-46e0-bab6-a0962a987047": ["54c7c2d9-ac94-4faf-a615-e6defa80cf80"], "4f6f2aa1-855b-4fe2-a13e-6d32e6273070": ["54c7c2d9-ac94-4faf-a615-e6defa80cf80"], "a9fb3e6e-41db-4744-866b-82c0ae6a0958": ["131ffd89-9e64-43da-b5d1-c1e4a97d40da"], "7947e0a6-9b2e-4d90-9159-e826e3cde7ac": ["131ffd89-9e64-43da-b5d1-c1e4a97d40da"], "fa9f683a-343d-4436-9f4a-afcdd116943f": ["6ed7592b-4f27-43c9-9539-0506bd1c1f17"], "a82087f8-1fcb-4867-9ef5-91c74ecefd93": ["6ed7592b-4f27-43c9-9539-0506bd1c1f17"], "2ef42311-f595-487a-870f-dbdc78a38a9f": ["ee9095f7-8fef-4326-9ec0-91c002428c86"], "4dfe546e-769b-4425-816d-01ce0156c060": ["ee9095f7-8fef-4326-9ec0-91c002428c86"], "b60c0327-008b-4292-be4e-e910059b1108": ["c91447b4-46ea-4412-9d66-49ee88513b35"], "60ab7488-e7e8-4ad8-9a4c-01e83dc3fb87": ["c91447b4-46ea-4412-9d66-49ee88513b35"], "afb2d2f8-6776-4b99-98cd-051d75b6bb7d": ["57291768-ef50-4242-a2ff-84a24531eeca"], "0dfd302a-1e11-4b64-9456-d4f03c12c438": ["57291768-ef50-4242-a2ff-84a24531eeca"], "44bf1a91-e2cb-49d2-95d3-3f6dea47f863": ["71c96665-dc42-4423-a6c4-2fb8da6f12c8"], "4dc04e0c-e7fe-4b91-9e8d-f10e6e71ae2a": ["71c96665-dc42-4423-a6c4-2fb8da6f12c8"], "8fd756b9-6e2b-47f6-8333-1a1f453257ed": ["50561d5c-2cd1-4e6e-b4a9-1b4dd72df9c4"], "eb54d61f-49a4-4b04-b501-286d31da3443": ["50561d5c-2cd1-4e6e-b4a9-1b4dd72df9c4"], "3d281439-8f16-4e83-9c4b-7518b19c78a8": ["6cec44f4-9f77-4e08-a509-62dc061003b4"], "43e82a36-31cd-4a0c-9111-4d236229df4c": ["6cec44f4-9f77-4e08-a509-62dc061003b4"], "b52d3431-dbec-454b-a960-da5bc76c1515": ["935491fa-1b80-4b88-b82e-2498b757bc28"], "f83e5456-7135-4030-9a3d-70041bd1d7f3": ["935491fa-1b80-4b88-b82e-2498b757bc28"], "288f2d22-73e7-4a46-b916-4b0d896ea5ab": ["390a05b9-f192-43c3-abca-e246aa9d8a9d"], "98c8f627-d1eb-4cb3-8281-6616011bf9e3": ["390a05b9-f192-43c3-abca-e246aa9d8a9d"], "1177229b-504b-4190-bfdf-b37d49427787": ["d7185c70-f71d-4963-980a-25e46912ddbd"], "5152397a-5735-448a-bf2c-162606a982b6": ["d7185c70-f71d-4963-980a-25e46912ddbd"], "c8454f44-cac6-4008-bfc4-331b65b3ac82": ["39beb921-1855-4766-9571-b2304f9323b9"], "6b0ee9dc-68ab-4bd7-a0cb-ec5d4fe376a5": ["39beb921-1855-4766-9571-b2304f9323b9"], "0ebffe4d-44aa-477f-91f5-89fbd359cf57": ["d8593338-a59e-4d7e-b09d-71b0de7d5323"], "277258c6-9a6d-46bc-b3ce-d6f7e4b7b43f": ["d8593338-a59e-4d7e-b09d-71b0de7d5323"], "d07e14f5-dad0-494c-9c0e-04465c6f712f": ["caac61a4-1b05-4bbd-b050-0934a902e086"], "4082acef-6de4-49b7-82b2-498d2f3f98cc": ["caac61a4-1b05-4bbd-b050-0934a902e086"], "435802bc-37c6-4190-8b71-39a503e30b40": ["07092149-ad54-4fdd-881b-9e878401ec67"], "2dcefc08-5ffd-4f3a-b7c0-4f911fe80ec2": ["07092149-ad54-4fdd-881b-9e878401ec67"], "11bdd19b-705d-4b1f-aef8-74427ccbeaad": ["cfbefb8b-0473-46a1-bf53-42657cc167e6"], "8410fe38-84ac-46b9-bbd5-9e664d9b7397": ["cfbefb8b-0473-46a1-bf53-42657cc167e6"], "5efd8ae4-765a-43b0-ae81-b2d1e77e1ed9": ["492e1c5b-f662-4f85-96bd-0562de751acd"], "a8993f7f-6c90-4eca-8955-c66b3fa7af16": ["492e1c5b-f662-4f85-96bd-0562de751acd"], "b198076d-7a3c-4cba-8f46-b8b62d0eb559": ["4c8038ef-8fcb-49de-9a37-99da9fec73a9"], "d34a3ecc-6225-494d-aa86-1528d9da1085": ["4c8038ef-8fcb-49de-9a37-99da9fec73a9"], "19546a78-6123-4cf8-9a4e-3b9414cc41f9": ["fb866f56-e88a-4a08-ad82-5288bbe2000f"], "5d95aa8a-c54a-4340-ba38-563c7b084375": ["fb866f56-e88a-4a08-ad82-5288bbe2000f"], "de26db87-1a83-4ca5-b733-453b17004a8c": ["6a2fd546-7601-46c4-a495-7047da1ae899"], "84d3dfc9-c50e-41f5-a117-fde0cb1b06cc": ["6a2fd546-7601-46c4-a495-7047da1ae899"], "06c489f1-3f43-4df9-8a38-c768e5934e53": ["1f3bad3f-c957-47e9-955a-6ab4ffdab4d5"], "2fd5ade0-f529-4b39-8ffb-39f936c95319": ["1f3bad3f-c957-47e9-955a-6ab4ffdab4d5"], "1e943452-79f3-481a-a9e8-34721d4610bb": ["a2a9a082-1a6d-409b-aad1-d25c3a6e43e4"], "29287934-a983-4a86-a4da-e273d2984da1": ["a2a9a082-1a6d-409b-aad1-d25c3a6e43e4"], "1a3c298c-e1be-4b06-98b8-d74a88300a03": ["409e55e1-c492-4f9a-94e8-40b1b117fe41"], "522ace8d-616f-4272-bca7-300743fd3dea": ["409e55e1-c492-4f9a-94e8-40b1b117fe41"], "2065d6c1-4519-4556-83ce-34a81f5f5cc8": ["e68d13a2-5b07-4088-a798-3817db79eef9"], "87026288-e040-47eb-9f3b-1b936ec50d29": ["e68d13a2-5b07-4088-a798-3817db79eef9"], "1ac4807a-9e8d-4378-bfe7-87dbb8d7480c": ["83df33b9-a04d-429d-bbc4-5ec1d1d7d8eb"], "cb97aac7-151c-402d-a25b-440141664335": ["83df33b9-a04d-429d-bbc4-5ec1d1d7d8eb"], "b2ee579e-9b32-4cfa-9641-98200eb45882": ["2a1b1ff3-7da7-482b-9a9c-ac61ed2494be"], "ea8c0842-822b-4eb5-83f2-2d54a2723629": ["2a1b1ff3-7da7-482b-9a9c-ac61ed2494be"], "6cae47ac-42ef-4719-92ae-c4885aff1756": ["9a94a1fb-1a19-49d1-a9c2-b97349e838e0"], "02d6748c-a297-4b11-aa73-5c983c88d00e": ["9a94a1fb-1a19-49d1-a9c2-b97349e838e0"], "ac87ddd8-5ee2-4c2a-b4e2-ff55a124295f": ["0442dbd4-c2e2-4dfd-ade7-215574433d87"], "2d8d4118-6b84-41ec-8e70-5926b62e48ed": ["0442dbd4-c2e2-4dfd-ade7-215574433d87"], "b51edcd6-f01c-4e4c-9bc8-d2fb17bf57c0": ["54033b8f-d86a-4442-97ca-b60daa598b7f"], "be23309d-a87c-413b-9138-cf982eef0d47": ["54033b8f-d86a-4442-97ca-b60daa598b7f"], "a32440ff-bc00-4244-a2fe-03148b30183a": ["ccf3780d-cd0b-47d1-ba64-42bb9e108164"], "72c58e96-1394-46fb-9926-99649663cff9": ["ccf3780d-cd0b-47d1-ba64-42bb9e108164"], "66f1ac7b-dfc3-40cf-92da-1d0a57ec1144": ["b7a1050d-f4be-43ba-aef6-868a8092ab78"], "473541ca-dc15-41a6-8ace-6485245dcae3": ["b7a1050d-f4be-43ba-aef6-868a8092ab78"], "9386e14d-7077-46af-8814-4e9059d61b5e": ["4e2fbdf6-0d7c-4561-9850-4f407a1e1397"], "bbebe605-560d-4c71-ae15-7348c4e66521": ["4e2fbdf6-0d7c-4561-9850-4f407a1e1397"], "bc906751-9f73-49b7-bbc6-1165d752303e": ["d74b8277-df97-4ca7-af92-bf9560dabd2f"], "4d1b7712-e47e-42f6-ae97-6beab49dc634": ["d74b8277-df97-4ca7-af92-bf9560dabd2f"], "0ccc1fe8-6afe-40c3-aa62-62c92dbfa230": ["9bcb1e92-cd8f-4c57-84e0-5e85ac858add"], "b1c894f4-63e7-4ace-a23a-ae1c495a3a8a": ["9bcb1e92-cd8f-4c57-84e0-5e85ac858add"], "24d35db6-55a0-4415-886f-5c17207ef565": ["ecf7d35e-2150-4b36-a7bf-5bd9ffb3da2a"], "41c6a1c6-86a0-4877-9e50-e87b21c104dd": ["ecf7d35e-2150-4b36-a7bf-5bd9ffb3da2a"], "b0440801-1c5c-4ca7-97fa-448743e1865c": ["99f37c57-b3d2-487f-93bf-1a0d018d5582"], "cfeaf44c-c006-43bb-9d11-dbc96f977c57": ["99f37c57-b3d2-487f-93bf-1a0d018d5582"], "3bc632a3-44ce-4978-8fc7-8043ef27e21d": ["9c7de3e9-3dc4-42ae-8ab4-241016f20286"], "5a22d5bb-60e2-46cf-b1c8-96d01af9dbc3": ["9c7de3e9-3dc4-42ae-8ab4-241016f20286"], "c31ebed6-b21d-4742-a47e-259ae1a6f1d1": ["f48218cc-57d0-4db9-a660-621f29ce9654"], "fae2142f-3a90-46b3-8e89-3db8e6310dec": ["f48218cc-57d0-4db9-a660-621f29ce9654"], "18a03755-1749-4656-a776-110b2d349d0c": ["70bdcdfb-a108-4e90-9e4a-7710654246ec"], "bbe524cc-2cd8-4f8f-abe6-5d6e859d66ce": ["70bdcdfb-a108-4e90-9e4a-7710654246ec"], "89b496a4-0d05-4cfc-b322-82289095ca8c": ["b4677848-6889-48df-af22-d07eed114755"], "a8e3618c-395c-42eb-995f-feb1b15b9dd0": ["b4677848-6889-48df-af22-d07eed114755"], "5c11f8a7-7e45-4379-938f-d0253931a54a": ["e0334e97-3adc-4bb2-b12c-7dd7e1ed8518"], "b8ad887e-7e69-4c57-b0d8-a64963263f2b": ["e0334e97-3adc-4bb2-b12c-7dd7e1ed8518"], "e974be28-4d1a-4b3f-b996-6d34fb2ef3a8": ["8afcf7cf-3dfa-4a91-b2ef-eea898db876b"], "01eb94f8-0209-45d5-9751-868e0511d53f": ["8afcf7cf-3dfa-4a91-b2ef-eea898db876b"], "507b070f-f883-4d28-88ff-677083f820b2": ["614877ad-b372-4e4b-a865-aa430b296f24"], "7d44511e-4f5f-407e-a415-f7859e86539c": ["614877ad-b372-4e4b-a865-aa430b296f24"], "4ebd3516-710b-40d8-8610-5b28a5cc267a": ["2fcb83ec-9226-4070-9151-a4462de8cd8c"], "d5f75d0d-1ebb-462c-8115-46e2b733294f": ["2fcb83ec-9226-4070-9151-a4462de8cd8c"], "e3b35932-bf8b-4d5b-a746-c9309d4a9a4f": ["abf6b191-272d-43bf-8ba9-3da8081f9a43"], "9e2b60bf-0b29-4a31-b1cc-8f89aee3820a": ["abf6b191-272d-43bf-8ba9-3da8081f9a43"], "ff64320d-7c8b-43ab-8296-0b2cd0beb54d": ["d300b90f-cee5-4d99-9d66-be2c658492fb"], "57b83ee1-b8f2-4f7d-a22d-331400a1938b": ["d300b90f-cee5-4d99-9d66-be2c658492fb"], "07795135-866c-4b7d-abe5-dedfbfb4300c": ["90ed6020-c3c1-42ad-b075-63e79aa53e7d"], "f9941896-d794-40a9-8663-5bcde23a0494": ["90ed6020-c3c1-42ad-b075-63e79aa53e7d"], "bb0484b1-037b-4412-97e3-0ba97aed0ef4": ["9033c5ff-c462-43e7-a9f4-2f5622911deb"], "11ed00f7-ba68-4db5-a958-91dbcabf28bd": ["9033c5ff-c462-43e7-a9f4-2f5622911deb"], "fdf4aee3-eca9-49a0-a67c-c7a0c9b6e0e0": ["0fee7664-5882-4cf2-bc8c-0e2dcc74c6fb"], "6dc3071f-95f3-4ce0-83b3-66d0b2145b21": ["0fee7664-5882-4cf2-bc8c-0e2dcc74c6fb"], "33459b1e-2e87-43f4-80a2-735135916a6a": ["39863e79-80bf-4a80-8378-c1859066b4eb"], "32aa5cce-59f2-466f-91cf-a7c6e09fd988": ["39863e79-80bf-4a80-8378-c1859066b4eb"], "a2c45d4c-c196-4e05-9bfb-27ec9f8d1314": ["dc76bf0a-08e3-41e1-b4b2-434b742b060d"], "b67d216a-b488-4e35-84ca-2a32de5648d1": ["dc76bf0a-08e3-41e1-b4b2-434b742b060d"], "19a60946-a5f2-4dbb-b6b7-37ae30e254ac": ["ff5273b6-ac12-48a0-b110-b7888edfbe4a"], "64c2446a-aeb7-4f5d-985f-87dc29865c37": ["ff5273b6-ac12-48a0-b110-b7888edfbe4a"], "aa7f9b20-6a83-42e7-a953-09f26de733cf": ["e8ec6c79-a288-42ac-b368-264cda2f0fc2"], "2400df12-424a-4a61-984a-12a32c212343": ["e8ec6c79-a288-42ac-b368-264cda2f0fc2"], "9bb8a4d0-d2c8-4d8b-9b67-0fed6864862e": ["424e688c-a469-466c-80d0-ae8a76e4a329"], "849fa085-d64b-42c8-becf-1070502ebe0a": ["424e688c-a469-466c-80d0-ae8a76e4a329"], "5f7787f2-edfb-4481-af4f-52da30824271": ["350dc4c7-7177-4468-a23d-71128b78fb5f"], "b4a3a839-60c1-4ddf-b4da-0e11175ede1a": ["350dc4c7-7177-4468-a23d-71128b78fb5f"], "be578db3-ad41-4172-b310-a7cde7a6f034": ["2caa4ead-b9be-4f9e-ac83-e4803b36c479"], "695a77ee-17d5-48df-9137-e1540019c96b": ["2caa4ead-b9be-4f9e-ac83-e4803b36c479"], "f500ff98-2647-430a-a4b1-7e4dff92159c": ["8b5ee54c-7f4c-461c-a16f-02cf3fea0bda"], "244465ab-aa1c-43f7-b0db-7f13f5fa9012": ["8b5ee54c-7f4c-461c-a16f-02cf3fea0bda"], "11bdb6d5-1048-48e4-8107-6d49d5704357": ["6ccc0029-cf1b-44bd-9456-6efe5af11223"], "86350226-a189-40b0-8c66-3e5b31d070a8": ["6ccc0029-cf1b-44bd-9456-6efe5af11223"], "acdf5cc4-c0a8-4443-9b1b-9e072ed30e6d": ["26e55edd-3ae4-4797-b8fd-acfb21cc5d46"], "cb5142e4-b4cc-4e93-a17a-c72fde15b175": ["26e55edd-3ae4-4797-b8fd-acfb21cc5d46"], "d406d3a5-49de-4ab1-9866-b916fca788d3": ["e8d5581b-f8cf-444c-bf8d-33e2c2ad842d"], "6443ed18-f17e-4e7f-9c88-d2fdf296e483": ["e8d5581b-f8cf-444c-bf8d-33e2c2ad842d"], "525852fe-efd2-4715-b5ef-041a151d5943": ["5fb26e74-5596-4a95-a202-bf21e2b4b184"], "d27aa66f-45f5-4055-9240-fb2654701cbc": ["5fb26e74-5596-4a95-a202-bf21e2b4b184"], "0c3d59bc-f369-4e3e-a55f-a04884922b40": ["85698c9a-1ad0-4abe-a5a9-fcf84ade1119"], "eeecac72-13ce-4238-9a36-141a0a2da743": ["85698c9a-1ad0-4abe-a5a9-fcf84ade1119"], "8124856c-f827-4957-86bc-f3a724259f1b": ["48d1ddf1-5639-4795-95de-6ffd9cd71cc0"], "864eb59c-206c-46c1-b2af-754e17019194": ["48d1ddf1-5639-4795-95de-6ffd9cd71cc0"], "8e1dcfca-6cb4-4741-8ad2-2453f0ea755e": ["5e87870f-31ca-4807-a860-91902235d899"], "aca369b7-7303-4035-8eaf-c748b42aeceb": ["5e87870f-31ca-4807-a860-91902235d899"], "379e9345-9138-4f3e-a843-40c76d74cc42": ["51afa798-110c-44f4-891d-07a74dcfb49b"], "3caac5c9-2a45-4472-a502-3c90d7017741": ["51afa798-110c-44f4-891d-07a74dcfb49b"], "cd98fee3-5486-42e9-a497-1ed4f1239b9d": ["6e4605e6-6f5d-42f0-aeb9-034e4acb5a1b"], "be3d7de8-d5bf-461e-b3ab-758283572c20": ["6e4605e6-6f5d-42f0-aeb9-034e4acb5a1b"], "fd46b4f7-e803-48dc-b572-126b37d5ffb8": ["22bc72c3-a2b3-4683-98d6-fc11fc9b15f5"], "45a50b3d-30de-4721-9ed0-223100b59cd7": ["22bc72c3-a2b3-4683-98d6-fc11fc9b15f5"], "88d75d75-8848-442d-a042-1878c89bfbe4": ["cebe76b0-3008-45f4-8e79-b7b343788128"], "c089910e-cb1b-4930-bee5-208c0e189e85": ["cebe76b0-3008-45f4-8e79-b7b343788128"], "4cd5aa74-9564-439a-b534-8d77648c2c1f": ["c2d0ea88-d67c-4ca7-8931-64e027e3ecd3"], "082b6dcf-0d3d-4320-9613-faddc65681f1": ["c2d0ea88-d67c-4ca7-8931-64e027e3ecd3"], "9fbc1ad9-b4cc-4028-b165-96db82fe9a6f": ["bffff813-28d1-4290-9b1c-27539075e188"], "59e02ffa-6ba5-45fb-b774-215a4f4f6456": ["bffff813-28d1-4290-9b1c-27539075e188"], "7bac8cd6-955c-418d-aa1b-744b323dad21": ["02cec2a8-ca65-4ca5-9e9c-84d38350fceb"], "7ebe82ae-9bd5-4d41-b343-37c9b64a0104": ["02cec2a8-ca65-4ca5-9e9c-84d38350fceb"], "86281d4d-169e-41aa-9e42-61dc8b380e61": ["66cc38b5-9aa9-46b5-b2d2-4009d26532ae"], "0fa41449-74b5-4bd0-9fc2-3498ed0d408b": ["66cc38b5-9aa9-46b5-b2d2-4009d26532ae"], "cefadb29-2e42-4e51-a357-0732f14a3191": ["64244b4a-4415-4a44-b155-991ba8cad037"], "a555be1a-f1c0-4c9f-a6a8-03486a3a9277": ["64244b4a-4415-4a44-b155-991ba8cad037"], "8ed6eb51-4103-49ad-855d-9c57c06ab894": ["603cf3d0-45df-4aec-936f-c7406d5ee735"], "db5ff280-7864-4ee5-a31d-07637d43eed5": ["603cf3d0-45df-4aec-936f-c7406d5ee735"], "9a691e45-7fa0-485b-ad22-e4a5f03524e5": ["ce7562d9-8acf-4418-bb2c-d040140c6c32"], "0cb9b1a8-bd1d-4a80-bde7-cb25aed8c5c7": ["ce7562d9-8acf-4418-bb2c-d040140c6c32"], "5ad867f9-7cce-4a0e-a7d3-04e2d0ef27b8": ["c52fb7da-f03a-4d7a-a801-ff16165cc08c"], "04bd456c-b972-4a4c-ade8-0b7be94cce0f": ["c52fb7da-f03a-4d7a-a801-ff16165cc08c"], "dcd8800c-9f99-44fc-8aa8-909161412389": ["ebf83eff-611c-482f-a6ef-b19986b27f94"], "a46660c7-2e62-44df-bbdd-d72a9fd5acb9": ["ebf83eff-611c-482f-a6ef-b19986b27f94"], "9b4b7483-54cd-4d40-beae-1b55f0bdc0a5": ["c6784215-6b28-4d63-8599-041844da15cb"], "2b822a24-9f43-4c9c-9c2b-859a4e204c88": ["c6784215-6b28-4d63-8599-041844da15cb"], "41945459-c38d-4789-bd2c-7853d527add8": ["e6de87a2-0b00-43c4-8f6a-d1aafda8a92c"], "f3eb592b-a308-4921-9ab6-78700cb4746b": ["e6de87a2-0b00-43c4-8f6a-d1aafda8a92c"], "aefd0449-f04d-4780-b3f3-a8fee696e4cf": ["de425c4d-1d6c-4fea-bd46-adf0c931abf4"], "ed7c9bd2-0e04-4127-9710-108abc311a91": ["de425c4d-1d6c-4fea-bd46-adf0c931abf4"], "4ee387a0-c9e4-4078-aafb-5ba8ab0d8a01": ["ce4c7e70-e911-4e1d-9ab5-52a96810eafe"], "bae06ae8-01d6-454c-b37c-a53c91408816": ["ce4c7e70-e911-4e1d-9ab5-52a96810eafe"], "afd1a253-c0cd-4b54-925a-f38645326521": ["e9be91c9-17ff-4979-9aab-4eab43f11e78"], "3269fd63-a4dc-49fd-ae9a-bb0e88d16259": ["e9be91c9-17ff-4979-9aab-4eab43f11e78"], "ae2d0636-2176-4652-8cf8-eb17b8ebea80": ["d62be48c-b065-40bc-9e3e-0a12ee67710d"], "bcfc1f25-1c42-47c8-b36c-70757dc22a9f": ["d62be48c-b065-40bc-9e3e-0a12ee67710d"], "5e02054a-5cdb-43b6-bb57-59fdbd9039fe": ["478b580a-8514-45c7-8280-9c722ceffb34"], "8cba2fa8-1f16-4efa-ae8d-d22c1f399696": ["478b580a-8514-45c7-8280-9c722ceffb34"], "80866ba8-cebf-4dd6-8713-d6719d59bfa5": ["0a754b83-fffd-4d70-9699-d1d3f774da44"], "e5fd9e19-77f4-46c7-9df9-16a4527c4f0d": ["0a754b83-fffd-4d70-9699-d1d3f774da44"], "705dc407-8042-494f-9417-207345381d50": ["bdd4b5f1-af7c-4243-99c0-5d681cc1c127"], "f4d764e0-cfad-4c15-adcf-a50e41087dc1": ["bdd4b5f1-af7c-4243-99c0-5d681cc1c127"], "bf75e0d6-7fac-4df5-b57f-6bf063ab0420": ["fefc8e61-c5fe-4dc3-aae0-d3ed77bb5607"], "b7db2854-8a74-4473-bf69-b07f1c6697eb": ["fefc8e61-c5fe-4dc3-aae0-d3ed77bb5607"], "952c41d6-efb2-44ec-b4c1-abf10b604869": ["7eb74b8b-4b08-47a7-8428-18ffda549da2"], "1d3640fc-3293-4011-8f7e-54dcd9c5a835": ["7eb74b8b-4b08-47a7-8428-18ffda549da2"], "e92b9ca7-043d-4ab8-b598-d568b560e841": ["e55e6066-3e17-4095-9b2f-b12a28a81b78"], "4e49a4f4-307c-4697-a7aa-d31328755877": ["e55e6066-3e17-4095-9b2f-b12a28a81b78"], "22d2cd25-9b0f-4314-bcfb-34c05c18236c": ["b865e654-4fb8-4e9e-b70a-ad9d5721906f"], "bd22233d-8bc8-47b3-9d84-a659c15df497": ["b865e654-4fb8-4e9e-b70a-ad9d5721906f"], "ccb838b5-742a-4a65-b742-c8fa471ae19c": ["8ec050fd-444d-4a10-939e-4faaa750cae2"], "2fb2467e-7050-4333-88aa-e48b14638531": ["8ec050fd-444d-4a10-939e-4faaa750cae2"], "0f4c8aef-33bf-4bcc-a53f-67cef4186100": ["b2f9aed7-a8fc-4eba-85b7-f6f60533f52b"], "9d8d12c1-d35a-472c-aef1-351608539d26": ["b2f9aed7-a8fc-4eba-85b7-f6f60533f52b"], "ff420a4b-d12f-49cc-9e95-ef25ce965212": ["afb07fde-10a1-41b7-aa09-f180ad062085"], "5232aa4a-3d21-4639-8d7d-1aaa9071408d": ["afb07fde-10a1-41b7-aa09-f180ad062085"], "6e43511b-2613-4228-b0b2-f9efe5bdf31e": ["67f1d90e-a6c1-4743-bd2a-3919d1539a81"], "5c85e104-1656-4a51-921a-4b3eb56f6b00": ["67f1d90e-a6c1-4743-bd2a-3919d1539a81"], "86071094-c2e2-4cb8-b1d9-2675c0cd285b": ["46461e62-477f-4ee6-b78d-aa1ef19c45cb"], "f05dc27e-bf5f-4e2c-8de0-0a0fc2686adc": ["46461e62-477f-4ee6-b78d-aa1ef19c45cb"], "b76321d1-5e12-400d-a0c6-e895b2d0c1af": ["b0ad87f7-72cd-462d-8127-0008f04af50a"], "55aad483-84c9-4c9f-baca-0914fea2c7f5": ["b0ad87f7-72cd-462d-8127-0008f04af50a"], "45e69096-df1c-467c-a423-ea82cb1912eb": ["63e125d1-c105-471c-8a60-8548d6c9c13f"], "c2824d96-325a-4592-be53-82f2e689464c": ["63e125d1-c105-471c-8a60-8548d6c9c13f"], "db75f08d-0be6-4561-a3a0-5a7e16c5878a": ["084c1ae8-978a-41fd-b99c-fcb4f3e27114"], "818656dc-73dc-457e-872e-2cf4f35a8aa7": ["084c1ae8-978a-41fd-b99c-fcb4f3e27114"], "3af7ca21-78fc-41df-8144-392a52ca6bd2": ["389d1208-8021-48cd-a07d-2003ba50e4b7"], "c3f86975-5910-4394-a43e-21d4563dc0f3": ["389d1208-8021-48cd-a07d-2003ba50e4b7"], "bb67380a-67a7-4419-a633-64c28e8fa2a0": ["4a562317-8ad2-4ece-bb21-57e198f5db89"], "9a8ca327-273a-4770-88a1-fb46422c8262": ["4a562317-8ad2-4ece-bb21-57e198f5db89"], "943ff8d6-ef5f-4d09-a90d-6a1c6f74e0e1": ["190a12e8-7a78-443e-982e-32d624ca31f0"], "d71ef256-7551-4825-8c89-35a1083d0772": ["190a12e8-7a78-443e-982e-32d624ca31f0"], "6a2ead88-9425-4549-afd9-69cbe9d8e2be": ["8c44f626-673f-4647-b8b7-742f59a15d12"], "5aefd16c-12aa-449d-9561-4b952c3b127c": ["8c44f626-673f-4647-b8b7-742f59a15d12"], "ccaa1154-6ab2-4b0f-9607-c5a272ca3451": ["4606f79c-b935-4517-8b95-2fdd74547841"], "fa6b5f78-1e7d-49b7-8169-71434bb8098d": ["4606f79c-b935-4517-8b95-2fdd74547841"], "dd4cd0ae-71e7-432b-96d4-605b48e01ddd": ["38722701-52ee-4c5d-b55e-da5be5c9c527"], "47928b62-07cb-47ed-81a4-cd56388ddbd1": ["38722701-52ee-4c5d-b55e-da5be5c9c527"], "452f0b2f-6801-4d87-9deb-42cfe4f41886": ["172f3720-8f45-4748-82f7-add696bc8cc5"], "4ac3f6b6-b9d1-47d0-9c63-f8d81679a194": ["172f3720-8f45-4748-82f7-add696bc8cc5"], "91c0d177-2a34-4042-8144-80b608222df6": ["ffed57e7-34cc-4303-b19b-d77ee09223ab"], "8eb1360c-20fa-4205-a313-1cf56b512b59": ["ffed57e7-34cc-4303-b19b-d77ee09223ab"], "cc0fb2e3-74b3-46be-84d3-3f738b421c1c": ["9937ff28-38ef-4855-b090-e5dfd1e6c1ac"], "db151125-598f-46a7-ab57-1ae33d51c892": ["9937ff28-38ef-4855-b090-e5dfd1e6c1ac"], "f182e596-1c2c-4e25-8fbb-d1c06c0be1c3": ["b525260a-9cd9-4799-a18a-3c1d773e349f"], "cf056a21-8342-41a2-87fd-ef0cf190e330": ["b525260a-9cd9-4799-a18a-3c1d773e349f"], "9136b9d7-d118-4cd6-b810-f27f52601c2b": ["df72bc58-9ca3-47d7-ab74-a1e9362782c0"], "cf62d022-c9ab-4e86-b528-0c0addd65311": ["df72bc58-9ca3-47d7-ab74-a1e9362782c0"], "0b27ca05-46f5-49a3-9a83-b580a3d18ee0": ["8049bc32-6cc4-4161-9008-0866f2fe42b8"], "b30a2a7a-bf0b-4a49-b8b6-e31ad6814f6e": ["8049bc32-6cc4-4161-9008-0866f2fe42b8"], "37fb8d74-a2e9-43f4-8159-72bf72032ad0": ["9ff795ee-dc39-4a9c-b994-085a4dbff632"], "99ae3173-ca9d-4bea-81bc-7dc49c221b00": ["9ff795ee-dc39-4a9c-b994-085a4dbff632"], "3347ec81-8d91-4dc1-b279-b4e8d21c9fa1": ["6c42e194-28c0-467e-be19-bb6a38750748"], "85b286d6-a20e-4590-a9b3-3e5e9f77a51b": ["6c42e194-28c0-467e-be19-bb6a38750748"], "1bdc5b4e-8ac1-48f3-b604-a12fedcb32d2": ["b4c3676f-480b-4b12-a9fd-a1413aa2d4de"], "d5971be0-7b3e-4b2e-b403-1267b90945a5": ["b4c3676f-480b-4b12-a9fd-a1413aa2d4de"], "615d48d8-5322-4fa6-b321-c90da721f974": ["fe6c677c-01e7-47a1-a465-aaa33a1f0778"], "d7940ec7-4152-4b0f-bcea-15fad99f3a36": ["fe6c677c-01e7-47a1-a465-aaa33a1f0778"], "22d959c8-ec5e-4c91-ac77-c482d3db3252": ["da5e9f7c-4cf1-49c8-a46c-cc186edd4603"], "b87cb392-f464-4c81-b9e2-35f14efe3648": ["da5e9f7c-4cf1-49c8-a46c-cc186edd4603"], "82e41aa5-4ed4-4106-8bc4-3dca8106f4af": ["83a9b8ff-cdac-451d-82ca-826987c5053c"], "7f9a91e9-d0e9-44d7-b894-bb0ff56799e1": ["83a9b8ff-cdac-451d-82ca-826987c5053c"], "0336c5a4-292d-4230-8e10-69bc91e065e9": ["be5cfe66-cdb9-437a-b19e-e9e793e8725c"], "610e6111-bf44-4d2d-a23e-8c595e9db2d9": ["be5cfe66-cdb9-437a-b19e-e9e793e8725c"], "275bc53a-a76d-4279-abf3-7b2759e712cf": ["984bdfef-fc6a-468e-8268-5e7867ea3312"], "29eb5d55-7f87-4eb8-a55f-1249f7b56383": ["984bdfef-fc6a-468e-8268-5e7867ea3312"], "4dfe9587-b099-4ffc-8af8-e7d4464f7ad5": ["d37a728c-f154-477d-9427-a79e136a2a00"], "b13d0559-67c6-413e-ae71-e3c5258bfd45": ["d37a728c-f154-477d-9427-a79e136a2a00"], "40b92c8d-05b5-4bfb-ba1a-d655591c0000": ["bd023ab6-fb92-4449-b480-5885eedb400b"], "8410dbe9-7d1b-419b-92ec-bde1e66a752a": ["bd023ab6-fb92-4449-b480-5885eedb400b"], "0f7ed13c-3e93-4ffb-a61c-f2261ee2f0f9": ["a639aa45-c2a6-451e-a607-1d90fbdfc25a"], "d7734524-4ead-426d-8a47-ac5da9e17f57": ["a639aa45-c2a6-451e-a607-1d90fbdfc25a"], "e87fa022-6653-41b7-b2ae-a47cae04a1a1": ["e848ffd2-4119-4d5b-bd4e-1935d504fb72"], "08e6b682-18fc-41b5-8313-302ce640781d": ["e848ffd2-4119-4d5b-bd4e-1935d504fb72"], "c7910be2-0312-40cc-9489-092ce2386db2": ["5471d01a-0886-40cc-b03d-dfae529cd77f"], "305f7920-7cdf-4cf1-80d6-00f579df0109": ["5471d01a-0886-40cc-b03d-dfae529cd77f"], "ecf37a25-1cc6-47df-a1ed-503c09a6859d": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "7ad83e4d-7550-49bc-b155-496be1ee004f": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "41e54d97-6e13-415a-ad4e-b0f511728acd": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "72f0c5d0-1577-4b1a-94c9-774b691e6cfc": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "631e4f0f-8bd8-480e-acb0-f4fd92148eb8": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "d3ab9ee1-658e-4911-8d5c-e15045ef04be": ["b008bd59-9c02-474f-b9a6-e6fc0380e455"], "b7bb5086-a501-4727-9d1a-ea96fc08f747": ["e79189c5-ab88-4705-95ac-d941014b2b7a"], "ce790990-3618-48a0-af86-69e41ebd07da": ["e79189c5-ab88-4705-95ac-d941014b2b7a"], "1657bc4e-1507-4c16-a765-f25d3e290633": ["b4db1c0d-93ba-407c-92e9-87491999ae19"], "a1d3ec81-1a7c-4df7-8cbe-2fe870a96f26": ["b4db1c0d-93ba-407c-92e9-87491999ae19"], "3a48e69d-2214-4f54-a028-1e3be35e1560": ["023cb4be-5d80-4885-9f6b-efeb923bec02"], "e406aafe-2abd-4248-be1b-6c98fbbfeeb9": ["023cb4be-5d80-4885-9f6b-efeb923bec02"], "721921ae-d221-4ebb-a089-8965c1d8b7d2": ["b005e038-a267-43ed-a439-a41c2eada598"], "aea7f8ce-436b-4943-b55f-9f0ab13f89ca": ["b005e038-a267-43ed-a439-a41c2eada598"], "699d4001-d565-464b-ae98-1782452866d4": ["45242168-786e-4f8b-954d-1bb082c775cf"], "f05d9f4b-ad19-42f2-a722-9e2b6f8bb2a5": ["45242168-786e-4f8b-954d-1bb082c775cf"], "2a83660a-99f4-4d41-aed2-dee01f117361": ["ed041fc5-64ff-4ccb-b34a-71d4a8442468"], "d7217628-36b6-4106-aba4-476d81bd0c56": ["ed041fc5-64ff-4ccb-b34a-71d4a8442468"], "4406052d-1d35-49dd-8724-564b1cffca1a": ["5ed39faf-e0c3-49ba-950e-e40548ca0a4f"], "f8ac9373-badb-4218-aa1e-81943097c2c4": ["5ed39faf-e0c3-49ba-950e-e40548ca0a4f"], "ac6e956e-08cb-470b-b2ef-53081316ac38": ["34a8f61f-af41-4b15-a2c4-094a87a45d9c"], "a0c6717b-c5b3-42f8-b61a-40ac3211c206": ["34a8f61f-af41-4b15-a2c4-094a87a45d9c"], "6512e0a0-8753-44d8-a885-781fce8eec51": ["1d1bcbd8-d9ad-42b5-91df-cd8e598da1ba"], "7237264f-4771-4827-b6e0-feaed934ee57": ["1d1bcbd8-d9ad-42b5-91df-cd8e598da1ba"], "ec1783a4-8678-4e03-8909-5d777b957855": ["5926d2ba-179d-4891-9ba3-ce45dc23965d"], "84ac7c0e-e79f-4c80-b338-900fb9327c0c": ["5926d2ba-179d-4891-9ba3-ce45dc23965d"], "766878ee-f71a-41b2-b403-06a3a8ac6854": ["d7c7a079-b494-4e3f-875b-e2160f415867"], "53d3c171-c5fe-4909-b5d2-f5d214cc9628": ["d7c7a079-b494-4e3f-875b-e2160f415867"], "ebb3242c-4494-4395-ae86-9d645b5db21c": ["2d8ffef9-9f90-4e01-9ac3-630e7ee31520"], "654c002c-6bf8-44af-b2bc-4a36cbffeead": ["2d8ffef9-9f90-4e01-9ac3-630e7ee31520"], "f4636ec3-64d9-4e16-b8a2-2621898c60db": ["fee86717-22b0-4203-98ea-c93bbf3373fa"], "203bce5d-d1ab-4d2a-b4e2-258f299dee2c": ["fee86717-22b0-4203-98ea-c93bbf3373fa"], "87e2e461-f7b2-4f85-b65f-e60ae7e8829a": ["7552f325-889b-4307-a2c7-11fc2d89d859"], "057a4491-a734-4278-93a3-8b90f6db95f0": ["7552f325-889b-4307-a2c7-11fc2d89d859"], "e6858666-977b-403e-ab9b-e88793a6dc85": ["1f4d39ca-ee04-4124-b9f4-84fc4c7fd3b5"], "5491ca3b-e582-4909-9cb7-bcc407bb695b": ["1f4d39ca-ee04-4124-b9f4-84fc4c7fd3b5"], "9a943aba-7b04-4098-9761-7b807ecedf1b": ["6e5c155e-cde0-4254-b33b-428627b0812b"], "4f2cbbed-a41e-4c94-9df7-bae6f639bae8": ["6e5c155e-cde0-4254-b33b-428627b0812b"], "c9ac7231-a661-4824-a1fa-4c60cbbd70da": ["a8a63ef2-71e8-415a-a67f-d1e577a7a785"], "d1a19700-2953-412e-a460-699407bfb9a2": ["a8a63ef2-71e8-415a-a67f-d1e577a7a785"], "7cd476a3-ecf6-43c6-b329-3a9a4b101a55": ["752e8d9b-8f24-4cc9-b8b1-e3806ad0ab8a"], "e7a12466-0ba6-4dfb-9d25-24b7d7f431ed": ["752e8d9b-8f24-4cc9-b8b1-e3806ad0ab8a"], "4aef9438-a694-4fa7-a091-0c1942e6dd6e": ["cf97a6f6-09d2-413a-b65d-14cb9346faa4"], "e8b32213-8443-4843-b10f-e115289a0522": ["cf97a6f6-09d2-413a-b65d-14cb9346faa4"], "5de48319-7653-4e60-bb1d-efce4683c0b1": ["d2f5770d-de45-48fb-88dd-0eac0803dcd9"], "a050fdf2-8991-4ba6-b23b-7f5e145eb6e6": ["d2f5770d-de45-48fb-88dd-0eac0803dcd9"], "953d6964-790f-4b6c-bbf9-7b4859ae5962": ["cc50cc9d-dac2-480a-9009-63017c0ba870"], "eec75a2d-6eb9-48c1-9eb1-8bbec09f6f55": ["cc50cc9d-dac2-480a-9009-63017c0ba870"], "9d7c4808-01ae-4faa-a25d-28c62e6c9b8a": ["25d6e509-c9cf-4172-97da-1ac1e7ebd0cd"], "aed1121d-550b-4af3-a43d-3e8a7873a491": ["25d6e509-c9cf-4172-97da-1ac1e7ebd0cd"], "8ea63428-7268-4d2b-a74d-4ff8ab6cec01": ["b7b1b415-c5a9-48b2-84b8-35a5c98c1fd4"], "5da506d4-55c4-413f-9d0b-78dd0a45d0a0": ["b7b1b415-c5a9-48b2-84b8-35a5c98c1fd4"], "f79e53bf-3887-4767-8778-cae3d53ccfeb": ["7f0a93b3-9b6e-4880-86d6-4267b0adaa28"], "904dd4cc-b7be-4e0e-9562-721a5c2b7088": ["7f0a93b3-9b6e-4880-86d6-4267b0adaa28"], "382b8638-b93f-4751-9b96-abf7d3aded56": ["17112285-51d4-496d-b0f8-89bad861eb0c"], "41b3a863-ecbd-4849-b84d-5b6f3131aa99": ["17112285-51d4-496d-b0f8-89bad861eb0c"], "4d84a12b-1500-4fdc-9597-c9ed5b48190a": ["82f89bb0-341f-4a53-8df8-25478f520211"], "d15b6887-8fa9-4b72-9076-0a725c5b212a": ["82f89bb0-341f-4a53-8df8-25478f520211"], "a5bf1c6e-f5b7-425c-b29b-d60766aa30bb": ["7e3f9e26-9c42-4de5-b567-edfd9864b3d9"], "9ba2ef41-eae9-42dc-b7a3-f8697fef6fea": ["7e3f9e26-9c42-4de5-b567-edfd9864b3d9"], "aa0c8cf6-69d7-469f-b5f0-8df56079bf6b": ["e5619336-cbbd-483e-bb86-970d4ffbc45a"], "61e13d5e-0199-4cf7-bbb2-f91cea71174d": ["e5619336-cbbd-483e-bb86-970d4ffbc45a"], "9bde6b63-950d-4b1a-bb86-9b5b72fb1e61": ["b9b1f97f-12eb-4314-af90-a0b4f11b4586"], "60f7f0fa-2e00-4b3c-adfd-59c55058c0cb": ["b9b1f97f-12eb-4314-af90-a0b4f11b4586"], "d8b64e33-e464-40fc-b671-12beddbe821d": ["80ae028a-fe24-4cff-b227-60b658f5ba0b"], "c070c24b-4fe7-448a-9a85-68115b495e13": ["80ae028a-fe24-4cff-b227-60b658f5ba0b"], "db821136-2ec5-4739-896e-7821b6194e73": ["e02059c1-0618-44e8-bbd7-20d2f77fabea"], "a9adc7d7-2077-4a18-baa2-9bbb7557139f": ["e02059c1-0618-44e8-bbd7-20d2f77fabea"], "ba1a519b-02be-4d9f-a170-eb0371fa8e77": ["e2a61d84-5fdd-4324-a05b-d0be4dd6313f"], "9a17227d-898e-4d1c-8ba9-5778988e8524": ["e2a61d84-5fdd-4324-a05b-d0be4dd6313f"], "af1317a1-188c-4deb-8890-6a41b93fec03": ["e8074267-566e-4648-9b38-65b517b8acd1"], "55fe44d4-ecfe-474c-88f8-dd75e79e45a1": ["e8074267-566e-4648-9b38-65b517b8acd1"], "b62725cb-2ea8-4ed3-a400-306bf1807e68": ["f1fe9b2f-e854-4790-b9d9-7a7d00cb8759"], "c9f94ffc-3bb2-437a-b262-08d3ccaed267": ["f1fe9b2f-e854-4790-b9d9-7a7d00cb8759"], "1ee1bc07-7c99-4f9e-aa41-ae961c2186d1": ["e2b1bc76-b14b-44ea-ab33-fae0ebd2324f"], "55a2758b-a5fb-453c-96b0-d602de124153": ["e2b1bc76-b14b-44ea-ab33-fae0ebd2324f"], "5c7a0008-f2f6-4284-a307-bffd9f018ba1": ["60c7d44b-5751-438e-bcc1-8581f9d57e52"], "2c0b3935-457d-4a23-8fba-4e4bfdc6f1f3": ["60c7d44b-5751-438e-bcc1-8581f9d57e52"], "5a0a45e4-21cb-4f99-93a9-76bf58d7360b": ["3ecbbd50-470a-4dca-8d8b-b30046f1f269"], "ee5b4559-695d-46fc-b860-4472d6b6cffe": ["3ecbbd50-470a-4dca-8d8b-b30046f1f269"], "3cda70c4-220b-4278-bfdc-4135dec5b05f": ["120dc020-1c11-4e11-90cd-74ab9d2632d5"], "682e56ea-d8b2-4df8-adec-8abd95795694": ["120dc020-1c11-4e11-90cd-74ab9d2632d5"], "8d498e60-d878-41de-afce-123c6b03397b": ["d5407398-afa5-4f91-bcf0-673fc02f7168"], "2515af25-6b9f-4406-98ef-1f8152a86d45": ["d5407398-afa5-4f91-bcf0-673fc02f7168"], "d77aa82f-4eef-4c62-96f4-dfb5e31afcef": ["f05a2ed0-e7cb-4b62-9813-ce6b4803e9d6"], "2e38950e-0733-400d-ac6f-d7d27e460e4b": ["f05a2ed0-e7cb-4b62-9813-ce6b4803e9d6"], "0f454035-b39a-48b3-acc6-c85e7260ab5c": ["6c7912be-d2be-48ab-9273-532b5055b371"], "cb3f5e9d-6152-4868-aeeb-a540b075d81a": ["6c7912be-d2be-48ab-9273-532b5055b371"], "22d77ab6-3030-4b84-911c-50d37355dff6": ["cbc5e388-cc14-4cb7-b1f1-55c8d9473224"], "2ff70112-fec4-40fe-951f-74106caba4dd": ["cbc5e388-cc14-4cb7-b1f1-55c8d9473224"], "8c62ef23-11f3-4f6a-9d75-80cedf74606d": ["a11e2e33-d450-4a15-a8e7-fc76ad7f7628"], "a8a66a61-5cea-4a56-9f87-a1f6bc54e9de": ["a11e2e33-d450-4a15-a8e7-fc76ad7f7628"], "dfb32b3a-384f-4eee-8dbe-81c861048547": ["9b0249e9-9177-49d3-8259-da3c44c0af21"], "acb3978a-20fc-4648-81e3-b17cf91878f0": ["9b0249e9-9177-49d3-8259-da3c44c0af21"], "6741b4e3-d125-4b27-bed4-f99d60f2228d": ["aa406ef4-f735-49ec-9f0d-1cc65fea36ba"], "8ad9d4ee-9c31-4bf8-8d4f-7764645a245b": ["aa406ef4-f735-49ec-9f0d-1cc65fea36ba"], "6c1372a2-ceb8-4fc3-b9fb-dc4e1b480e03": ["9576daf4-ec52-4f2b-92fe-cc878ed4bd15"], "a4eba58d-b8d9-463c-93a2-48dff22ae6db": ["9576daf4-ec52-4f2b-92fe-cc878ed4bd15"], "a1a8cfbc-7426-4815-a643-cc7855d642c5": ["d26e2535-d6b8-41b2-bec6-c191356abfb8"], "e10e258e-81c8-466b-b8ad-923e983345cf": ["d26e2535-d6b8-41b2-bec6-c191356abfb8"], "c56453e6-4641-4854-94d1-930177bf3cf4": ["02ab5060-a70f-489f-b80e-bb4076f45f74"], "82ba4c26-4747-45ad-b32d-896eca4a6a95": ["02ab5060-a70f-489f-b80e-bb4076f45f74"], "2709337e-5ace-456a-a282-9cb61b9efad2": ["fec13890-d4d3-48b3-af90-2cddc0508bc2"], "e10495d6-8869-4a3d-b629-a8f775c321cc": ["fec13890-d4d3-48b3-af90-2cddc0508bc2"], "4e143938-0c2c-4b9c-b0a8-37e0a045dfdd": ["d397a042-2e12-4b52-9e30-1b0223c183fd"], "6dba2064-40cc-48e5-91b0-c90bbbfeb353": ["d397a042-2e12-4b52-9e30-1b0223c183fd"], "d5e3c0f1-1c08-4953-8ee7-b4e8bf751d50": ["7aa953d5-9206-4a73-b47d-c132c7e1cc0d"], "74f97455-ae3e-4c73-949c-dfb9a7ba5113": ["7aa953d5-9206-4a73-b47d-c132c7e1cc0d"], "5fcc956c-4a93-41fa-a07a-5102af2e34fc": ["dfa32f21-006e-4aa2-acf1-f52a8117f416"], "bb2db39b-88f1-475b-993e-223b6fe7b0b8": ["dfa32f21-006e-4aa2-acf1-f52a8117f416"], "deb5b4cd-dfac-4302-8379-582a271c254b": ["ce752b77-331d-4b18-b58f-9ebb52d5ad57"], "80916d4b-d79d-491d-b1ef-d0d71b0e0474": ["ce752b77-331d-4b18-b58f-9ebb52d5ad57"], "ed0e5461-d035-46f7-b323-940b500d9cb2": ["55f84fe0-df5f-4eb8-ab29-a5364213c0ef"], "7ae4efdb-37ad-4665-94c0-ace3e5923cd6": ["55f84fe0-df5f-4eb8-ab29-a5364213c0ef"], "72561e46-de98-4f5f-b7a6-a2881cbee736": ["529d4735-2cac-4837-9b05-a2e329cc02df"], "0708cfd4-3164-428c-b044-051f31c42dcc": ["529d4735-2cac-4837-9b05-a2e329cc02df"], "6c2c14f1-7be6-47ba-a0a6-ed651aa31125": ["dcd5e3ee-ac8d-4683-8d51-410f400b5a6d"], "2ab480b7-ad05-410f-ac51-e6cbd1c35862": ["dcd5e3ee-ac8d-4683-8d51-410f400b5a6d"], "9c1dd77d-31d4-4e88-896c-423c5551d1ab": ["093a9ddc-8694-48b6-9a74-892877cf3514"], "08e77cab-c656-43a0-af56-2d299519759f": ["093a9ddc-8694-48b6-9a74-892877cf3514"], "c7760da1-2d1b-425c-a220-0979af53a7e1": ["d3bcdfa3-b4fe-4875-ba70-6165d19dffbd"], "e7ce27cd-5ba7-4fa8-9935-3a0a3692fdcb": ["d3bcdfa3-b4fe-4875-ba70-6165d19dffbd"], "b8c6d5f9-f834-4285-b5f7-9b5e530a4e7c": ["73c298c9-7f39-4208-9902-58f2c32ae162"], "c8bb4fbb-7150-45c3-93ba-a784fdd9aac9": ["73c298c9-7f39-4208-9902-58f2c32ae162"], "c493f8e0-38fc-424d-a866-983328896169": ["2541654e-16b9-4360-8558-01e7dbe16ac9"], "9f5e480a-0697-4163-8352-9300d1f49d7c": ["2541654e-16b9-4360-8558-01e7dbe16ac9"], "4dde3447-5a93-47b8-8fce-2b01a4be559b": ["c4e4a599-aec4-4d2d-babe-b009f97ecf35"], "0f3a5bf0-e06d-4071-9ed6-9622f569ea41": ["c4e4a599-aec4-4d2d-babe-b009f97ecf35"], "78a3f1ed-14f4-4de2-ad5c-224ced959df4": ["b9175301-1ecb-411d-a11a-fb03097e9719"], "9771c16d-5a0a-44e3-9150-73a65fdccaad": ["b9175301-1ecb-411d-a11a-fb03097e9719"], "af72fb1c-5101-4b1a-acb0-2c462ec1f103": ["9db0c784-c531-41c4-94b3-34f756319cf7"], "8f4645e0-0776-4eef-8215-d6ed60d2041a": ["9db0c784-c531-41c4-94b3-34f756319cf7"], "36be7472-cc84-435f-bfbb-ec25886d5c50": ["2f16bc49-33cf-4bf2-bc9d-f6643882d531"], "caed218a-f7ac-4b1e-bc9c-ba1f06f8a2ad": ["2f16bc49-33cf-4bf2-bc9d-f6643882d531"], "75184e7e-4297-4155-a40e-f7393424a202": ["e42d310f-00bd-4963-8163-c095f7c63874"], "88e43b67-f8f6-4d9e-a5e9-93df8746c64f": ["e42d310f-00bd-4963-8163-c095f7c63874"], "ab0b42ad-c95a-4593-baf9-30ea1cee9de8": ["daa798ad-ef50-4bcf-bcb2-b915c077f394"], "ff109bcf-d683-46a2-a9f6-e58a2ca1ae47": ["daa798ad-ef50-4bcf-bcb2-b915c077f394"], "4ab8be4f-8213-4129-8b84-6269f105b91f": ["2faf349f-5db7-42a9-80d7-aba664666d13"], "8c21abdc-7cb0-48f4-af70-ae22cbae7340": ["2faf349f-5db7-42a9-80d7-aba664666d13"], "5144b1ca-b4bf-4c57-82c5-531bd7dc339b": ["2faf349f-5db7-42a9-80d7-aba664666d13"], "3785b766-0572-4a9b-854a-bd45a3e9a686": ["2faf349f-5db7-42a9-80d7-aba664666d13"], "75d41061-6e5d-43c0-8e1f-39e8c9782ad3": ["13d77923-8a56-4176-9e0e-66598fc4e2ec"], "31e305c0-96b8-422b-a95a-571de5780052": ["13d77923-8a56-4176-9e0e-66598fc4e2ec"], "31881e9e-3ea5-47d5-991f-137221acaf85": ["7d82345e-6f0b-43f2-962b-9b2044473ff0"], "09bc2651-19b7-4c28-9255-51d1bca0c05c": ["7d82345e-6f0b-43f2-962b-9b2044473ff0"], "b45b7aec-ac3e-4457-b3c3-f143947c401a": ["a30cc8c7-98ed-455b-b01f-817896475105"], "1b1c2795-b38d-42b4-88f2-c8676f3733cf": ["a30cc8c7-98ed-455b-b01f-817896475105"], "6829fad6-f302-40ca-a103-47f04fea75ec": ["26e8ddcc-0182-4cc8-971e-4fa7dd0f9c22"], "24eeeec1-e5a6-4780-987c-19ca4109e1a1": ["26e8ddcc-0182-4cc8-971e-4fa7dd0f9c22"], "b549c31c-4249-4385-92d0-05454c988f65": ["a7ec12bf-d02f-434f-bb11-4eed64deb124"], "d27502c9-41e8-4a12-9175-f62703d01d66": ["a7ec12bf-d02f-434f-bb11-4eed64deb124"], "5a458372-edc4-47a0-94bf-a0b9d67ae8ee": ["ea18efc3-619f-42a8-b236-fd9b58d4aa7b"], "7f987517-0a96-45c8-857c-fc44b2369f89": ["ea18efc3-619f-42a8-b236-fd9b58d4aa7b"], "1efbfb40-8b9f-414f-89a9-fd328e998061": ["d33a29e6-56e5-482c-9d10-143970fd63bc"], "4a32d499-4d9d-4866-a3c2-4bfe27d9ab27": ["d33a29e6-56e5-482c-9d10-143970fd63bc"], "cfaea0c2-1718-4b89-8f4b-5febc7862c2a": ["68596345-774d-40fa-b86f-566d1a39f39f"], "754a14f3-dddf-4b26-9fbe-02e232199d3f": ["68596345-774d-40fa-b86f-566d1a39f39f"], "bf45fe69-4d8d-43d6-bb3a-b18dbd18a461": ["53f3977d-7c37-4bad-a30d-7519a1519aef"], "1a267ccb-fc80-4129-b751-85340deeeb27": ["53f3977d-7c37-4bad-a30d-7519a1519aef"], "eaead1a6-d695-498c-9aab-7bd668b9da92": ["86810733-ae01-4fb8-800e-5d0f76ae57ce"], "59e0c8b1-eed4-4e98-a74e-39b26badd775": ["86810733-ae01-4fb8-800e-5d0f76ae57ce"], "8d735dd3-8fed-4c6f-9743-879efb690ee0": ["a7f942cb-7503-4abd-8966-87c1402d720d"], "c3656df7-7348-4c9c-adc6-73c95bfbd0d6": ["a7f942cb-7503-4abd-8966-87c1402d720d"], "a837b718-2865-43a5-90d5-10f4d0e964ef": ["cb90f542-deab-48b9-bcf9-9bb5526bf7a9"], "29bbd6eb-6c2b-491c-aeb6-52fe5b9dae70": ["cb90f542-deab-48b9-bcf9-9bb5526bf7a9"], "430cc68f-d11c-4029-802a-8500e4c848f6": ["4134dae3-ac6e-4977-ae63-c3b1efa78948"], "da4adaf0-0782-4059-9e4f-c37de080fa4e": ["4134dae3-ac6e-4977-ae63-c3b1efa78948"], "4112786b-1da3-4148-b0fc-dc31fe62988d": ["b0831043-c722-44d7-bd8d-aa196b840758"], "6673078f-8aad-4e71-8a95-2171d1b45361": ["b0831043-c722-44d7-bd8d-aa196b840758"], "283a36d9-3dfd-4d9c-8041-6db8023ff7b0": ["760eb06f-ca0b-4f93-9a29-0bf58144b07e"], "d7d5be6a-f8d1-47a7-9d56-49972e4512d2": ["760eb06f-ca0b-4f93-9a29-0bf58144b07e"], "a7a5f15d-6df1-46ff-a953-d2940ab38f80": ["8647917c-689d-41e6-a51b-4505fb4cf9ff"], "437a751c-a6e2-470d-b172-47aff798848f": ["8647917c-689d-41e6-a51b-4505fb4cf9ff"], "419ee496-1671-4b0d-9248-56da51b7f753": ["bec1a1b5-4ab8-4f52-a3bc-d37eab546d19"], "1f5b4fbc-f248-41c7-bc10-b87b6eb53f09": ["bec1a1b5-4ab8-4f52-a3bc-d37eab546d19"], "21f40faa-48f8-4757-ade5-61c55e412973": ["5a11cd99-79a5-47f9-822f-e41fb3b045c4"], "7ea45ae5-ac83-43bc-8da1-33ddd5d1c719": ["5a11cd99-79a5-47f9-822f-e41fb3b045c4"], "e889c377-0c88-4f41-afdf-c9bba56f2e1a": ["be8fd581-fae8-41a4-8695-59d9cfc03135"], "0da0d22a-893c-469a-a147-501902724fb4": ["be8fd581-fae8-41a4-8695-59d9cfc03135"], "0fb27cfc-b585-4e57-9687-078e38ad2f96": ["63b4f0d8-0443-4523-a7f1-15b8da42ba9e"], "bbddfeca-2129-4c08-9899-d505e7752b41": ["63b4f0d8-0443-4523-a7f1-15b8da42ba9e"], "8ef55c02-3b2f-4030-b1fd-69d88b138417": ["8f096430-e7d2-45ef-8439-f9862e27a646"], "df0f093f-6798-4b47-87ff-407e50352203": ["8f096430-e7d2-45ef-8439-f9862e27a646"], "217a6846-6541-4bbf-94cf-f0065f890662": ["e8be68f3-b324-4888-bf0b-636ec45acc1f"], "08f5b30a-3a7d-4740-a575-c5d638b41a08": ["e8be68f3-b324-4888-bf0b-636ec45acc1f"], "eb614187-cd98-4132-b552-03804dbb5930": ["b496774f-ab8e-417e-9b5c-0d98d65b458d"], "caebbc53-9dcb-4a85-ae88-1f69b4896261": ["b496774f-ab8e-417e-9b5c-0d98d65b458d"], "5301e046-6dbb-43c7-97d3-c0886d3aaef0": ["40fa55d5-de7d-4b80-a19a-62844289b0c4"], "d18fd459-b41f-4b22-9521-514546547605": ["40fa55d5-de7d-4b80-a19a-62844289b0c4"], "93c16c41-6188-4520-987f-af7f80018a1f": ["b9385d4a-7a81-4251-b98f-24698dfffa48"], "879a64cd-30f9-47c8-96df-63b455ac68e9": ["b9385d4a-7a81-4251-b98f-24698dfffa48"], "e44e1e5b-45d2-46c3-84c9-52fdc00b284f": ["1e260b9f-c0d2-4b6c-8dc4-55b18fec4df0"], "0b6182a1-3e96-4baf-abcc-ba9fadeecbf8": ["1e260b9f-c0d2-4b6c-8dc4-55b18fec4df0"], "c6eb4ea9-ee28-4b70-818c-749c9348ed32": ["7ea4ab92-562e-4efb-abdc-fcc80daa6184"], "a974f9c1-a3cd-4594-aca7-53bc83dac370": ["7ea4ab92-562e-4efb-abdc-fcc80daa6184"], "ce1680eb-f4c7-400d-bbeb-16af5642e4ae": ["587de0b0-d488-4d95-9732-1b221fbdca9a"], "037c54b6-c92a-4d7a-b208-dc38bd64276c": ["587de0b0-d488-4d95-9732-1b221fbdca9a"], "dcb57d18-5ace-417c-8c26-819b04380938": ["2acb1e4b-2106-4fff-a038-f28bcf9db69a"], "4c08cd25-4621-4bf0-938b-dc7f259e0de0": ["2acb1e4b-2106-4fff-a038-f28bcf9db69a"], "38b8a296-3ace-4d91-9b60-75fa9da05258": ["84274483-b077-4308-933f-4f519b3edf36"], "1d423a55-d2c3-462b-a80d-38d270c75ba6": ["84274483-b077-4308-933f-4f519b3edf36"], "4aa39591-3648-4c30-aca4-5c98eeb1d944": ["937fe110-d861-4ec0-9dbf-a0d69f027d5a"], "4d78cbc9-b942-4463-9928-00a709685a14": ["937fe110-d861-4ec0-9dbf-a0d69f027d5a"], "e9f4deec-8ef7-40de-b8ce-de98e7070b2a": ["93970af5-aa44-4f07-8bd0-0a89ea7bb4d7"], "ccb4659f-86fc-471d-a3cf-85a3b5179650": ["93970af5-aa44-4f07-8bd0-0a89ea7bb4d7"], "4148d004-e94b-414d-a409-852e7a7942fa": ["93970af5-aa44-4f07-8bd0-0a89ea7bb4d7"], "0faf1e50-2699-4968-997e-4879d5e88651": ["b87141c7-8fc6-433d-8e28-c922bdcf06f6"], "ee511358-ad29-401d-b83d-d9b258772eec": ["b87141c7-8fc6-433d-8e28-c922bdcf06f6"], "2bdb74a7-bf9c-48e7-8039-ac0ab130bd13": ["b461845d-8444-4c37-90a7-2022ec02eb6a"], "aa8572cc-122f-4fc7-a1c0-c58881ebf8b9": ["b461845d-8444-4c37-90a7-2022ec02eb6a"], "e91d34b4-37a8-4e27-a329-b0b9f8a68ad8": ["9d6e96c8-df10-4f5b-95d9-3c6bf8caa4fc"], "f22ff187-cc56-4344-9a7d-3608308860fd": ["9d6e96c8-df10-4f5b-95d9-3c6bf8caa4fc"], "a3292527-3700-492b-9650-eb16a168d2ec": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "b030ff96-47e1-4cd4-92df-582767d67ea5": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "b5dd46fb-5a24-43ad-837b-e64a734ec9f2": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "505fa873-9da6-4823-8db2-9c58e851ed93": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "77bd9c49-a330-41ef-b93d-1102c03e29c3": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "826f059d-4c77-4ffc-b3cd-514e0e0ceb2c": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "7f87340a-d446-412d-8fba-c24a2163b17a": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "ecdec918-d3fd-41ce-ace1-8af14064ae82": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "8982423a-02a6-4bfa-b90c-29775947668b": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "8fa79c3a-8ba8-47cf-bd10-22f81b2bf4a1": ["5858ff76-0f9b-4329-b074-36e66a81a3d9"], "57b35421-beae-4972-b591-d9796ed03bce": ["8a61b289-88f9-42c7-9131-506f246eb32c"], "3eff8f87-3239-4b26-8bd2-70816236d607": ["8a61b289-88f9-42c7-9131-506f246eb32c"], "92d3d6b5-7649-4894-a9b4-e7efc499faf8": ["be0299c5-8cf3-4fb2-be2c-7e152eeecff8"], "722261ce-e14d-4468-9b15-8ec5316fcc5e": ["be0299c5-8cf3-4fb2-be2c-7e152eeecff8"], "312ebff9-26b0-471d-a1dd-1172a5c38194": ["9c5a3271-94df-4a7f-9624-4f0f6e090222"], "ffb9793c-f2c8-4fa3-8cce-6b402dc52d68": ["9c5a3271-94df-4a7f-9624-4f0f6e090222"], "2490dfb2-8c78-4c56-9020-eabb1b46c7ef": ["a12d771f-7f7a-4d77-b326-d1db9c1897f2"], "74d31a71-d277-45e5-bcaf-8d2038224cd5": ["a12d771f-7f7a-4d77-b326-d1db9c1897f2"], "05dffa68-d60d-448d-adfd-8133662c7629": ["2a7ce84e-af3d-48c2-ba06-13ca1db569ec"], "209e1e1e-9fd2-4c4a-889a-dd36fbe797e8": ["2a7ce84e-af3d-48c2-ba06-13ca1db569ec"], "ad477a7b-5f93-44f2-be3d-dec65fa32d7e": ["791df5dd-31e7-4a69-923d-04d69655a1aa"], "4c25dbf3-89fa-434c-abc0-425919fab14d": ["791df5dd-31e7-4a69-923d-04d69655a1aa"], "ed98deca-12c4-4b6a-8627-eafe32c870e6": ["e51f81db-b4ac-4247-9185-f199a8131c8d"], "56f6e544-675c-45d9-9df3-63359bdbd6e2": ["e51f81db-b4ac-4247-9185-f199a8131c8d"], "35a4d820-49f1-4b4a-aabc-1bd1fc172fb6": ["98491fe2-a784-488a-92af-64789ab66ecd"], "989bdebb-41d5-45f4-a255-f614527f91d6": ["98491fe2-a784-488a-92af-64789ab66ecd"], "21c7cca8-81fc-490c-8d29-b45594da8a88": ["b2e59cae-b820-41c5-b9ef-22f8c8fd7c71"], "a7a82bfa-e429-44a3-bade-4d4476dc853c": ["b2e59cae-b820-41c5-b9ef-22f8c8fd7c71"], "bb8857f0-cd16-44c5-a201-15c46488dd52": ["1a66f19b-6ac6-4363-ad6a-d44edcb11215"], "945798fc-a121-48fb-b479-2880b6293d39": ["1a66f19b-6ac6-4363-ad6a-d44edcb11215"], "61ccd64b-5284-4805-ae52-c4abc4e8646a": ["4bf1bb7a-6f52-4be3-8772-df0e5d8a0957"], "a823ebef-8442-42c5-b684-fb6787d80600": ["4bf1bb7a-6f52-4be3-8772-df0e5d8a0957"], "fc66ba64-e849-4d39-9054-7b9f63d6829d": ["49c1a744-b53a-414d-a3fc-48e59a2f5f65"], "20aee1e4-f9bb-4be5-9ede-931b96068424": ["49c1a744-b53a-414d-a3fc-48e59a2f5f65"], "fd4bf047-ac1c-437b-af40-f982b726d9ad": ["e3404bad-52d1-46ac-9f3e-f2b96bb92b89"], "87d905c2-9510-48e9-824d-f4ec7820b2e2": ["e3404bad-52d1-46ac-9f3e-f2b96bb92b89"], "a1b83bb3-6fd5-4e16-8539-c70d7206425b": ["1d82320b-f6d3-42d9-8ce9-19d95271f3a2"], "df2a5cd2-9548-46e1-a656-f9cd9883fc47": ["1d82320b-f6d3-42d9-8ce9-19d95271f3a2"], "69e70d12-329c-438e-beca-e02146009d1a": ["58733b49-3b6e-4bc7-8c22-6d9570b1e541"], "33304c84-dc36-4170-8b95-457acbbf2d3b": ["58733b49-3b6e-4bc7-8c22-6d9570b1e541"], "f1706a2f-37b5-415c-94d5-34fd40c3c2b1": ["b14fa393-a655-4fba-ae96-62e93098b253"], "1831815e-6b99-49ee-9b2d-c196cdc84447": ["b14fa393-a655-4fba-ae96-62e93098b253"], "de031794-3f3f-41be-92fa-b1a155040f5f": ["ab90d733-48c5-4582-942a-535a8a1d9e9e"], "2be53370-68d1-49bd-94f4-d37a88a5bff7": ["ab90d733-48c5-4582-942a-535a8a1d9e9e"], "bdc462c8-396f-4778-8ecc-aa0044db0822": ["af5863a6-58b9-478d-870e-d8ce91e724cf"], "2730cb1a-ff69-43e8-b205-34070e938e71": ["af5863a6-58b9-478d-870e-d8ce91e724cf"], "931c07a2-d693-49d0-95ee-7feed91a50c4": ["67c08829-82e1-4a58-bd56-3691c497ca85"], "1ebb29f4-f979-4f05-8228-4c22d64fb94e": ["67c08829-82e1-4a58-bd56-3691c497ca85"], "db201fd2-62f8-443d-86cc-98d5dc025444": ["e9ac1855-c5d5-4f2d-9fef-60b306669a53"], "1f9b0bfa-d777-47af-bd6e-8171ff4f6ae0": ["e9ac1855-c5d5-4f2d-9fef-60b306669a53"], "965fd5b9-8d47-4ed1-8a0d-6c8004137a3c": ["e3c49685-b058-4d5f-a2a8-e7d076c30dbf"], "fc601040-a78d-4814-ad67-ee4226b69f24": ["e3c49685-b058-4d5f-a2a8-e7d076c30dbf"], "222506b3-a0d7-4fa3-a959-f9ffc649d8af": ["057197da-ca25-467e-a0cd-e7c55005fc6e"], "54aa9d38-f9fb-4997-8527-1018383f7d79": ["057197da-ca25-467e-a0cd-e7c55005fc6e"], "0dd158fe-1f7a-4f97-adcc-3d9686c7b082": ["7fca4f1a-0f45-4f8f-ae9f-e308b0be0ca5"], "85d8d00d-bf75-4575-abf0-9057f2b84270": ["7fca4f1a-0f45-4f8f-ae9f-e308b0be0ca5"], "e8c1c449-8b89-4fb0-8026-6c892ffef8bc": ["cc6ee4d8-76c7-41f6-b04e-06967b3586ae"], "0d859b69-644f-455b-bdaa-51b5f3eebc6b": ["cc6ee4d8-76c7-41f6-b04e-06967b3586ae"], "52786df4-d6a0-4abe-a52c-5b20afb61690": ["7214f0a3-8c33-439b-96ad-1e712995c180"], "a80072e5-eb2d-4343-a12a-41c242f83738": ["7214f0a3-8c33-439b-96ad-1e712995c180"], "69704bd8-703a-4135-9b11-58e69a17d563": ["5be4c71b-1a91-4cb5-9114-9573a0d90db7"], "e52eb3fd-dcde-463f-bcc2-083fde950e4b": ["5be4c71b-1a91-4cb5-9114-9573a0d90db7"], "cd3712b2-3204-4ce5-8784-5b2a638b07ac": ["b8e73661-4632-4dd2-a152-fd23df795a74"], "a3bd6732-4a30-4860-856e-4e99b633a657": ["b8e73661-4632-4dd2-a152-fd23df795a74"], "4ce15109-ed7e-421a-a605-a3f3c35383e4": ["135175af-dcd6-4da9-9094-42632d1fc90a"], "7e4897c7-c091-4a45-8e87-7e40a1a1e2f8": ["135175af-dcd6-4da9-9094-42632d1fc90a"], "860fada0-403a-41c5-80e6-878b88a5d51c": ["849a8af0-e4b1-45a1-9f1a-179ee4847474"], "c0ac473b-1e82-49d7-8e6f-e26a200279e2": ["849a8af0-e4b1-45a1-9f1a-179ee4847474"], "43bc715d-cf47-4e13-8c1c-741c76059a89": ["1d21c617-5e42-4f86-925b-3b8755a6d7f5"], "761b5aaa-0639-4e17-8fb6-a7e8f6ac1ce7": ["1d21c617-5e42-4f86-925b-3b8755a6d7f5"], "14769c28-e91b-4c6b-9070-74104db95d05": ["0af8302f-a752-4bca-9fb6-49c2465fd33f"], "58ff9a1f-9835-4c35-b791-916e57943959": ["0af8302f-a752-4bca-9fb6-49c2465fd33f"], "90c7e565-bb01-4478-9c8d-5f3ce9f2e74a": ["049009de-37f2-4b48-8cdb-652831205ccf"], "ea5c255e-2072-491e-a429-9af6851f1b13": ["049009de-37f2-4b48-8cdb-652831205ccf"], "1837d4f4-e33b-446a-9ed3-92e8514b217d": ["cb3d0397-5b3d-457c-800f-2325592bb040"], "84ad5ce4-a614-4297-946e-d739e002d5d7": ["cb3d0397-5b3d-457c-800f-2325592bb040"], "4f371be9-9778-47b9-bbc3-1968995ce34c": ["75f078a8-bfaa-409d-973c-be0dc3bbd4b5"], "12287afb-c19f-4dec-9946-48ac2032b4c5": ["75f078a8-bfaa-409d-973c-be0dc3bbd4b5"], "7bcde163-5944-49db-a114-5c622a8a4a67": ["3b726367-c7c3-4ae7-ba69-977b2e7f0218"], "52b38df0-b61d-4985-8030-905f7fd7663a": ["3b726367-c7c3-4ae7-ba69-977b2e7f0218"], "de4fe6fb-2192-4774-a578-aee597395035": ["b21ae364-4eee-497d-b854-b67a53e06125"], "b69011da-7248-4b3a-bee4-b07e2945bda6": ["b21ae364-4eee-497d-b854-b67a53e06125"], "867e2ce5-c6bf-4cef-8621-563328785061": ["da4cd253-f58e-4db4-b896-1708d1fb74b0"], "7cee6313-df77-4206-9c31-a2396cfe5db9": ["da4cd253-f58e-4db4-b896-1708d1fb74b0"], "55a5c208-f6a2-4e3e-afa2-616f0cfdf0b1": ["b06eb2ca-dc5e-484d-86e2-02d8e40ebee7"], "b2e6ef2e-0c11-4120-8596-9c2eb70a5027": ["b06eb2ca-dc5e-484d-86e2-02d8e40ebee7"], "af502a41-3065-4ec7-bd81-abde123f41ac": ["b7b9bd55-32dc-4632-8fe4-4c42339067db"], "3462f0d8-9052-4cbd-a489-1232017149c2": ["b7b9bd55-32dc-4632-8fe4-4c42339067db"], "9c713ee1-a379-4fb6-a54a-fc853358a8de": ["eda344fb-5d93-415c-a50c-863c7e1553c1"], "ee1ed5fe-0d75-4687-9469-5d79970fd702": ["eda344fb-5d93-415c-a50c-863c7e1553c1"], "4cb4c17e-a851-4d6d-881a-ea47e8d1fcfd": ["f4fcb684-947f-4895-ab1c-b957f45368ff"], "524b1969-3944-4425-95e8-5f9ba2f59de3": ["f4fcb684-947f-4895-ab1c-b957f45368ff"], "4717e09a-f7fd-4494-adb9-8a8def649474": ["e32fadbf-feba-46db-b5a1-f9e40a818dd9"], "317f0e1c-da87-4205-9f64-68b10e0812be": ["e32fadbf-feba-46db-b5a1-f9e40a818dd9"], "3a231cb3-4aac-45d8-b09a-9e5894f7c7d5": ["de0d799a-91f2-4aa2-9483-4cb7ba8d1011"], "45194f72-d32b-4abd-8bff-d67c266e1ae5": ["de0d799a-91f2-4aa2-9483-4cb7ba8d1011"], "d580cb0c-c9ef-4943-8a7b-1c6f06c9ed51": ["1eb1af5d-493e-4bbc-b699-daf1405dfac4"], "8164970e-d0f5-4b9f-a0c2-8c5461b63360": ["1eb1af5d-493e-4bbc-b699-daf1405dfac4"], "8886a81e-71cc-462c-94cc-8ae2a2a31ccb": ["44876aef-e1ec-4781-b0cf-69766b56d824"], "057c29e1-a0d3-414f-8aae-cf92235a9fb0": ["44876aef-e1ec-4781-b0cf-69766b56d824"], "7d85d0e0-2d89-4997-b72d-8ac176a9a33c": ["e1ba6a3f-06b8-4db5-9ff8-eee9df8946eb"], "94fded75-771c-4240-a05e-ae5614ea2584": ["e1ba6a3f-06b8-4db5-9ff8-eee9df8946eb"], "d11c0e42-20e3-4ef3-bd4c-fbf61efb0a9e": ["1804cbb2-9638-48e0-a009-6f3f52e709db"], "b53e597a-9d32-4893-a272-7601eede598a": ["1804cbb2-9638-48e0-a009-6f3f52e709db"], "7b6078d8-96ea-4bc2-ac3f-e8a2389cae74": ["64672158-2e35-4ff6-8dec-12e7311cb925"], "1f20af83-4505-41b7-bf5f-d435018e1ca9": ["64672158-2e35-4ff6-8dec-12e7311cb925"], "d102f019-df1e-4848-873f-3cacf9af80fe": ["ccaad645-a382-4a72-ad97-e63bcb442052"], "6b63782f-844b-43de-831b-c6d5744c1411": ["ccaad645-a382-4a72-ad97-e63bcb442052"], "d8bc4fa5-48cf-4a18-a728-7b8755f4bec6": ["d39113ca-82a1-4845-9ac4-21babfd2713a"], "62fe84a6-bf63-46ae-b363-a637f853feb9": ["d39113ca-82a1-4845-9ac4-21babfd2713a"], "d5964294-9e71-41a8-9c7c-efcb49176348": ["1773e277-0492-430f-a821-c77fbbbb1b56"], "f7ea7ed2-4c36-4516-9645-d7d02b40cc76": ["1773e277-0492-430f-a821-c77fbbbb1b56"], "609187b9-769b-470e-afaf-f2a8cc2b983e": ["9a908ec4-f876-4595-8471-aaa1221026d4"], "0aa05353-cfa1-4a48-aa67-13a10127cb57": ["9a908ec4-f876-4595-8471-aaa1221026d4"], "7ce7d287-2d5e-491d-bf65-ac4a2298f2e8": ["0ca8624f-87bd-490b-9e59-01cfc0d35e42"], "f8f72a12-7f32-4bd4-b97e-f3907f9466ff": ["0ca8624f-87bd-490b-9e59-01cfc0d35e42"], "2dae0b24-191c-4831-be15-c61132410d50": ["33fdadc0-0b4c-45fc-bcad-e8e5e00b5f0e"], "c6c6ca77-98c6-49fd-ba2f-4f085975ac16": ["33fdadc0-0b4c-45fc-bcad-e8e5e00b5f0e"], "31340ccf-17b2-4d64-9fb9-82180a8d1f48": ["892813e8-31d5-4fe8-b490-8e0257f7e535"], "100f5b2b-346b-41e7-acfc-f19cdaecd247": ["892813e8-31d5-4fe8-b490-8e0257f7e535"], "c5c1b6c4-fec7-4c10-b986-30dfe4b7b179": ["0447c10a-fa4f-4fde-8b93-ada79326003a"], "e63a1ce7-075d-48ac-8c4b-4454b9a47ed5": ["0447c10a-fa4f-4fde-8b93-ada79326003a"], "b0b64368-3503-4115-a94e-f54ac32dfb03": ["98935a67-e0f4-4bd3-93a8-f49f8a3a6c96"], "aeca3d78-2dfa-46c9-8be0-b811d1dab725": ["98935a67-e0f4-4bd3-93a8-f49f8a3a6c96"], "764fa2f4-7f9f-4029-83c0-de934b9b7095": ["41d908cc-e661-4c48-b968-ac6022aaac2b"], "bc0a21ac-4441-4f60-b786-fba5f78e8952": ["41d908cc-e661-4c48-b968-ac6022aaac2b"], "a553d56b-1775-4388-bb53-83d8788263aa": ["387dacac-d097-42b9-b327-c7167857a602"], "a3964019-6abf-4309-9816-fb72e4f9677a": ["387dacac-d097-42b9-b327-c7167857a602"], "83a5d7c5-57f8-4148-bd09-fdb93c455fc9": ["5034e489-f5da-4091-860c-c21b63574b85"], "4371b3a0-9800-47be-b877-9b97925714f5": ["5034e489-f5da-4091-860c-c21b63574b85"], "3d32bea4-6e0f-4674-869a-5a766f2d3a29": ["bed37ec7-ef79-415c-8dfb-e1b6be38a36a"], "957d3432-13bf-4f5e-9f52-ead7cac470b3": ["bed37ec7-ef79-415c-8dfb-e1b6be38a36a"], "dce044c5-73ca-45dc-8557-05897cfe2608": ["99b54f5c-56cf-429f-9055-0ad44976c955"], "97170d74-9913-45e7-b48b-f0fd644b3303": ["99b54f5c-56cf-429f-9055-0ad44976c955"], "a8e2f82d-f7e2-410b-ac6d-ddc8ebfcafa2": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "d6858014-ff6c-41a8-9c50-76ec363c93e1": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "3f39a6b1-67ee-47fc-b409-dea23d524e2d": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "770589f0-f35f-40aa-b6bf-d42aa4f83d12": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "185711f5-070a-4eab-b7d2-0d8af63ef53a": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "4dac7e69-1774-49c1-b991-886489bf76dd": ["50dfe7b4-0191-492d-8710-5944fbe6a56f"], "f5f23384-8d5d-464a-9d24-fe727bd94289": ["4395da93-c986-419d-9450-f79711202cd1"], "3fb98c0c-5a75-4ca8-91b5-974b7cb51e03": ["4395da93-c986-419d-9450-f79711202cd1"], "2f572651-cbce-4481-aad6-e3c71b576a69": ["7050aa3a-e762-4e42-b461-f338f44d3c7c"], "e5b25ba5-bdbf-4bc2-9c6b-9dfbfeed9068": ["7050aa3a-e762-4e42-b461-f338f44d3c7c"], "8428ff44-b979-4aae-bf5b-d12c284fb143": ["45aabc77-eb9e-42ad-a0ff-64e2089ee88f"], "e58c5f2b-fc5a-497e-a964-5d11cecc32ae": ["45aabc77-eb9e-42ad-a0ff-64e2089ee88f"], "7430e3a2-87f9-4164-834d-fec924240114": ["81ab0a17-8487-43f7-97bf-3cdde90d43d5"], "e5a43631-7a72-4e39-95b7-fdbdeb12235f": ["81ab0a17-8487-43f7-97bf-3cdde90d43d5"], "8584b987-d164-4e05-bba7-a5889926bdfa": ["66014063-43d7-4a25-ab9b-d72f3a5af9dc"], "9d26a233-7f85-42fd-a075-40b569f1a4e9": ["66014063-43d7-4a25-ab9b-d72f3a5af9dc"], "7483c6ee-5e99-4b52-b346-d0fb75c79dc7": ["6b7cdaf3-334f-4d0e-b32c-f2b6fce7e2ab"], "ed7500b3-268a-4808-946a-0755d282dc56": ["6b7cdaf3-334f-4d0e-b32c-f2b6fce7e2ab"], "878bc934-888f-435e-aa73-b369be93a01a": ["877d85b0-9179-4027-829d-a1cf49f7d994"], "958e1121-2ee0-4008-bb14-98c1e7cabd06": ["877d85b0-9179-4027-829d-a1cf49f7d994"], "6d29da67-e717-4dce-a81e-53d056e714cd": ["579e51ed-ef22-471b-88bb-3b92e6b6c518"], "11294cba-32f5-4630-ae30-87710a4814d9": ["579e51ed-ef22-471b-88bb-3b92e6b6c518"], "2379eded-e321-48ab-b80e-e0032c045710": ["7555b003-33cf-4901-b57c-45d7ca3001a2"], "f615e028-71f0-4ca1-9684-f68fc33a61ae": ["7555b003-33cf-4901-b57c-45d7ca3001a2"], "4435746a-301c-4355-b1c4-a26a090216c5": ["6180a799-3ade-43e3-94e3-e7dd401fdc60"], "ca06abc9-4d33-40c3-a3c6-e9b81022cdd7": ["6180a799-3ade-43e3-94e3-e7dd401fdc60"], "bcc9d25b-49e6-4288-8f11-b3168f041cfe": ["0e84086f-8303-41b6-ad53-207a49bd65fe"], "5502bc05-d4f4-4893-9900-c59c749a5bd0": ["0e84086f-8303-41b6-ad53-207a49bd65fe"], "1526a50a-4098-448d-a827-4dd7412947a9": ["1fc596be-7f4f-4b50-a0d6-6c231e495aec"], "89dc7831-2656-4215-9a36-8418f57b658e": ["1fc596be-7f4f-4b50-a0d6-6c231e495aec"], "fae9c92a-500a-4fec-bf90-d1b6c692c6d6": ["f8ee8abd-2d09-458d-8f64-4f2da52cde8d"], "a044497b-14be-437c-9014-5aeeafd7f943": ["f8ee8abd-2d09-458d-8f64-4f2da52cde8d"], "21f95368-6611-43f2-9b4c-e454e6f78f28": ["96ea456a-1e97-4180-95c8-91a0b908a348"], "2107fe67-4ac3-426c-8295-12161b6bf185": ["96ea456a-1e97-4180-95c8-91a0b908a348"], "588ec20e-1604-4610-b9da-e5ceb922e164": ["b2394cec-139d-479c-b1f5-22ee380bc207"], "4768e460-aab7-409c-9d69-4cc1de600683": ["b2394cec-139d-479c-b1f5-22ee380bc207"], "9950ab03-9f17-41bd-b151-b07e9040e03c": ["03894c46-768e-4c08-bfe1-de70e48e36f8"], "a0c1953f-570e-4350-a74e-2608cddbdbdb": ["03894c46-768e-4c08-bfe1-de70e48e36f8"], "af9fce01-b78e-49d9-aa8f-1895576bef0a": ["3a32394a-dbfb-459e-87ec-972e611a98de"], "2a204798-d30b-4a6b-bd6d-28badf475010": ["3a32394a-dbfb-459e-87ec-972e611a98de"], "4747e115-b46e-4784-bb3c-f8eb61aa5226": ["8712678c-0160-44b4-b488-474f483dac2b"], "120bff84-4aba-4a4c-b0bb-e10ef06e7c98": ["8712678c-0160-44b4-b488-474f483dac2b"], "c4c1908a-ae6f-45ac-9da4-ab85e0fee2d1": ["8d04c7df-2ca1-4789-8493-68550debbeb0"], "d272347b-85ff-487c-aa15-818f1596cb69": ["8d04c7df-2ca1-4789-8493-68550debbeb0"], "a9ead762-1f54-4989-bb39-9952b03d6c4f": ["8262d816-d9c8-41a7-9a2d-ea0e62ca4783"], "e00ddaf3-b4ef-47b6-9053-8b00e9629eba": ["8262d816-d9c8-41a7-9a2d-ea0e62ca4783"], "8a7daef5-cc40-445c-98d0-673bc3b2ed77": ["77b61e52-f3fa-462f-b629-2ca15ab12ca3"], "74b875f5-cb3a-48d3-8548-57c0b7d9fe0e": ["77b61e52-f3fa-462f-b629-2ca15ab12ca3"], "f278f25a-90c8-426d-a8f2-bed9f5be5e1d": ["a83ed730-39b2-41c4-bd81-592f8000f018"], "2cc54ca8-c398-4aad-9b86-b52ab22c3c2f": ["a83ed730-39b2-41c4-bd81-592f8000f018"], "8800185f-2c89-4d1e-b592-5f411433e38c": ["e0ce4177-c3f8-4d3e-ad53-181d2de47df4"], "50eaa0c6-f41a-4849-902c-6a3b29b5a1de": ["e0ce4177-c3f8-4d3e-ad53-181d2de47df4"], "b1cb3ca6-0614-409a-bdff-46780654e555": ["a84c3f85-de80-4bc7-a176-fbbfa7f463e2"], "2728d688-d495-458e-89bd-814c1bb45e15": ["a84c3f85-de80-4bc7-a176-fbbfa7f463e2"], "61b3c6b9-a477-4ecf-9862-43e426f4fb2a": ["4c3d7e50-e967-4944-bdde-cb63c1188957"], "c27d8639-bbca-4260-9517-059153e14667": ["4c3d7e50-e967-4944-bdde-cb63c1188957"], "9265e4f7-cc6d-458d-aced-c70d7387276c": ["4716faa4-711a-4a59-80af-91c4b6024d4b"], "5668b205-f98d-4d27-bc96-f56877bdc5fe": ["4716faa4-711a-4a59-80af-91c4b6024d4b"], "fd31154d-9266-4031-94bd-e6445d746cbc": ["6300dea8-c6a7-43ae-9646-684b8e64b99f"], "9383ac74-1c8c-4f3e-8389-a7bbc31a9bcd": ["6300dea8-c6a7-43ae-9646-684b8e64b99f"], "815b2b99-9570-4ab5-ab06-cb3f9a83e812": ["e31ebb38-9d69-45cd-8e50-805432885e53"], "097cdbf6-c9d3-4368-a8e7-ce86a781d13d": ["e31ebb38-9d69-45cd-8e50-805432885e53"], "273c8e28-1e6e-4eec-bce4-ec9f281821e4": ["3b640d00-da09-42f9-85d1-96159dea1643"], "69ad0ffd-88f3-4c09-9445-41461072633c": ["3b640d00-da09-42f9-85d1-96159dea1643"], "15a51fce-fb5d-4a6f-924c-72ae2b28bcc4": ["80403ab1-2af7-4777-8b16-f87bfa49be79"], "229ae69d-198d-4b93-934d-8c5c0773aaf3": ["80403ab1-2af7-4777-8b16-f87bfa49be79"], "6b9445ce-78e9-4aae-bedc-f636f9c4a611": ["4ac64b92-160f-4f1c-acc2-ab31f6bbac10"], "61ba81bf-a33c-4b28-b724-0b12b911e004": ["4ac64b92-160f-4f1c-acc2-ab31f6bbac10"], "fd6f82fb-92f9-4633-bf61-9f8cbbac52ae": ["db9a8df7-0010-4487-90fb-fd6f6484ed3d"], "030283a0-6998-4240-a85e-80a4e7a6e47c": ["db9a8df7-0010-4487-90fb-fd6f6484ed3d"], "dca51571-0b27-40ac-9502-58fc76c320df": ["645789f5-15a1-4485-9ca1-2865485911b9"], "ab7edc93-281d-4fb4-86b0-562c6d1cd6ed": ["645789f5-15a1-4485-9ca1-2865485911b9"], "6fef3887-55be-4529-bf4e-c985a3b22726": ["6282bdfc-457b-49d0-b531-8398dac67745"], "09150217-4a34-41bd-b61c-734f015baa50": ["6282bdfc-457b-49d0-b531-8398dac67745"], "adda56a9-4e48-4520-91a2-2c504e26655d": ["e7fbad97-1744-42e8-ac8a-9e50362cb3ce"], "b8a291d7-5dcb-44d0-9b99-48b98a5a9441": ["e7fbad97-1744-42e8-ac8a-9e50362cb3ce"], "458e8667-ce64-4dd2-8b2d-5412c8ed22f8": ["6bcaaad7-e377-4253-a1ee-1bfee3a6d279"], "a6a50c51-76d6-4f9e-a0fe-85b5f38cd177": ["6bcaaad7-e377-4253-a1ee-1bfee3a6d279"], "4ee00e6c-cfe6-419e-97b2-a4e856476cc1": ["3fb6e2f0-108d-40e3-9695-fff53a66576e"], "54fc57b9-7c6a-4a11-83a2-929d5ddbe476": ["3fb6e2f0-108d-40e3-9695-fff53a66576e"], "c4abef4f-d18f-4f47-a453-457bd9310882": ["836ea7f9-f883-4606-8d52-da1fd69f5102"], "e41c7656-ddfc-4788-9d76-f514ed3dffab": ["836ea7f9-f883-4606-8d52-da1fd69f5102"], "8ba83523-3806-49b3-8eb5-e4aa1ecae374": ["1cd06e7b-bd98-42c2-ac27-fb5eee09afc8"], "5c407ece-3343-474f-87c5-504d6220581b": ["1cd06e7b-bd98-42c2-ac27-fb5eee09afc8"], "dc77739c-17c9-402e-ae15-37dbd0f55bb2": ["3ec457f0-429f-4a97-b34d-5ea6a169c5d6"], "4c07389f-5b91-45e0-a464-a7d10c3c9066": ["3ec457f0-429f-4a97-b34d-5ea6a169c5d6"], "963e1149-3f44-4492-8cfd-c592073780d8": ["c39a8e00-9164-4447-8b7d-7e7b6014025e"], "ec0909b0-c860-4a12-ad64-6c3bb9b3dbba": ["c39a8e00-9164-4447-8b7d-7e7b6014025e"], "824dc30d-b459-4e47-8b39-c28852cc798f": ["0b09f184-cfac-4160-85d6-634970f01784"], "ad7da50b-b7e2-45ff-82c5-db0c4dcd2d67": ["0b09f184-cfac-4160-85d6-634970f01784"], "c921f02d-0708-45b8-b6c1-caaa888fe8b7": ["7acf5d79-6c60-4976-b423-8f6ad52093a4"], "a967be37-2653-4325-9654-e0deee09e7e7": ["7acf5d79-6c60-4976-b423-8f6ad52093a4"], "03391daf-2d49-466f-a018-a68a5494222d": ["d6e480c0-8edc-4096-be91-65b2d8595dab"], "9b76549f-66a1-49e8-9bde-2ec3b9277bd1": ["d6e480c0-8edc-4096-be91-65b2d8595dab"], "9e6e17fe-b465-4372-b0fd-468dcdc23496": ["d21ac959-788a-4eb1-bb07-47eb74c599b3"], "25a3ed11-cf8b-4437-9eb9-8b22e2f18252": ["d21ac959-788a-4eb1-bb07-47eb74c599b3"], "a01b8d01-9f89-4e0f-b85b-cef6cdfae42b": ["076d08a3-7609-458d-b30f-138467eb775e"], "9cbfef8d-3b36-48c2-a324-0069507259cf": ["076d08a3-7609-458d-b30f-138467eb775e"], "400ea077-0399-4a30-a4c6-0fd22218e706": ["84fe7710-a642-4253-9f47-10ea3c4cd26b"], "b756de7a-16dd-46df-88e1-7582fbc257ac": ["84fe7710-a642-4253-9f47-10ea3c4cd26b"], "420ddcac-eac5-47ac-8d6c-46541137b8c9": ["da251e0f-a917-4ba3-87bc-26f3969b72d0"], "5fdeb37d-47b2-4168-b3bf-3bc789e5c8b2": ["da251e0f-a917-4ba3-87bc-26f3969b72d0"], "98594efc-0fe3-48d0-9829-264050e7b9ef": ["64886139-4105-46c1-b29c-53cf6f924c71"], "63f7d9ca-7159-4199-9b7c-30350d622f7b": ["64886139-4105-46c1-b29c-53cf6f924c71"], "532ea152-7c66-44fe-ad81-b2ddb3debabd": ["b95fcad2-e049-4c24-8f26-8dcb727b69e3"], "8d4e32cb-573f-4a92-b941-f23e097a2f52": ["b95fcad2-e049-4c24-8f26-8dcb727b69e3"], "737844f8-1fb2-4684-9be8-72aae823b2d6": ["b0e3e4f6-ebaa-4d12-95a9-5ccb6e0b72d0"], "f00fd922-a270-404c-9704-0485e3c741bf": ["b0e3e4f6-ebaa-4d12-95a9-5ccb6e0b72d0"], "e7c5fcd0-18e6-4a2d-bf9a-b22eda2e742c": ["2d685e1c-1dee-413f-a1c3-d7c1b9f252ab"], "739c85bc-3fd5-4a9a-ab58-9280c522494d": ["2d685e1c-1dee-413f-a1c3-d7c1b9f252ab"], "9dbd4399-3981-457f-891b-961f6095985f": ["48446fe6-64bf-493f-a48e-22b8cf61ddb3"], "ae370d55-fbe7-49e7-a52e-771e4a3956ce": ["48446fe6-64bf-493f-a48e-22b8cf61ddb3"], "3e354f60-e4ec-4cc7-88ba-8747e8a6075d": ["3214e675-f799-440f-b57f-40ff053fb48f"], "2742b62e-fd86-4a04-b07a-5530c32b4548": ["3214e675-f799-440f-b57f-40ff053fb48f"], "cbe5aaaa-cb93-412e-a814-367911796d86": ["0ff34a2b-eed1-4937-be65-0e6ecccae744"], "5c383b4f-5e89-43aa-93db-d457fadd9114": ["0ff34a2b-eed1-4937-be65-0e6ecccae744"], "e5bf50b3-2b84-4066-a194-e4efd1723e4c": ["f564a1f9-3a01-4bb5-8600-d55c6c698006"], "e05300b6-638c-44a9-a5d7-2b6671aeb7f2": ["f564a1f9-3a01-4bb5-8600-d55c6c698006"], "d0535cf2-042b-494a-94f0-c1a126c3a4b4": ["cd465751-4bbf-4c83-8104-66800df47cd2"], "e11e874d-7d93-4508-99b4-b4dc2ad0f665": ["cd465751-4bbf-4c83-8104-66800df47cd2"], "a3a705a1-af62-4bfd-895c-e254902c3080": ["5c0ba23b-9659-4326-a03e-176e747de387"], "2d7d7039-ad80-40b8-a92d-d6b67418ea68": ["5c0ba23b-9659-4326-a03e-176e747de387"], "1f135d34-e09b-49d0-9ab4-ca7653dba885": ["683f18f2-03bd-4efe-9e9e-3da4d246fb02"], "20abec75-9551-4ddd-b427-210f948254db": ["683f18f2-03bd-4efe-9e9e-3da4d246fb02"], "7e349320-12df-4e22-b25c-e11f913332a0": ["9cc1bdac-96ef-459a-bc6f-826321854da2"], "98407c9a-4a0a-4905-bcea-a6e9385a13d0": ["9cc1bdac-96ef-459a-bc6f-826321854da2"], "1af4f569-47ad-45a7-987f-191ee2eb6732": ["6b134912-d268-45d0-a034-4cec16bed1c7"], "eb49d20f-17df-4304-b3dc-d315d480c981": ["6b134912-d268-45d0-a034-4cec16bed1c7"], "3372f597-5423-457b-a264-3d0e76a6404b": ["50ec0fdb-9bf2-4fe4-811b-5a4f435a10ab"], "fdb2633c-628a-4f1e-945d-4b357ff1453f": ["50ec0fdb-9bf2-4fe4-811b-5a4f435a10ab"], "9d8882d7-8698-4e6e-8d0e-4437ce1d95f1": ["d938bc88-29a0-4811-9a1a-cf3c43e8d217"], "22283a3b-bc8a-416d-b346-07bc0955d523": ["d938bc88-29a0-4811-9a1a-cf3c43e8d217"], "7c59f875-5dad-42db-a2d7-91dee51a828c": ["4d476b7f-604e-4335-b0c0-f07ffbc5c400"], "40dc8b29-c752-418a-894c-abe6b0ba0fd3": ["4d476b7f-604e-4335-b0c0-f07ffbc5c400"], "77748769-935b-4d6e-b048-f60534ce2f29": ["a6616fe6-583c-420c-93a5-7e84a3064898"], "472c1529-a503-4e20-b6e9-955407770f61": ["a6616fe6-583c-420c-93a5-7e84a3064898"], "d51e242c-d2d1-419e-85c7-32a164cc5ccb": ["5c6caec3-25ab-4c19-a3be-3ec625705735"], "05e5087f-eba7-4192-84a5-3851d0d6cdc5": ["5c6caec3-25ab-4c19-a3be-3ec625705735"], "eddbd658-d22e-4347-946f-cea5d3587a04": ["fb1d2aca-a571-4992-9e94-1d6da790a6d0"], "94aa4931-0209-4828-8d41-bbdfa1eabc57": ["fb1d2aca-a571-4992-9e94-1d6da790a6d0"], "5c0ced66-0205-476d-9921-fc707cbf9d3e": ["43bd21b4-965f-4b85-9a05-c35c81a387e7"], "b5f808af-da9d-4672-a474-bf6feb88cd46": ["43bd21b4-965f-4b85-9a05-c35c81a387e7"], "9b80ede0-fa27-423d-9bc9-b306cbe0d5c6": ["81a48e99-f0e2-4790-a465-a516310f84a5"], "dc24284a-a41a-4163-8edd-3f7ac4c59ab2": ["81a48e99-f0e2-4790-a465-a516310f84a5"], "d0755f5c-2b7e-45e6-ac52-a192471eea79": ["36f12e29-0206-4db4-8356-80ba91cad703"], "3d7e0dfd-a32b-4e87-b37b-19c2233a2726": ["36f12e29-0206-4db4-8356-80ba91cad703"], "a0e64c1a-6b26-4c47-b32f-76acc2eecebe": ["12efb870-69b6-4ea1-bb48-50318caaea2a"], "bbb8acfb-fd8c-4529-9d3f-0a411af18483": ["12efb870-69b6-4ea1-bb48-50318caaea2a"], "3a999c18-ff6f-4463-897f-278856f93e01": ["ca998af9-e801-4220-8b3e-ac9ccea8860b"], "ea66aaff-f748-4809-88ca-2e20a514fb4a": ["ca998af9-e801-4220-8b3e-ac9ccea8860b"], "527d3703-dd90-45de-bcff-d93ff45c20c2": ["5dc7c7e5-8bda-40f1-bf4d-2afd0d366515"], "19641093-ee8a-423d-b0fc-4539872b2e91": ["5dc7c7e5-8bda-40f1-bf4d-2afd0d366515"], "52b7b20a-bed9-4d79-891c-25d17f0d7a83": ["fdd21fd0-0cbd-4e32-a04d-7e3b7249ac89"], "2930207b-5e75-4083-be01-36244052a11e": ["fdd21fd0-0cbd-4e32-a04d-7e3b7249ac89"], "9728edfc-8b6d-49a7-8fd8-af1fd0c34fb7": ["4ba10f2f-e8df-43ea-8c92-41093cfd2f7c"], "e38e9899-5e4d-4daf-bcc1-76c43eb38a4f": ["4ba10f2f-e8df-43ea-8c92-41093cfd2f7c"], "accb0ef2-9094-42ea-92af-110b84c4eeea": ["88f47fe2-f80a-437e-b1f6-77926b8dce67"], "ce3b145b-bf15-4707-8ded-b7d2446477d4": ["88f47fe2-f80a-437e-b1f6-77926b8dce67"], "9d13f1ef-8072-4e42-999f-5a964f338cbe": ["bd88b130-36d9-4289-948e-229c23403d62"], "df85e9b1-fbdd-4a8d-a457-18c863ac0d13": ["bd88b130-36d9-4289-948e-229c23403d62"], "af164b64-053a-448b-8456-435a13a3d20e": ["c7987d1a-106d-448a-9aaf-1509a109f524"], "97c451b7-16e2-4cc5-b9dc-20835bfdc20d": ["c7987d1a-106d-448a-9aaf-1509a109f524"], "d78c21aa-530a-4d6a-815c-cd65abfac2ff": ["193aa5cb-9943-4cc3-8a00-10a19c95b790"], "68ba66c9-2083-4b00-abf5-0bc67e7f4227": ["193aa5cb-9943-4cc3-8a00-10a19c95b790"], "729ce140-3a97-4d1b-9a17-9b1cb9a01379": ["c2f3a38c-6234-4c90-930c-79c73d08a468"], "b3f33b1e-55f9-4ca6-a71b-cf5cbec078c4": ["c2f3a38c-6234-4c90-930c-79c73d08a468"], "c0a21f9f-0d42-424f-b851-57f1c6ac87df": ["21003a1d-3683-4cbd-8d96-25dd188c86d1"], "388a92fc-64a7-4686-a75a-e8bff4244b90": ["21003a1d-3683-4cbd-8d96-25dd188c86d1"], "5b62c819-a876-43a2-88dd-b2917dd6752f": ["e98baacc-c77d-4e2f-b27d-59a9bc3d5de4"], "6a53e603-7fe0-4e84-93c6-357e0371936b": ["e98baacc-c77d-4e2f-b27d-59a9bc3d5de4"], "780438c7-cc26-486e-8cf8-4c536db65d23": ["3f353707-3b54-497d-be0b-8b5280286577"], "38a1ecdc-2023-4a44-a767-ede33cc27f28": ["3f353707-3b54-497d-be0b-8b5280286577"], "e9a846f3-87b9-4b20-9638-96edaa46a79a": ["ba2a7ddc-0037-41bd-86c4-3eebda3c1a72"], "c199a1e0-129d-4710-93e9-85764c4f4251": ["ba2a7ddc-0037-41bd-86c4-3eebda3c1a72"], "1432b6bf-cbe6-4a7f-af96-719c26741db2": ["107df2f3-3cf3-4f8f-8e49-1ea652c30d2a"], "49b41bd8-a0c1-4433-ae7d-2c661ee277c8": ["107df2f3-3cf3-4f8f-8e49-1ea652c30d2a"], "91f38989-4010-4bd4-bc17-718912f18646": ["030f4a10-7cf1-44cf-8e68-0e16b5535128"], "a7767575-fa10-4c0b-82c7-6ffecbd797ec": ["030f4a10-7cf1-44cf-8e68-0e16b5535128"], "f31508f1-ba47-4c88-85b3-faca9a539c9a": ["b7564d1f-5f67-44fd-a3c9-5414d3a6d504"], "05b383db-6f8e-4591-b43a-23a9ac046531": ["b7564d1f-5f67-44fd-a3c9-5414d3a6d504"], "ce99552a-7fb4-40fe-9562-da6c448d12e8": ["fdbaa567-5f2a-4f18-acc3-315639e229df"], "4d3f2674-b98b-4427-a087-938130596a31": ["fdbaa567-5f2a-4f18-acc3-315639e229df"], "b937d5a2-d494-4108-93ed-76def3594e02": ["cd8ce9f2-e45b-4cdf-82f8-332c2d53a427"], "277182d9-02d4-4187-980c-11d92404521b": ["cd8ce9f2-e45b-4cdf-82f8-332c2d53a427"], "3762fa01-5c0f-46aa-994b-df2a2c953905": ["e1a53b65-ef97-430f-81bd-eb8e24dfa957"], "d79c4826-04ef-43db-9e7c-3e2752a19450": ["e1a53b65-ef97-430f-81bd-eb8e24dfa957"], "6ce8b746-6d42-4d8c-a6c0-b3b6fbc359e2": ["d14eb29f-f7b3-484b-b92f-f8d4a1d5339f"], "df73045c-661d-4ea3-b9ec-c0711e9e9641": ["d14eb29f-f7b3-484b-b92f-f8d4a1d5339f"], "3aeb1812-8aac-4411-baf5-b3ee7e3b634f": ["ebb62313-2817-40e8-a3a2-233ad379b5ce"], "c4723177-dacf-4199-940e-1b7618db68d3": ["ebb62313-2817-40e8-a3a2-233ad379b5ce"], "36bd9252-fdef-46fb-a7da-f7ad860e6466": ["17e94393-a894-4bf2-846f-b883f93fda92"], "40259f63-7955-4005-a0c2-adf57058dbfc": ["17e94393-a894-4bf2-846f-b883f93fda92"], "e6067617-bf4b-444b-8872-12d4bf023813": ["3274c033-fb49-4716-b2b2-fbdae257f752"], "30c797b3-5dfb-4945-9171-4a0d44607b76": ["3274c033-fb49-4716-b2b2-fbdae257f752"], "76a206fd-dd81-41f6-be2a-a8bae110bfa2": ["953cdb36-79de-4d60-ac13-5fc8dd9e17a5"], "3b9f9996-8cb6-4b2e-956a-36614ac4a3ce": ["953cdb36-79de-4d60-ac13-5fc8dd9e17a5"], "258a5500-96e3-42df-81d9-391a7be71cf6": ["870d5de3-7a1e-45e7-857d-ae4573c0d6c9"], "b5908726-33c8-4704-8093-f6183d6f4865": ["870d5de3-7a1e-45e7-857d-ae4573c0d6c9"], "12c52167-f9d8-46a3-b5ab-da772b840afb": ["496bacc7-29f6-435f-b88e-873e5c51d21d"], "426069e3-a6ec-40a0-88eb-dc11d59da353": ["496bacc7-29f6-435f-b88e-873e5c51d21d"], "4d6d9357-8316-4b34-8695-237723178b86": ["23f69753-36e8-4ec0-b133-bcaab908c183"], "9cde0f84-ab62-4d22-8277-1dabe39ae4ed": ["23f69753-36e8-4ec0-b133-bcaab908c183"], "df400069-a2b0-49c0-835a-40bbc9e54d7f": ["04a879b3-9f9d-44a3-ac32-00235af838be"], "edfbb397-a04e-4479-936e-f50e89a0eb1d": ["04a879b3-9f9d-44a3-ac32-00235af838be"], "8c557f22-75fc-4297-b419-2fb5a9066d5e": ["8575a426-6ad0-4f9c-8921-9441b14aa324"], "f73c7bb8-40b2-4829-abf6-a8116a242d93": ["8575a426-6ad0-4f9c-8921-9441b14aa324"], "afb99df3-b317-4ef0-bb41-9619adc11cc8": ["de78ad15-e931-46dc-a5a5-04b93d9cbae4"], "6d37adae-7e13-4593-9a13-7f0b0139f015": ["de78ad15-e931-46dc-a5a5-04b93d9cbae4"], "5a99f8ef-1674-49a2-af9f-2b36b3182da2": ["5f5f2814-d0b7-4b1c-8d72-19a4b8c7bf0c"], "d5592b0a-a05e-4312-b492-f00db569f394": ["5f5f2814-d0b7-4b1c-8d72-19a4b8c7bf0c"], "bd35e1cf-0160-4eb6-ab01-35ac3a95a0d8": ["123dc41d-67cc-478a-91bf-788d83af8e2d"], "5dbe1f96-23e6-422c-9f5b-d5b1932400bf": ["123dc41d-67cc-478a-91bf-788d83af8e2d"], "4a6c3659-3990-4d55-bc1e-14becc96ee48": ["94b23259-dfc2-4430-88be-bed855e3dbd0"], "4a9cafbf-e61c-4788-ada5-85566e985851": ["94b23259-dfc2-4430-88be-bed855e3dbd0"], "429cf46b-60fd-45f3-a052-81d7bfcbd7ae": ["261001cc-3106-4c09-a8e4-70a3482b716d"], "bfbd77c3-bd07-499b-bbc6-3c0206d51592": ["261001cc-3106-4c09-a8e4-70a3482b716d"], "155e07d6-6b61-44f4-b2ef-e661690afaaf": ["3e5d1f55-5b07-4521-8f16-6774c9a436e1"], "14a9cbb0-88d6-40de-add1-17339e492912": ["3e5d1f55-5b07-4521-8f16-6774c9a436e1"], "786eada4-d878-49f4-aafd-963eb48ef2b5": ["ba04d474-f7a7-47f9-af4b-08016848dad8"], "8e5b7048-9468-4c3e-a2e5-5015b3b46889": ["ba04d474-f7a7-47f9-af4b-08016848dad8"], "7e5b7e3e-7a49-4d92-a021-7ef9d4d4d1cf": ["1ed82d2b-e418-41d3-ab75-4d391ba68e50"], "fbf800a1-ba8b-4c59-bbfc-5c6ada83df4d": ["1ed82d2b-e418-41d3-ab75-4d391ba68e50"], "ee445cc0-ce08-4df3-8874-1de9c8a0c619": ["ef44a100-5fac-40a6-97ee-9af2f287fc9a"], "7e48a9d7-7cc3-493b-aaea-be3cda45d020": ["ef44a100-5fac-40a6-97ee-9af2f287fc9a"], "cf5b73fb-b3c7-4b6c-9eb2-739019e3550d": ["fde40e3e-f1fa-4d0b-9416-b783628fb18a"], "ce1dda99-57f4-4e9f-95e7-0f3f0373ae67": ["fde40e3e-f1fa-4d0b-9416-b783628fb18a"], "372089f8-f379-426b-8834-186a8b21047d": ["b125d64f-4c55-4c8d-91b3-af8f71064699"], "e16efbba-e0c5-4b15-bced-6551ce7e9b36": ["b125d64f-4c55-4c8d-91b3-af8f71064699"], "6aa6b2db-ef5b-41e1-abef-8f4ca1a18462": ["1f858372-730a-4673-adb5-1e32b9f73805"], "8bed9f19-71cb-451e-ba80-93e11bdfe54c": ["1f858372-730a-4673-adb5-1e32b9f73805"], "a0e02591-66af-4be4-88b7-a9cbf3547232": ["50760670-5416-41c7-872c-8bec245aac9f"], "5afb70c5-9892-4f49-86b0-97748d83c050": ["50760670-5416-41c7-872c-8bec245aac9f"], "97f5bd85-72f6-4579-b530-0ee57406e8c0": ["0856782d-4697-4e08-adb6-4c9ca8903a0a"], "ea4cb600-f44d-4b04-8ded-2353bf78f9de": ["0856782d-4697-4e08-adb6-4c9ca8903a0a"], "47d2313a-5513-4dbd-81be-2f51969a17a6": ["da9886dd-0355-4766-965c-52ad49a81ad3"], "0a9b15e3-19f9-4bf6-bb67-704d6f128614": ["da9886dd-0355-4766-965c-52ad49a81ad3"], "59ff49c8-b38d-4a6d-a258-207de31bd5b8": ["a4767116-4abf-4c68-bfbc-2c007bf03a21"], "b1c70589-cc33-4fa3-be50-272eb6513c29": ["a4767116-4abf-4c68-bfbc-2c007bf03a21"], "2cd5041f-48aa-4cb0-961a-905ebea57f44": ["c7042a73-bfbe-4f94-9072-727977bc6663"], "4afb1bfe-8dea-48fa-83d6-b844df4f0af6": ["c7042a73-bfbe-4f94-9072-727977bc6663"], "3a86ba84-2cd1-402b-ac9d-2ed9878a22bb": ["337dac65-e5a9-45f7-b16d-5028620a8971"], "07c2bcfc-71cb-4499-9649-b700c6134b74": ["337dac65-e5a9-45f7-b16d-5028620a8971"], "4c6fa926-8da6-46d7-bade-de20f06f4201": ["e484c831-75ae-40ce-953d-3392a4ed5bdc"], "9bb2ffb2-9ba1-4b6c-9f20-0a06d3c3656e": ["e484c831-75ae-40ce-953d-3392a4ed5bdc"], "f514f820-e17a-4ab8-952f-910f73870816": ["4fb48231-fcb4-477b-ad94-f0851857f599"], "478f7e50-f6ed-4779-8b57-6fb237532c6d": ["4fb48231-fcb4-477b-ad94-f0851857f599"], "4a43bc73-dc6e-446b-9ec3-ff36bb7e6e7a": ["7683217e-8403-4660-a5a2-7be1beefd193"], "a4aef956-1ad4-4bcd-91fc-798e8698c5d8": ["7683217e-8403-4660-a5a2-7be1beefd193"], "dbc7bb9a-5da2-4e44-bfce-522dd3472c9c": ["1dfa3555-5ca7-47ad-b618-02e715a0befd"], "aed1a17c-7e03-47ea-8e22-a729b9279d0c": ["1dfa3555-5ca7-47ad-b618-02e715a0befd"], "71cecd08-d37c-4977-be13-03211f96228c": ["310a5aab-7947-480e-bdda-bbc2caf296ad"], "1efb63c8-1ced-4847-a69e-3af97ae7d107": ["310a5aab-7947-480e-bdda-bbc2caf296ad"], "b4db5607-0ad8-43cf-99e8-ec2b92d881ba": ["774c7050-d08b-4b9f-b8a9-e330b277d7ce"], "e67eacff-e6f5-4a20-a42a-a9b7352ec9dd": ["774c7050-d08b-4b9f-b8a9-e330b277d7ce"], "a6898346-1658-48b2-a3fe-0ddf94a0e6ed": ["23d67cc2-9d1b-4854-863a-c45f6fbb5911"], "195db4a0-f322-47f6-a6f6-c8cf4b17c329": ["23d67cc2-9d1b-4854-863a-c45f6fbb5911"], "f112183b-136c-4f04-8c6f-65214ebb7bb7": ["ae720c27-b013-4348-96fc-97480742dedb"], "6a1541ff-50df-43e0-ae6b-f511a141a332": ["ae720c27-b013-4348-96fc-97480742dedb"], "7c4fd33e-8db7-479f-a7fd-9a5f4ba3f98c": ["45f3e1f4-b02a-4d2c-8eee-d285149c9af8"], "be78bc4c-191b-4d5e-aaea-b8db3cd8906f": ["45f3e1f4-b02a-4d2c-8eee-d285149c9af8"], "1b2cb228-0849-4f99-957d-26b2a7b871d6": ["4b98e133-41e2-4d9f-a064-b094481f6dfe"], "66032faf-3af4-47f7-9766-ac255e2b7006": ["4b98e133-41e2-4d9f-a064-b094481f6dfe"], "348c175d-2cb9-4b2f-8edf-9bc48d8f8a86": ["3f29ffdd-a71b-47c4-ad09-1acfbcd00acc"], "04150c8e-d5c3-4227-8e14-e863e1180577": ["3f29ffdd-a71b-47c4-ad09-1acfbcd00acc"], "7886774a-e296-44f0-adc3-5cf87d52a2e3": ["e234d02b-2014-4205-90ef-50b1a93e1940"], "40a9253a-c50e-4d89-9936-6bbb5e65ed53": ["e234d02b-2014-4205-90ef-50b1a93e1940"], "3b37baf8-d154-472b-8426-25c485aec48d": ["2327d0da-9f71-407d-8792-b52106168102"], "ab32b79c-2b63-4c31-93aa-df7ff563001d": ["2327d0da-9f71-407d-8792-b52106168102"], "e54df5d1-0039-4a06-8d7e-00a5d9849299": ["c820acba-add2-4083-9829-583d4584c7ee"], "db26308e-d23b-47ea-8e2f-8e17e92e431d": ["c820acba-add2-4083-9829-583d4584c7ee"], "6a0e72c2-e564-4fc9-9b4f-ec3d87251f90": ["5388c9be-566b-4b36-84cb-aeb61a148e5f"], "12c3a19c-1a69-49d0-a4f5-85e81210c428": ["5388c9be-566b-4b36-84cb-aeb61a148e5f"], "4d100e21-9fbf-4f65-9a62-71bf668b0d43": ["1fa7ce66-f86f-4dce-998f-a46e286f2fe1"], "5b868f4c-783d-4df3-b422-051b067c84b6": ["1fa7ce66-f86f-4dce-998f-a46e286f2fe1"], "0f2ba4da-3aa5-4623-b66c-7ba95bb4c1b6": ["3febe61e-198c-46f6-a551-e67c6774e0b1"], "299aefed-e1e9-4f4f-a346-fdabe25a1595": ["3febe61e-198c-46f6-a551-e67c6774e0b1"], "dc8538e1-f356-4f09-9e5c-2965780ff248": ["20c0263f-48a9-442b-8d42-4b6c23c99a1e"], "9455dfbc-ec36-4c07-b52d-9dea71fd7a66": ["20c0263f-48a9-442b-8d42-4b6c23c99a1e"], "a98d2dcb-b3c9-4422-bd42-1da4424e1546": ["49ed6b04-c85d-4471-af16-a6699709a1f3"], "fbf00f1a-19a8-4029-a386-2aaf755c7764": ["49ed6b04-c85d-4471-af16-a6699709a1f3"], "6ecf7782-0638-4f2a-a48c-67d1a717ec15": ["9bd00b72-ee93-4ac6-8d40-6791c9edd7a4"], "140c0700-1f39-4cfa-a0bd-f985d16c6b10": ["9bd00b72-ee93-4ac6-8d40-6791c9edd7a4"], "f45249fa-259d-47d0-852f-f6f0a79a1236": ["c3929ade-f732-4f9c-84d3-a0a25cb5461d"], "f264ace3-ccde-4cb8-a8d0-1531b7b2c388": ["c3929ade-f732-4f9c-84d3-a0a25cb5461d"], "ed4bac9e-bafa-4ba5-b102-88beea2202ec": ["d97c0c3f-ac61-405e-9cad-2f9a9b655a4b"], "bad1f1a2-9511-43ab-84e2-75e7b8e8c828": ["d97c0c3f-ac61-405e-9cad-2f9a9b655a4b"], "b475ff86-086c-4506-bdbd-f26fb87bd581": ["538a3c02-d667-474e-bdd3-f811d0b1eaf3"], "49de6290-b46f-4fa5-8ec9-e7706e87ab2f": ["538a3c02-d667-474e-bdd3-f811d0b1eaf3"], "25b35d95-b0dc-411e-b757-ac06a2fbf9a5": ["397bf348-b941-4f4c-9e9f-b322239f484b"], "5a001d84-c660-4583-aa27-56afbb119cea": ["397bf348-b941-4f4c-9e9f-b322239f484b"], "fadc6446-0b36-4f10-9282-5715b1943939": ["5b47412a-80a5-49c8-b29d-b7a1a8db7e2a"], "be5d8361-3359-4e07-9efb-3d116f944faf": ["5b47412a-80a5-49c8-b29d-b7a1a8db7e2a"], "ff6b4bac-9d13-4c32-bbd9-c712c34b737a": ["01949e5b-84a0-4207-bf79-979ba55a2ba6"], "302807e4-4497-40f8-9671-7020ff6055b0": ["01949e5b-84a0-4207-bf79-979ba55a2ba6"], "bf52d035-c16d-400e-8fad-603a07f21704": ["853eebd4-2390-4a96-a50c-f618cfd1cfc1"], "a5d5db75-c5b9-476f-8812-58be7cd0dcd3": ["853eebd4-2390-4a96-a50c-f618cfd1cfc1"], "8dd0f0d5-88f1-44e2-8f50-92d169b60aa3": ["a3a2967f-2637-4190-8e37-726dfc8a36dc"], "5fc7c43a-34af-489d-b069-68c3804b7b28": ["a3a2967f-2637-4190-8e37-726dfc8a36dc"], "575691fa-26cd-426c-b0b5-3c06cb0051e5": ["3a1da66f-2bd7-4b66-aec0-7ddcbae9f874"], "d00ab06d-a821-4325-96b3-0743688d7f35": ["3a1da66f-2bd7-4b66-aec0-7ddcbae9f874"], "fd22ae41-cc50-42f0-804e-30bee95a4237": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "54dc556d-2a14-48da-9cc1-e450ef9503b3": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "4d399977-2069-47b6-b40b-88ea6a96d535": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "a01bcdb4-324e-4a6a-abae-ebd40158b593": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "4845b794-6b75-4bb1-a42f-422a5c051ace": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "7e390e11-167e-4867-b8bd-22e30b1f2ab9": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "fbf635ca-8df2-4289-94b8-cf00062e47ce": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "f09f661f-41f6-4a45-acbd-7073fd0027c9": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "bb40f523-43ac-480f-927f-128729577bed": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "711a9887-9f0f-49be-9448-88253e613001": ["ea50bfb7-07dd-4b84-a121-8c4e45c65e4a"], "319b93f8-458a-4987-a723-d5e143cc77f3": ["8c5009f5-c023-4219-b5b8-9eab73f5e32c"], "34bb8f73-4615-4442-811c-a760c61a1ad5": ["8c5009f5-c023-4219-b5b8-9eab73f5e32c"], "1668ff77-8021-4c74-9603-67c4de92fd88": ["ca6f8076-2a3b-4018-a0b3-25a7c679e562"], "fb4f1ab4-6890-46a0-be63-dd91d2a03c7d": ["ca6f8076-2a3b-4018-a0b3-25a7c679e562"], "c8bc4982-aaa5-42da-92b5-5ffb79d126ff": ["168d13dc-e76d-4626-81d3-73857dd0e491"], "52fd8689-e0db-455b-982e-b130acdef00e": ["168d13dc-e76d-4626-81d3-73857dd0e491"], "dc6fa001-23f2-4c37-9e1a-477a3de1089f": ["2afd8562-4964-4271-b54f-3d4f0fdf4721"], "d8069233-fbd4-443c-b30a-96e30311eb03": ["2afd8562-4964-4271-b54f-3d4f0fdf4721"], "b77953f2-d5a2-4afb-a438-1656e10ae7f4": ["3b2a57c6-8323-4a57-98e1-bdd4fcba9bdc"], "38902ce3-1e44-4b97-9412-31cfe5e61c00": ["3b2a57c6-8323-4a57-98e1-bdd4fcba9bdc"], "fe6db2c6-b22f-4ab4-97f1-9e3fad49a85b": ["1a35b381-c742-4239-9c31-8eb1c34e35f7"], "6fe7ed97-1f64-4ea6-895c-31ab839a76e4": ["1a35b381-c742-4239-9c31-8eb1c34e35f7"], "2698f949-148f-47a6-892e-e6cef43218ee": ["c1cdd013-bab6-438f-8847-5e1a5fa6a05e"], "5ba2a02f-204d-479c-866d-a6afefab081d": ["c1cdd013-bab6-438f-8847-5e1a5fa6a05e"], "3a68210e-3ee7-41b0-814f-5b2f0735300c": ["1d874bac-14f8-4add-a62b-e31fd20c58d7"], "957887d3-b0aa-4461-ac7b-99edea3e5d4f": ["1d874bac-14f8-4add-a62b-e31fd20c58d7"], "81eb7e18-6868-43c3-99ce-cf89bc10c12d": ["341dc58d-2576-4509-8832-7bf1429a9d09"], "bca81f9c-c89d-47e3-93eb-4f3a00d7ccd3": ["341dc58d-2576-4509-8832-7bf1429a9d09"], "e076148a-c82d-45fb-9546-820f20cefd8c": ["c1b1b4c3-1689-4136-bdcc-73632c4da698"], "9c12d506-9b2a-4125-8042-2ca4e4d7899d": ["c1b1b4c3-1689-4136-bdcc-73632c4da698"], "dd664ed8-a6eb-4d68-8663-398a42f4fae9": ["3994d684-aade-47d5-bf52-4700547ac2d6"], "5ddddb72-28bc-4dfd-b72a-7b832fd42897": ["3994d684-aade-47d5-bf52-4700547ac2d6"], "d0beee43-aedf-4ccc-b7a1-1c95572d2ec8": ["8cd62041-81cf-4ce9-8be8-8187ce5c76c6"], "5a2d05c5-0d12-4b87-8f4d-919d9b65c8c4": ["8cd62041-81cf-4ce9-8be8-8187ce5c76c6"], "c628a0c8-8c1d-4a6d-a75d-4ed850b97069": ["80f7f081-82cd-48f6-80c6-2b3d5f52fb76"], "8f09a418-e87b-4fdd-b0ae-79e9e0fd6367": ["80f7f081-82cd-48f6-80c6-2b3d5f52fb76"], "013f8a3e-d65d-4a0b-b609-55ef6a4a069f": ["618187ba-6f0c-49b4-8b48-8bf62e0f2ed8"], "54e3b4fa-ef06-41ec-b72b-855cf362f468": ["618187ba-6f0c-49b4-8b48-8bf62e0f2ed8"], "7ae710f3-305e-423a-a039-b25e15df6d88": ["412ee4fe-aa62-4e43-9835-2cbb9b79d3cb"], "ca1b02a9-900d-4b4d-8c28-e9c00c83b2e5": ["412ee4fe-aa62-4e43-9835-2cbb9b79d3cb"], "9d8a15e3-8e29-41ab-bcf0-eefb379dd213": ["297fa5d2-5496-48ed-b279-cafd7f0014e4"], "1fc926af-119c-4135-b746-1e919368c9ee": ["297fa5d2-5496-48ed-b279-cafd7f0014e4"], "abb3b7ed-fb78-41e9-85a2-a4d0cd530e69": ["68aed7e8-0fd9-4d99-8c0e-a75019ca1eb8"], "9b1c9e01-9857-42cf-a681-66c28e3683fe": ["68aed7e8-0fd9-4d99-8c0e-a75019ca1eb8"], "0f2648a3-886f-46e2-b09c-022378bf6b26": ["291f9321-7d36-4d84-84d7-83680c506568"], "048090dc-4cdd-47f4-9bd5-4c8f1117dfb1": ["291f9321-7d36-4d84-84d7-83680c506568"], "ceb6d191-d779-40d1-b28b-a9d2eadbb637": ["61a9f91f-3f40-4327-9e56-e1e13c1e8943"], "fe2105b1-87da-46da-afc8-1e647f19f85f": ["61a9f91f-3f40-4327-9e56-e1e13c1e8943"], "5f9e7eb3-f3a7-4f83-927d-8d48efc9101e": ["0c831d25-706e-46e7-894e-93329ea1b73a"], "1734e638-df55-4c3c-9b3e-5e048b8dcb57": ["0c831d25-706e-46e7-894e-93329ea1b73a"], "36a838b9-7428-4a6f-9211-e48ee447eb84": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "0c96fc7d-0ea6-4a5a-af10-914334adf550": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "76d669c3-4077-4d49-bbb1-50c8fac4b097": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "065c1946-225a-4730-84df-ddd908467854": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "65516f6d-f7c1-4fbc-a70f-62eb2f20a499": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "39c0fed9-b512-4cd9-9b53-84ec7b1465bf": ["e79bb77c-66bb-4b3c-bb35-0f3765e386d4"], "38519bc7-865f-46df-8e14-67cfae0c11f3": ["91109a06-b21a-46ee-a370-e385090f207f"], "18a05e22-32c5-413d-b5a5-7c29d89427ec": ["91109a06-b21a-46ee-a370-e385090f207f"], "79f76ba1-9e24-4a67-99b2-36bafcfc9992": ["0244e792-5b05-426e-b060-a801005c68a0"], "7f11b933-f380-4541-b339-f708b00ab7d9": ["0244e792-5b05-426e-b060-a801005c68a0"], "7b865b08-32f2-4278-9b4c-5e562a2ed0a9": ["af01b9e4-0e51-4889-8566-ae3eaded8320"], "13cbb988-c3f4-411b-b209-620eb1743ff2": ["af01b9e4-0e51-4889-8566-ae3eaded8320"], "246c83ba-d79a-4efb-9456-a1b9abd42e0b": ["b32015db-7252-465e-a07d-585ed5b0b409"], "62b88b51-4c55-4ed4-862d-81dc6be09bca": ["b32015db-7252-465e-a07d-585ed5b0b409"], "404a7325-3056-4c8b-8cd1-f4b4f96d375a": ["fc4917d1-1753-4a51-9a7d-0c2a5735bfe9"], "f2ba2c97-a2a7-4517-90d2-8532563c2a17": ["fc4917d1-1753-4a51-9a7d-0c2a5735bfe9"], "b422201a-91f6-43f0-9ae0-9d19925ab00b": ["f732766d-605c-46df-9e81-7b62f7f36fc7"], "626fb6e1-c646-4631-8453-76f0cff4851e": ["f732766d-605c-46df-9e81-7b62f7f36fc7"], "d7610abb-9ba3-4f86-8b35-8d2fee6e0eb2": ["8ae37f89-c97d-4724-9179-fc9f315876ae"], "150038a4-294d-4ab3-9d08-ecb38ac867c6": ["8ae37f89-c97d-4724-9179-fc9f315876ae"], "9a0ce9e1-3547-4926-a609-ffe06e0853f3": ["b3ad6583-6c47-4038-9122-ebc3a1026b36"], "f42dfe16-71a9-4b7d-9cdd-8d448e102f6c": ["b3ad6583-6c47-4038-9122-ebc3a1026b36"], "6ed51c9e-a407-4d04-b675-b6c671ebfb58": ["30697e70-e8b4-409a-beeb-cfc3b0d7f93d"], "32b4dc48-308a-4697-95a6-6914af944658": ["30697e70-e8b4-409a-beeb-cfc3b0d7f93d"], "38a9d72b-03a3-40a0-8747-32750b4189cf": ["0f401d33-8954-4521-bf24-44ae2ceb963a"], "ae4720b0-ad07-4a31-b875-a26694e05f52": ["0f401d33-8954-4521-bf24-44ae2ceb963a"], "3248dd78-613e-4931-93b9-03a2e73b481b": ["edfc7da1-5ed0-4f88-939f-e3a7a5ad70e7"], "8062a4bf-053e-4ce9-ab82-fd3769c9eed6": ["edfc7da1-5ed0-4f88-939f-e3a7a5ad70e7"], "0a6368cd-53d4-4869-91e2-ea7fd3c0bda1": ["f6184e1b-70f3-44d4-b803-6f6009636c93"], "6979458e-7ffb-42a3-af5f-893543d87f94": ["f6184e1b-70f3-44d4-b803-6f6009636c93"], "2e227362-0f43-4d2a-9df9-5d0cb8057517": ["f6184e1b-70f3-44d4-b803-6f6009636c93"], "8bf92d55-fc2d-4cad-baeb-77ee3ee83a27": ["f6184e1b-70f3-44d4-b803-6f6009636c93"], "ef9aa70f-db6d-45d9-bc1a-e1fcc16934bd": ["99fc16dc-1e0c-44ff-8252-55ed551c9432"], "4bd62a67-7890-4303-b8df-9fcf73370c9e": ["99fc16dc-1e0c-44ff-8252-55ed551c9432"], "00d755f5-bbe3-4f75-a1e5-4cbcea6b5200": ["17cebac0-b3d6-40e1-b49f-bb2d1fb9be48"], "d31b9ad7-0ceb-4666-9a29-a717d5a11fa2": ["17cebac0-b3d6-40e1-b49f-bb2d1fb9be48"], "b45872d0-3d5c-4ea0-98d1-cbf1b11da423": ["a8d4e592-5ed1-46ea-b04c-4856d1f11cf7"], "0ada415f-a14b-4ed6-8d45-2a4f9b2966b4": ["a8d4e592-5ed1-46ea-b04c-4856d1f11cf7"], "c794f917-b321-48fd-9e5a-826a5bec1c31": ["bd40823f-0280-499b-ab51-8f59907b5feb"], "3c044497-89e1-45b6-9631-3af2770c5b96": ["bd40823f-0280-499b-ab51-8f59907b5feb"], "d2caba64-b2d2-4f4a-ad83-b2c6a7797f99": ["7ab5a189-81fd-4116-b557-5f1ee4f04e92"], "0b54db9f-b524-4733-91d1-46cc62de9822": ["7ab5a189-81fd-4116-b557-5f1ee4f04e92"], "e14bdb9f-a17f-4ef1-8e32-0be2361b29c3": ["caa45738-9336-45d9-8b4d-3f3eb72498e6"], "8b5bb895-5adf-4032-bbbc-23727cc0b4e0": ["caa45738-9336-45d9-8b4d-3f3eb72498e6"], "a4d7e173-fce4-43ed-86d1-3d53cdbb6c84": ["4e58a60f-5f61-4564-8009-784f102e0a8a"], "16b3cff9-0ac9-4d20-9721-8e5135d902a2": ["4e58a60f-5f61-4564-8009-784f102e0a8a"], "ef5e8970-fadb-4f8d-9b1c-9512ceedf055": ["db1db3c0-224b-429e-8bbd-89715b3a95aa"], "5d3584c2-5c9b-48c5-bb26-d7a6276d2626": ["db1db3c0-224b-429e-8bbd-89715b3a95aa"], "83639a70-3356-4e42-88ff-80c70ffdd42f": ["91205039-eb3f-4392-b9ac-1c65df993b17"], "b999912d-d59d-4b98-8da8-52f7c1e92f37": ["91205039-eb3f-4392-b9ac-1c65df993b17"], "0e963b5c-cf2b-425a-a224-08fd3e5093ec": ["859ba622-411d-4274-a558-c24a9409e408"], "1ba01c33-ee11-44e8-86fd-b238386a7fb1": ["859ba622-411d-4274-a558-c24a9409e408"], "0d3553a4-8341-4166-a100-8c61972bde12": ["234e4ff1-d575-4d3b-9513-1432130a2c7b"], "ff63a019-37cd-481e-a196-aac62006267c": ["234e4ff1-d575-4d3b-9513-1432130a2c7b"], "5bff6dbf-358d-416e-94b9-63abec153712": ["427679a6-8ae1-441f-8e30-0bf1c27c427e"], "cbec4ca7-fc0f-4385-a823-2721309192ee": ["427679a6-8ae1-441f-8e30-0bf1c27c427e"], "c87eee57-96fe-4481-bf50-7ed8d03797ba": ["ff51f572-041d-4387-93e0-da3e49256c07"], "6ca8eb88-0852-48eb-b730-71f03fb95fa9": ["ff51f572-041d-4387-93e0-da3e49256c07"], "cc082bbd-6e58-413e-b026-ed4aba8f8f33": ["376d8565-6281-42a5-8676-efe735c770f1"], "d37ce29d-e3c4-4295-a6a7-ac1ff733af34": ["376d8565-6281-42a5-8676-efe735c770f1"], "02d7f8de-bfb0-4236-b5d7-c26db4812af5": ["39edb4cf-e2c2-4c4f-a6a0-0d3ed88b63bd"], "1fb0aca4-41aa-4c38-9934-c9c7149a34a8": ["39edb4cf-e2c2-4c4f-a6a0-0d3ed88b63bd"], "be98ea41-3b6b-424c-81d7-c46df7f40e48": ["03a872dc-55dc-40ca-aac0-e15fd61a8f02"], "64e7279a-df60-42c4-933a-8ee2f60f1f32": ["03a872dc-55dc-40ca-aac0-e15fd61a8f02"], "f5d021d7-96af-4d91-a99b-9743fee6623c": ["c63d9afa-8501-402b-989a-b80095f37d06"], "090a312a-3647-4d26-923b-b7e4f21dd480": ["c63d9afa-8501-402b-989a-b80095f37d06"], "784245a4-e856-46f4-8100-59c00640fcbc": ["f2e11f98-0586-41b5-b32b-459ef22a5472"], "7d57dcb0-b88c-4650-a005-e573597104bf": ["f2e11f98-0586-41b5-b32b-459ef22a5472"], "fb6a64ae-b537-451b-8f88-efffb174dacc": ["e5bd1331-51d3-4dfa-b2e3-15f6b55b01dd"], "a31fb045-f657-4886-b59b-12c7a54462e1": ["e5bd1331-51d3-4dfa-b2e3-15f6b55b01dd"], "e1384a6e-91e0-4327-87aa-2120f218d814": ["2861e342-276c-4ff2-a3b2-5aad127104c5"], "4944f07e-759c-4468-9623-4c7d1694434b": ["2861e342-276c-4ff2-a3b2-5aad127104c5"], "4d45b27b-d3a0-4b0a-96ce-a52ffcf6266a": ["4a49d80d-2a99-4934-b126-da2a6f623bed"], "4842f76a-0861-4a9b-b0a8-8054f70e8f78": ["4a49d80d-2a99-4934-b126-da2a6f623bed"], "397cf8dc-7433-427e-837b-6378b8acea1d": ["6d65143f-8714-4079-b32e-344adfd51d9d"], "c74b527e-f49f-4411-8880-1f0ac0b4898a": ["6d65143f-8714-4079-b32e-344adfd51d9d"], "7460821f-5829-4a63-a63f-e46d663b7328": ["ceed3ed1-1c8c-4aa0-bc72-baafd7b11b8a"], "6a7c8c5b-d9a5-4c65-821b-ef33a564ac86": ["ceed3ed1-1c8c-4aa0-bc72-baafd7b11b8a"], "10316582-fce9-4694-bac2-d36f6365a88f": ["8e5e6fa4-f31d-4c10-9690-5a5c07e7be0f"], "89ceb163-4359-4569-9664-396344dec70e": ["8e5e6fa4-f31d-4c10-9690-5a5c07e7be0f"], "e9a51f89-cd78-4501-86d8-0482f9d917e2": ["03d106af-7432-4ab0-85b5-dbbcbc7e8e34"], "e467b0bf-8697-4322-8ea8-0e79e6a0eeba": ["03d106af-7432-4ab0-85b5-dbbcbc7e8e34"], "ac7b1c15-1209-4fad-883d-714ae4372285": ["a9f9b026-32aa-44ca-aa5e-1f78206e02f1"], "e6cb029c-0165-498a-a95c-60fbf5142973": ["a9f9b026-32aa-44ca-aa5e-1f78206e02f1"], "fb8f220c-ef37-4a3c-acfe-59d9fdfd7a26": ["a2c60678-bb3c-46f9-a782-6c58f1f32bc7"], "8f0f3980-0b3e-4533-9155-66199c2da0ff": ["a2c60678-bb3c-46f9-a782-6c58f1f32bc7"], "d3934ea0-c437-4247-b6bd-a2511c09016e": ["4708ed08-1c9c-4570-b7a8-10e0604da7d0"], "a91d74fb-2095-4ff9-b59d-37dc325c8285": ["4708ed08-1c9c-4570-b7a8-10e0604da7d0"], "4131e379-df3b-4cb3-bcfa-e76ed799d534": ["f6bbea4a-1a66-4362-84cd-5a548aeac702"], "fe47721a-8418-4fdb-8a1a-73ed9645d39a": ["f6bbea4a-1a66-4362-84cd-5a548aeac702"], "03ae01ed-ba15-4632-8de8-ce06356699a5": ["6731ce39-46aa-4a4b-8ecf-dae80fe22102"], "60fa6fcd-7cba-4c1d-9249-c06c0e9ebd6a": ["6731ce39-46aa-4a4b-8ecf-dae80fe22102"], "ff8a7e8d-f88d-4381-98d5-8f0c815b6aee": ["02e36df3-c183-4dd2-bce9-a83c21a38fa8"], "cf08f783-80e5-45eb-a0ed-5659a1f2bc55": ["02e36df3-c183-4dd2-bce9-a83c21a38fa8"]}}